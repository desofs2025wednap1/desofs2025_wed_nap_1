name: CI/CD Pipeline

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: root
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Wait for Postgres to be ready and create test DB
        run: |
          until pg_isready -h localhost -p 5432 -U postgres; do
            echo "Waiting for DB..."
            sleep 2
          done
          psql -h localhost -U postgres -c "CREATE DATABASE perfumetest;" -d postgres
        env:
          PGPASSWORD: root

      - name: Run tests with Maven
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/perfumetest
          SPRING_DATASOURCE_USERNAME: postgres
          SPRING_DATASOURCE_PASSWORD: root
        run: mvn clean verify

  docker-build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker images with Compose
        run: docker-compose -f docker-compose.yml build

  docker-run:
    needs: docker-build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run app with Compose
        run: docker-compose -f docker-compose.yml up -d
      # Optional: deploy to Docker locally (if needed)
    #  - name: Build Docker image
   #     run: docker build -t dsoft-ecommerce-spring .

      # Optional: run the app container (if needed)
   #   - name: Run app container locally
   #     run: docker run -d --network host dsoft-ecommerce-spring

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
   # - name: Update dependency graph
   #   uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
