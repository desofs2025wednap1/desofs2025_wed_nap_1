super-linter Log
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_ANSIBLE variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_ARM variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_BASH variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_BASH_EXEC variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_CLANG_FORMAT variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_CLOUDFORMATION variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_CLOJURE variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_COFFEESCRIPT variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_CPP variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_CSHARP variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_CSS variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_DART variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_DOCKERFILE_HADOLINT variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_EDITORCONFIG variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_ENV variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_GITHUB_ACTIONS variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_GITLEAKS variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_GHERKIN variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_GO variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_GOOGLE_JAVA_FORMAT variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_GROOVY variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_HTML variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_JAVA variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_JAVASCRIPT_ES variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_JAVASCRIPT_STANDARD variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_JSCPD variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_JSON variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_JSONC variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_JSX variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_KUBERNETES_KUBEVAL variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_KOTLIN variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_KOTLIN_ANDROID variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_LATEX variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_LUA variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_MARKDOWN variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_NATURAL_LANGUAGE variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_OPENAPI variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_PERL variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_PHP_BUILTIN variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_PHP_PHPCS variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_PHP_PHPSTAN variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_PHP_PSALM variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_POWERSHELL variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_PROTOBUF variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_PYTHON_BLACK variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_PYTHON_PYLINT variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_PYTHON_FLAKE8 variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_PYTHON_ISORT variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_PYTHON_MYPY variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_R variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_RAKU variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_RUBY variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_RUST_2015 variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_RUST_2018 variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_RUST_2021 variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_RUST_CLIPPY variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_SCALAFMT variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_SHELL_SHFMT variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_SNAKEMAKE_LINT variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_SNAKEMAKE_SNAKEFMT variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_STATES variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_SQL variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_SQLFLUFF variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_TEKTON variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_TERRAFORM_TFLINT variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_TERRAFORM_TERRASCAN variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_TERRAGRUNT variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_TSX variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_TYPESCRIPT_ES variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_TYPESCRIPT_STANDARD variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_XML variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting FILE_ARRAY_YAML variable...[0m
[0m2025-06-16 21:21:52 [0;34m[INFO][0m   ---------------------------------------------[0m
[0m2025-06-16 21:21:52 [0;34m[INFO][0m   --- GitHub Actions Multi Language Linter ----[0m
[0m2025-06-16 21:21:52 [0;34m[INFO][0m    - Image Creation Date:[2023-01-04T06:45:30Z][0m
[0m2025-06-16 21:21:52 [0;34m[INFO][0m    - Image Revision:[d2600eb1bd51e68b2c065501b241c450be01a216][0m
[0m2025-06-16 21:21:52 [0;34m[INFO][0m    - Image Version:[d2600eb1bd51e68b2c065501b241c450be01a216][0m
[0m2025-06-16 21:21:52 [0;34m[INFO][0m   ---------------------------------------------[0m
[0m2025-06-16 21:21:52 [0;34m[INFO][0m   ---------------------------------------------[0m
[0m2025-06-16 21:21:52 [0;34m[INFO][0m   The Super-Linter source code can be found at:[0m
[0m2025-06-16 21:21:52 [0;34m[INFO][0m    - https://github.com/github/super-linter[0m
[0m2025-06-16 21:21:52 [0;34m[INFO][0m   ---------------------------------------------[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   ---------------------------------------------[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   WRITE_LINTER_VERSIONS_FILE: [0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   VERSION_FILE: /action/lib/functions/linterVersions.txt[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Linter Version Info:[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Skipping versions file build...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   chktex: chktex: WARNING -- Could not find global resource file.
ChkTeX v1.7.6 - Copyright 1995-96 Jens T. Berger Thielemann.
Compiled with POSIX extended regex support.
rubocop: 1.42.0
perl: 
This is perl 5, version 36, subversion 0 (v5.36.0) built for x86_64-linux-thread-multi

Copyright 1987-2022, Larry Wall

Perl may be copied only under the terms of either the Artistic License or the
GNU General Public License, which may be found in the Perl 5 source kit.

Complete documentation for Perl, including FAQ lists, should be found on
this system using "man perl" or "perldoc perl".  If you have access to the
Internet, point your browser at https://www.perl.org/, the Perl Home Page.
xmllint: xmllint: using libxml version 21003
   compiled with: Threads Tree Output Push Reader Patterns Writer SAXv1 HTTP DTDValid HTML C14N Catalog XPath XPointer XInclude Iconv ISO8859X Unicode Regexps Automata Schemas Schematron Modules Debug Zlib Lzma 
ansible-lint: ansible-lint 6.10.2 using ansible 2.14.1
eslint: v8.31.0
markdownlint: 0.32.2
snakefmt: snakefmt, version 0.8.0
cpplint: Cpplint fork (https://github.com/cpplint/cpplint)
cpplint 1.6.1
Python 3.11.1 (main, Dec  8 2022, 01:03:47) [GCC 12.2.1 20220924]
editorconfig-checker: 2.4.0
gitleaks: v8.15.2
phpstan: PHPStan - PHP Static Analysis Tool 1.9.6
asl-validator: --version not supported
actionlint: 1.6.22
installed by building from source
built with go1.19.2 compiler for linux/amd64
tekton-lint: Version: 0.6.0
terrascan: version: v1.17.1
R: R version 4.2.2 (2022-10-31) -- "Innocent and Trusting"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-musl (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under the terms of the
GNU General Public License versions 2 or 3.
For more information about these matters see
https://www.gnu.org/licenses/.
shellcheck: ShellCheck - shell script analysis tool
version: 0.9.0
license: GNU General Public License, version 3
website: https://www.shellcheck.net
jscpd: 3.5.3
black: black, 22.12.0 (compiled: no)
Python (CPython) 3.11.1
php: PHP 8.1.13 (cli) (built: Nov 23 2022 13:29:46) (NTS)
Copyright (c) The PHP Group
Zend Engine v4.1.13, Copyright (c) Zend Technologies
textlint: v12.4.0
npm-groovy-lint: GroovyLint: Successfully processed CodeNarc: 
CodeNarc version 3.1.0

npm-groovy-lint version 11.1.1

Embeds:
CodeNarc version 3.1.0
- Groovy version 3.0.9 (superlite)
golangci-lint: golangci-lint has version v1.50.1 built from 8926a95f on 2022-10-22T11:12:23Z
gherkin-lint: --version not supported
eslint: v8.31.0
scalafmt: scalafmt 3.6.1
stylelint: 14.16.1
sqlfluff: sqlfluff, version 1.4.5
bash-exec: --version not supported
google-java-format: google-java-format: Version 1.15.0
phpcs: PHP_CodeSniffer version 3.7.1 (stable) by Squiz (http://www.squiz.net)
terragrunt: terragrunt version v0.42.3
psalm: Psalm 4.x-dev@
pylint: pylint 2.15.9
astroid 2.12.13
Python 3.11.1 (main, Dec  8 2022, 01:03:47) [GCC 12.2.1 20220924]
shfmt: v3.6.0
snakemake: 7.19.1
mypy: mypy 0.991 (compiled: yes)
eslint: v8.31.0
coffeelint: 5.2.11
tflint: TFLint version 0.44.1
+ ruleset.terraform (0.2.2-bundled)
cfn-lint: cfn-lint 0.72.6
flake8: 6.0.0 (mccabe: 0.7.0, pycodestyle: 2.10.0, pyflakes: 3.0.1) CPython 3.11.1 on
Linux
spectral: 6.5.0
clj-kondo: clj-kondo v2022.12.10
eslint: v8.31.0
ts-standard: 12.0.2
eslint: v8.31.0
protolint: protolint version 0.42.2(1a05b7f)
raku: Welcome to Rakudo™ v2022.07.
Implementing the Raku® Programming Language v6.d.
Built on MoarVM version 2022.07.
hadolint: Haskell Dockerfile Linter 2.12.1
checkstyle: Checkstyle version: 10.3.4
clang-format: clang-format version 12.0.1 (https://github.com/llvm/llvm-project.git fed41342a82f5a3a9201819a82bf7a48313e296b)
ktlint: 0.47.1
yamllint: yamllint 1.28.0
dart: Dart VM version: 2.8.4 (stable) (Wed Jun 3 12:26:04 2020 +0200) on "linux_x64"
isort: 
                 _                 _
                (_) ___  ___  _ __| |_
                | |/ _/ / _ \/ '__  _/
                | |\__ \/\_\/| |  | |_
                |_|\___/\___/\_/   \_/

      isort your imports, so you don't have to.

                    VERSION 5.11.4
eslint: v8.31.0
ktlint: 0.47.1
htmlhint: 1.1.4
sql-lint: 1.0.0
kubeval: Version: 0.16.1
Commit: f5dba6b486fa18b9179b91e15eb6f2b0f7a5a69e
Date: 2021-03-30T15:17:06Z
lua: Lua 5.3.5  Copyright (C) 1994-2018 Lua.org, PUC-Rio
standard: 17.0.0
chktex: chktex: WARNING -- Could not find global resource file.
ChkTeX v1.7.6 - Copyright 1995-96 Jens T. Berger Thielemann.
Compiled with POSIX extended regex support.
rubocop: 1.42.0
perl: 
This is perl 5, version 36, subversion 0 (v5.36.0) built for x86_64-linux-thread-multi

Copyright 1987-2022, Larry Wall

Perl may be copied only under the terms of either the Artistic License or the
GNU General Public License, which may be found in the Perl 5 source kit.

Complete documentation for Perl, including FAQ lists, should be found on
this system using "man perl" or "perldoc perl".  If you have access to the
Internet, point your browser at https://www.perl.org/, the Perl Home Page.
xmllint: xmllint: using libxml version 21003
   compiled with: Threads Tree Output Push Reader Patterns Writer SAXv1 HTTP DTDValid HTML C14N Catalog XPath XPointer XInclude Iconv ISO8859X Unicode Regexps Automata Schemas Schematron Modules Debug Zlib Lzma 
ansible-lint: ansible-lint 6.10.2 using ansible 2.14.1
eslint: v8.31.0
markdownlint: 0.32.2
snakefmt: snakefmt, version 0.8.0
cpplint: Cpplint fork (https://github.com/cpplint/cpplint)
cpplint 1.6.1
Python 3.11.1 (main, Dec  8 2022, 01:03:47) [GCC 12.2.1 20220924]
editorconfig-checker: 2.4.0
gitleaks: v8.15.2
phpstan: PHPStan - PHP Static Analysis Tool 1.9.6
dotenv-linter: dotenv-linter 3.3.0
asl-validator: --version not supported
actionlint: 1.6.22
installed by building from source
built with go1.19.2 compiler for linux/amd64
tekton-lint: Version: 0.6.0
terrascan: version: v1.17.1
clippy: clippy 0.1.66 (69f9c33d 2022-12-12)
R: R version 4.2.2 (2022-10-31) -- "Innocent and Trusting"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-musl (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under the terms of the
GNU General Public License versions 2 or 3.
For more information about these matters see
https://www.gnu.org/licenses/.
rustfmt: rustfmt 1.5.1-stable (69f9c33d 2022-12-12)
shellcheck: ShellCheck - shell script analysis tool
version: 0.9.0
license: GNU General Public License, version 3
website: https://www.shellcheck.net
jscpd: 3.5.3
black: black, 22.12.0 (compiled: no)
Python (CPython) 3.11.1
php: PHP 8.1.13 (cli) (built: Nov 23 2022 13:29:46) (NTS)
Copyright (c) The PHP Group
Zend Engine v4.1.13, Copyright (c) Zend Technologies
textlint: v12.4.0
npm-groovy-lint: GroovyLint: Successfully processed CodeNarc: 
CodeNarc version 3.1.0

npm-groovy-lint version 11.1.1

Embeds:
CodeNarc version 3.1.0
- Groovy version 3.0.9 (superlite)
golangci-lint: golangci-lint has version v1.50.1 built from 8926a95f on 2022-10-22T11:12:23Z
gherkin-lint: --version not supported
eslint: v8.31.0
scalafmt: scalafmt 3.6.1
stylelint: 14.16.1
sqlfluff: sqlfluff, version 1.4.5
bash-exec: --version not supported
google-java-format: google-java-format: Version 1.15.0
phpcs: PHP_CodeSniffer version 3.7.1 (stable) by Squiz (http://www.squiz.net)
terragrunt: terragrunt version v0.42.3
psalm: Psalm 4.x-dev@
pylint: pylint 2.15.9
astroid 2.12.13
Python 3.11.1 (main, Dec  8 2022, 01:03:47) [GCC 12.2.1 20220924]
shfmt: v3.6.0
snakemake: 7.19.1
arm-ttk: ModuleVersion = 0.22
pwsh: PowerShell 7.3.1
mypy: mypy 0.991 (compiled: yes)
eslint: v8.31.0
coffeelint: 5.2.11
tflint: TFLint version 0.44.1
+ ruleset.terraform (0.2.2-bundled)
cfn-lint: cfn-lint 0.72.6
flake8: 6.0.0 (mccabe: 0.7.0, pycodestyle: 2.10.0, pyflakes: 3.0.1) CPython 3.11.1 on
Linux
spectral: 6.5.0
clj-kondo: clj-kondo v2022.12.10
eslint: v8.31.0
ts-standard: 12.0.2
eslint: v8.31.0
protolint: protolint version 0.42.2(1a05b7f)
raku: Welcome to Rakudo™ v2022.07.
Implementing the Raku® Programming Language v6.d.
Built on MoarVM version 2022.07.
hadolint: Haskell Dockerfile Linter 2.12.1
checkstyle: Checkstyle version: 10.3.4
clang-format: clang-format version 12.0.1 (https://github.com/llvm/llvm-project.git fed41342a82f5a3a9201819a82bf7a48313e296b)
ktlint: 0.47.1
yamllint: yamllint 1.28.0
dart: Dart VM version: 2.8.4 (stable) (Wed Jun 3 12:26:04 2020 +0200) on "linux_x64"
isort: 
                 _                 _
                (_) ___  ___  _ __| |_
                | |/ _/ / _ \/ '__  _/
                | |\__ \/\_\/| |  | |_
                |_|\___/\___/\_/   \_/

      isort your imports, so you don't have to.

                    VERSION 5.11.4
dotnet-format: 5.0.211103+b95e1694941ca2595941f1c9cd0d9727b6c53d43
eslint: v8.31.0
ktlint: 0.47.1
rustfmt: rustfmt 1.5.1-stable (69f9c33d 2022-12-12)
htmlhint: 1.1.4
rustfmt: rustfmt 1.5.1-stable (69f9c33d 2022-12-12)
sql-lint: 1.0.0
kubeval: Version: 0.16.1
Commit: f5dba6b486fa18b9179b91e15eb6f2b0f7a5a69e
Date: 2021-03-30T15:17:06Z
lua: Lua 5.3.5  Copyright (C) 1994-2018 Lua.org, PUC-Rio
standard: 17.0.0[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   ---------------------------------------------[0m
[0m2025-06-16 21:21:52 [0;34m[INFO][0m   --------------------------------------------[0m
[0m2025-06-16 21:21:52 [0;34m[INFO][0m   Gathering GitHub information...[0m
[0m2025-06-16 21:21:52 [0;34m[INFO][0m   Successfully found:[0;37m[GITHUB_SHA][0;34m, value:[0;37m[cd856b7b457334f8121f9dbf3ac2fa199dfe4eaa][0m
[0m2025-06-16 21:21:52 [0;34m[INFO][0m   Successfully found:[0;37m[GITHUB_WORKSPACE][0;34m, value:[0;37m[/github/workspace][0m
[0m2025-06-16 21:21:52 [0;34m[INFO][0m   Successfully found:[0;37m[GITHUB_EVENT_PATH][0;34m, value:[0;37m[/github/workflow/event.json][0;34m[0m
[0m2025-06-16 21:21:52 [0;34m[INFO][0m   Successfully found:[0;37m[GITHUB_ORG][0;34m, value:[0;37m[desofs2025wednap1][0m
[0m2025-06-16 21:21:52 [0;34m[INFO][0m   Successfully found:[0;37m[GITHUB_REPO][0;34m, value:[0;37m[desofs2025_wed_nap_1][0m
[0m2025-06-16 21:21:52 [0;34m[INFO][0m   Successfully found:[0;37m[GITHUB_TOKEN][0m
[0m2025-06-16 21:21:52 [0;34m[INFO][0m   Successfully found:[0;37m[GITHUB_REPOSITORY][0;34m, value:[0;37m[desofs2025wednap1/desofs2025_wed_nap_1][0m
[0m2025-06-16 21:21:52 [0;34m[INFO][0m   Successfully found:[0;37m[GITHUB_RUN_ID][0;34m, value:[0;37m[15692209555][0m
[0m2025-06-16 21:21:52 [0;34m[INFO][0m   --------------------------------------------[0m
[0m2025-06-16 21:21:52 [0;34m[INFO][0m   Gathering user validation information...[0m
[0m2025-06-16 21:21:52 [0;34m[INFO][0m   - Validating ALL files in code base...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Defining variables for ANSIBLE linter...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_ANSIBLE variable value to 0...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_ANSIBLE variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Defining variables for ARM linter...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_ARM variable value to 0...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_ARM variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Defining variables for BASH linter...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_BASH variable value to 0...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_BASH variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Defining variables for BASH_EXEC linter...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_BASH_EXEC variable value to 0...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_BASH_EXEC variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Defining variables for CLANG_FORMAT linter...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_CLANG_FORMAT variable value to 0...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_CLANG_FORMAT variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Defining variables for CLOUDFORMATION linter...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_CLOUDFORMATION variable value to 0...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_CLOUDFORMATION variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Defining variables for CLOJURE linter...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_CLOJURE variable value to 0...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_CLOJURE variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Defining variables for COFFEESCRIPT linter...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_COFFEESCRIPT variable value to 0...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_COFFEESCRIPT variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Defining variables for CPP linter...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_CPP variable value to 0...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_CPP variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Defining variables for CSHARP linter...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_CSHARP variable value to 0...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_CSHARP variable...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Defining variables for CSS linter...[0m
[0m2025-06-16 21:21:52 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_CSS variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_CSS variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for DART linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_DART variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_DART variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for DOCKERFILE_HADOLINT linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_DOCKERFILE_HADOLINT variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_DOCKERFILE_HADOLINT variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for EDITORCONFIG linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_EDITORCONFIG variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_EDITORCONFIG variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for ENV linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_ENV variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_ENV variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for GITHUB_ACTIONS linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_GITHUB_ACTIONS variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_GITHUB_ACTIONS variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for GITLEAKS linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_GITLEAKS variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_GITLEAKS variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for GHERKIN linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_GHERKIN variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_GHERKIN variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for GO linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_GO variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_GO variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for GOOGLE_JAVA_FORMAT linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_GOOGLE_JAVA_FORMAT variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_GOOGLE_JAVA_FORMAT variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for GROOVY linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_GROOVY variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_GROOVY variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for HTML linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_HTML variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_HTML variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for JAVA linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_JAVA variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_JAVA variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for JAVASCRIPT_ES linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_JAVASCRIPT_ES variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_JAVASCRIPT_ES variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for JAVASCRIPT_STANDARD linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_JAVASCRIPT_STANDARD variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_JAVASCRIPT_STANDARD variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for JSCPD linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_JSCPD variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_JSCPD variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for JSON linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_JSON variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_JSON variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for JSONC linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_JSONC variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_JSONC variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for JSX linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_JSX variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_JSX variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for KUBERNETES_KUBEVAL linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_KUBERNETES_KUBEVAL variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_KUBERNETES_KUBEVAL variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for KOTLIN linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_KOTLIN variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_KOTLIN variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for KOTLIN_ANDROID linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_KOTLIN_ANDROID variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_KOTLIN_ANDROID variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for LATEX linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_LATEX variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_LATEX variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for LUA linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_LUA variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_LUA variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for MARKDOWN linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_MARKDOWN variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_MARKDOWN variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for NATURAL_LANGUAGE linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_NATURAL_LANGUAGE variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_NATURAL_LANGUAGE variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for OPENAPI linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_OPENAPI variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_OPENAPI variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for PERL linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_PERL variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_PERL variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for PHP_BUILTIN linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_PHP_BUILTIN variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_PHP_BUILTIN variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for PHP_PHPCS linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_PHP_PHPCS variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_PHP_PHPCS variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for PHP_PHPSTAN linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_PHP_PHPSTAN variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_PHP_PHPSTAN variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for PHP_PSALM linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_PHP_PSALM variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_PHP_PSALM variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for POWERSHELL linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_POWERSHELL variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_POWERSHELL variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for PROTOBUF linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_PROTOBUF variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_PROTOBUF variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for PYTHON_BLACK linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_PYTHON_BLACK variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_PYTHON_BLACK variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for PYTHON_PYLINT linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_PYTHON_PYLINT variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_PYTHON_PYLINT variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for PYTHON_FLAKE8 linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_PYTHON_FLAKE8 variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_PYTHON_FLAKE8 variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for PYTHON_ISORT linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_PYTHON_ISORT variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_PYTHON_ISORT variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for PYTHON_MYPY linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_PYTHON_MYPY variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_PYTHON_MYPY variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for R linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_R variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_R variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for RAKU linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_RAKU variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_RAKU variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for RUBY linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_RUBY variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_RUBY variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for RUST_2015 linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_RUST_2015 variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_RUST_2015 variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for RUST_2018 linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_RUST_2018 variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_RUST_2018 variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for RUST_2021 linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_RUST_2021 variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_RUST_2021 variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for RUST_CLIPPY linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_RUST_CLIPPY variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_RUST_CLIPPY variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for SCALAFMT linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_SCALAFMT variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_SCALAFMT variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for SHELL_SHFMT linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_SHELL_SHFMT variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_SHELL_SHFMT variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for SNAKEMAKE_LINT linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_SNAKEMAKE_LINT variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_SNAKEMAKE_LINT variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for SNAKEMAKE_SNAKEFMT linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_SNAKEMAKE_SNAKEFMT variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_SNAKEMAKE_SNAKEFMT variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for STATES linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_STATES variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_STATES variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for SQL linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_SQL variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_SQL variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for SQLFLUFF linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_SQLFLUFF variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_SQLFLUFF variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for TEKTON linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_TEKTON variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_TEKTON variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for TERRAFORM_TFLINT linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_TERRAFORM_TFLINT variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_TERRAFORM_TFLINT variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for TERRAFORM_TERRASCAN linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_TERRAFORM_TERRASCAN variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_TERRAFORM_TERRASCAN variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for TERRAGRUNT linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_TERRAGRUNT variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_TERRAGRUNT variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for TSX linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_TSX variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_TSX variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for TYPESCRIPT_ES linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_TYPESCRIPT_ES variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_TYPESCRIPT_ES variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for TYPESCRIPT_STANDARD linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_TYPESCRIPT_STANDARD variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_TYPESCRIPT_STANDARD variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for XML linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_XML variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_XML variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Defining variables for YAML linter...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting ERRORS_FOUND_YAML variable value to 0...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Exporting ERRORS_FOUND_YAML variable...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting Ansible directory to the default: /github/workspace/ansible[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Setting Ansible directory to: /github/workspace/ansible[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [ANSIBLE] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [ARM] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [BASH] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [BASH_EXEC] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [CLANG_FORMAT] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [CLOUDFORMATION] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [CLOJURE] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [COFFEESCRIPT] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [CPP] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [CSHARP] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [CSS] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [DART] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [DOCKERFILE_HADOLINT] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [EDITORCONFIG] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [ENV] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [GITHUB_ACTIONS] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [GITLEAKS] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [GHERKIN] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [GO] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [GOOGLE_JAVA_FORMAT] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [GROOVY] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [HTML] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [JAVA] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [JAVASCRIPT_ES] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [JAVASCRIPT_STANDARD] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [JSCPD] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [JSON] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [JSONC] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [JSX] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [KUBERNETES_KUBEVAL] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [KOTLIN] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [KOTLIN_ANDROID] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [LATEX] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [LUA] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [MARKDOWN] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [NATURAL_LANGUAGE] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [OPENAPI] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [PERL] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [PHP_BUILTIN] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [PHP_PHPCS] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [PHP_PHPSTAN] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [PHP_PSALM] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [POWERSHELL] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [PROTOBUF] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [PYTHON_BLACK] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [PYTHON_PYLINT] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [PYTHON_FLAKE8] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [PYTHON_ISORT] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [PYTHON_MYPY] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [R] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [RAKU] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [RUBY] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [RUST_2015] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [RUST_2018] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [RUST_2021] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [RUST_CLIPPY] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [SCALAFMT] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [SHELL_SHFMT] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [SNAKEMAKE_LINT] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [SNAKEMAKE_SNAKEFMT] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [STATES] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [SQL] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [SQLFLUFF] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [TEKTON] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [TERRAFORM_TFLINT] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [TERRAFORM_TERRASCAN] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [TERRAGRUNT] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [TSX] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [TYPESCRIPT_ES] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [TYPESCRIPT_STANDARD] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [XML] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   - Validating [YAML] files in code base...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   --- DEBUG INFO ---[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   ---------------------------------------------[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Runner:[root][0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   ENV:[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   ACTIONS_CACHE_URL=https://acghubeus1.actions.githubusercontent.com/9ZQUwipDjTdP8AdciGKi7nx60yrbuIDcZzwHm98Mdxc111BEIN/
ACTIONS_RESULTS_URL=https://results-receiver.actions.githubusercontent.com/
ACTIONS_RUNTIME_TOKEN=eyJhbGciOiJSUzI1NiIsImtpZCI6IjM4ODI2YjE3LTZhMzAtNWY5Yi1iMTY5LThiZWI4MjAyZjcyMyIsInR5cCI6IkpXVCIsIng1dCI6InlrTmFZNHFNX3RhNGsyVGdaT0NFWUxrY1lsQSJ9.eyJJZGVudGl0eVR5cGVDbGFpbSI6IlN5c3RlbTpTZXJ2aWNlSWRlbnRpdHkiLCJhYyI6Ilt7XCJTY29wZVwiOlwicmVmcy9oZWFkcy9tYXN0ZXJcIixcIlBlcm1pc3Npb25cIjozfV0iLCJhY3NsIjoiMTAiLCJhdWQiOiJ2c286MGZkM2UxNGYtNzA1OS00MTZhLTlmMzktZWFhMjFiMGU4ZmIzIiwiYmlsbGluZ19vd25lcl9pZCI6Ik9fa2dET0RLN3VOZyIsImV4cCI6MTc1MDEzMTAzMywiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2NsYWltcy9wcmltYXJ5c2lkIjoiZGRkZGRkZGQtZGRkZC1kZGRkLWRkZGQtZGRkZGRkZGRkZGRkIiwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvd3MvMjAwNS8wNS9pZGVudGl0eS9jbGFpbXMvc2lkIjoiZGRkZGRkZGQtZGRkZC1kZGRkLWRkZGQtZGRkZGRkZGRkZGRkIiwiaWF0IjoxNzUwMTA4ODMzLCJpc3MiOiJodHRwczovL3Rva2VuLmFjdGlvbnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tIiwiam9iX2lkIjoiMjhmM2I0NmEtNzYyNi01MDcxLWFhNGItNWQ3YWY0ZmE2YzhiIiwibmFtZWlkIjoiZGRkZGRkZGQtZGRkZC1kZGRkLWRkZGQtZGRkZGRkZGRkZGRkIiwibmJmIjoxNzUwMTA4NTMzLCJvcmNoX2lkIjoiMGNhYmExMDQtODkyNy00ZGQ0LTlkZGItMGVkNTkyMjViZTNmLnN1cGVyLWxpbnRlci1zY2FuLl9fZGVmYXVsdCIsIm93bmVyX2lkIjoiT19rZ0RPREs3dU5nIiwicGxhbl9pZCI6IjBjYWJhMTA0LTg5MjctNGRkNC05ZGRiLTBlZDU5MjI1YmUzZiIsInJ1bl9pZCI6IjE1NjkyMjA5NTU1IiwicnVuX251bWJlciI6IjMwIiwicnVuX3R5cGUiOiJmdWxsIiwicnVubmVyX2lkIjoiMTAwMDAwMTA2NSIsInJ1bm5lcl90eXBlIjoiaG9zdGVkIiwic2NwIjoiQWN0aW9ucy5SZXN1bHRzOjBjYWJhMTA0LTg5MjctNGRkNC05ZGRiLTBlZDU5MjI1YmUzZjoyOGYzYjQ2YS03NjI2LTUwNzEtYWE0Yi01ZDdhZjRmYTZjOGIgQWN0aW9ucy5SdW5uZXI6MGNhYmExMDQtODkyNy00ZGQ0LTlkZGItMGVkNTkyMjViZTNmOjI4ZjNiNDZhLTc2MjYtNTA3MS1hYTRiLTVkN2FmNGZhNmM4YiBBY3Rpb25zLlVwbG9hZEFydGlmYWN0czowY2FiYTEwNC04OTI3LTRkZDQtOWRkYi0wZWQ1OTIyNWJlM2Y6MjhmM2I0NmEtNzYyNi01MDcxLWFhNGItNWQ3YWY0ZmE2YzhiIEFjdGlvbnMuR2VuZXJpY1JlYWQ6MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAwIiwic2hhIjoiY2Q4NTZiN2I0NTczMzRmODEyMWY5ZGJmM2FjMmZhMTk5ZGZlNGVhYSJ9.5J1sWO8UpmctUFCqFMwjXmYrbWjEtP71SjggwF2qdWSgRBigLj2VbBF3gH0t01UYha9mUy0ZsOAT8xRk4ru9LUakrPjO58-fUWxuftDFukI0DMEidPNbWITzl-_9GfhHDVnwAcKS6iUfPuhnpeQ32dPG3bCPcqj_VqEAE532jgo4fLpLsfzf2FwvvvIuyvMXzS1TsDJfNZIJPEfGZnxp1etmCXDQWYnwTmUq1vP2d4421E_528bp0DlI8WKzNt0IGJdDD704wp6J8Jb5mzzlqxAposLjr8HK_opG3NQ5qSOjKrHzTMe8k8eAYE6YLqoxeQnFChXdTH8t6wyjtSKv7Q
ACTIONS_RUNTIME_URL=https://pipelinesghubeus11.actions.githubusercontent.com/9ZQUwipDjTdP8AdciGKi7nx60yrbuIDcZzwHm98Mdxc111BEIN/
ARM_TTK_PSD1=/usr/lib/microsoft/arm-ttk-master/arm-ttk/arm-ttk.psd1
BUILD_DATE=2023-01-04T06:45:30Z
BUILD_REVISION=d2600eb1bd51e68b2c065501b241c450be01a216
BUILD_VERSION=d2600eb1bd51e68b2c065501b241c450be01a216
CI=true
CRYPTOGRAPHY_DONT_BUILD_RUST=1
DEFAULT_ANSIBLE_DIRECTORY=/github/workspace/ansible
DEFAULT_BRANCH=master
DEFAULT_DISABLE_ERRORS=false
DEFAULT_TEST_CASE_ANSIBLE_DIRECTORY=/github/workspace/.automation/test/ansible
DISABLE_ERRORS=true
ERRORS_FOUND_ANSIBLE=0
ERRORS_FOUND_ARM=0
ERRORS_FOUND_BASH=0
ERRORS_FOUND_BASH_EXEC=0
ERRORS_FOUND_CLANG_FORMAT=0
ERRORS_FOUND_CLOJURE=0
ERRORS_FOUND_CLOUDFORMATION=0
ERRORS_FOUND_COFFEESCRIPT=0
ERRORS_FOUND_CPP=0
ERRORS_FOUND_CSHARP=0
ERRORS_FOUND_CSS=0
ERRORS_FOUND_DART=0
ERRORS_FOUND_DOCKERFILE_HADOLINT=0
ERRORS_FOUND_EDITORCONFIG=0
ERRORS_FOUND_ENV=0
ERRORS_FOUND_GHERKIN=0
ERRORS_FOUND_GITHUB_ACTIONS=0
ERRORS_FOUND_GITLEAKS=0
ERRORS_FOUND_GO=0
ERRORS_FOUND_GOOGLE_JAVA_FORMAT=0
ERRORS_FOUND_GROOVY=0
ERRORS_FOUND_HTML=0
ERRORS_FOUND_JAVA=0
ERRORS_FOUND_JAVASCRIPT_ES=0
ERRORS_FOUND_JAVASCRIPT_STANDARD=0
ERRORS_FOUND_JSCPD=0
ERRORS_FOUND_JSON=0
ERRORS_FOUND_JSONC=0
ERRORS_FOUND_JSX=0
ERRORS_FOUND_KOTLIN=0
ERRORS_FOUND_KOTLIN_ANDROID=0
ERRORS_FOUND_KUBERNETES_KUBEVAL=0
ERRORS_FOUND_LATEX=0
ERRORS_FOUND_LUA=0
ERRORS_FOUND_MARKDOWN=0
ERRORS_FOUND_NATURAL_LANGUAGE=0
ERRORS_FOUND_OPENAPI=0
ERRORS_FOUND_PERL=0
ERRORS_FOUND_PHP_BUILTIN=0
ERRORS_FOUND_PHP_PHPCS=0
ERRORS_FOUND_PHP_PHPSTAN=0
ERRORS_FOUND_PHP_PSALM=0
ERRORS_FOUND_POWERSHELL=0
ERRORS_FOUND_PROTOBUF=0
ERRORS_FOUND_PYTHON_BLACK=0
ERRORS_FOUND_PYTHON_FLAKE8=0
ERRORS_FOUND_PYTHON_ISORT=0
ERRORS_FOUND_PYTHON_MYPY=0
ERRORS_FOUND_PYTHON_PYLINT=0
ERRORS_FOUND_R=0
ERRORS_FOUND_RAKU=0
ERRORS_FOUND_RUBY=0
ERRORS_FOUND_RUST_2015=0
ERRORS_FOUND_RUST_2018=0
ERRORS_FOUND_RUST_2021=0
ERRORS_FOUND_RUST_CLIPPY=0
ERRORS_FOUND_SCALAFMT=0
ERRORS_FOUND_SHELL_SHFMT=0
ERRORS_FOUND_SNAKEMAKE_LINT=0
ERRORS_FOUND_SNAKEMAKE_SNAKEFMT=0
ERRORS_FOUND_SQL=0
ERRORS_FOUND_SQLFLUFF=0
ERRORS_FOUND_STATES=0
ERRORS_FOUND_TEKTON=0
ERRORS_FOUND_TERRAFORM_TERRASCAN=0
ERRORS_FOUND_TERRAFORM_TFLINT=0
ERRORS_FOUND_TERRAGRUNT=0
ERRORS_FOUND_TSX=0
ERRORS_FOUND_TYPESCRIPT_ES=0
ERRORS_FOUND_TYPESCRIPT_STANDARD=0
ERRORS_FOUND_XML=0
ERRORS_FOUND_YAML=0
ERROR_ON_MISSING_EXEC_BIT=false
FILTER_REGEX_EXCLUDE=.*/securityReports/.*
GITHUB_ACTION=__github_super-linter
GITHUB_ACTIONS=true
GITHUB_ACTION_REF=v4
GITHUB_ACTION_REPOSITORY=github/super-linter
GITHUB_ACTOR=PedroNogueiira
GITHUB_ACTOR_ID=109768792
GITHUB_API_URL=https://api.github.com
GITHUB_BASE_REF=
GITHUB_ENV=/github/file_commands/set_env_7f80ad09-2f5d-4314-a32d-df1563ccb532
GITHUB_EVENT_NAME=workflow_dispatch
GITHUB_EVENT_PATH=/github/workflow/event.json
GITHUB_GRAPHQL_URL=https://api.github.com/graphql
GITHUB_HEAD_REF=
GITHUB_JOB=super-linter-scan
GITHUB_OUTPUT=/github/file_commands/set_output_7f80ad09-2f5d-4314-a32d-df1563ccb532
GITHUB_PATH=/github/file_commands/add_path_7f80ad09-2f5d-4314-a32d-df1563ccb532
GITHUB_REF=refs/heads/master
GITHUB_REF_NAME=master
GITHUB_REF_PROTECTED=false
GITHUB_REF_TYPE=branch
GITHUB_REPOSITORY=desofs2025wednap1/desofs2025_wed_nap_1
GITHUB_REPOSITORY_ID=987967198
GITHUB_REPOSITORY_OWNER=desofs2025wednap1
GITHUB_REPOSITORY_OWNER_ID=212790838
GITHUB_RETENTION_DAYS=90
GITHUB_RUN_ATTEMPT=1
GITHUB_RUN_ID=15692209555
GITHUB_RUN_NUMBER=30
GITHUB_SERVER_URL=https://github.com
GITHUB_SHA=cd856b7b457334f8121f9dbf3ac2fa199dfe4eaa
GITHUB_STATE=/github/file_commands/save_state_7f80ad09-2f5d-4314-a32d-df1563ccb532
GITHUB_STEP_SUMMARY=/github/file_commands/step_summary_7f80ad09-2f5d-4314-a32d-df1563ccb532
GITHUB_TOKEN=ghs_VfHZCp1aVm4cLFrPo2E6eliHkRyQkA3PxPYe
GITHUB_TRIGGERING_ACTOR=PedroNogueiira
GITHUB_WORKFLOW=Super DevSecOps Pipeline
GITHUB_WORKFLOW_REF=desofs2025wednap1/desofs2025_wed_nap_1/.github/workflows/superpipeline.yml@refs/heads/master
GITHUB_WORKFLOW_SHA=cd856b7b457334f8121f9dbf3ac2fa199dfe4eaa
GITHUB_WORKSPACE=/github/workspace
HOME=/github/home
HOSTNAME=5ee10d9ebf36
IMAGE=standard
LOG_DEBUG=
LOG_ERROR=
LOG_FILE=super-linter-reports/super-linter.log
LOG_LEVEL=INFO
LOG_NOTICE=
LOG_TEMP=/tmp/tmp.hUP0B19Pzp
LOG_TRACE=
LOG_VERBOSE=
LOG_WARN=
NC=[0m
OUTPUT_DETAILS=detailed
OUTPUT_FOLDER=super-linter-reports
OUTPUT_FORMAT=json
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/node_modules/.bin:/venvs/ansible-lint/bin:/venvs/black/bin:/venvs/cfn-lint/bin:/venvs/cpplint/bin:/venvs/flake8/bin:/venvs/isort/bin:/venvs/mypy/bin:/venvs/pylint/bin:/venvs/snakefmt/bin:/venvs/snakemake/bin:/venvs/sqlfluff/bin:/venvs/yamllint/bin:/venvs/yq/bin:/var/cache/dotnet/tools:/usr/share/dotnet
PGPASSWORD=root
POSTGRES_PASSWORD=root
POSTGRES_USER=postgres
PWD=/github/workspace
RUNNER_ARCH=X64
RUNNER_ENVIRONMENT=github-hosted
RUNNER_NAME=GitHub Actions 1000001065
RUNNER_OS=Linux
RUNNER_TEMP=/home/runner/work/_temp
RUNNER_TOOL_CACHE=/opt/hostedtoolcache
RUNNER_WORKSPACE=/home/runner/work/desofs2025_wed_nap_1
SHLVL=1
SNYK_TOKEN=f48b41e2-30e3-44d5-a464-b1af7ad93ae3
TEST_CASE_FOLDER=.automation/test
TFLINT_PLUGIN_DIR=/root/.tflint.d/plugins
VALIDATE_ANSIBLE=true
VALIDATE_ARM=true
VALIDATE_BASH=true
VALIDATE_BASH_EXEC=true
VALIDATE_CLANG_FORMAT=true
VALIDATE_CLOJURE=true
VALIDATE_CLOUDFORMATION=true
VALIDATE_COFFEESCRIPT=true
VALIDATE_CPP=true
VALIDATE_CSHARP=true
VALIDATE_CSS=true
VALIDATE_DART=true
VALIDATE_DOCKERFILE_HADOLINT=true
VALIDATE_EDITORCONFIG=true
VALIDATE_ENV=true
VALIDATE_GHERKIN=true
VALIDATE_GITHUB_ACTIONS=true
VALIDATE_GITLEAKS=true
VALIDATE_GO=true
VALIDATE_GOOGLE_JAVA_FORMAT=true
VALIDATE_GROOVY=true
VALIDATE_HTML=true
VALIDATE_JAVA=true
VALIDATE_JAVASCRIPT_ES=true
VALIDATE_JAVASCRIPT_STANDARD=true
VALIDATE_JSCPD=true
VALIDATE_JSON=true
VALIDATE_JSONC=true
VALIDATE_JSX=true
VALIDATE_KOTLIN=true
VALIDATE_KOTLIN_ANDROID=true
VALIDATE_KUBERNETES_KUBEVAL=true
VALIDATE_LATEX=true
VALIDATE_LUA=true
VALIDATE_MARKDOWN=true
VALIDATE_NATURAL_LANGUAGE=true
VALIDATE_OPENAPI=true
VALIDATE_PERL=true
VALIDATE_PHP_BUILTIN=true
VALIDATE_PHP_PHPCS=true
VALIDATE_PHP_PHPSTAN=true
VALIDATE_PHP_PSALM=true
VALIDATE_POWERSHELL=true
VALIDATE_PROTOBUF=true
VALIDATE_PYTHON_BLACK=true
VALIDATE_PYTHON_FLAKE8=true
VALIDATE_PYTHON_ISORT=true
VALIDATE_PYTHON_MYPY=true
VALIDATE_PYTHON_PYLINT=true
VALIDATE_R=true
VALIDATE_RAKU=true
VALIDATE_RUBY=true
VALIDATE_RUST_2015=true
VALIDATE_RUST_2018=true
VALIDATE_RUST_2021=true
VALIDATE_RUST_CLIPPY=true
VALIDATE_SCALAFMT=true
VALIDATE_SHELL_SHFMT=true
VALIDATE_SNAKEMAKE_LINT=true
VALIDATE_SNAKEMAKE_SNAKEFMT=true
VALIDATE_SQL=true
VALIDATE_SQLFLUFF=true
VALIDATE_STATES=true
VALIDATE_TEKTON=true
VALIDATE_TERRAFORM_TERRASCAN=true
VALIDATE_TERRAFORM_TFLINT=true
VALIDATE_TERRAGRUNT=true
VALIDATE_TSX=true
VALIDATE_TYPESCRIPT_ES=true
VALIDATE_TYPESCRIPT_STANDARD=true
VALIDATE_XML=true
VALIDATE_YAML=true
VERSION_FILE=/action/lib/functions/linterVersions.txt
_=/bin/printenv[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   ---------------------------------------------[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Loading rules for ANSIBLE...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Getting linter rules for ANSIBLE...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Variable names for language file name: ANSIBLE_FILE_NAME, language linter rules: ANSIBLE_LINTER_RULES[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Initializing LANGUAGE_LINTER_RULES value to an empty string...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   ANSIBLE language rule file (.ansible-lint.yml) has .ansible-lint name and yml extension[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Initializing SECONDARY_FILE_NAME and SECONDARY_LANGUAGE_FILE_PATH...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Checking if the user-provided:[.ansible-lint.yml] and exists at:[/github/workspace/.github/linters/.ansible-lint.yml][0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.ansible-lint.yml].[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   ANSIBLE language rule file has a secondary rules file name to check (.ansible-lint.yaml). Path:[/github/workspace/.github/linters/.ansible-lint.yaml][0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.ansible-lint.yml], nor the file:[/github/workspace/.github/linters/.ansible-lint.yaml], using Default rules at:[/action/lib/.automation/.ansible-lint.yml][0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m     -> Language rules file variable (ANSIBLE_LINTER_RULES) value is:[/action/lib/.automation/.ansible-lint.yml][0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m     -> ANSIBLE_LINTER_RULES rules file (/action/lib/.automation/.ansible-lint.yml) exists.[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Loading rules for ARM...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Getting linter rules for ARM...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Variable names for language file name: ARM_FILE_NAME, language linter rules: ARM_LINTER_RULES[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Initializing LANGUAGE_LINTER_RULES value to an empty string...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   ARM language rule file (.arm-ttk.psd1) has .arm-ttk name and psd1 extension[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Initializing SECONDARY_FILE_NAME and SECONDARY_LANGUAGE_FILE_PATH...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Checking if the user-provided:[.arm-ttk.psd1] and exists at:[/github/workspace/.github/linters/.arm-ttk.psd1][0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.arm-ttk.psd1].[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.arm-ttk.psd1], nor the file:[], using Default rules at:[/action/lib/.automation/.arm-ttk.psd1][0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m     -> Language rules file variable (ARM_LINTER_RULES) value is:[/action/lib/.automation/.arm-ttk.psd1][0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m     -> ARM_LINTER_RULES rules file (/action/lib/.automation/.arm-ttk.psd1) exists.[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Loading rules for BASH...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Getting linter rules for BASH...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Variable names for language file name: BASH_FILE_NAME, language linter rules: BASH_LINTER_RULES[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   BASH_FILE_NAME is not set. Skipping loading rules for BASH...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Loading rules for BASH_EXEC...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Getting linter rules for BASH_EXEC...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Variable names for language file name: BASH_EXEC_FILE_NAME, language linter rules: BASH_EXEC_LINTER_RULES[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   BASH_EXEC_FILE_NAME is not set. Skipping loading rules for BASH_EXEC...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Loading rules for CLANG_FORMAT...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Getting linter rules for CLANG_FORMAT...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Variable names for language file name: CLANG_FORMAT_FILE_NAME, language linter rules: CLANG_FORMAT_LINTER_RULES[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   CLANG_FORMAT_FILE_NAME is not set. Skipping loading rules for CLANG_FORMAT...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Loading rules for CLOUDFORMATION...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Getting linter rules for CLOUDFORMATION...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Variable names for language file name: CLOUDFORMATION_FILE_NAME, language linter rules: CLOUDFORMATION_LINTER_RULES[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Initializing LANGUAGE_LINTER_RULES value to an empty string...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   CLOUDFORMATION language rule file (.cfnlintrc.yml) has .cfnlintrc name and yml extension[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Initializing SECONDARY_FILE_NAME and SECONDARY_LANGUAGE_FILE_PATH...[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Checking if the user-provided:[.cfnlintrc.yml] and exists at:[/github/workspace/.github/linters/.cfnlintrc.yml][0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.cfnlintrc.yml].[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   CLOUDFORMATION language rule file has a secondary rules file name to check (.cfnlintrc.yaml). Path:[/github/workspace/.github/linters/.cfnlintrc.yaml][0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.cfnlintrc.yml], nor the file:[/github/workspace/.github/linters/.cfnlintrc.yaml], using Default rules at:[/action/lib/.automation/.cfnlintrc.yml][0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m     -> Language rules file variable (CLOUDFORMATION_LINTER_RULES) value is:[/action/lib/.automation/.cfnlintrc.yml][0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m     -> CLOUDFORMATION_LINTER_RULES rules file (/action/lib/.automation/.cfnlintrc.yml) exists.[0m
[0m2025-06-16 21:21:53 [0;34m[DEBUG][0m   Loading rules for CLOJURE...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Getting linter rules for CLOJURE...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Variable names for language file name: CLOJURE_FILE_NAME, language linter rules: CLOJURE_LINTER_RULES[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Initializing LANGUAGE_LINTER_RULES value to an empty string...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   CLOJURE language rule file (.clj-kondo/config.edn) has config name and edn extension[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Initializing SECONDARY_FILE_NAME and SECONDARY_LANGUAGE_FILE_PATH...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Checking if the user-provided:[.clj-kondo/config.edn] and exists at:[/github/workspace/.github/linters/.clj-kondo/config.edn][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.clj-kondo/config.edn].[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.clj-kondo/config.edn], nor the file:[], using Default rules at:[/action/lib/.automation/.clj-kondo/config.edn][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Language rules file variable (CLOJURE_LINTER_RULES) value is:[/action/lib/.automation/.clj-kondo/config.edn][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> CLOJURE_LINTER_RULES rules file (/action/lib/.automation/.clj-kondo/config.edn) exists.[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Loading rules for COFFEESCRIPT...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Getting linter rules for COFFEESCRIPT...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Variable names for language file name: COFFEESCRIPT_FILE_NAME, language linter rules: COFFEESCRIPT_LINTER_RULES[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Initializing LANGUAGE_LINTER_RULES value to an empty string...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   COFFEESCRIPT language rule file (.coffee-lint.json) has .coffee-lint name and json extension[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Initializing SECONDARY_FILE_NAME and SECONDARY_LANGUAGE_FILE_PATH...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Checking if the user-provided:[.coffee-lint.json] and exists at:[/github/workspace/.github/linters/.coffee-lint.json][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.coffee-lint.json].[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.coffee-lint.json], nor the file:[], using Default rules at:[/action/lib/.automation/.coffee-lint.json][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Language rules file variable (COFFEESCRIPT_LINTER_RULES) value is:[/action/lib/.automation/.coffee-lint.json][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> COFFEESCRIPT_LINTER_RULES rules file (/action/lib/.automation/.coffee-lint.json) exists.[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Loading rules for CPP...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Getting linter rules for CPP...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Variable names for language file name: CPP_FILE_NAME, language linter rules: CPP_LINTER_RULES[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   CPP_FILE_NAME is not set. Skipping loading rules for CPP...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Loading rules for CSHARP...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Getting linter rules for CSHARP...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Variable names for language file name: CSHARP_FILE_NAME, language linter rules: CSHARP_LINTER_RULES[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   CSHARP_FILE_NAME is not set. Skipping loading rules for CSHARP...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Loading rules for CSS...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Getting linter rules for CSS...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Variable names for language file name: CSS_FILE_NAME, language linter rules: CSS_LINTER_RULES[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Initializing LANGUAGE_LINTER_RULES value to an empty string...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   CSS language rule file (.stylelintrc.json) has .stylelintrc name and json extension[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Initializing SECONDARY_FILE_NAME and SECONDARY_LANGUAGE_FILE_PATH...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Checking if the user-provided:[.stylelintrc.json] and exists at:[/github/workspace/.github/linters/.stylelintrc.json][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.stylelintrc.json].[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.stylelintrc.json], nor the file:[], using Default rules at:[/action/lib/.automation/.stylelintrc.json][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Language rules file variable (CSS_LINTER_RULES) value is:[/action/lib/.automation/.stylelintrc.json][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> CSS_LINTER_RULES rules file (/action/lib/.automation/.stylelintrc.json) exists.[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Loading rules for DART...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Getting linter rules for DART...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Variable names for language file name: DART_FILE_NAME, language linter rules: DART_LINTER_RULES[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Initializing LANGUAGE_LINTER_RULES value to an empty string...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   DART language rule file (analysis_options.yml) has analysis_options name and yml extension[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Initializing SECONDARY_FILE_NAME and SECONDARY_LANGUAGE_FILE_PATH...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Checking if the user-provided:[analysis_options.yml] and exists at:[/github/workspace/.github/linters/analysis_options.yml][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/analysis_options.yml].[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   DART language rule file has a secondary rules file name to check (analysis_options.yaml). Path:[/github/workspace/.github/linters/analysis_options.yaml][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/analysis_options.yml], nor the file:[/github/workspace/.github/linters/analysis_options.yaml], using Default rules at:[/action/lib/.automation/analysis_options.yml][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Language rules file variable (DART_LINTER_RULES) value is:[/action/lib/.automation/analysis_options.yml][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> DART_LINTER_RULES rules file (/action/lib/.automation/analysis_options.yml) exists.[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Loading rules for DOCKERFILE_HADOLINT...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Getting linter rules for DOCKERFILE_HADOLINT...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Variable names for language file name: DOCKERFILE_HADOLINT_FILE_NAME, language linter rules: DOCKERFILE_HADOLINT_LINTER_RULES[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Initializing LANGUAGE_LINTER_RULES value to an empty string...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   DOCKERFILE_HADOLINT language rule file (.hadolint.yaml) has .hadolint name and yaml extension[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Initializing SECONDARY_FILE_NAME and SECONDARY_LANGUAGE_FILE_PATH...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Checking if the user-provided:[.hadolint.yaml] and exists at:[/github/workspace/.github/linters/.hadolint.yaml][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.hadolint.yaml].[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   DOCKERFILE_HADOLINT language rule file has a secondary rules file name to check (.hadolint.yml). Path:[/github/workspace/.github/linters/.hadolint.yml][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.hadolint.yaml], nor the file:[/github/workspace/.github/linters/.hadolint.yml], using Default rules at:[/action/lib/.automation/.hadolint.yaml][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Language rules file variable (DOCKERFILE_HADOLINT_LINTER_RULES) value is:[/action/lib/.automation/.hadolint.yaml][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> DOCKERFILE_HADOLINT_LINTER_RULES rules file (/action/lib/.automation/.hadolint.yaml) exists.[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Loading rules for EDITORCONFIG...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Getting linter rules for EDITORCONFIG...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Variable names for language file name: EDITORCONFIG_FILE_NAME, language linter rules: EDITORCONFIG_LINTER_RULES[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Initializing LANGUAGE_LINTER_RULES value to an empty string...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   EDITORCONFIG language rule file (.ecrc) has .ecrc name and ecrc extension[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Initializing SECONDARY_FILE_NAME and SECONDARY_LANGUAGE_FILE_PATH...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Checking if the user-provided:[.ecrc] and exists at:[/github/workspace/.github/linters/.ecrc][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.ecrc].[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.ecrc], nor the file:[], using Default rules at:[/action/lib/.automation/.ecrc][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Language rules file variable (EDITORCONFIG_LINTER_RULES) value is:[/action/lib/.automation/.ecrc][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> EDITORCONFIG_LINTER_RULES rules file (/action/lib/.automation/.ecrc) exists.[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Loading rules for ENV...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Getting linter rules for ENV...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Variable names for language file name: ENV_FILE_NAME, language linter rules: ENV_LINTER_RULES[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   ENV_FILE_NAME is not set. Skipping loading rules for ENV...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Loading rules for GITHUB_ACTIONS...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Getting linter rules for GITHUB_ACTIONS...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Variable names for language file name: GITHUB_ACTIONS_FILE_NAME, language linter rules: GITHUB_ACTIONS_LINTER_RULES[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Initializing LANGUAGE_LINTER_RULES value to an empty string...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   GITHUB_ACTIONS language rule file (actionlint.yml) has actionlint name and yml extension[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Initializing SECONDARY_FILE_NAME and SECONDARY_LANGUAGE_FILE_PATH...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Checking if the user-provided:[actionlint.yml] and exists at:[/github/workspace/.github/linters/actionlint.yml][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/actionlint.yml].[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   GITHUB_ACTIONS language rule file has a secondary rules file name to check (actionlint.yaml). Path:[/github/workspace/.github/linters/actionlint.yaml][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/actionlint.yml], nor the file:[/github/workspace/.github/linters/actionlint.yaml], using Default rules at:[/action/lib/.automation/actionlint.yml][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Language rules file variable (GITHUB_ACTIONS_LINTER_RULES) value is:[/action/lib/.automation/actionlint.yml][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> GITHUB_ACTIONS_LINTER_RULES rules file (/action/lib/.automation/actionlint.yml) exists.[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Loading rules for GITLEAKS...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Getting linter rules for GITLEAKS...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Variable names for language file name: GITLEAKS_FILE_NAME, language linter rules: GITLEAKS_LINTER_RULES[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Initializing LANGUAGE_LINTER_RULES value to an empty string...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   GITLEAKS language rule file (.gitleaks.toml) has .gitleaks name and toml extension[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Initializing SECONDARY_FILE_NAME and SECONDARY_LANGUAGE_FILE_PATH...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Checking if the user-provided:[.gitleaks.toml] and exists at:[/github/workspace/.github/linters/.gitleaks.toml][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.gitleaks.toml].[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.gitleaks.toml], nor the file:[], using Default rules at:[/action/lib/.automation/.gitleaks.toml][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Language rules file variable (GITLEAKS_LINTER_RULES) value is:[/action/lib/.automation/.gitleaks.toml][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> GITLEAKS_LINTER_RULES rules file (/action/lib/.automation/.gitleaks.toml) exists.[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Loading rules for GHERKIN...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Getting linter rules for GHERKIN...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Variable names for language file name: GHERKIN_FILE_NAME, language linter rules: GHERKIN_LINTER_RULES[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Initializing LANGUAGE_LINTER_RULES value to an empty string...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   GHERKIN language rule file (.gherkin-lintrc) has .gherkin-lintrc name and gherkin-lintrc extension[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Initializing SECONDARY_FILE_NAME and SECONDARY_LANGUAGE_FILE_PATH...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Checking if the user-provided:[.gherkin-lintrc] and exists at:[/github/workspace/.github/linters/.gherkin-lintrc][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.gherkin-lintrc].[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.gherkin-lintrc], nor the file:[], using Default rules at:[/action/lib/.automation/.gherkin-lintrc][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Language rules file variable (GHERKIN_LINTER_RULES) value is:[/action/lib/.automation/.gherkin-lintrc][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> GHERKIN_LINTER_RULES rules file (/action/lib/.automation/.gherkin-lintrc) exists.[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Loading rules for GO...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Getting linter rules for GO...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Variable names for language file name: GO_FILE_NAME, language linter rules: GO_LINTER_RULES[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Initializing LANGUAGE_LINTER_RULES value to an empty string...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   GO language rule file (.golangci.yml) has .golangci name and yml extension[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Initializing SECONDARY_FILE_NAME and SECONDARY_LANGUAGE_FILE_PATH...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Checking if the user-provided:[.golangci.yml] and exists at:[/github/workspace/.github/linters/.golangci.yml][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.golangci.yml].[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   GO language rule file has a secondary rules file name to check (.golangci.yaml). Path:[/github/workspace/.github/linters/.golangci.yaml][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.golangci.yml], nor the file:[/github/workspace/.github/linters/.golangci.yaml], using Default rules at:[/action/lib/.automation/.golangci.yml][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Language rules file variable (GO_LINTER_RULES) value is:[/action/lib/.automation/.golangci.yml][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> GO_LINTER_RULES rules file (/action/lib/.automation/.golangci.yml) exists.[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Loading rules for GOOGLE_JAVA_FORMAT...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Getting linter rules for GOOGLE_JAVA_FORMAT...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Variable names for language file name: GOOGLE_JAVA_FORMAT_FILE_NAME, language linter rules: GOOGLE_JAVA_FORMAT_LINTER_RULES[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT_FILE_NAME is not set. Skipping loading rules for GOOGLE_JAVA_FORMAT...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Loading rules for GROOVY...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Getting linter rules for GROOVY...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Variable names for language file name: GROOVY_FILE_NAME, language linter rules: GROOVY_LINTER_RULES[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Initializing LANGUAGE_LINTER_RULES value to an empty string...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   GROOVY language rule file (.groovylintrc.json) has .groovylintrc name and json extension[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Initializing SECONDARY_FILE_NAME and SECONDARY_LANGUAGE_FILE_PATH...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Checking if the user-provided:[.groovylintrc.json] and exists at:[/github/workspace/.github/linters/.groovylintrc.json][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.groovylintrc.json].[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.groovylintrc.json], nor the file:[], using Default rules at:[/action/lib/.automation/.groovylintrc.json][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Language rules file variable (GROOVY_LINTER_RULES) value is:[/action/lib/.automation/.groovylintrc.json][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> GROOVY_LINTER_RULES rules file (/action/lib/.automation/.groovylintrc.json) exists.[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Loading rules for HTML...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Getting linter rules for HTML...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Variable names for language file name: HTML_FILE_NAME, language linter rules: HTML_LINTER_RULES[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Initializing LANGUAGE_LINTER_RULES value to an empty string...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   HTML language rule file (.htmlhintrc) has .htmlhintrc name and htmlhintrc extension[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Initializing SECONDARY_FILE_NAME and SECONDARY_LANGUAGE_FILE_PATH...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Checking if the user-provided:[.htmlhintrc] and exists at:[/github/workspace/.github/linters/.htmlhintrc][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.htmlhintrc].[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.htmlhintrc], nor the file:[], using Default rules at:[/action/lib/.automation/.htmlhintrc][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Language rules file variable (HTML_LINTER_RULES) value is:[/action/lib/.automation/.htmlhintrc][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> HTML_LINTER_RULES rules file (/action/lib/.automation/.htmlhintrc) exists.[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Loading rules for JAVA...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Getting linter rules for JAVA...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Variable names for language file name: JAVA_FILE_NAME, language linter rules: JAVA_LINTER_RULES[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Initializing LANGUAGE_LINTER_RULES value to an empty string...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   JAVA language rule file (sun_checks.xml) has sun_checks name and xml extension[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Initializing SECONDARY_FILE_NAME and SECONDARY_LANGUAGE_FILE_PATH...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Checking if the user-provided:[sun_checks.xml] and exists at:[/github/workspace/.github/linters/sun_checks.xml][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/sun_checks.xml].[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/sun_checks.xml], nor the file:[], using Default rules at:[/action/lib/.automation/sun_checks.xml][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Language rules file variable (JAVA_LINTER_RULES) value is:[/action/lib/.automation/sun_checks.xml][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> JAVA_LINTER_RULES rules file (/action/lib/.automation/sun_checks.xml) exists.[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Loading rules for JAVASCRIPT_ES...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Getting linter rules for JAVASCRIPT_ES...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Variable names for language file name: JAVASCRIPT_ES_FILE_NAME, language linter rules: JAVASCRIPT_ES_LINTER_RULES[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Initializing LANGUAGE_LINTER_RULES value to an empty string...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   JAVASCRIPT_ES language rule file (.eslintrc.yml) has .eslintrc name and yml extension[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Initializing SECONDARY_FILE_NAME and SECONDARY_LANGUAGE_FILE_PATH...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Checking if the user-provided:[.eslintrc.yml] and exists at:[/github/workspace/.github/linters/.eslintrc.yml][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.eslintrc.yml].[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   JAVASCRIPT_ES language rule file has a secondary rules file name to check (.eslintrc.yaml). Path:[/github/workspace/.github/linters/.eslintrc.yaml][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.eslintrc.yml], nor the file:[/github/workspace/.github/linters/.eslintrc.yaml], using Default rules at:[/action/lib/.automation/.eslintrc.yml][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Language rules file variable (JAVASCRIPT_ES_LINTER_RULES) value is:[/action/lib/.automation/.eslintrc.yml][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> JAVASCRIPT_ES_LINTER_RULES rules file (/action/lib/.automation/.eslintrc.yml) exists.[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Loading rules for JAVASCRIPT_STANDARD...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Getting linter rules for JAVASCRIPT_STANDARD...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Variable names for language file name: JAVASCRIPT_STANDARD_FILE_NAME, language linter rules: JAVASCRIPT_STANDARD_LINTER_RULES[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Initializing LANGUAGE_LINTER_RULES value to an empty string...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   JAVASCRIPT_STANDARD language rule file (.eslintrc.yml) has .eslintrc name and yml extension[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Initializing SECONDARY_FILE_NAME and SECONDARY_LANGUAGE_FILE_PATH...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Checking if the user-provided:[.eslintrc.yml] and exists at:[/github/workspace/.github/linters/.eslintrc.yml][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.eslintrc.yml].[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   JAVASCRIPT_STANDARD language rule file has a secondary rules file name to check (.eslintrc.yaml). Path:[/github/workspace/.github/linters/.eslintrc.yaml][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.eslintrc.yml], nor the file:[/github/workspace/.github/linters/.eslintrc.yaml], using Default rules at:[/action/lib/.automation/.eslintrc.yml][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Language rules file variable (JAVASCRIPT_STANDARD_LINTER_RULES) value is:[/action/lib/.automation/.eslintrc.yml][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> JAVASCRIPT_STANDARD_LINTER_RULES rules file (/action/lib/.automation/.eslintrc.yml) exists.[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Loading rules for JSCPD...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Getting linter rules for JSCPD...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Variable names for language file name: JSCPD_FILE_NAME, language linter rules: JSCPD_LINTER_RULES[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Initializing LANGUAGE_LINTER_RULES value to an empty string...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   JSCPD language rule file (.jscpd.json) has .jscpd name and json extension[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Initializing SECONDARY_FILE_NAME and SECONDARY_LANGUAGE_FILE_PATH...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Checking if the user-provided:[.jscpd.json] and exists at:[/github/workspace/.github/linters/.jscpd.json][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.jscpd.json].[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.jscpd.json], nor the file:[], using Default rules at:[/action/lib/.automation/.jscpd.json][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Language rules file variable (JSCPD_LINTER_RULES) value is:[/action/lib/.automation/.jscpd.json][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> JSCPD_LINTER_RULES rules file (/action/lib/.automation/.jscpd.json) exists.[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Loading rules for JSON...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Getting linter rules for JSON...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Variable names for language file name: JSON_FILE_NAME, language linter rules: JSON_LINTER_RULES[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   JSON_FILE_NAME is not set. Skipping loading rules for JSON...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Loading rules for JSONC...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Getting linter rules for JSONC...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Variable names for language file name: JSONC_FILE_NAME, language linter rules: JSONC_LINTER_RULES[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   JSONC_FILE_NAME is not set. Skipping loading rules for JSONC...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Loading rules for JSX...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Getting linter rules for JSX...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Variable names for language file name: JSX_FILE_NAME, language linter rules: JSX_LINTER_RULES[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Initializing LANGUAGE_LINTER_RULES value to an empty string...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   JSX language rule file (.eslintrc.yml) has .eslintrc name and yml extension[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Initializing SECONDARY_FILE_NAME and SECONDARY_LANGUAGE_FILE_PATH...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Checking if the user-provided:[.eslintrc.yml] and exists at:[/github/workspace/.github/linters/.eslintrc.yml][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.eslintrc.yml].[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   JSX language rule file has a secondary rules file name to check (.eslintrc.yaml). Path:[/github/workspace/.github/linters/.eslintrc.yaml][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.eslintrc.yml], nor the file:[/github/workspace/.github/linters/.eslintrc.yaml], using Default rules at:[/action/lib/.automation/.eslintrc.yml][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Language rules file variable (JSX_LINTER_RULES) value is:[/action/lib/.automation/.eslintrc.yml][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> JSX_LINTER_RULES rules file (/action/lib/.automation/.eslintrc.yml) exists.[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Loading rules for KUBERNETES_KUBEVAL...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Getting linter rules for KUBERNETES_KUBEVAL...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Variable names for language file name: KUBERNETES_KUBEVAL_FILE_NAME, language linter rules: KUBERNETES_KUBEVAL_LINTER_RULES[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   KUBERNETES_KUBEVAL_FILE_NAME is not set. Skipping loading rules for KUBERNETES_KUBEVAL...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Loading rules for KOTLIN...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Getting linter rules for KOTLIN...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Variable names for language file name: KOTLIN_FILE_NAME, language linter rules: KOTLIN_LINTER_RULES[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   KOTLIN_FILE_NAME is not set. Skipping loading rules for KOTLIN...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Loading rules for KOTLIN_ANDROID...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Getting linter rules for KOTLIN_ANDROID...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Variable names for language file name: KOTLIN_ANDROID_FILE_NAME, language linter rules: KOTLIN_ANDROID_LINTER_RULES[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   KOTLIN_ANDROID_FILE_NAME is not set. Skipping loading rules for KOTLIN_ANDROID...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Loading rules for LATEX...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Getting linter rules for LATEX...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Variable names for language file name: LATEX_FILE_NAME, language linter rules: LATEX_LINTER_RULES[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Initializing LANGUAGE_LINTER_RULES value to an empty string...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   LATEX language rule file (.chktexrc) has .chktexrc name and chktexrc extension[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Initializing SECONDARY_FILE_NAME and SECONDARY_LANGUAGE_FILE_PATH...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Checking if the user-provided:[.chktexrc] and exists at:[/github/workspace/.github/linters/.chktexrc][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.chktexrc].[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.chktexrc], nor the file:[], using Default rules at:[/action/lib/.automation/.chktexrc][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Language rules file variable (LATEX_LINTER_RULES) value is:[/action/lib/.automation/.chktexrc][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> LATEX_LINTER_RULES rules file (/action/lib/.automation/.chktexrc) exists.[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Loading rules for LUA...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Getting linter rules for LUA...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Variable names for language file name: LUA_FILE_NAME, language linter rules: LUA_LINTER_RULES[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Initializing LANGUAGE_LINTER_RULES value to an empty string...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   LUA language rule file (.luacheckrc) has .luacheckrc name and luacheckrc extension[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Initializing SECONDARY_FILE_NAME and SECONDARY_LANGUAGE_FILE_PATH...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Checking if the user-provided:[.luacheckrc] and exists at:[/github/workspace/.github/linters/.luacheckrc][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.luacheckrc].[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.luacheckrc], nor the file:[], using Default rules at:[/action/lib/.automation/.luacheckrc][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Language rules file variable (LUA_LINTER_RULES) value is:[/action/lib/.automation/.luacheckrc][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> LUA_LINTER_RULES rules file (/action/lib/.automation/.luacheckrc) exists.[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Loading rules for MARKDOWN...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Getting linter rules for MARKDOWN...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Variable names for language file name: MARKDOWN_FILE_NAME, language linter rules: MARKDOWN_LINTER_RULES[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Initializing LANGUAGE_LINTER_RULES value to an empty string...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   MARKDOWN language rule file (.markdown-lint.yml) has .markdown-lint name and yml extension[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Initializing SECONDARY_FILE_NAME and SECONDARY_LANGUAGE_FILE_PATH...[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   Checking if the user-provided:[.markdown-lint.yml] and exists at:[/github/workspace/.github/linters/.markdown-lint.yml][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.markdown-lint.yml].[0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m   MARKDOWN language rule file has a secondary rules file name to check (.markdown-lint.yaml). Path:[/github/workspace/.github/linters/.markdown-lint.yaml][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.markdown-lint.yml], nor the file:[/github/workspace/.github/linters/.markdown-lint.yaml], using Default rules at:[/action/lib/.automation/.markdown-lint.yml][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> Language rules file variable (MARKDOWN_LINTER_RULES) value is:[/action/lib/.automation/.markdown-lint.yml][0m
[0m2025-06-16 21:21:54 [0;34m[DEBUG][0m     -> MARKDOWN_LINTER_RULES rules file (/action/lib/.automation/.markdown-lint.yml) exists.[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Loading rules for NATURAL_LANGUAGE...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Getting linter rules for NATURAL_LANGUAGE...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Variable names for language file name: NATURAL_LANGUAGE_FILE_NAME, language linter rules: NATURAL_LANGUAGE_LINTER_RULES[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Initializing LANGUAGE_LINTER_RULES value to an empty string...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   NATURAL_LANGUAGE language rule file (.textlintrc) has .textlintrc name and textlintrc extension[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Initializing SECONDARY_FILE_NAME and SECONDARY_LANGUAGE_FILE_PATH...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Checking if the user-provided:[.textlintrc] and exists at:[/github/workspace/.github/linters/.textlintrc][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.textlintrc].[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.textlintrc], nor the file:[], using Default rules at:[/action/lib/.automation/.textlintrc][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Language rules file variable (NATURAL_LANGUAGE_LINTER_RULES) value is:[/action/lib/.automation/.textlintrc][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> NATURAL_LANGUAGE_LINTER_RULES rules file (/action/lib/.automation/.textlintrc) exists.[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Loading rules for OPENAPI...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Getting linter rules for OPENAPI...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Variable names for language file name: OPENAPI_FILE_NAME, language linter rules: OPENAPI_LINTER_RULES[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Initializing LANGUAGE_LINTER_RULES value to an empty string...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   OPENAPI language rule file (.openapirc.yml) has .openapirc name and yml extension[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Initializing SECONDARY_FILE_NAME and SECONDARY_LANGUAGE_FILE_PATH...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Checking if the user-provided:[.openapirc.yml] and exists at:[/github/workspace/.github/linters/.openapirc.yml][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.openapirc.yml].[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   OPENAPI language rule file has a secondary rules file name to check (.openapirc.yaml). Path:[/github/workspace/.github/linters/.openapirc.yaml][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.openapirc.yml], nor the file:[/github/workspace/.github/linters/.openapirc.yaml], using Default rules at:[/action/lib/.automation/.openapirc.yml][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Language rules file variable (OPENAPI_LINTER_RULES) value is:[/action/lib/.automation/.openapirc.yml][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> OPENAPI_LINTER_RULES rules file (/action/lib/.automation/.openapirc.yml) exists.[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Loading rules for PERL...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Getting linter rules for PERL...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Variable names for language file name: PERL_FILE_NAME, language linter rules: PERL_LINTER_RULES[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   PERL_FILE_NAME is not set. Skipping loading rules for PERL...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Loading rules for PHP_BUILTIN...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Getting linter rules for PHP_BUILTIN...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Variable names for language file name: PHP_BUILTIN_FILE_NAME, language linter rules: PHP_BUILTIN_LINTER_RULES[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Initializing LANGUAGE_LINTER_RULES value to an empty string...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   PHP_BUILTIN language rule file (php.ini) has php name and ini extension[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Initializing SECONDARY_FILE_NAME and SECONDARY_LANGUAGE_FILE_PATH...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Checking if the user-provided:[php.ini] and exists at:[/github/workspace/.github/linters/php.ini][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/php.ini].[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/php.ini], nor the file:[], using Default rules at:[/action/lib/.automation/php.ini][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Language rules file variable (PHP_BUILTIN_LINTER_RULES) value is:[/action/lib/.automation/php.ini][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> PHP_BUILTIN_LINTER_RULES rules file (/action/lib/.automation/php.ini) exists.[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Loading rules for PHP_PHPCS...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Getting linter rules for PHP_PHPCS...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Variable names for language file name: PHP_PHPCS_FILE_NAME, language linter rules: PHP_PHPCS_LINTER_RULES[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Initializing LANGUAGE_LINTER_RULES value to an empty string...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   PHP_PHPCS language rule file (phpcs.xml) has phpcs name and xml extension[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Initializing SECONDARY_FILE_NAME and SECONDARY_LANGUAGE_FILE_PATH...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Checking if the user-provided:[phpcs.xml] and exists at:[/github/workspace/.github/linters/phpcs.xml][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/phpcs.xml].[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/phpcs.xml], nor the file:[], using Default rules at:[/action/lib/.automation/phpcs.xml][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Language rules file variable (PHP_PHPCS_LINTER_RULES) value is:[/action/lib/.automation/phpcs.xml][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> PHP_PHPCS_LINTER_RULES rules file (/action/lib/.automation/phpcs.xml) exists.[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Loading rules for PHP_PHPSTAN...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Getting linter rules for PHP_PHPSTAN...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Variable names for language file name: PHP_PHPSTAN_FILE_NAME, language linter rules: PHP_PHPSTAN_LINTER_RULES[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Initializing LANGUAGE_LINTER_RULES value to an empty string...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   PHP_PHPSTAN language rule file (phpstan.neon) has phpstan name and neon extension[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Initializing SECONDARY_FILE_NAME and SECONDARY_LANGUAGE_FILE_PATH...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Checking if the user-provided:[phpstan.neon] and exists at:[/github/workspace/.github/linters/phpstan.neon][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/phpstan.neon].[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/phpstan.neon], nor the file:[], using Default rules at:[/action/lib/.automation/phpstan.neon][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Language rules file variable (PHP_PHPSTAN_LINTER_RULES) value is:[/action/lib/.automation/phpstan.neon][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> PHP_PHPSTAN_LINTER_RULES rules file (/action/lib/.automation/phpstan.neon) exists.[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Loading rules for PHP_PSALM...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Getting linter rules for PHP_PSALM...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Variable names for language file name: PHP_PSALM_FILE_NAME, language linter rules: PHP_PSALM_LINTER_RULES[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Initializing LANGUAGE_LINTER_RULES value to an empty string...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   PHP_PSALM language rule file (psalm.xml) has psalm name and xml extension[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Initializing SECONDARY_FILE_NAME and SECONDARY_LANGUAGE_FILE_PATH...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Checking if the user-provided:[psalm.xml] and exists at:[/github/workspace/.github/linters/psalm.xml][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/psalm.xml].[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/psalm.xml], nor the file:[], using Default rules at:[/action/lib/.automation/psalm.xml][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Language rules file variable (PHP_PSALM_LINTER_RULES) value is:[/action/lib/.automation/psalm.xml][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> PHP_PSALM_LINTER_RULES rules file (/action/lib/.automation/psalm.xml) exists.[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Loading rules for POWERSHELL...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Getting linter rules for POWERSHELL...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Variable names for language file name: POWERSHELL_FILE_NAME, language linter rules: POWERSHELL_LINTER_RULES[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Initializing LANGUAGE_LINTER_RULES value to an empty string...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   POWERSHELL language rule file (.powershell-psscriptanalyzer.psd1) has .powershell-psscriptanalyzer name and psd1 extension[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Initializing SECONDARY_FILE_NAME and SECONDARY_LANGUAGE_FILE_PATH...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Checking if the user-provided:[.powershell-psscriptanalyzer.psd1] and exists at:[/github/workspace/.github/linters/.powershell-psscriptanalyzer.psd1][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.powershell-psscriptanalyzer.psd1].[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.powershell-psscriptanalyzer.psd1], nor the file:[], using Default rules at:[/action/lib/.automation/.powershell-psscriptanalyzer.psd1][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Language rules file variable (POWERSHELL_LINTER_RULES) value is:[/action/lib/.automation/.powershell-psscriptanalyzer.psd1][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> POWERSHELL_LINTER_RULES rules file (/action/lib/.automation/.powershell-psscriptanalyzer.psd1) exists.[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Loading rules for PROTOBUF...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Getting linter rules for PROTOBUF...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Variable names for language file name: PROTOBUF_FILE_NAME, language linter rules: PROTOBUF_LINTER_RULES[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Initializing LANGUAGE_LINTER_RULES value to an empty string...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   PROTOBUF language rule file (.protolintrc.yml) has .protolintrc name and yml extension[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Initializing SECONDARY_FILE_NAME and SECONDARY_LANGUAGE_FILE_PATH...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Checking if the user-provided:[.protolintrc.yml] and exists at:[/github/workspace/.github/linters/.protolintrc.yml][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.protolintrc.yml].[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   PROTOBUF language rule file has a secondary rules file name to check (.protolintrc.yaml). Path:[/github/workspace/.github/linters/.protolintrc.yaml][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.protolintrc.yml], nor the file:[/github/workspace/.github/linters/.protolintrc.yaml], using Default rules at:[/action/lib/.automation/.protolintrc.yml][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Language rules file variable (PROTOBUF_LINTER_RULES) value is:[/action/lib/.automation/.protolintrc.yml][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> PROTOBUF_LINTER_RULES rules file (/action/lib/.automation/.protolintrc.yml) exists.[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Loading rules for PYTHON_BLACK...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Getting linter rules for PYTHON_BLACK...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Variable names for language file name: PYTHON_BLACK_FILE_NAME, language linter rules: PYTHON_BLACK_LINTER_RULES[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Initializing LANGUAGE_LINTER_RULES value to an empty string...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   PYTHON_BLACK language rule file (.python-black) has .python-black name and python-black extension[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Initializing SECONDARY_FILE_NAME and SECONDARY_LANGUAGE_FILE_PATH...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Checking if the user-provided:[.python-black] and exists at:[/github/workspace/.github/linters/.python-black][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.python-black].[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.python-black], nor the file:[], using Default rules at:[/action/lib/.automation/.python-black][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Language rules file variable (PYTHON_BLACK_LINTER_RULES) value is:[/action/lib/.automation/.python-black][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> PYTHON_BLACK_LINTER_RULES rules file (/action/lib/.automation/.python-black) exists.[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Loading rules for PYTHON_PYLINT...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Getting linter rules for PYTHON_PYLINT...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Variable names for language file name: PYTHON_PYLINT_FILE_NAME, language linter rules: PYTHON_PYLINT_LINTER_RULES[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Initializing LANGUAGE_LINTER_RULES value to an empty string...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   PYTHON_PYLINT language rule file (.python-lint) has .python-lint name and python-lint extension[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Initializing SECONDARY_FILE_NAME and SECONDARY_LANGUAGE_FILE_PATH...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Checking if the user-provided:[.python-lint] and exists at:[/github/workspace/.github/linters/.python-lint][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.python-lint].[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.python-lint], nor the file:[], using Default rules at:[/action/lib/.automation/.python-lint][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Language rules file variable (PYTHON_PYLINT_LINTER_RULES) value is:[/action/lib/.automation/.python-lint][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> PYTHON_PYLINT_LINTER_RULES rules file (/action/lib/.automation/.python-lint) exists.[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Loading rules for PYTHON_FLAKE8...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Getting linter rules for PYTHON_FLAKE8...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Variable names for language file name: PYTHON_FLAKE8_FILE_NAME, language linter rules: PYTHON_FLAKE8_LINTER_RULES[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Initializing LANGUAGE_LINTER_RULES value to an empty string...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   PYTHON_FLAKE8 language rule file (.flake8) has .flake8 name and flake8 extension[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Initializing SECONDARY_FILE_NAME and SECONDARY_LANGUAGE_FILE_PATH...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Checking if the user-provided:[.flake8] and exists at:[/github/workspace/.github/linters/.flake8][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.flake8].[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.flake8], nor the file:[], using Default rules at:[/action/lib/.automation/.flake8][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Language rules file variable (PYTHON_FLAKE8_LINTER_RULES) value is:[/action/lib/.automation/.flake8][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> PYTHON_FLAKE8_LINTER_RULES rules file (/action/lib/.automation/.flake8) exists.[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Loading rules for PYTHON_ISORT...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Getting linter rules for PYTHON_ISORT...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Variable names for language file name: PYTHON_ISORT_FILE_NAME, language linter rules: PYTHON_ISORT_LINTER_RULES[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Initializing LANGUAGE_LINTER_RULES value to an empty string...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   PYTHON_ISORT language rule file (.isort.cfg) has .isort name and cfg extension[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Initializing SECONDARY_FILE_NAME and SECONDARY_LANGUAGE_FILE_PATH...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Checking if the user-provided:[.isort.cfg] and exists at:[/github/workspace/.github/linters/.isort.cfg][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.isort.cfg].[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.isort.cfg], nor the file:[], using Default rules at:[/action/lib/.automation/.isort.cfg][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Language rules file variable (PYTHON_ISORT_LINTER_RULES) value is:[/action/lib/.automation/.isort.cfg][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> PYTHON_ISORT_LINTER_RULES rules file (/action/lib/.automation/.isort.cfg) exists.[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Loading rules for PYTHON_MYPY...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Getting linter rules for PYTHON_MYPY...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Variable names for language file name: PYTHON_MYPY_FILE_NAME, language linter rules: PYTHON_MYPY_LINTER_RULES[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Initializing LANGUAGE_LINTER_RULES value to an empty string...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   PYTHON_MYPY language rule file (.mypy.ini) has .mypy name and ini extension[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Initializing SECONDARY_FILE_NAME and SECONDARY_LANGUAGE_FILE_PATH...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Checking if the user-provided:[.mypy.ini] and exists at:[/github/workspace/.github/linters/.mypy.ini][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.mypy.ini].[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.mypy.ini], nor the file:[], using Default rules at:[/action/lib/.automation/.mypy.ini][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Language rules file variable (PYTHON_MYPY_LINTER_RULES) value is:[/action/lib/.automation/.mypy.ini][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> PYTHON_MYPY_LINTER_RULES rules file (/action/lib/.automation/.mypy.ini) exists.[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Loading rules for R...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Getting linter rules for R...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Variable names for language file name: R_FILE_NAME, language linter rules: R_LINTER_RULES[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Initializing LANGUAGE_LINTER_RULES value to an empty string...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   R language rule file (.lintr) has .lintr name and lintr extension[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Initializing SECONDARY_FILE_NAME and SECONDARY_LANGUAGE_FILE_PATH...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Checking if the user-provided:[.lintr] and exists at:[/github/workspace/.github/linters/.lintr][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.lintr].[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.lintr], nor the file:[], using Default rules at:[/action/lib/.automation/.lintr][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Language rules file variable (R_LINTER_RULES) value is:[/action/lib/.automation/.lintr][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> R_LINTER_RULES rules file (/action/lib/.automation/.lintr) exists.[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Loading rules for RAKU...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Getting linter rules for RAKU...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Variable names for language file name: RAKU_FILE_NAME, language linter rules: RAKU_LINTER_RULES[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   RAKU_FILE_NAME is not set. Skipping loading rules for RAKU...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Loading rules for RUBY...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Getting linter rules for RUBY...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Variable names for language file name: RUBY_FILE_NAME, language linter rules: RUBY_LINTER_RULES[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Initializing LANGUAGE_LINTER_RULES value to an empty string...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   RUBY language rule file (.ruby-lint.yml) has .ruby-lint name and yml extension[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Initializing SECONDARY_FILE_NAME and SECONDARY_LANGUAGE_FILE_PATH...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Checking if the user-provided:[.ruby-lint.yml] and exists at:[/github/workspace/.github/linters/.ruby-lint.yml][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.ruby-lint.yml].[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   RUBY language rule file has a secondary rules file name to check (.ruby-lint.yaml). Path:[/github/workspace/.github/linters/.ruby-lint.yaml][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.ruby-lint.yml], nor the file:[/github/workspace/.github/linters/.ruby-lint.yaml], using Default rules at:[/action/lib/.automation/.ruby-lint.yml][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Language rules file variable (RUBY_LINTER_RULES) value is:[/action/lib/.automation/.ruby-lint.yml][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> RUBY_LINTER_RULES rules file (/action/lib/.automation/.ruby-lint.yml) exists.[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Loading rules for RUST_2015...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Getting linter rules for RUST_2015...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Variable names for language file name: RUST_2015_FILE_NAME, language linter rules: RUST_2015_LINTER_RULES[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   RUST_2015_FILE_NAME is not set. Skipping loading rules for RUST_2015...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Loading rules for RUST_2018...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Getting linter rules for RUST_2018...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Variable names for language file name: RUST_2018_FILE_NAME, language linter rules: RUST_2018_LINTER_RULES[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   RUST_2018_FILE_NAME is not set. Skipping loading rules for RUST_2018...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Loading rules for RUST_2021...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Getting linter rules for RUST_2021...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Variable names for language file name: RUST_2021_FILE_NAME, language linter rules: RUST_2021_LINTER_RULES[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   RUST_2021_FILE_NAME is not set. Skipping loading rules for RUST_2021...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Loading rules for RUST_CLIPPY...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Getting linter rules for RUST_CLIPPY...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Variable names for language file name: RUST_CLIPPY_FILE_NAME, language linter rules: RUST_CLIPPY_LINTER_RULES[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   RUST_CLIPPY_FILE_NAME is not set. Skipping loading rules for RUST_CLIPPY...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Loading rules for SCALAFMT...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Getting linter rules for SCALAFMT...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Variable names for language file name: SCALAFMT_FILE_NAME, language linter rules: SCALAFMT_LINTER_RULES[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Initializing LANGUAGE_LINTER_RULES value to an empty string...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   SCALAFMT language rule file (.scalafmt.conf) has .scalafmt name and conf extension[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Initializing SECONDARY_FILE_NAME and SECONDARY_LANGUAGE_FILE_PATH...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Checking if the user-provided:[.scalafmt.conf] and exists at:[/github/workspace/.github/linters/.scalafmt.conf][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.scalafmt.conf].[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.scalafmt.conf], nor the file:[], using Default rules at:[/action/lib/.automation/.scalafmt.conf][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Language rules file variable (SCALAFMT_LINTER_RULES) value is:[/action/lib/.automation/.scalafmt.conf][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> SCALAFMT_LINTER_RULES rules file (/action/lib/.automation/.scalafmt.conf) exists.[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Loading rules for SHELL_SHFMT...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Getting linter rules for SHELL_SHFMT...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Variable names for language file name: SHELL_SHFMT_FILE_NAME, language linter rules: SHELL_SHFMT_LINTER_RULES[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   SHELL_SHFMT_FILE_NAME is not set. Skipping loading rules for SHELL_SHFMT...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Loading rules for SNAKEMAKE_LINT...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Getting linter rules for SNAKEMAKE_LINT...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Variable names for language file name: SNAKEMAKE_LINT_FILE_NAME, language linter rules: SNAKEMAKE_LINT_LINTER_RULES[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   SNAKEMAKE_LINT_FILE_NAME is not set. Skipping loading rules for SNAKEMAKE_LINT...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Loading rules for SNAKEMAKE_SNAKEFMT...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Getting linter rules for SNAKEMAKE_SNAKEFMT...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Variable names for language file name: SNAKEMAKE_SNAKEFMT_FILE_NAME, language linter rules: SNAKEMAKE_SNAKEFMT_LINTER_RULES[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Initializing LANGUAGE_LINTER_RULES value to an empty string...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   SNAKEMAKE_SNAKEFMT language rule file (.snakefmt.toml) has .snakefmt name and toml extension[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Initializing SECONDARY_FILE_NAME and SECONDARY_LANGUAGE_FILE_PATH...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Checking if the user-provided:[.snakefmt.toml] and exists at:[/github/workspace/.github/linters/.snakefmt.toml][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.snakefmt.toml].[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.snakefmt.toml], nor the file:[], using Default rules at:[/action/lib/.automation/.snakefmt.toml][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Language rules file variable (SNAKEMAKE_SNAKEFMT_LINTER_RULES) value is:[/action/lib/.automation/.snakefmt.toml][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> SNAKEMAKE_SNAKEFMT_LINTER_RULES rules file (/action/lib/.automation/.snakefmt.toml) exists.[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Loading rules for STATES...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Getting linter rules for STATES...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Variable names for language file name: STATES_FILE_NAME, language linter rules: STATES_LINTER_RULES[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   STATES_FILE_NAME is not set. Skipping loading rules for STATES...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Loading rules for SQL...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Getting linter rules for SQL...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Variable names for language file name: SQL_FILE_NAME, language linter rules: SQL_LINTER_RULES[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Initializing LANGUAGE_LINTER_RULES value to an empty string...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   SQL language rule file (.sql-config.json) has .sql-config name and json extension[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Initializing SECONDARY_FILE_NAME and SECONDARY_LANGUAGE_FILE_PATH...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Checking if the user-provided:[.sql-config.json] and exists at:[/github/workspace/.github/linters/.sql-config.json][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.sql-config.json].[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.sql-config.json], nor the file:[], using Default rules at:[/action/lib/.automation/.sql-config.json][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Language rules file variable (SQL_LINTER_RULES) value is:[/action/lib/.automation/.sql-config.json][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> SQL_LINTER_RULES rules file (/action/lib/.automation/.sql-config.json) exists.[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Loading rules for SQLFLUFF...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Getting linter rules for SQLFLUFF...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Variable names for language file name: SQLFLUFF_FILE_NAME, language linter rules: SQLFLUFF_LINTER_RULES[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Initializing LANGUAGE_LINTER_RULES value to an empty string...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   SQLFLUFF language rule file (/.sqlfluff) has .sqlfluff name and sqlfluff extension[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Initializing SECONDARY_FILE_NAME and SECONDARY_LANGUAGE_FILE_PATH...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Checking if the user-provided:[/.sqlfluff] and exists at:[/github/workspace/.github/linters//.sqlfluff][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters//.sqlfluff].[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters//.sqlfluff], nor the file:[], using Default rules at:[/action/lib/.automation//.sqlfluff][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Language rules file variable (SQLFLUFF_LINTER_RULES) value is:[/action/lib/.automation//.sqlfluff][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> SQLFLUFF_LINTER_RULES rules file (/action/lib/.automation//.sqlfluff) exists.[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Loading rules for TEKTON...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Getting linter rules for TEKTON...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Variable names for language file name: TEKTON_FILE_NAME, language linter rules: TEKTON_LINTER_RULES[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   TEKTON_FILE_NAME is not set. Skipping loading rules for TEKTON...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Loading rules for TERRAFORM_TFLINT...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Getting linter rules for TERRAFORM_TFLINT...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Variable names for language file name: TERRAFORM_TFLINT_FILE_NAME, language linter rules: TERRAFORM_TFLINT_LINTER_RULES[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Initializing LANGUAGE_LINTER_RULES value to an empty string...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   TERRAFORM_TFLINT language rule file (.tflint.hcl) has .tflint name and hcl extension[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Initializing SECONDARY_FILE_NAME and SECONDARY_LANGUAGE_FILE_PATH...[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m   Checking if the user-provided:[.tflint.hcl] and exists at:[/github/workspace/.github/linters/.tflint.hcl][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.tflint.hcl].[0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.tflint.hcl], nor the file:[], using Default rules at:[/action/lib/.automation/.tflint.hcl][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> Language rules file variable (TERRAFORM_TFLINT_LINTER_RULES) value is:[/action/lib/.automation/.tflint.hcl][0m
[0m2025-06-16 21:21:55 [0;34m[DEBUG][0m     -> TERRAFORM_TFLINT_LINTER_RULES rules file (/action/lib/.automation/.tflint.hcl) exists.[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Loading rules for TERRAFORM_TERRASCAN...[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Getting linter rules for TERRAFORM_TERRASCAN...[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Variable names for language file name: TERRAFORM_TERRASCAN_FILE_NAME, language linter rules: TERRAFORM_TERRASCAN_LINTER_RULES[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Initializing LANGUAGE_LINTER_RULES value to an empty string...[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   TERRAFORM_TERRASCAN language rule file (terrascan.toml) has terrascan name and toml extension[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Initializing SECONDARY_FILE_NAME and SECONDARY_LANGUAGE_FILE_PATH...[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Checking if the user-provided:[terrascan.toml] and exists at:[/github/workspace/.github/linters/terrascan.toml][0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/terrascan.toml].[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/terrascan.toml], nor the file:[], using Default rules at:[/action/lib/.automation/terrascan.toml][0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m     -> Language rules file variable (TERRAFORM_TERRASCAN_LINTER_RULES) value is:[/action/lib/.automation/terrascan.toml][0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m     -> TERRAFORM_TERRASCAN_LINTER_RULES rules file (/action/lib/.automation/terrascan.toml) exists.[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Loading rules for TERRAGRUNT...[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Getting linter rules for TERRAGRUNT...[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Variable names for language file name: TERRAGRUNT_FILE_NAME, language linter rules: TERRAGRUNT_LINTER_RULES[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   TERRAGRUNT_FILE_NAME is not set. Skipping loading rules for TERRAGRUNT...[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Loading rules for TSX...[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Getting linter rules for TSX...[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Variable names for language file name: TSX_FILE_NAME, language linter rules: TSX_LINTER_RULES[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Initializing LANGUAGE_LINTER_RULES value to an empty string...[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   TSX language rule file (.eslintrc.yml) has .eslintrc name and yml extension[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Initializing SECONDARY_FILE_NAME and SECONDARY_LANGUAGE_FILE_PATH...[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Checking if the user-provided:[.eslintrc.yml] and exists at:[/github/workspace/.github/linters/.eslintrc.yml][0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.eslintrc.yml].[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   TSX language rule file has a secondary rules file name to check (.eslintrc.yaml). Path:[/github/workspace/.github/linters/.eslintrc.yaml][0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.eslintrc.yml], nor the file:[/github/workspace/.github/linters/.eslintrc.yaml], using Default rules at:[/action/lib/.automation/.eslintrc.yml][0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m     -> Language rules file variable (TSX_LINTER_RULES) value is:[/action/lib/.automation/.eslintrc.yml][0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m     -> TSX_LINTER_RULES rules file (/action/lib/.automation/.eslintrc.yml) exists.[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Loading rules for TYPESCRIPT_ES...[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Getting linter rules for TYPESCRIPT_ES...[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Variable names for language file name: TYPESCRIPT_ES_FILE_NAME, language linter rules: TYPESCRIPT_ES_LINTER_RULES[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Initializing LANGUAGE_LINTER_RULES value to an empty string...[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   TYPESCRIPT_ES language rule file (.eslintrc.yml) has .eslintrc name and yml extension[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Initializing SECONDARY_FILE_NAME and SECONDARY_LANGUAGE_FILE_PATH...[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Checking if the user-provided:[.eslintrc.yml] and exists at:[/github/workspace/.github/linters/.eslintrc.yml][0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.eslintrc.yml].[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   TYPESCRIPT_ES language rule file has a secondary rules file name to check (.eslintrc.yaml). Path:[/github/workspace/.github/linters/.eslintrc.yaml][0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.eslintrc.yml], nor the file:[/github/workspace/.github/linters/.eslintrc.yaml], using Default rules at:[/action/lib/.automation/.eslintrc.yml][0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m     -> Language rules file variable (TYPESCRIPT_ES_LINTER_RULES) value is:[/action/lib/.automation/.eslintrc.yml][0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m     -> TYPESCRIPT_ES_LINTER_RULES rules file (/action/lib/.automation/.eslintrc.yml) exists.[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Loading rules for TYPESCRIPT_STANDARD...[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Getting linter rules for TYPESCRIPT_STANDARD...[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Variable names for language file name: TYPESCRIPT_STANDARD_FILE_NAME, language linter rules: TYPESCRIPT_STANDARD_LINTER_RULES[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Initializing LANGUAGE_LINTER_RULES value to an empty string...[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   TYPESCRIPT_STANDARD language rule file (.eslintrc.yml) has .eslintrc name and yml extension[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Initializing SECONDARY_FILE_NAME and SECONDARY_LANGUAGE_FILE_PATH...[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Checking if the user-provided:[.eslintrc.yml] and exists at:[/github/workspace/.github/linters/.eslintrc.yml][0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.eslintrc.yml].[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   TYPESCRIPT_STANDARD language rule file has a secondary rules file name to check (.eslintrc.yaml). Path:[/github/workspace/.github/linters/.eslintrc.yaml][0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.eslintrc.yml], nor the file:[/github/workspace/.github/linters/.eslintrc.yaml], using Default rules at:[/action/lib/.automation/.eslintrc.yml][0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m     -> Language rules file variable (TYPESCRIPT_STANDARD_LINTER_RULES) value is:[/action/lib/.automation/.eslintrc.yml][0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m     -> TYPESCRIPT_STANDARD_LINTER_RULES rules file (/action/lib/.automation/.eslintrc.yml) exists.[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Loading rules for XML...[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Getting linter rules for XML...[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Variable names for language file name: XML_FILE_NAME, language linter rules: XML_LINTER_RULES[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   XML_FILE_NAME is not set. Skipping loading rules for XML...[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Loading rules for YAML...[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Getting linter rules for YAML...[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Variable names for language file name: YAML_FILE_NAME, language linter rules: YAML_LINTER_RULES[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Initializing LANGUAGE_LINTER_RULES value to an empty string...[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   YAML language rule file (.yaml-lint.yml) has .yaml-lint name and yml extension[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Initializing SECONDARY_FILE_NAME and SECONDARY_LANGUAGE_FILE_PATH...[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Checking if the user-provided:[.yaml-lint.yml] and exists at:[/github/workspace/.github/linters/.yaml-lint.yml][0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.yaml-lint.yml].[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   YAML language rule file has a secondary rules file name to check (.yaml-lint.yaml). Path:[/github/workspace/.github/linters/.yaml-lint.yaml][0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/.yaml-lint.yml], nor the file:[/github/workspace/.github/linters/.yaml-lint.yaml], using Default rules at:[/action/lib/.automation/.yaml-lint.yml][0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m     -> Language rules file variable (YAML_LINTER_RULES) value is:[/action/lib/.automation/.yaml-lint.yml][0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m     -> YAML_LINTER_RULES rules file (/action/lib/.automation/.yaml-lint.yml) exists.[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Loading rules for TYPESCRIPT_STANDARD_TSCONFIG...[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Getting linter rules for TYPESCRIPT_STANDARD_TSCONFIG...[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Default rules location: /action/lib/.automation...[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Variable names for language file name: TYPESCRIPT_STANDARD_TSCONFIG_FILE_NAME, language linter rules: TYPESCRIPT_STANDARD_TSCONFIG_LINTER_RULES[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Initializing LANGUAGE_LINTER_RULES value to an empty string...[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   TYPESCRIPT_STANDARD_TSCONFIG language rule file (tsconfig.json) has tsconfig name and json extension[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Initializing SECONDARY_FILE_NAME and SECONDARY_LANGUAGE_FILE_PATH...[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Checking if the user-provided:[tsconfig.json] and exists at:[/github/workspace/.github/linters/tsconfig.json][0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/tsconfig.json].[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m     -> Codebase does NOT have file:[/github/workspace/.github/linters/tsconfig.json], nor the file:[], using Default rules at:[/action/lib/.automation/tsconfig.json][0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m     -> Language rules file variable (TYPESCRIPT_STANDARD_TSCONFIG_LINTER_RULES) value is:[/action/lib/.automation/tsconfig.json][0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m     -> TYPESCRIPT_STANDARD_TSCONFIG_LINTER_RULES rules file (/action/lib/.automation/tsconfig.json) exists.[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   ENV:[browser][0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   ENV:[es6][0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   ENV:[jest][0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   ENV:[browser][0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   ENV:[es6][0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   ENV:[jest][0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   --- Linter commands ---[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   -----------------------[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: LATEX, command: chktex -q -l /action/lib/.automation/.chktexrc[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: RUBY, command: rubocop -c /action/lib/.automation/.ruby-lint.yml --force-exclusion --ignore-unrecognized-cops[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: PERL, command: perlcritic[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: XML, command: xmllint[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: ANSIBLE, command: ansible-lint -vv -c /action/lib/.automation/.ansible-lint.yml[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: JAVASCRIPT_ES, command: eslint --no-eslintrc -c /action/lib/.automation/.eslintrc.yml[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: MARKDOWN, command: markdownlint -c /action/lib/.automation/.markdown-lint.yml[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: SNAKEMAKE_SNAKEFMT, command: snakefmt --config /action/lib/.automation/.snakefmt.toml --check --compact-diff[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: CPP, command: cpplint[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: EDITORCONFIG, command: editorconfig-checker -config /action/lib/.automation/.ecrc[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: GITLEAKS, command: gitleaks detect --no-git -c /action/lib/.automation/.gitleaks.toml -v -s[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: PHP_PHPSTAN, command: phpstan analyse --no-progress --no-ansi --memory-limit 1G -c /action/lib/.automation/phpstan.neon[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: ENV, command: dotenv-linter[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: STATES, command: asl-validator --json-path[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: GITHUB_ACTIONS, command: actionlint -config-file /action/lib/.automation/actionlint.yml[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: TEKTON, command: tekton-lint[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: TERRAFORM_TERRASCAN, command: terrascan scan -i terraform -t all -c /action/lib/.automation/terrascan.toml -f[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: RUST_CLIPPY, command: clippy[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: R, command: lintr[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: RUST_2021, command: rustfmt --check --edition 2021[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: BASH, command: shellcheck --color --external-sources[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: JSCPD, command: jscpd --config /action/lib/.automation/.jscpd.json[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: PYTHON_BLACK, command: black --config /action/lib/.automation/.python-black --diff --check[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: JAVASCRIPT_PRETTIER, command: prettier --check[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: PHP_BUILTIN, command: php -l -c /action/lib/.automation/php.ini[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: NATURAL_LANGUAGE, command: textlint -c /action/lib/.automation/.textlintrc[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: GROOVY, command: npm-groovy-lint -c /action/lib/.automation/.groovylintrc.json --failon warning --no-insight[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: GO, command: golangci-lint run --fast -c /action/lib/.automation/.golangci.yml[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: GHERKIN, command: gherkin-lint -c /action/lib/.automation/.gherkin-lintrc[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: JSX, command: eslint --no-eslintrc -c /action/lib/.automation/.eslintrc.yml[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: SCALAFMT, command: scalafmt --config /action/lib/.automation/.scalafmt.conf --test[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: CSS, command: stylelint --config /action/lib/.automation/.stylelintrc.json[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: SQLFLUFF, command: sqlfluff lint --config /action/lib/.automation//.sqlfluff[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: BASH_EXEC, command: bash-exec[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: GOOGLE_JAVA_FORMAT, command: java -jar /usr/bin/google-java-format[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: PHP_PHPCS, command: phpcs --standard=/action/lib/.automation/phpcs.xml[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: TERRAGRUNT, command: terragrunt hclfmt --terragrunt-check --terragrunt-log-level error --terragrunt-hclfmt-file[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: PHP_PSALM, command: psalm --config=/action/lib/.automation/psalm.xml[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: PYTHON_PYLINT, command: pylint --rcfile /action/lib/.automation/.python-lint[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: SHELL_SHFMT, command: shfmt -d[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: SNAKEMAKE_LINT, command: snakemake --lint -s[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: ARM, command: Import-Module /usr/lib/microsoft/arm-ttk-master/arm-ttk/arm-ttk.psd1 ; ${config} = $(Import-PowerShellDataFile -Path /action/lib/.automation/.arm-ttk.psd1) ; Test-AzTemplate @config -TemplatePath[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: POWERSHELL, command: Invoke-ScriptAnalyzer -EnableExit -Settings /action/lib/.automation/.powershell-psscriptanalyzer.psd1 -Path[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: PYTHON_MYPY, command: mypy --config-file /action/lib/.automation/.mypy.ini --install-types --non-interactive[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: JSONC, command: eslint --no-eslintrc -c /action/lib/.automation/.eslintrc.yml --ext .json5,.jsonc[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: COFFEESCRIPT, command: coffeelint -f /action/lib/.automation/.coffee-lint.json[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: TERRAFORM_TFLINT, command: tflint -c /action/lib/.automation/.tflint.hcl[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: CLOUDFORMATION, command: cfn-lint --config-file /action/lib/.automation/.cfnlintrc.yml[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: PYTHON_FLAKE8, command: flake8 --config=/action/lib/.automation/.flake8[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: OPENAPI, command: spectral lint -r /action/lib/.automation/.openapirc.yml -D[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: CLOJURE, command: clj-kondo --config /action/lib/.automation/.clj-kondo/config.edn --lint[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: TSX, command: eslint --no-eslintrc -c /action/lib/.automation/.eslintrc.yml[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: TYPESCRIPT_STANDARD, command: ts-standard --parser @typescript-eslint/parser --plugin @typescript-eslint/eslint-plugin --project /action/lib/.automation/tsconfig.json --env browser --env es6 --env jest[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: TYPESCRIPT_ES, command: eslint --no-eslintrc -c /action/lib/.automation/.eslintrc.yml[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: PROTOBUF, command: protolint lint --config_path /action/lib/.automation/.protolintrc.yml[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: RAKU, command: raku[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: TYPESCRIPT_PRETTIER, command: prettier --check[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: DOCKERFILE_HADOLINT, command: hadolint -c /action/lib/.automation/.hadolint.yaml[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: JAVA, command: java -jar /usr/bin/checkstyle -c /action/lib/.automation/sun_checks.xml[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: CLANG_FORMAT, command: clang-format --Werror --dry-run[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: KOTLIN, command: ktlint[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: YAML, command: yamllint -c /action/lib/.automation/.yaml-lint.yml -f parsable[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: DART, command: dartanalyzer --fatal-infos --fatal-warnings --options /action/lib/.automation/analysis_options.yml[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: PYTHON_ISORT, command: isort --check --diff --sp /action/lib/.automation/.isort.cfg[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: CSHARP, command: dotnet-format --folder --check --exclude / --include[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: JSON, command: eslint --no-eslintrc -c /action/lib/.automation/.eslintrc.yml --ext .json[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: KOTLIN_ANDROID, command: ktlint --android[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: RUST_2018, command: rustfmt --check --edition 2018[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: HTML, command: htmlhint --config /action/lib/.automation/.htmlhintrc[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: RUST_2015, command: rustfmt --check --edition 2015[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: SQL, command: sql-lint --config /action/lib/.automation/.sql-config.json[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: KUBERNETES_KUBEVAL, command: kubeval --strict[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: LUA, command: luacheck --config /action/lib/.automation/.luacheckrc[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Linter key: JAVASCRIPT_STANDARD, command: standard --env browser --env es6 --env jest[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   ---------------------------------------------[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   User did not provide a SSL secret, moving on...[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Building file list...[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   VALIDATE_ALL_CODEBASE: true[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   TEST_CASE_RUN: false[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   ANSIBLE_DIRECTORY: /github/workspace/ansible[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   IGNORE_GITIGNORED_FILES: false[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   IGNORE_GENERATED_FILES: false[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   USE_FIND_ALGORITHM: false[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   VALIDATE_JSCPD_ALL_CODEBASE: false[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Running git config for safe dirs[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   ----------------------------------------------[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   Populating the file list with:[git -C "/github/workspace" ls-tree -r --name-only HEAD | xargs -I % sh -c "echo /github/workspace/%"][0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   RAW_FILE_ARRAY contents: /github/workspace/.gitattributes /github/workspace/.github/ISSUE_TEMPLATE/issue_template.yml /github/workspace/.github/actions/secret-scanner/excluded_files.patterns /github/workspace/.github/actions/secret-scanner/excluded_lines.patterns /github/workspace/.github/actions/secret-scanner/excluded_secrets.patterns /github/workspace/.github/workflows/cicd.yml /github/workspace/.github/workflows/detect-new-secrets.yml /github/workspace/.github/workflows/gitleaks.yml /github/workspace/.github/workflows/snyk-security.yml /github/workspace/.github/workflows/superlinter.yml /github/workspace/.github/workflows/superpipeline.yml /github/workspace/.gitignore /github/workspace/.gitleaks.toml /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java /github/workspace/.mvn/wrapper/maven-wrapper.jar /github/workspace/.mvn/wrapper/maven-wrapper.properties /github/workspace/.secrets.baseline /github/workspace/Deliverables/ASVSResults.png /github/workspace/Deliverables/DSOFT.pdf /github/workspace/Deliverables/DSOFTPart3.md /github/workspace/Deliverables/v4-ASVS-checklist-en.xlsx /github/workspace/Dockerfile /github/workspace/LICENSE /github/workspace/Project.pdf /github/workspace/README.md /github/workspace/docker-compose.yml /github/workspace/init.sql /github/workspace/lombok.config /github/workspace/mvnw /github/workspace/mvnw.cmd /github/workspace/pom.xml /github/workspace/securityReports/dast-reports/report-DAST.html /github/workspace/securityReports/dast-reports/report-DAST.json /github/workspace/securityReports/integration-test-reports/TEST-com.gmail.merikbest2015.ecommerce.controller.AdminControllerTest.xml /github/workspace/securityReports/integration-test-reports/TEST-com.gmail.merikbest2015.ecommerce.controller.AuthenticationControllerTest.xml /github/workspace/securityReports/integration-test-reports/TEST-com.gmail.merikbest2015.ecommerce.controller.OrderControllerTest.xml /github/workspace/securityReports/integration-test-reports/TEST-com.gmail.merikbest2015.ecommerce.controller.PerfumeControllerTest.xml /github/workspace/securityReports/integration-test-reports/TEST-com.gmail.merikbest2015.ecommerce.controller.RegistrationControllerTest.xml /github/workspace/securityReports/integration-test-reports/TEST-com.gmail.merikbest2015.ecommerce.controller.ReviewControllerTest.xml /github/workspace/securityReports/integration-test-reports/TEST-com.gmail.merikbest2015.ecommerce.controller.UserControllerTest.xml /github/workspace/securityReports/integration-test-reports/TEST-com.gmail.merikbest2015.ecommerce.mapper.OrderMapperTest.xml /github/workspace/securityReports/integration-test-reports/TEST-com.gmail.merikbest2015.ecommerce.mapper.PerfumeMapperTest.xml /github/workspace/securityReports/integration-test-reports/TEST-com.gmail.merikbest2015.ecommerce.mapper.UserMapperTest.xml /github/workspace/securityReports/integration-test-reports/TEST-com.gmail.merikbest2015.ecommerce.service.Impl.AuthenticationServiceImplTest.xml /github/workspace/securityReports/integration-test-reports/TEST-com.gmail.merikbest2015.ecommerce.service.Impl.OrderServiceImplTest.xml /github/workspace/securityReports/integration-test-reports/TEST-com.gmail.merikbest2015.ecommerce.service.Impl.PerfumeServiceImplTest.xml /github/workspace/securityReports/integration-test-reports/TEST-com.gmail.merikbest2015.ecommerce.service.Impl.ReviewServiceImplTest.xml /github/workspace/securityReports/integration-test-reports/TEST-com.gmail.merikbest2015.ecommerce.service.Impl.UserServiceImlTest.xml /github/workspace/securityReports/integration-test-reports/com.gmail.merikbest2015.ecommerce.controller.AdminControllerTest.txt /github/workspace/securityReports/integration-test-reports/com.gmail.merikbest2015.ecommerce.controller.AuthenticationControllerTest.txt /github/workspace/securityReports/integration-test-reports/com.gmail.merikbest2015.ecommerce.controller.OrderControllerTest.txt /github/workspace/securityReports/integration-test-reports/com.gmail.merikbest2015.ecommerce.controller.PerfumeControllerTest.txt /github/workspace/securityReports/integration-test-reports/com.gmail.merikbest2015.ecommerce.controller.RegistrationControllerTest.txt /github/workspace/securityReports/integration-test-reports/com.gmail.merikbest2015.ecommerce.controller.ReviewControllerTest.txt /github/workspace/securityReports/integration-test-reports/com.gmail.merikbest2015.ecommerce.controller.UserControllerTest.txt /github/workspace/securityReports/integration-test-reports/com.gmail.merikbest2015.ecommerce.mapper.OrderMapperTest.txt /github/workspace/securityReports/integration-test-reports/com.gmail.merikbest2015.ecommerce.mapper.PerfumeMapperTest.txt /github/workspace/securityReports/integration-test-reports/com.gmail.merikbest2015.ecommerce.mapper.UserMapperTest.txt /github/workspace/securityReports/integration-test-reports/com.gmail.merikbest2015.ecommerce.service.Impl.AuthenticationServiceImplTest.txt /github/workspace/securityReports/integration-test-reports/com.gmail.merikbest2015.ecommerce.service.Impl.OrderServiceImplTest.txt /github/workspace/securityReports/integration-test-reports/com.gmail.merikbest2015.ecommerce.service.Impl.PerfumeServiceImplTest.txt /github/workspace/securityReports/integration-test-reports/com.gmail.merikbest2015.ecommerce.service.Impl.ReviewServiceImplTest.txt /github/workspace/securityReports/integration-test-reports/com.gmail.merikbest2015.ecommerce.service.Impl.UserServiceImlTest.txt /github/workspace/securityReports/integration-test-reports/failsafe-summary.xml /github/workspace/securityReports/linter-reports/super-linter.log /github/workspace/securityReports/placeholder /github/workspace/securityReports/report-SAST.json /github/workspace/securityReports/report-SCA.json /github/workspace/securityReports/report-gitleaks.json /github/workspace/securityReports/report-secret-scan.json /github/workspace/securityReports/snyk-SAST.json /github/workspace/securityReports/snyk-SAST.sarif /github/workspace/securityReports/snyk-SCA.json /github/workspace/securityReports/snyk-SCA.sarif /github/workspace/securityReports/unit-test-reports/TEST-com.gmail.merikbest2015.ecommerce.domain.OrderItemTest.xml /github/workspace/securityReports/unit-test-reports/TEST-com.gmail.merikbest2015.ecommerce.domain.OrderTest.xml /github/workspace/securityReports/unit-test-reports/TEST-com.gmail.merikbest2015.ecommerce.domain.PerfumeTest.xml /github/workspace/securityReports/unit-test-reports/TEST-com.gmail.merikbest2015.ecommerce.domain.ReviewTest.xml /github/workspace/securityReports/unit-test-reports/TEST-com.gmail.merikbest2015.ecommerce.domain.UserTest.xml /github/workspace/securityReports/unit-test-reports/com.gmail.merikbest2015.ecommerce.domain.OrderItemTest.txt /github/workspace/securityReports/unit-test-reports/com.gmail.merikbest2015.ecommerce.domain.OrderTest.txt /github/workspace/securityReports/unit-test-reports/com.gmail.merikbest2015.ecommerce.domain.PerfumeTest.txt /github/workspace/securityReports/unit-test-reports/com.gmail.merikbest2015.ecommerce.domain.ReviewTest.txt /github/workspace/securityReports/unit-test-reports/com.gmail.merikbest2015.ecommerce.domain.UserTest.txt /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/EcommerceApplication.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect/ControllerAspect.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/MvcConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/SwaggerConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSocketConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/GraphQLRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/HeaderResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/PasswordResetRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderItemResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/FullPerfumeResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeSearchRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/SearchTypeRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/BaseUserResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UpdateUserRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UserResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/AuthProvider.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/Role.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/SearchPerfume.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiRequestException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/CaptchaException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/EmailException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/InputFieldException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordConfirmationException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderItemRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/ReviewRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/UserRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtAuthenticationException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtConfigurer.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserDetailsServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/CustomOAuth2UserService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/FacebookOAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GithubOAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GoogleOAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2SuccessHandler.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserFactory.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/AuthenticationService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/OrderService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/ReviewService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/UserService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java /github/workspace/src/main/resources/application.properties /github/workspace/src/main/resources/db/migration/V1__Init_BD.sql /github/workspace/src/main/resources/db/migration/V2__Add_users.sql /github/workspace/src/main/resources/db/migration/V3__Add_products.sql /github/workspace/src/main/resources/db/migration/V4__Add_orders.sql /github/workspace/src/main/resources/graphql/schemas.graphql /github/workspace/src/main/resources/mail-templates/order-template.html /github/workspace/src/main/resources/mail-templates/password-reset-template.html /github/workspace/src/main/resources/mail-templates/registration-template.html /github/workspace/src/main/resources/static/swagger-api/swagger.yaml /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/EcommerceApplicationTests.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapperTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapperTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java /github/workspace/src/test/resources/application-test.properties /github/workspace/src/test/resources/empty.jpg /github/workspace/src/test/resources/sql/create-orders-after.sql /github/workspace/src/test/resources/sql/create-orders-before.sql /github/workspace/src/test/resources/sql/create-perfumes-after.sql /github/workspace/src/test/resources/sql/create-perfumes-before.sql /github/workspace/src/test/resources/sql/create-user-after.sql /github/workspace/src/test/resources/sql/create-user-before.sql[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   ANSIBLE_DIRECTORY (/github/workspace/ansible) does NOT exist.[0m
[0m2025-06-16 21:21:56 [0;34m[INFO][0m   ---------------------------------[0m
[0m2025-06-16 21:21:56 [0;34m[INFO][0m   ------ File list to check: ------[0m
[0m2025-06-16 21:21:56 [0;34m[INFO][0m   ---------------------------------[0m
[0m2025-06-16 21:21:56 [0;34m[DEBUG][0m   File:[/github/workspace/.gitattributes], File_type:[gitattributes], Base_file:[.gitattributes][0m
[0m2025-06-16 21:21:56 [0;34m[TRACE][0m   File:[/github/workspace/.gitattributes], File extension:[gitattributes], File type: [/github/workspace/.gitattributes: ASCII text][0m
[0m2025-06-16 21:21:56 [0;34m[TRACE][0m   /github/workspace/.gitattributes is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   Failed to get filetype for:[/github/workspace/.gitattributes]![0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   File:[/github/workspace/.github/ISSUE_TEMPLATE/issue_template.yml], File_type:[yml], Base_file:[issue_template.yml][0m
[0m2025-06-16 21:21:57 [0;34m[TRACE][0m   File:[/github/workspace/.github/ISSUE_TEMPLATE/issue_template.yml], File extension:[yml], File type: [/github/workspace/.github/ISSUE_TEMPLATE/issue_template.yml: HTML document, ASCII text][0m
[0m2025-06-16 21:21:57 [0;34m[TRACE][0m   /github/workspace/.github/ISSUE_TEMPLATE/issue_template.yml is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   Checking if /github/workspace/.github/ISSUE_TEMPLATE/issue_template.yml is a GitHub Actions file...[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   /github/workspace/.github/ISSUE_TEMPLATE/issue_template.yml is NOT GitHub Actions file.[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   Checking if /github/workspace/.github/ISSUE_TEMPLATE/issue_template.yml is a Cloud Formation file...[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   Checking if /github/workspace/.github/ISSUE_TEMPLATE/issue_template.yml is an OpenAPI file...[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   /github/workspace/.github/ISSUE_TEMPLATE/issue_template.yml is NOT an OpenAPI descriptor[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   Checking if /github/workspace/.github/ISSUE_TEMPLATE/issue_template.yml is a Tekton file...[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   Checking if /github/workspace/.github/ISSUE_TEMPLATE/issue_template.yml is a Kubernetes descriptor...[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   /github/workspace/.github/ISSUE_TEMPLATE/issue_template.yml is NOT a Kubernetes descriptor[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   File:[/github/workspace/.github/actions/secret-scanner/excluded_files.patterns], File_type:[patterns], Base_file:[excluded_files.patterns][0m
[0m2025-06-16 21:21:57 [0;34m[TRACE][0m   File:[/github/workspace/.github/actions/secret-scanner/excluded_files.patterns], File extension:[patterns], File type: [/github/workspace/.github/actions/secret-scanner/excluded_files.patterns: empty][0m
[0m2025-06-16 21:21:57 [0;34m[TRACE][0m   /github/workspace/.github/actions/secret-scanner/excluded_files.patterns is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   Failed to get filetype for:[/github/workspace/.github/actions/secret-scanner/excluded_files.patterns]![0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   File:[/github/workspace/.github/actions/secret-scanner/excluded_lines.patterns], File_type:[patterns], Base_file:[excluded_lines.patterns][0m
[0m2025-06-16 21:21:57 [0;34m[TRACE][0m   File:[/github/workspace/.github/actions/secret-scanner/excluded_lines.patterns], File extension:[patterns], File type: [/github/workspace/.github/actions/secret-scanner/excluded_lines.patterns: empty][0m
[0m2025-06-16 21:21:57 [0;34m[TRACE][0m   /github/workspace/.github/actions/secret-scanner/excluded_lines.patterns is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   Failed to get filetype for:[/github/workspace/.github/actions/secret-scanner/excluded_lines.patterns]![0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   File:[/github/workspace/.github/actions/secret-scanner/excluded_secrets.patterns], File_type:[patterns], Base_file:[excluded_secrets.patterns][0m
[0m2025-06-16 21:21:57 [0;34m[TRACE][0m   File:[/github/workspace/.github/actions/secret-scanner/excluded_secrets.patterns], File extension:[patterns], File type: [/github/workspace/.github/actions/secret-scanner/excluded_secrets.patterns: empty][0m
[0m2025-06-16 21:21:57 [0;34m[TRACE][0m   /github/workspace/.github/actions/secret-scanner/excluded_secrets.patterns is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   Failed to get filetype for:[/github/workspace/.github/actions/secret-scanner/excluded_secrets.patterns]![0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   File:[/github/workspace/.github/workflows/cicd.yml], File_type:[yml], Base_file:[cicd.yml][0m
[0m2025-06-16 21:21:57 [0;34m[TRACE][0m   File:[/github/workspace/.github/workflows/cicd.yml], File extension:[yml], File type: [/github/workspace/.github/workflows/cicd.yml: ASCII text][0m
[0m2025-06-16 21:21:57 [0;34m[TRACE][0m   /github/workspace/.github/workflows/cicd.yml is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   Checking if /github/workspace/.github/workflows/cicd.yml is a GitHub Actions file...[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   /github/workspace/.github/workflows/cicd.yml is GitHub Actions file.[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   Checking if /github/workspace/.github/workflows/cicd.yml is a Cloud Formation file...[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   Checking if /github/workspace/.github/workflows/cicd.yml is an OpenAPI file...[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   /github/workspace/.github/workflows/cicd.yml is NOT an OpenAPI descriptor[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   Checking if /github/workspace/.github/workflows/cicd.yml is a Tekton file...[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   Checking if /github/workspace/.github/workflows/cicd.yml is a Kubernetes descriptor...[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   /github/workspace/.github/workflows/cicd.yml is NOT a Kubernetes descriptor[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   File:[/github/workspace/.github/workflows/detect-new-secrets.yml], File_type:[yml], Base_file:[detect-new-secrets.yml][0m
[0m2025-06-16 21:21:57 [0;34m[TRACE][0m   File:[/github/workspace/.github/workflows/detect-new-secrets.yml], File extension:[yml], File type: [/github/workspace/.github/workflows/detect-new-secrets.yml: ASCII text][0m
[0m2025-06-16 21:21:57 [0;34m[TRACE][0m   /github/workspace/.github/workflows/detect-new-secrets.yml is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   Checking if /github/workspace/.github/workflows/detect-new-secrets.yml is a GitHub Actions file...[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   /github/workspace/.github/workflows/detect-new-secrets.yml is GitHub Actions file.[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   Checking if /github/workspace/.github/workflows/detect-new-secrets.yml is a Cloud Formation file...[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   Checking if /github/workspace/.github/workflows/detect-new-secrets.yml is an OpenAPI file...[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   /github/workspace/.github/workflows/detect-new-secrets.yml is NOT an OpenAPI descriptor[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   Checking if /github/workspace/.github/workflows/detect-new-secrets.yml is a Tekton file...[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   Checking if /github/workspace/.github/workflows/detect-new-secrets.yml is a Kubernetes descriptor...[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   /github/workspace/.github/workflows/detect-new-secrets.yml is NOT a Kubernetes descriptor[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   File:[/github/workspace/.github/workflows/gitleaks.yml], File_type:[yml], Base_file:[gitleaks.yml][0m
[0m2025-06-16 21:21:57 [0;34m[TRACE][0m   File:[/github/workspace/.github/workflows/gitleaks.yml], File extension:[yml], File type: [/github/workspace/.github/workflows/gitleaks.yml: ASCII text][0m
[0m2025-06-16 21:21:57 [0;34m[TRACE][0m   /github/workspace/.github/workflows/gitleaks.yml is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   Checking if /github/workspace/.github/workflows/gitleaks.yml is a GitHub Actions file...[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   /github/workspace/.github/workflows/gitleaks.yml is GitHub Actions file.[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   Checking if /github/workspace/.github/workflows/gitleaks.yml is a Cloud Formation file...[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   Checking if /github/workspace/.github/workflows/gitleaks.yml is an OpenAPI file...[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   /github/workspace/.github/workflows/gitleaks.yml is NOT an OpenAPI descriptor[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   Checking if /github/workspace/.github/workflows/gitleaks.yml is a Tekton file...[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   Checking if /github/workspace/.github/workflows/gitleaks.yml is a Kubernetes descriptor...[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   /github/workspace/.github/workflows/gitleaks.yml is NOT a Kubernetes descriptor[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   File:[/github/workspace/.github/workflows/snyk-security.yml], File_type:[yml], Base_file:[snyk-security.yml][0m
[0m2025-06-16 21:21:57 [0;34m[TRACE][0m   File:[/github/workspace/.github/workflows/snyk-security.yml], File extension:[yml], File type: [/github/workspace/.github/workflows/snyk-security.yml: Unicode text, UTF-8 text][0m
[0m2025-06-16 21:21:57 [0;34m[TRACE][0m   /github/workspace/.github/workflows/snyk-security.yml is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   Checking if /github/workspace/.github/workflows/snyk-security.yml is a GitHub Actions file...[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   /github/workspace/.github/workflows/snyk-security.yml is GitHub Actions file.[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   Checking if /github/workspace/.github/workflows/snyk-security.yml is a Cloud Formation file...[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   Checking if /github/workspace/.github/workflows/snyk-security.yml is an OpenAPI file...[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   /github/workspace/.github/workflows/snyk-security.yml is NOT an OpenAPI descriptor[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   Checking if /github/workspace/.github/workflows/snyk-security.yml is a Tekton file...[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   Checking if /github/workspace/.github/workflows/snyk-security.yml is a Kubernetes descriptor...[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   /github/workspace/.github/workflows/snyk-security.yml is NOT a Kubernetes descriptor[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   File:[/github/workspace/.github/workflows/superlinter.yml], File_type:[yml], Base_file:[superlinter.yml][0m
[0m2025-06-16 21:21:57 [0;34m[TRACE][0m   File:[/github/workspace/.github/workflows/superlinter.yml], File extension:[yml], File type: [/github/workspace/.github/workflows/superlinter.yml: ASCII text][0m
[0m2025-06-16 21:21:57 [0;34m[TRACE][0m   /github/workspace/.github/workflows/superlinter.yml is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   Checking if /github/workspace/.github/workflows/superlinter.yml is a GitHub Actions file...[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   /github/workspace/.github/workflows/superlinter.yml is GitHub Actions file.[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   Checking if /github/workspace/.github/workflows/superlinter.yml is a Cloud Formation file...[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   Checking if /github/workspace/.github/workflows/superlinter.yml is an OpenAPI file...[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   /github/workspace/.github/workflows/superlinter.yml is NOT an OpenAPI descriptor[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   Checking if /github/workspace/.github/workflows/superlinter.yml is a Tekton file...[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   Checking if /github/workspace/.github/workflows/superlinter.yml is a Kubernetes descriptor...[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   /github/workspace/.github/workflows/superlinter.yml is NOT a Kubernetes descriptor[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   File:[/github/workspace/.github/workflows/superpipeline.yml], File_type:[yml], Base_file:[superpipeline.yml][0m
[0m2025-06-16 21:21:57 [0;34m[TRACE][0m   File:[/github/workspace/.github/workflows/superpipeline.yml], File extension:[yml], File type: [/github/workspace/.github/workflows/superpipeline.yml: Unicode text, UTF-8 text][0m
[0m2025-06-16 21:21:57 [0;34m[TRACE][0m   /github/workspace/.github/workflows/superpipeline.yml is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   Checking if /github/workspace/.github/workflows/superpipeline.yml is a GitHub Actions file...[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   /github/workspace/.github/workflows/superpipeline.yml is GitHub Actions file.[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   Checking if /github/workspace/.github/workflows/superpipeline.yml is a Cloud Formation file...[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   Checking if /github/workspace/.github/workflows/superpipeline.yml is an OpenAPI file...[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   /github/workspace/.github/workflows/superpipeline.yml is NOT an OpenAPI descriptor[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   Checking if /github/workspace/.github/workflows/superpipeline.yml is a Tekton file...[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   Checking if /github/workspace/.github/workflows/superpipeline.yml is a Kubernetes descriptor...[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   /github/workspace/.github/workflows/superpipeline.yml is NOT a Kubernetes descriptor[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   File:[/github/workspace/.gitignore], File_type:[gitignore], Base_file:[.gitignore][0m
[0m2025-06-16 21:21:57 [0;34m[TRACE][0m   File:[/github/workspace/.gitignore], File extension:[gitignore], File type: [/github/workspace/.gitignore: ASCII text][0m
[0m2025-06-16 21:21:57 [0;34m[TRACE][0m   /github/workspace/.gitignore is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   Failed to get filetype for:[/github/workspace/.gitignore]![0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   File:[/github/workspace/.gitleaks.toml], File_type:[toml], Base_file:[.gitleaks.toml][0m
[0m2025-06-16 21:21:57 [0;34m[TRACE][0m   File:[/github/workspace/.gitleaks.toml], File extension:[toml], File type: [/github/workspace/.gitleaks.toml: ASCII text][0m
[0m2025-06-16 21:21:57 [0;34m[TRACE][0m   /github/workspace/.gitleaks.toml is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   Failed to get filetype for:[/github/workspace/.gitleaks.toml]![0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   File:[/github/workspace/.mvn/wrapper/MavenWrapperDownloader.java], File_type:[java], Base_file:[mavenwrapperdownloader.java][0m
[0m2025-06-16 21:21:57 [0;34m[TRACE][0m   File:[/github/workspace/.mvn/wrapper/MavenWrapperDownloader.java], File extension:[java], File type: [/github/workspace/.mvn/wrapper/MavenWrapperDownloader.java: Java source, ASCII text][0m
[0m2025-06-16 21:21:57 [0;34m[TRACE][0m   /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   File:[/github/workspace/.mvn/wrapper/maven-wrapper.jar], File_type:[jar], Base_file:[maven-wrapper.jar][0m
[0m2025-06-16 21:21:57 [0;34m[TRACE][0m   File:[/github/workspace/.mvn/wrapper/maven-wrapper.jar], File extension:[jar], File type: [/github/workspace/.mvn/wrapper/maven-wrapper.jar: Zip archive data, at least v2.0 to extract, compression method=deflate][0m
[0m2025-06-16 21:21:57 [0;34m[TRACE][0m   /github/workspace/.mvn/wrapper/maven-wrapper.jar is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   Failed to get filetype for:[/github/workspace/.mvn/wrapper/maven-wrapper.jar]![0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   File:[/github/workspace/.mvn/wrapper/maven-wrapper.properties], File_type:[properties], Base_file:[maven-wrapper.properties][0m
[0m2025-06-16 21:21:57 [0;34m[TRACE][0m   File:[/github/workspace/.mvn/wrapper/maven-wrapper.properties], File extension:[properties], File type: [/github/workspace/.mvn/wrapper/maven-wrapper.properties: ASCII text][0m
[0m2025-06-16 21:21:57 [0;34m[TRACE][0m   /github/workspace/.mvn/wrapper/maven-wrapper.properties is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   Failed to get filetype for:[/github/workspace/.mvn/wrapper/maven-wrapper.properties]![0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   File:[/github/workspace/.secrets.baseline], File_type:[baseline], Base_file:[.secrets.baseline][0m
[0m2025-06-16 21:21:57 [0;34m[TRACE][0m   File:[/github/workspace/.secrets.baseline], File extension:[baseline], File type: [/github/workspace/.secrets.baseline: JSON text data][0m
[0m2025-06-16 21:21:57 [0;34m[TRACE][0m   /github/workspace/.secrets.baseline is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   Failed to get filetype for:[/github/workspace/.secrets.baseline]![0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   File:[/github/workspace/Deliverables/ASVSResults.png], File_type:[png], Base_file:[asvsresults.png][0m
[0m2025-06-16 21:21:57 [0;34m[TRACE][0m   File:[/github/workspace/Deliverables/ASVSResults.png], File extension:[png], File type: [/github/workspace/Deliverables/ASVSResults.png: PNG image data, 3931 x 3441, 8-bit/color RGBA, non-interlaced][0m
[0m2025-06-16 21:21:57 [0;34m[TRACE][0m   /github/workspace/Deliverables/ASVSResults.png is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   Failed to get filetype for:[/github/workspace/Deliverables/ASVSResults.png]![0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   File:[/github/workspace/Deliverables/DSOFT.pdf], File_type:[pdf], Base_file:[dsoft.pdf][0m
[0m2025-06-16 21:21:57 [0;34m[TRACE][0m   File:[/github/workspace/Deliverables/DSOFT.pdf], File extension:[pdf], File type: [/github/workspace/Deliverables/DSOFT.pdf: PDF document, version 1.7, 70 pages][0m
[0m2025-06-16 21:21:57 [0;34m[TRACE][0m   /github/workspace/Deliverables/DSOFT.pdf is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   Failed to get filetype for:[/github/workspace/Deliverables/DSOFT.pdf]![0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   File:[/github/workspace/Deliverables/DSOFTPart3.md], File_type:[md], Base_file:[dsoftpart3.md][0m
[0m2025-06-16 21:21:57 [0;34m[TRACE][0m   File:[/github/workspace/Deliverables/DSOFTPart3.md], File extension:[md], File type: [/github/workspace/Deliverables/DSOFTPart3.md: Unicode text, UTF-8 text, with very long lines (386)][0m
[0m2025-06-16 21:21:57 [0;34m[TRACE][0m   /github/workspace/Deliverables/DSOFTPart3.md is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:57 [0;34m[DEBUG][0m   File:[/github/workspace/Deliverables/v4-ASVS-checklist-en.xlsx], File_type:[xlsx], Base_file:[v4-asvs-checklist-en.xlsx][0m
[0m2025-06-16 21:21:58 [0;34m[TRACE][0m   File:[/github/workspace/Deliverables/v4-ASVS-checklist-en.xlsx], File extension:[xlsx], File type: [/github/workspace/Deliverables/v4-ASVS-checklist-en.xlsx: Microsoft Excel 2007+][0m
[0m2025-06-16 21:21:58 [0;34m[TRACE][0m   /github/workspace/Deliverables/v4-ASVS-checklist-en.xlsx is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   Failed to get filetype for:[/github/workspace/Deliverables/v4-ASVS-checklist-en.xlsx]![0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/Dockerfile], File_type:[/github/workspace/dockerfile], Base_file:[dockerfile][0m
[0m2025-06-16 21:21:58 [0;34m[TRACE][0m   File:[/github/workspace/Dockerfile], File extension:[/github/workspace/dockerfile], File type: [/github/workspace/Dockerfile: ASCII text][0m
[0m2025-06-16 21:21:58 [0;34m[TRACE][0m   /github/workspace/Dockerfile is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/LICENSE], File_type:[/github/workspace/license], Base_file:[license][0m
[0m2025-06-16 21:21:58 [0;34m[TRACE][0m   File:[/github/workspace/LICENSE], File extension:[/github/workspace/license], File type: [/github/workspace/LICENSE: ASCII text][0m
[0m2025-06-16 21:21:58 [0;34m[TRACE][0m   /github/workspace/LICENSE is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   Failed to get filetype for:[/github/workspace/LICENSE]![0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/Project.pdf], File_type:[pdf], Base_file:[project.pdf][0m
[0m2025-06-16 21:21:58 [0;34m[TRACE][0m   File:[/github/workspace/Project.pdf], File extension:[pdf], File type: [/github/workspace/Project.pdf: PDF document, version 1.5][0m
[0m2025-06-16 21:21:58 [0;34m[TRACE][0m   /github/workspace/Project.pdf is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   Failed to get filetype for:[/github/workspace/Project.pdf]![0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/README.md], File_type:[md], Base_file:[readme.md][0m
[0m2025-06-16 21:21:58 [0;34m[TRACE][0m   File:[/github/workspace/README.md], File extension:[md], File type: [/github/workspace/README.md: Unicode text, UTF-8 text][0m
[0m2025-06-16 21:21:58 [0;34m[TRACE][0m   /github/workspace/README.md is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/docker-compose.yml], File_type:[yml], Base_file:[docker-compose.yml][0m
[0m2025-06-16 21:21:58 [0;34m[TRACE][0m   File:[/github/workspace/docker-compose.yml], File extension:[yml], File type: [/github/workspace/docker-compose.yml: ASCII text][0m
[0m2025-06-16 21:21:58 [0;34m[TRACE][0m   /github/workspace/docker-compose.yml is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   Checking if /github/workspace/docker-compose.yml is a GitHub Actions file...[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   /github/workspace/docker-compose.yml is NOT GitHub Actions file.[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   Checking if /github/workspace/docker-compose.yml is a Cloud Formation file...[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   Checking if /github/workspace/docker-compose.yml is an OpenAPI file...[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   /github/workspace/docker-compose.yml is NOT an OpenAPI descriptor[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   Checking if /github/workspace/docker-compose.yml is a Tekton file...[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   Checking if /github/workspace/docker-compose.yml is a Kubernetes descriptor...[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   /github/workspace/docker-compose.yml is NOT a Kubernetes descriptor[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/init.sql], File_type:[sql], Base_file:[init.sql][0m
[0m2025-06-16 21:21:58 [0;34m[TRACE][0m   File:[/github/workspace/init.sql], File extension:[sql], File type: [/github/workspace/init.sql: ASCII text][0m
[0m2025-06-16 21:21:58 [0;34m[TRACE][0m   /github/workspace/init.sql is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/lombok.config], File_type:[config], Base_file:[lombok.config][0m
[0m2025-06-16 21:21:58 [0;34m[TRACE][0m   File:[/github/workspace/lombok.config], File extension:[config], File type: [/github/workspace/lombok.config: ASCII text][0m
[0m2025-06-16 21:21:58 [0;34m[TRACE][0m   /github/workspace/lombok.config is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   Failed to get filetype for:[/github/workspace/lombok.config]![0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/mvnw], File_type:[/github/workspace/mvnw], Base_file:[mvnw][0m
[0m2025-06-16 21:21:58 [0;34m[TRACE][0m   File:[/github/workspace/mvnw], File extension:[/github/workspace/mvnw], File type: [/github/workspace/mvnw: POSIX shell script, ASCII text executable][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   /github/workspace/mvnw is a valid shell script (has a valid file type: /github/workspace/mvnw: POSIX shell script, ASCII text executable)[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/mvnw.cmd], File_type:[cmd], Base_file:[mvnw.cmd][0m
[0m2025-06-16 21:21:58 [0;34m[TRACE][0m   File:[/github/workspace/mvnw.cmd], File extension:[cmd], File type: [/github/workspace/mvnw.cmd: DOS batch file, ASCII text][0m
[0m2025-06-16 21:21:58 [0;34m[TRACE][0m   /github/workspace/mvnw.cmd is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   Failed to get filetype for:[/github/workspace/mvnw.cmd]![0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/pom.xml], File_type:[xml], Base_file:[pom.xml][0m
[0m2025-06-16 21:21:58 [0;34m[TRACE][0m   File:[/github/workspace/pom.xml], File extension:[xml], File type: [/github/workspace/pom.xml: XML 1.0 document, Unicode text, UTF-8 text][0m
[0m2025-06-16 21:21:58 [0;34m[TRACE][0m   /github/workspace/pom.xml is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/dast-reports/report-DAST.html], File_type:[html], Base_file:[report-dast.html][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/dast-reports/report-DAST.html[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/dast-reports/report-DAST.json], File_type:[json], Base_file:[report-dast.json][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/dast-reports/report-DAST.json[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/integration-test-reports/TEST-com.gmail.merikbest2015.ecommerce.controller.AdminControllerTest.xml], File_type:[xml], Base_file:[test-com.gmail.merikbest2015.ecommerce.controller.admincontrollertest.xml][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/integration-test-reports/TEST-com.gmail.merikbest2015.ecommerce.controller.AdminControllerTest.xml[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/integration-test-reports/TEST-com.gmail.merikbest2015.ecommerce.controller.AuthenticationControllerTest.xml], File_type:[xml], Base_file:[test-com.gmail.merikbest2015.ecommerce.controller.authenticationcontrollertest.xml][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/integration-test-reports/TEST-com.gmail.merikbest2015.ecommerce.controller.AuthenticationControllerTest.xml[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/integration-test-reports/TEST-com.gmail.merikbest2015.ecommerce.controller.OrderControllerTest.xml], File_type:[xml], Base_file:[test-com.gmail.merikbest2015.ecommerce.controller.ordercontrollertest.xml][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/integration-test-reports/TEST-com.gmail.merikbest2015.ecommerce.controller.OrderControllerTest.xml[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/integration-test-reports/TEST-com.gmail.merikbest2015.ecommerce.controller.PerfumeControllerTest.xml], File_type:[xml], Base_file:[test-com.gmail.merikbest2015.ecommerce.controller.perfumecontrollertest.xml][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/integration-test-reports/TEST-com.gmail.merikbest2015.ecommerce.controller.PerfumeControllerTest.xml[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/integration-test-reports/TEST-com.gmail.merikbest2015.ecommerce.controller.RegistrationControllerTest.xml], File_type:[xml], Base_file:[test-com.gmail.merikbest2015.ecommerce.controller.registrationcontrollertest.xml][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/integration-test-reports/TEST-com.gmail.merikbest2015.ecommerce.controller.RegistrationControllerTest.xml[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/integration-test-reports/TEST-com.gmail.merikbest2015.ecommerce.controller.ReviewControllerTest.xml], File_type:[xml], Base_file:[test-com.gmail.merikbest2015.ecommerce.controller.reviewcontrollertest.xml][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/integration-test-reports/TEST-com.gmail.merikbest2015.ecommerce.controller.ReviewControllerTest.xml[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/integration-test-reports/TEST-com.gmail.merikbest2015.ecommerce.controller.UserControllerTest.xml], File_type:[xml], Base_file:[test-com.gmail.merikbest2015.ecommerce.controller.usercontrollertest.xml][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/integration-test-reports/TEST-com.gmail.merikbest2015.ecommerce.controller.UserControllerTest.xml[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/integration-test-reports/TEST-com.gmail.merikbest2015.ecommerce.mapper.OrderMapperTest.xml], File_type:[xml], Base_file:[test-com.gmail.merikbest2015.ecommerce.mapper.ordermappertest.xml][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/integration-test-reports/TEST-com.gmail.merikbest2015.ecommerce.mapper.OrderMapperTest.xml[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/integration-test-reports/TEST-com.gmail.merikbest2015.ecommerce.mapper.PerfumeMapperTest.xml], File_type:[xml], Base_file:[test-com.gmail.merikbest2015.ecommerce.mapper.perfumemappertest.xml][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/integration-test-reports/TEST-com.gmail.merikbest2015.ecommerce.mapper.PerfumeMapperTest.xml[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/integration-test-reports/TEST-com.gmail.merikbest2015.ecommerce.mapper.UserMapperTest.xml], File_type:[xml], Base_file:[test-com.gmail.merikbest2015.ecommerce.mapper.usermappertest.xml][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/integration-test-reports/TEST-com.gmail.merikbest2015.ecommerce.mapper.UserMapperTest.xml[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/integration-test-reports/TEST-com.gmail.merikbest2015.ecommerce.service.Impl.AuthenticationServiceImplTest.xml], File_type:[xml], Base_file:[test-com.gmail.merikbest2015.ecommerce.service.impl.authenticationserviceimpltest.xml][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/integration-test-reports/TEST-com.gmail.merikbest2015.ecommerce.service.Impl.AuthenticationServiceImplTest.xml[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/integration-test-reports/TEST-com.gmail.merikbest2015.ecommerce.service.Impl.OrderServiceImplTest.xml], File_type:[xml], Base_file:[test-com.gmail.merikbest2015.ecommerce.service.impl.orderserviceimpltest.xml][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/integration-test-reports/TEST-com.gmail.merikbest2015.ecommerce.service.Impl.OrderServiceImplTest.xml[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/integration-test-reports/TEST-com.gmail.merikbest2015.ecommerce.service.Impl.PerfumeServiceImplTest.xml], File_type:[xml], Base_file:[test-com.gmail.merikbest2015.ecommerce.service.impl.perfumeserviceimpltest.xml][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/integration-test-reports/TEST-com.gmail.merikbest2015.ecommerce.service.Impl.PerfumeServiceImplTest.xml[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/integration-test-reports/TEST-com.gmail.merikbest2015.ecommerce.service.Impl.ReviewServiceImplTest.xml], File_type:[xml], Base_file:[test-com.gmail.merikbest2015.ecommerce.service.impl.reviewserviceimpltest.xml][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/integration-test-reports/TEST-com.gmail.merikbest2015.ecommerce.service.Impl.ReviewServiceImplTest.xml[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/integration-test-reports/TEST-com.gmail.merikbest2015.ecommerce.service.Impl.UserServiceImlTest.xml], File_type:[xml], Base_file:[test-com.gmail.merikbest2015.ecommerce.service.impl.userserviceimltest.xml][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/integration-test-reports/TEST-com.gmail.merikbest2015.ecommerce.service.Impl.UserServiceImlTest.xml[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/integration-test-reports/com.gmail.merikbest2015.ecommerce.controller.AdminControllerTest.txt], File_type:[txt], Base_file:[com.gmail.merikbest2015.ecommerce.controller.admincontrollertest.txt][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/integration-test-reports/com.gmail.merikbest2015.ecommerce.controller.AdminControllerTest.txt[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/integration-test-reports/com.gmail.merikbest2015.ecommerce.controller.AuthenticationControllerTest.txt], File_type:[txt], Base_file:[com.gmail.merikbest2015.ecommerce.controller.authenticationcontrollertest.txt][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/integration-test-reports/com.gmail.merikbest2015.ecommerce.controller.AuthenticationControllerTest.txt[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/integration-test-reports/com.gmail.merikbest2015.ecommerce.controller.OrderControllerTest.txt], File_type:[txt], Base_file:[com.gmail.merikbest2015.ecommerce.controller.ordercontrollertest.txt][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/integration-test-reports/com.gmail.merikbest2015.ecommerce.controller.OrderControllerTest.txt[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/integration-test-reports/com.gmail.merikbest2015.ecommerce.controller.PerfumeControllerTest.txt], File_type:[txt], Base_file:[com.gmail.merikbest2015.ecommerce.controller.perfumecontrollertest.txt][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/integration-test-reports/com.gmail.merikbest2015.ecommerce.controller.PerfumeControllerTest.txt[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/integration-test-reports/com.gmail.merikbest2015.ecommerce.controller.RegistrationControllerTest.txt], File_type:[txt], Base_file:[com.gmail.merikbest2015.ecommerce.controller.registrationcontrollertest.txt][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/integration-test-reports/com.gmail.merikbest2015.ecommerce.controller.RegistrationControllerTest.txt[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/integration-test-reports/com.gmail.merikbest2015.ecommerce.controller.ReviewControllerTest.txt], File_type:[txt], Base_file:[com.gmail.merikbest2015.ecommerce.controller.reviewcontrollertest.txt][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/integration-test-reports/com.gmail.merikbest2015.ecommerce.controller.ReviewControllerTest.txt[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/integration-test-reports/com.gmail.merikbest2015.ecommerce.controller.UserControllerTest.txt], File_type:[txt], Base_file:[com.gmail.merikbest2015.ecommerce.controller.usercontrollertest.txt][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/integration-test-reports/com.gmail.merikbest2015.ecommerce.controller.UserControllerTest.txt[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/integration-test-reports/com.gmail.merikbest2015.ecommerce.mapper.OrderMapperTest.txt], File_type:[txt], Base_file:[com.gmail.merikbest2015.ecommerce.mapper.ordermappertest.txt][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/integration-test-reports/com.gmail.merikbest2015.ecommerce.mapper.OrderMapperTest.txt[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/integration-test-reports/com.gmail.merikbest2015.ecommerce.mapper.PerfumeMapperTest.txt], File_type:[txt], Base_file:[com.gmail.merikbest2015.ecommerce.mapper.perfumemappertest.txt][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/integration-test-reports/com.gmail.merikbest2015.ecommerce.mapper.PerfumeMapperTest.txt[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/integration-test-reports/com.gmail.merikbest2015.ecommerce.mapper.UserMapperTest.txt], File_type:[txt], Base_file:[com.gmail.merikbest2015.ecommerce.mapper.usermappertest.txt][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/integration-test-reports/com.gmail.merikbest2015.ecommerce.mapper.UserMapperTest.txt[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/integration-test-reports/com.gmail.merikbest2015.ecommerce.service.Impl.AuthenticationServiceImplTest.txt], File_type:[txt], Base_file:[com.gmail.merikbest2015.ecommerce.service.impl.authenticationserviceimpltest.txt][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/integration-test-reports/com.gmail.merikbest2015.ecommerce.service.Impl.AuthenticationServiceImplTest.txt[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/integration-test-reports/com.gmail.merikbest2015.ecommerce.service.Impl.OrderServiceImplTest.txt], File_type:[txt], Base_file:[com.gmail.merikbest2015.ecommerce.service.impl.orderserviceimpltest.txt][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/integration-test-reports/com.gmail.merikbest2015.ecommerce.service.Impl.OrderServiceImplTest.txt[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/integration-test-reports/com.gmail.merikbest2015.ecommerce.service.Impl.PerfumeServiceImplTest.txt], File_type:[txt], Base_file:[com.gmail.merikbest2015.ecommerce.service.impl.perfumeserviceimpltest.txt][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/integration-test-reports/com.gmail.merikbest2015.ecommerce.service.Impl.PerfumeServiceImplTest.txt[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/integration-test-reports/com.gmail.merikbest2015.ecommerce.service.Impl.ReviewServiceImplTest.txt], File_type:[txt], Base_file:[com.gmail.merikbest2015.ecommerce.service.impl.reviewserviceimpltest.txt][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/integration-test-reports/com.gmail.merikbest2015.ecommerce.service.Impl.ReviewServiceImplTest.txt[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/integration-test-reports/com.gmail.merikbest2015.ecommerce.service.Impl.UserServiceImlTest.txt], File_type:[txt], Base_file:[com.gmail.merikbest2015.ecommerce.service.impl.userserviceimltest.txt][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/integration-test-reports/com.gmail.merikbest2015.ecommerce.service.Impl.UserServiceImlTest.txt[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/integration-test-reports/failsafe-summary.xml], File_type:[xml], Base_file:[failsafe-summary.xml][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/integration-test-reports/failsafe-summary.xml[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/linter-reports/super-linter.log], File_type:[log], Base_file:[super-linter.log][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/linter-reports/super-linter.log[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/placeholder], File_type:[/github/workspace/securityreports/placeholder], Base_file:[placeholder][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/placeholder[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/report-SAST.json], File_type:[json], Base_file:[report-sast.json][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/report-SAST.json[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/report-SCA.json], File_type:[json], Base_file:[report-sca.json][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/report-SCA.json[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/report-gitleaks.json], File_type:[json], Base_file:[report-gitleaks.json][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/report-gitleaks.json[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/report-secret-scan.json], File_type:[json], Base_file:[report-secret-scan.json][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/report-secret-scan.json[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/snyk-SAST.json], File_type:[json], Base_file:[snyk-sast.json][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/snyk-SAST.json[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/snyk-SAST.sarif], File_type:[sarif], Base_file:[snyk-sast.sarif][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/snyk-SAST.sarif[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/snyk-SCA.json], File_type:[json], Base_file:[snyk-sca.json][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/snyk-SCA.json[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/snyk-SCA.sarif], File_type:[sarif], Base_file:[snyk-sca.sarif][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/snyk-SCA.sarif[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/unit-test-reports/TEST-com.gmail.merikbest2015.ecommerce.domain.OrderItemTest.xml], File_type:[xml], Base_file:[test-com.gmail.merikbest2015.ecommerce.domain.orderitemtest.xml][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/unit-test-reports/TEST-com.gmail.merikbest2015.ecommerce.domain.OrderItemTest.xml[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/unit-test-reports/TEST-com.gmail.merikbest2015.ecommerce.domain.OrderTest.xml], File_type:[xml], Base_file:[test-com.gmail.merikbest2015.ecommerce.domain.ordertest.xml][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/unit-test-reports/TEST-com.gmail.merikbest2015.ecommerce.domain.OrderTest.xml[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/unit-test-reports/TEST-com.gmail.merikbest2015.ecommerce.domain.PerfumeTest.xml], File_type:[xml], Base_file:[test-com.gmail.merikbest2015.ecommerce.domain.perfumetest.xml][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/unit-test-reports/TEST-com.gmail.merikbest2015.ecommerce.domain.PerfumeTest.xml[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/unit-test-reports/TEST-com.gmail.merikbest2015.ecommerce.domain.ReviewTest.xml], File_type:[xml], Base_file:[test-com.gmail.merikbest2015.ecommerce.domain.reviewtest.xml][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/unit-test-reports/TEST-com.gmail.merikbest2015.ecommerce.domain.ReviewTest.xml[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/unit-test-reports/TEST-com.gmail.merikbest2015.ecommerce.domain.UserTest.xml], File_type:[xml], Base_file:[test-com.gmail.merikbest2015.ecommerce.domain.usertest.xml][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/unit-test-reports/TEST-com.gmail.merikbest2015.ecommerce.domain.UserTest.xml[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/unit-test-reports/com.gmail.merikbest2015.ecommerce.domain.OrderItemTest.txt], File_type:[txt], Base_file:[com.gmail.merikbest2015.ecommerce.domain.orderitemtest.txt][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/unit-test-reports/com.gmail.merikbest2015.ecommerce.domain.OrderItemTest.txt[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/unit-test-reports/com.gmail.merikbest2015.ecommerce.domain.OrderTest.txt], File_type:[txt], Base_file:[com.gmail.merikbest2015.ecommerce.domain.ordertest.txt][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/unit-test-reports/com.gmail.merikbest2015.ecommerce.domain.OrderTest.txt[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/unit-test-reports/com.gmail.merikbest2015.ecommerce.domain.PerfumeTest.txt], File_type:[txt], Base_file:[com.gmail.merikbest2015.ecommerce.domain.perfumetest.txt][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/unit-test-reports/com.gmail.merikbest2015.ecommerce.domain.PerfumeTest.txt[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/unit-test-reports/com.gmail.merikbest2015.ecommerce.domain.ReviewTest.txt], File_type:[txt], Base_file:[com.gmail.merikbest2015.ecommerce.domain.reviewtest.txt][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/unit-test-reports/com.gmail.merikbest2015.ecommerce.domain.ReviewTest.txt[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/securityReports/unit-test-reports/com.gmail.merikbest2015.ecommerce.domain.UserTest.txt], File_type:[txt], Base_file:[com.gmail.merikbest2015.ecommerce.domain.usertest.txt][0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   FILTER_REGEX_EXCLUDE match. Skipping /github/workspace/securityReports/unit-test-reports/com.gmail.merikbest2015.ecommerce.domain.UserTest.txt[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/EcommerceApplication.java], File_type:[java], Base_file:[ecommerceapplication.java][0m
[0m2025-06-16 21:21:58 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/EcommerceApplication.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/EcommerceApplication.java: Java source, ASCII text][0m
[0m2025-06-16 21:21:58 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/EcommerceApplication.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect/ControllerAspect.java], File_type:[java], Base_file:[controlleraspect.java][0m
[0m2025-06-16 21:21:58 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect/ControllerAspect.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect/ControllerAspect.java: Java source, ASCII text][0m
[0m2025-06-16 21:21:58 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect/ControllerAspect.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:58 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java], File_type:[java], Base_file:[applicationconfiguration.java][0m
[0m2025-06-16 21:21:59 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java: Java source, ASCII text][0m
[0m2025-06-16 21:21:59 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:59 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:59 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java], File_type:[java], Base_file:[emailconfiguration.java][0m
[0m2025-06-16 21:21:59 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java: Java source, ASCII text][0m
[0m2025-06-16 21:21:59 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:59 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:59 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/MvcConfiguration.java], File_type:[java], Base_file:[mvcconfiguration.java][0m
[0m2025-06-16 21:21:59 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/MvcConfiguration.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/MvcConfiguration.java: Java source, ASCII text][0m
[0m2025-06-16 21:21:59 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/MvcConfiguration.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:59 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:59 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/SwaggerConfiguration.java], File_type:[java], Base_file:[swaggerconfiguration.java][0m
[0m2025-06-16 21:21:59 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/SwaggerConfiguration.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/SwaggerConfiguration.java: Java source, Unicode text, UTF-8 text][0m
[0m2025-06-16 21:21:59 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/SwaggerConfiguration.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:59 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:59 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java], File_type:[java], Base_file:[websecurityconfiguration.java][0m
[0m2025-06-16 21:21:59 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java: Java source, ASCII text][0m
[0m2025-06-16 21:21:59 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:59 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:59 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSocketConfiguration.java], File_type:[java], Base_file:[websocketconfiguration.java][0m
[0m2025-06-16 21:21:59 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSocketConfiguration.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSocketConfiguration.java: Java source, ASCII text][0m
[0m2025-06-16 21:21:59 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSocketConfiguration.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:59 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:59 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java], File_type:[java], Base_file:[errormessage.java][0m
[0m2025-06-16 21:21:59 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java: ASCII text][0m
[0m2025-06-16 21:21:59 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:59 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:59 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java], File_type:[java], Base_file:[pathconstants.java][0m
[0m2025-06-16 21:21:59 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java: ASCII text][0m
[0m2025-06-16 21:21:59 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:59 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:59 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java], File_type:[java], Base_file:[admincontroller.java][0m
[0m2025-06-16 21:21:59 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java: Java source, ASCII text][0m
[0m2025-06-16 21:21:59 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:59 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:59 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java], File_type:[java], Base_file:[authenticationcontroller.java][0m
[0m2025-06-16 21:21:59 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java: Java source, ASCII text][0m
[0m2025-06-16 21:21:59 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:59 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:59 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java], File_type:[java], Base_file:[ordercontroller.java][0m
[0m2025-06-16 21:21:59 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java: Java source, ASCII text][0m
[0m2025-06-16 21:21:59 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:59 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:59 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java], File_type:[java], Base_file:[perfumecontroller.java][0m
[0m2025-06-16 21:21:59 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java: Java source, ASCII text][0m
[0m2025-06-16 21:21:59 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:59 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:59 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java], File_type:[java], Base_file:[registrationcontroller.java][0m
[0m2025-06-16 21:21:59 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java: Java source, ASCII text][0m
[0m2025-06-16 21:21:59 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:59 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:59 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java], File_type:[java], Base_file:[reviewcontroller.java][0m
[0m2025-06-16 21:21:59 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java: Java source, ASCII text][0m
[0m2025-06-16 21:21:59 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:59 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:59 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java], File_type:[java], Base_file:[usercontroller.java][0m
[0m2025-06-16 21:21:59 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java: Java source, ASCII text][0m
[0m2025-06-16 21:21:59 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:59 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:59 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java], File_type:[java], Base_file:[order.java][0m
[0m2025-06-16 21:21:59 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java: Java source, ASCII text][0m
[0m2025-06-16 21:21:59 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:59 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:59 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java], File_type:[java], Base_file:[orderitem.java][0m
[0m2025-06-16 21:21:59 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java: Java source, ASCII text][0m
[0m2025-06-16 21:21:59 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:59 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:59 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java], File_type:[java], Base_file:[perfume.java][0m
[0m2025-06-16 21:21:59 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java: Java source, ASCII text][0m
[0m2025-06-16 21:21:59 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:59 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:59 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java], File_type:[java], Base_file:[review.java][0m
[0m2025-06-16 21:21:59 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java: Java source, ASCII text][0m
[0m2025-06-16 21:21:59 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:59 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:59 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java], File_type:[java], Base_file:[user.java][0m
[0m2025-06-16 21:21:59 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java: Java source, ASCII text][0m
[0m2025-06-16 21:21:59 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:59 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:59 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java], File_type:[java], Base_file:[captcharesponse.java][0m
[0m2025-06-16 21:21:59 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java: Java source, ASCII text][0m
[0m2025-06-16 21:21:59 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:59 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:59 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/GraphQLRequest.java], File_type:[java], Base_file:[graphqlrequest.java][0m
[0m2025-06-16 21:21:59 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/GraphQLRequest.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/GraphQLRequest.java: Java source, ASCII text][0m
[0m2025-06-16 21:21:59 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/GraphQLRequest.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:59 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:59 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/HeaderResponse.java], File_type:[java], Base_file:[headerresponse.java][0m
[0m2025-06-16 21:21:59 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/HeaderResponse.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/HeaderResponse.java: Java source, ASCII text][0m
[0m2025-06-16 21:21:59 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/HeaderResponse.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:59 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:59 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/PasswordResetRequest.java], File_type:[java], Base_file:[passwordresetrequest.java][0m
[0m2025-06-16 21:21:59 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/PasswordResetRequest.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/PasswordResetRequest.java: Java source, ASCII text][0m
[0m2025-06-16 21:21:59 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/PasswordResetRequest.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:21:59 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:21:59 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java], File_type:[java], Base_file:[registrationrequest.java][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationRequest.java], File_type:[java], Base_file:[authenticationrequest.java][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationRequest.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationRequest.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationRequest.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationResponse.java], File_type:[java], Base_file:[authenticationresponse.java][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationResponse.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationResponse.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationResponse.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderItemResponse.java], File_type:[java], Base_file:[orderitemresponse.java][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderItemResponse.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderItemResponse.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderItemResponse.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java], File_type:[java], Base_file:[orderrequest.java][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java], File_type:[java], Base_file:[orderresponse.java][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/FullPerfumeResponse.java], File_type:[java], Base_file:[fullperfumeresponse.java][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/FullPerfumeResponse.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/FullPerfumeResponse.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/FullPerfumeResponse.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java], File_type:[java], Base_file:[perfumerequest.java][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeResponse.java], File_type:[java], Base_file:[perfumeresponse.java][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeResponse.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeResponse.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeResponse.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeSearchRequest.java], File_type:[java], Base_file:[perfumesearchrequest.java][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeSearchRequest.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeSearchRequest.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeSearchRequest.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/SearchTypeRequest.java], File_type:[java], Base_file:[searchtyperequest.java][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/SearchTypeRequest.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/SearchTypeRequest.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/SearchTypeRequest.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewRequest.java], File_type:[java], Base_file:[reviewrequest.java][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewRequest.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewRequest.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewRequest.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewResponse.java], File_type:[java], Base_file:[reviewresponse.java][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewResponse.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewResponse.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewResponse.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/BaseUserResponse.java], File_type:[java], Base_file:[baseuserresponse.java][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/BaseUserResponse.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/BaseUserResponse.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/BaseUserResponse.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UpdateUserRequest.java], File_type:[java], Base_file:[updateuserrequest.java][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UpdateUserRequest.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UpdateUserRequest.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UpdateUserRequest.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UserResponse.java], File_type:[java], Base_file:[userresponse.java][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UserResponse.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UserResponse.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UserResponse.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/AuthProvider.java], File_type:[java], Base_file:[authprovider.java][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/AuthProvider.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/AuthProvider.java: ASCII text][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/AuthProvider.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/Role.java], File_type:[java], Base_file:[role.java][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/Role.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/Role.java: ASCII text][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/Role.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/SearchPerfume.java], File_type:[java], Base_file:[searchperfume.java][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/SearchPerfume.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/SearchPerfume.java: ASCII text][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/SearchPerfume.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java], File_type:[java], Base_file:[apiexceptionhandler.java][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiRequestException.java], File_type:[java], Base_file:[apirequestexception.java][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiRequestException.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiRequestException.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiRequestException.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/CaptchaException.java], File_type:[java], Base_file:[captchaexception.java][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/CaptchaException.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/CaptchaException.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/CaptchaException.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/EmailException.java], File_type:[java], Base_file:[emailexception.java][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/EmailException.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/EmailException.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/EmailException.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/InputFieldException.java], File_type:[java], Base_file:[inputfieldexception.java][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/InputFieldException.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/InputFieldException.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/InputFieldException.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordConfirmationException.java], File_type:[java], Base_file:[passwordconfirmationexception.java][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordConfirmationException.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordConfirmationException.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordConfirmationException.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordException.java], File_type:[java], Base_file:[passwordexception.java][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordException.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordException.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:00 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordException.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:00 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java], File_type:[java], Base_file:[authenticationmapper.java][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:01 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:01 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java], File_type:[java], Base_file:[commonmapper.java][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:01 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:01 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java], File_type:[java], Base_file:[ordermapper.java][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:01 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:01 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java], File_type:[java], Base_file:[perfumemapper.java][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:01 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:01 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java], File_type:[java], Base_file:[reviewmapper.java][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:01 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:01 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java], File_type:[java], Base_file:[usermapper.java][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:01 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:01 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderItemRepository.java], File_type:[java], Base_file:[orderitemrepository.java][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderItemRepository.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderItemRepository.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderItemRepository.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:01 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:01 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderRepository.java], File_type:[java], Base_file:[orderrepository.java][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderRepository.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderRepository.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderRepository.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:01 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:01 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java], File_type:[java], Base_file:[perfumerepository.java][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:01 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:01 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/ReviewRepository.java], File_type:[java], Base_file:[reviewrepository.java][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/ReviewRepository.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/ReviewRepository.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/ReviewRepository.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:01 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:01 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/UserRepository.java], File_type:[java], Base_file:[userrepository.java][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/UserRepository.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/UserRepository.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/UserRepository.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:01 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:01 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java], File_type:[java], Base_file:[perfumeprojection.java][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:01 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:01 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtAuthenticationException.java], File_type:[java], Base_file:[jwtauthenticationexception.java][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtAuthenticationException.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtAuthenticationException.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtAuthenticationException.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:01 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:01 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtConfigurer.java], File_type:[java], Base_file:[jwtconfigurer.java][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtConfigurer.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtConfigurer.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtConfigurer.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:01 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:01 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java], File_type:[java], Base_file:[jwtfilter.java][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:01 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:01 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java], File_type:[java], Base_file:[jwtprovider.java][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java: Java source, Unicode text, UTF-8 text][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:01 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:01 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserDetailsServiceImpl.java], File_type:[java], Base_file:[userdetailsserviceimpl.java][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserDetailsServiceImpl.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserDetailsServiceImpl.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserDetailsServiceImpl.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:01 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:01 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java], File_type:[java], Base_file:[userprincipal.java][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:01 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:01 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/CustomOAuth2UserService.java], File_type:[java], Base_file:[customoauth2userservice.java][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/CustomOAuth2UserService.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/CustomOAuth2UserService.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/CustomOAuth2UserService.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:01 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:01 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/FacebookOAuth2UserInfo.java], File_type:[java], Base_file:[facebookoauth2userinfo.java][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/FacebookOAuth2UserInfo.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/FacebookOAuth2UserInfo.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/FacebookOAuth2UserInfo.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:01 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:01 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GithubOAuth2UserInfo.java], File_type:[java], Base_file:[githuboauth2userinfo.java][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GithubOAuth2UserInfo.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GithubOAuth2UserInfo.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GithubOAuth2UserInfo.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:01 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:01 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GoogleOAuth2UserInfo.java], File_type:[java], Base_file:[googleoauth2userinfo.java][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GoogleOAuth2UserInfo.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GoogleOAuth2UserInfo.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GoogleOAuth2UserInfo.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:01 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:01 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2SuccessHandler.java], File_type:[java], Base_file:[oauth2successhandler.java][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2SuccessHandler.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2SuccessHandler.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2SuccessHandler.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:01 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:01 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserFactory.java], File_type:[java], Base_file:[oauth2userfactory.java][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserFactory.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserFactory.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserFactory.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:01 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:01 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java], File_type:[java], Base_file:[oauth2userinfo.java][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:01 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:01 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/AuthenticationService.java], File_type:[java], Base_file:[authenticationservice.java][0m
[0m2025-06-16 21:22:02 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/AuthenticationService.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/AuthenticationService.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:02 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/AuthenticationService.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java], File_type:[java], Base_file:[authenticationserviceimpl.java][0m
[0m2025-06-16 21:22:02 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:02 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java], File_type:[java], Base_file:[orderserviceimpl.java][0m
[0m2025-06-16 21:22:02 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:02 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java], File_type:[java], Base_file:[perfumeserviceimpl.java][0m
[0m2025-06-16 21:22:02 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:02 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java], File_type:[java], Base_file:[reviewserviceimpl.java][0m
[0m2025-06-16 21:22:02 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:02 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java], File_type:[java], Base_file:[userserviceimpl.java][0m
[0m2025-06-16 21:22:02 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:02 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/OrderService.java], File_type:[java], Base_file:[orderservice.java][0m
[0m2025-06-16 21:22:02 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/OrderService.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/OrderService.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:02 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/OrderService.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java], File_type:[java], Base_file:[perfumeservice.java][0m
[0m2025-06-16 21:22:02 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:02 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/ReviewService.java], File_type:[java], Base_file:[reviewservice.java][0m
[0m2025-06-16 21:22:02 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/ReviewService.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/ReviewService.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:02 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/ReviewService.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/UserService.java], File_type:[java], Base_file:[userservice.java][0m
[0m2025-06-16 21:22:02 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/UserService.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/UserService.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:02 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/UserService.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java], File_type:[java], Base_file:[mailsender.java][0m
[0m2025-06-16 21:22:02 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:02 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java], File_type:[java], Base_file:[graphqlprovider.java][0m
[0m2025-06-16 21:22:02 [0;34m[TRACE][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java], File extension:[java], File type: [/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:02 [0;34m[TRACE][0m   /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/resources/application.properties], File_type:[properties], Base_file:[application.properties][0m
[0m2025-06-16 21:22:02 [0;34m[TRACE][0m   File:[/github/workspace/src/main/resources/application.properties], File extension:[properties], File type: [/github/workspace/src/main/resources/application.properties: ASCII text][0m
[0m2025-06-16 21:22:02 [0;34m[TRACE][0m   /github/workspace/src/main/resources/application.properties is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   Failed to get filetype for:[/github/workspace/src/main/resources/application.properties]![0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/resources/db/migration/V1__Init_BD.sql], File_type:[sql], Base_file:[v1__init_bd.sql][0m
[0m2025-06-16 21:22:02 [0;34m[TRACE][0m   File:[/github/workspace/src/main/resources/db/migration/V1__Init_BD.sql], File extension:[sql], File type: [/github/workspace/src/main/resources/db/migration/V1__Init_BD.sql: ASCII text][0m
[0m2025-06-16 21:22:02 [0;34m[TRACE][0m   /github/workspace/src/main/resources/db/migration/V1__Init_BD.sql is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/resources/db/migration/V2__Add_users.sql], File_type:[sql], Base_file:[v2__add_users.sql][0m
[0m2025-06-16 21:22:02 [0;34m[TRACE][0m   File:[/github/workspace/src/main/resources/db/migration/V2__Add_users.sql], File extension:[sql], File type: [/github/workspace/src/main/resources/db/migration/V2__Add_users.sql: ASCII text][0m
[0m2025-06-16 21:22:02 [0;34m[TRACE][0m   /github/workspace/src/main/resources/db/migration/V2__Add_users.sql is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/resources/db/migration/V3__Add_products.sql], File_type:[sql], Base_file:[v3__add_products.sql][0m
[0m2025-06-16 21:22:02 [0;34m[TRACE][0m   File:[/github/workspace/src/main/resources/db/migration/V3__Add_products.sql], File extension:[sql], File type: [/github/workspace/src/main/resources/db/migration/V3__Add_products.sql: Unicode text, UTF-8 text, with very long lines (587)][0m
[0m2025-06-16 21:22:02 [0;34m[TRACE][0m   /github/workspace/src/main/resources/db/migration/V3__Add_products.sql is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/resources/db/migration/V4__Add_orders.sql], File_type:[sql], Base_file:[v4__add_orders.sql][0m
[0m2025-06-16 21:22:02 [0;34m[TRACE][0m   File:[/github/workspace/src/main/resources/db/migration/V4__Add_orders.sql], File extension:[sql], File type: [/github/workspace/src/main/resources/db/migration/V4__Add_orders.sql: CSV text][0m
[0m2025-06-16 21:22:02 [0;34m[TRACE][0m   /github/workspace/src/main/resources/db/migration/V4__Add_orders.sql is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/resources/graphql/schemas.graphql], File_type:[graphql], Base_file:[schemas.graphql][0m
[0m2025-06-16 21:22:02 [0;34m[TRACE][0m   File:[/github/workspace/src/main/resources/graphql/schemas.graphql], File extension:[graphql], File type: [/github/workspace/src/main/resources/graphql/schemas.graphql: ASCII text][0m
[0m2025-06-16 21:22:02 [0;34m[TRACE][0m   /github/workspace/src/main/resources/graphql/schemas.graphql is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   Failed to get filetype for:[/github/workspace/src/main/resources/graphql/schemas.graphql]![0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/resources/mail-templates/order-template.html], File_type:[html], Base_file:[order-template.html][0m
[0m2025-06-16 21:22:02 [0;34m[TRACE][0m   File:[/github/workspace/src/main/resources/mail-templates/order-template.html], File extension:[html], File type: [/github/workspace/src/main/resources/mail-templates/order-template.html: HTML document, ASCII text][0m
[0m2025-06-16 21:22:02 [0;34m[TRACE][0m   /github/workspace/src/main/resources/mail-templates/order-template.html is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/resources/mail-templates/password-reset-template.html], File_type:[html], Base_file:[password-reset-template.html][0m
[0m2025-06-16 21:22:02 [0;34m[TRACE][0m   File:[/github/workspace/src/main/resources/mail-templates/password-reset-template.html], File extension:[html], File type: [/github/workspace/src/main/resources/mail-templates/password-reset-template.html: HTML document, ASCII text][0m
[0m2025-06-16 21:22:02 [0;34m[TRACE][0m   /github/workspace/src/main/resources/mail-templates/password-reset-template.html is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/resources/mail-templates/registration-template.html], File_type:[html], Base_file:[registration-template.html][0m
[0m2025-06-16 21:22:02 [0;34m[TRACE][0m   File:[/github/workspace/src/main/resources/mail-templates/registration-template.html], File extension:[html], File type: [/github/workspace/src/main/resources/mail-templates/registration-template.html: HTML document, ASCII text][0m
[0m2025-06-16 21:22:02 [0;34m[TRACE][0m   /github/workspace/src/main/resources/mail-templates/registration-template.html is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   File:[/github/workspace/src/main/resources/static/swagger-api/swagger.yaml], File_type:[yaml], Base_file:[swagger.yaml][0m
[0m2025-06-16 21:22:02 [0;34m[TRACE][0m   File:[/github/workspace/src/main/resources/static/swagger-api/swagger.yaml], File extension:[yaml], File type: [/github/workspace/src/main/resources/static/swagger-api/swagger.yaml: ASCII text][0m
[0m2025-06-16 21:22:02 [0;34m[TRACE][0m   /github/workspace/src/main/resources/static/swagger-api/swagger.yaml is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   Checking if /github/workspace/src/main/resources/static/swagger-api/swagger.yaml is a GitHub Actions file...[0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   /github/workspace/src/main/resources/static/swagger-api/swagger.yaml is NOT GitHub Actions file.[0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   Checking if /github/workspace/src/main/resources/static/swagger-api/swagger.yaml is a Cloud Formation file...[0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   Checking if /github/workspace/src/main/resources/static/swagger-api/swagger.yaml is an OpenAPI file...[0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   /github/workspace/src/main/resources/static/swagger-api/swagger.yaml is an OpenAPI descriptor[0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   Checking if /github/workspace/src/main/resources/static/swagger-api/swagger.yaml is a Tekton file...[0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   Checking if /github/workspace/src/main/resources/static/swagger-api/swagger.yaml is a Kubernetes descriptor...[0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   /github/workspace/src/main/resources/static/swagger-api/swagger.yaml is NOT a Kubernetes descriptor[0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/EcommerceApplicationTests.java], File_type:[java], Base_file:[ecommerceapplicationtests.java][0m
[0m2025-06-16 21:22:02 [0;34m[TRACE][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/EcommerceApplicationTests.java], File extension:[java], File type: [/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/EcommerceApplicationTests.java: C++ source, ASCII text][0m
[0m2025-06-16 21:22:02 [0;34m[TRACE][0m   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/EcommerceApplicationTests.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:02 [0;34m[DEBUG][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java], File_type:[java], Base_file:[admincontrollertest.java][0m
[0m2025-06-16 21:22:03 [0;34m[TRACE][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java], File extension:[java], File type: [/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:03 [0;34m[TRACE][0m   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:03 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:03 [0;34m[DEBUG][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java], File_type:[java], Base_file:[authenticationcontrollertest.java][0m
[0m2025-06-16 21:22:03 [0;34m[TRACE][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java], File extension:[java], File type: [/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:03 [0;34m[TRACE][0m   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:03 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:03 [0;34m[DEBUG][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java], File_type:[java], Base_file:[ordercontrollertest.java][0m
[0m2025-06-16 21:22:03 [0;34m[TRACE][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java], File extension:[java], File type: [/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:03 [0;34m[TRACE][0m   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:03 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:03 [0;34m[DEBUG][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java], File_type:[java], Base_file:[perfumecontrollertest.java][0m
[0m2025-06-16 21:22:03 [0;34m[TRACE][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java], File extension:[java], File type: [/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java: Java source, Unicode text, UTF-8 text][0m
[0m2025-06-16 21:22:03 [0;34m[TRACE][0m   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:03 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:03 [0;34m[DEBUG][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java], File_type:[java], Base_file:[registrationcontrollertest.java][0m
[0m2025-06-16 21:22:03 [0;34m[TRACE][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java], File extension:[java], File type: [/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:03 [0;34m[TRACE][0m   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:03 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:03 [0;34m[DEBUG][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java], File_type:[java], Base_file:[reviewcontrollertest.java][0m
[0m2025-06-16 21:22:03 [0;34m[TRACE][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java], File extension:[java], File type: [/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:03 [0;34m[TRACE][0m   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:03 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:03 [0;34m[DEBUG][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java], File_type:[java], Base_file:[usercontrollertest.java][0m
[0m2025-06-16 21:22:03 [0;34m[TRACE][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java], File extension:[java], File type: [/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:03 [0;34m[TRACE][0m   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:03 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:03 [0;34m[DEBUG][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java], File_type:[java], Base_file:[orderitemtest.java][0m
[0m2025-06-16 21:22:03 [0;34m[TRACE][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java], File extension:[java], File type: [/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:03 [0;34m[TRACE][0m   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:03 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:03 [0;34m[DEBUG][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java], File_type:[java], Base_file:[ordertest.java][0m
[0m2025-06-16 21:22:03 [0;34m[TRACE][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java], File extension:[java], File type: [/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:03 [0;34m[TRACE][0m   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:03 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:03 [0;34m[DEBUG][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java], File_type:[java], Base_file:[perfumetest.java][0m
[0m2025-06-16 21:22:03 [0;34m[TRACE][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java], File extension:[java], File type: [/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:03 [0;34m[TRACE][0m   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:03 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:03 [0;34m[DEBUG][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java], File_type:[java], Base_file:[reviewtest.java][0m
[0m2025-06-16 21:22:03 [0;34m[TRACE][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java], File extension:[java], File type: [/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:03 [0;34m[TRACE][0m   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:03 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:03 [0;34m[DEBUG][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java], File_type:[java], Base_file:[usertest.java][0m
[0m2025-06-16 21:22:03 [0;34m[TRACE][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java], File extension:[java], File type: [/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:03 [0;34m[TRACE][0m   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:03 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:03 [0;34m[DEBUG][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapperTest.java], File_type:[java], Base_file:[ordermappertest.java][0m
[0m2025-06-16 21:22:03 [0;34m[TRACE][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapperTest.java], File extension:[java], File type: [/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapperTest.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:03 [0;34m[TRACE][0m   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapperTest.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:03 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:03 [0;34m[DEBUG][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java], File_type:[java], Base_file:[perfumemappertest.java][0m
[0m2025-06-16 21:22:03 [0;34m[TRACE][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java], File extension:[java], File type: [/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:03 [0;34m[TRACE][0m   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:03 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:03 [0;34m[DEBUG][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapperTest.java], File_type:[java], Base_file:[usermappertest.java][0m
[0m2025-06-16 21:22:03 [0;34m[TRACE][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapperTest.java], File extension:[java], File type: [/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapperTest.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:03 [0;34m[TRACE][0m   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapperTest.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:03 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:03 [0;34m[DEBUG][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java], File_type:[java], Base_file:[authenticationserviceimpltest.java][0m
[0m2025-06-16 21:22:03 [0;34m[TRACE][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java], File extension:[java], File type: [/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:03 [0;34m[TRACE][0m   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:03 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:03 [0;34m[DEBUG][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java], File_type:[java], Base_file:[orderserviceimpltest.java][0m
[0m2025-06-16 21:22:03 [0;34m[TRACE][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java], File extension:[java], File type: [/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:03 [0;34m[TRACE][0m   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:03 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:03 [0;34m[DEBUG][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java], File_type:[java], Base_file:[perfumeserviceimpltest.java][0m
[0m2025-06-16 21:22:03 [0;34m[TRACE][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java], File extension:[java], File type: [/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:03 [0;34m[TRACE][0m   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:03 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:03 [0;34m[DEBUG][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java], File_type:[java], Base_file:[reviewserviceimpltest.java][0m
[0m2025-06-16 21:22:03 [0;34m[TRACE][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java], File extension:[java], File type: [/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:03 [0;34m[TRACE][0m   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:03 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:03 [0;34m[DEBUG][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java], File_type:[java], Base_file:[userserviceimltest.java][0m
[0m2025-06-16 21:22:03 [0;34m[TRACE][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java], File extension:[java], File type: [/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java: Java source, ASCII text][0m
[0m2025-06-16 21:22:03 [0;34m[TRACE][0m   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:03 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:03 [0;34m[DEBUG][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java], File_type:[java], Base_file:[testconstants.java][0m
[0m2025-06-16 21:22:03 [0;34m[TRACE][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java], File extension:[java], File type: [/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java: ASCII text][0m
[0m2025-06-16 21:22:03 [0;34m[TRACE][0m   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:03 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:03 [0;34m[DEBUG][0m   File:[/github/workspace/src/test/resources/application-test.properties], File_type:[properties], Base_file:[application-test.properties][0m
[0m2025-06-16 21:22:03 [0;34m[TRACE][0m   File:[/github/workspace/src/test/resources/application-test.properties], File extension:[properties], File type: [/github/workspace/src/test/resources/application-test.properties: ASCII text][0m
[0m2025-06-16 21:22:03 [0;34m[TRACE][0m   /github/workspace/src/test/resources/application-test.properties is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:03 [0;34m[DEBUG][0m   Failed to get filetype for:[/github/workspace/src/test/resources/application-test.properties]![0m
[0m2025-06-16 21:22:03 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:03 [0;34m[DEBUG][0m   File:[/github/workspace/src/test/resources/empty.jpg], File_type:[jpg], Base_file:[empty.jpg][0m
[0m2025-06-16 21:22:03 [0;34m[TRACE][0m   File:[/github/workspace/src/test/resources/empty.jpg], File extension:[jpg], File type: [/github/workspace/src/test/resources/empty.jpg: JPEG image data, JFIF standard 1.01, resolution (DPI), density 96x96, segment length 16, comment: "CREATOR: gd-jpeg v1.0 (using IJG JPEG v80), quality = 100", progressive, precision 8, 458x458, components 3][0m
[0m2025-06-16 21:22:03 [0;34m[TRACE][0m   /github/workspace/src/test/resources/empty.jpg is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:03 [0;34m[DEBUG][0m   Failed to get filetype for:[/github/workspace/src/test/resources/empty.jpg]![0m
[0m2025-06-16 21:22:03 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:03 [0;34m[DEBUG][0m   File:[/github/workspace/src/test/resources/sql/create-orders-after.sql], File_type:[sql], Base_file:[create-orders-after.sql][0m
[0m2025-06-16 21:22:03 [0;34m[TRACE][0m   File:[/github/workspace/src/test/resources/sql/create-orders-after.sql], File extension:[sql], File type: [/github/workspace/src/test/resources/sql/create-orders-after.sql: ASCII text][0m
[0m2025-06-16 21:22:03 [0;34m[TRACE][0m   /github/workspace/src/test/resources/sql/create-orders-after.sql is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:03 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   File:[/github/workspace/src/test/resources/sql/create-orders-before.sql], File_type:[sql], Base_file:[create-orders-before.sql][0m
[0m2025-06-16 21:22:04 [0;34m[TRACE][0m   File:[/github/workspace/src/test/resources/sql/create-orders-before.sql], File extension:[sql], File type: [/github/workspace/src/test/resources/sql/create-orders-before.sql: ASCII text][0m
[0m2025-06-16 21:22:04 [0;34m[TRACE][0m   /github/workspace/src/test/resources/sql/create-orders-before.sql is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   File:[/github/workspace/src/test/resources/sql/create-perfumes-after.sql], File_type:[sql], Base_file:[create-perfumes-after.sql][0m
[0m2025-06-16 21:22:04 [0;34m[TRACE][0m   File:[/github/workspace/src/test/resources/sql/create-perfumes-after.sql], File extension:[sql], File type: [/github/workspace/src/test/resources/sql/create-perfumes-after.sql: ASCII text][0m
[0m2025-06-16 21:22:04 [0;34m[TRACE][0m   /github/workspace/src/test/resources/sql/create-perfumes-after.sql is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   File:[/github/workspace/src/test/resources/sql/create-perfumes-before.sql], File_type:[sql], Base_file:[create-perfumes-before.sql][0m
[0m2025-06-16 21:22:04 [0;34m[TRACE][0m   File:[/github/workspace/src/test/resources/sql/create-perfumes-before.sql], File extension:[sql], File type: [/github/workspace/src/test/resources/sql/create-perfumes-before.sql: ASCII text, with very long lines (559)][0m
[0m2025-06-16 21:22:04 [0;34m[TRACE][0m   /github/workspace/src/test/resources/sql/create-perfumes-before.sql is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   File:[/github/workspace/src/test/resources/sql/create-user-after.sql], File_type:[sql], Base_file:[create-user-after.sql][0m
[0m2025-06-16 21:22:04 [0;34m[TRACE][0m   File:[/github/workspace/src/test/resources/sql/create-user-after.sql], File extension:[sql], File type: [/github/workspace/src/test/resources/sql/create-user-after.sql: ASCII text][0m
[0m2025-06-16 21:22:04 [0;34m[TRACE][0m   /github/workspace/src/test/resources/sql/create-user-after.sql is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   File:[/github/workspace/src/test/resources/sql/create-user-before.sql], File_type:[sql], Base_file:[create-user-before.sql][0m
[0m2025-06-16 21:22:04 [0;34m[TRACE][0m   File:[/github/workspace/src/test/resources/sql/create-user-before.sql], File extension:[sql], File type: [/github/workspace/src/test/resources/sql/create-user-before.sql: ASCII text][0m
[0m2025-06-16 21:22:04 [0;34m[TRACE][0m   /github/workspace/src/test/resources/sql/create-user-before.sql is NOT a supported shell script. Skipping[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   [0m
[0m2025-06-16 21:22:04 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:22:04 [0;34m[INFO][0m   Successfully gathered list of files...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   --- ENV (before running linters) ---[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   ------------------------------------[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   ENV:[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   ACTIONS_CACHE_URL=https://acghubeus1.actions.githubusercontent.com/9ZQUwipDjTdP8AdciGKi7nx60yrbuIDcZzwHm98Mdxc111BEIN/
ACTIONS_RESULTS_URL=https://results-receiver.actions.githubusercontent.com/
ACTIONS_RUNTIME_TOKEN=eyJhbGciOiJSUzI1NiIsImtpZCI6IjM4ODI2YjE3LTZhMzAtNWY5Yi1iMTY5LThiZWI4MjAyZjcyMyIsInR5cCI6IkpXVCIsIng1dCI6InlrTmFZNHFNX3RhNGsyVGdaT0NFWUxrY1lsQSJ9.eyJJZGVudGl0eVR5cGVDbGFpbSI6IlN5c3RlbTpTZXJ2aWNlSWRlbnRpdHkiLCJhYyI6Ilt7XCJTY29wZVwiOlwicmVmcy9oZWFkcy9tYXN0ZXJcIixcIlBlcm1pc3Npb25cIjozfV0iLCJhY3NsIjoiMTAiLCJhdWQiOiJ2c286MGZkM2UxNGYtNzA1OS00MTZhLTlmMzktZWFhMjFiMGU4ZmIzIiwiYmlsbGluZ19vd25lcl9pZCI6Ik9fa2dET0RLN3VOZyIsImV4cCI6MTc1MDEzMTAzMywiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2NsYWltcy9wcmltYXJ5c2lkIjoiZGRkZGRkZGQtZGRkZC1kZGRkLWRkZGQtZGRkZGRkZGRkZGRkIiwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvd3MvMjAwNS8wNS9pZGVudGl0eS9jbGFpbXMvc2lkIjoiZGRkZGRkZGQtZGRkZC1kZGRkLWRkZGQtZGRkZGRkZGRkZGRkIiwiaWF0IjoxNzUwMTA4ODMzLCJpc3MiOiJodHRwczovL3Rva2VuLmFjdGlvbnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tIiwiam9iX2lkIjoiMjhmM2I0NmEtNzYyNi01MDcxLWFhNGItNWQ3YWY0ZmE2YzhiIiwibmFtZWlkIjoiZGRkZGRkZGQtZGRkZC1kZGRkLWRkZGQtZGRkZGRkZGRkZGRkIiwibmJmIjoxNzUwMTA4NTMzLCJvcmNoX2lkIjoiMGNhYmExMDQtODkyNy00ZGQ0LTlkZGItMGVkNTkyMjViZTNmLnN1cGVyLWxpbnRlci1zY2FuLl9fZGVmYXVsdCIsIm93bmVyX2lkIjoiT19rZ0RPREs3dU5nIiwicGxhbl9pZCI6IjBjYWJhMTA0LTg5MjctNGRkNC05ZGRiLTBlZDU5MjI1YmUzZiIsInJ1bl9pZCI6IjE1NjkyMjA5NTU1IiwicnVuX251bWJlciI6IjMwIiwicnVuX3R5cGUiOiJmdWxsIiwicnVubmVyX2lkIjoiMTAwMDAwMTA2NSIsInJ1bm5lcl90eXBlIjoiaG9zdGVkIiwic2NwIjoiQWN0aW9ucy5SZXN1bHRzOjBjYWJhMTA0LTg5MjctNGRkNC05ZGRiLTBlZDU5MjI1YmUzZjoyOGYzYjQ2YS03NjI2LTUwNzEtYWE0Yi01ZDdhZjRmYTZjOGIgQWN0aW9ucy5SdW5uZXI6MGNhYmExMDQtODkyNy00ZGQ0LTlkZGItMGVkNTkyMjViZTNmOjI4ZjNiNDZhLTc2MjYtNTA3MS1hYTRiLTVkN2FmNGZhNmM4YiBBY3Rpb25zLlVwbG9hZEFydGlmYWN0czowY2FiYTEwNC04OTI3LTRkZDQtOWRkYi0wZWQ1OTIyNWJlM2Y6MjhmM2I0NmEtNzYyNi01MDcxLWFhNGItNWQ3YWY0ZmE2YzhiIEFjdGlvbnMuR2VuZXJpY1JlYWQ6MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAwIiwic2hhIjoiY2Q4NTZiN2I0NTczMzRmODEyMWY5ZGJmM2FjMmZhMTk5ZGZlNGVhYSJ9.5J1sWO8UpmctUFCqFMwjXmYrbWjEtP71SjggwF2qdWSgRBigLj2VbBF3gH0t01UYha9mUy0ZsOAT8xRk4ru9LUakrPjO58-fUWxuftDFukI0DMEidPNbWITzl-_9GfhHDVnwAcKS6iUfPuhnpeQ32dPG3bCPcqj_VqEAE532jgo4fLpLsfzf2FwvvvIuyvMXzS1TsDJfNZIJPEfGZnxp1etmCXDQWYnwTmUq1vP2d4421E_528bp0DlI8WKzNt0IGJdDD704wp6J8Jb5mzzlqxAposLjr8HK_opG3NQ5qSOjKrHzTMe8k8eAYE6YLqoxeQnFChXdTH8t6wyjtSKv7Q
ACTIONS_RUNTIME_URL=https://pipelinesghubeus11.actions.githubusercontent.com/9ZQUwipDjTdP8AdciGKi7nx60yrbuIDcZzwHm98Mdxc111BEIN/
ANSIBLE_LINTER_RULES=/action/lib/.automation/.ansible-lint.yml
ARM_LINTER_RULES=/action/lib/.automation/.arm-ttk.psd1
ARM_TTK_PSD1=/usr/lib/microsoft/arm-ttk-master/arm-ttk/arm-ttk.psd1
BUILD_DATE=2023-01-04T06:45:30Z
BUILD_REVISION=d2600eb1bd51e68b2c065501b241c450be01a216
BUILD_VERSION=d2600eb1bd51e68b2c065501b241c450be01a216
CI=true
CLOJURE_LINTER_RULES=/action/lib/.automation/.clj-kondo/config.edn
CLOUDFORMATION_LINTER_RULES=/action/lib/.automation/.cfnlintrc.yml
COFFEESCRIPT_LINTER_RULES=/action/lib/.automation/.coffee-lint.json
CRYPTOGRAPHY_DONT_BUILD_RUST=1
CSS_LINTER_RULES=/action/lib/.automation/.stylelintrc.json
DART_LINTER_RULES=/action/lib/.automation/analysis_options.yml
DEFAULT_ANSIBLE_DIRECTORY=/github/workspace/ansible
DEFAULT_BRANCH=master
DEFAULT_DISABLE_ERRORS=false
DEFAULT_TEST_CASE_ANSIBLE_DIRECTORY=/github/workspace/.automation/test/ansible
DISABLE_ERRORS=true
DOCKERFILE_HADOLINT_LINTER_RULES=/action/lib/.automation/.hadolint.yaml
EDITORCONFIG_LINTER_RULES=/action/lib/.automation/.ecrc
ERRORS_FOUND_ANSIBLE=0
ERRORS_FOUND_ARM=0
ERRORS_FOUND_BASH=0
ERRORS_FOUND_BASH_EXEC=0
ERRORS_FOUND_CLANG_FORMAT=0
ERRORS_FOUND_CLOJURE=0
ERRORS_FOUND_CLOUDFORMATION=0
ERRORS_FOUND_COFFEESCRIPT=0
ERRORS_FOUND_CPP=0
ERRORS_FOUND_CSHARP=0
ERRORS_FOUND_CSS=0
ERRORS_FOUND_DART=0
ERRORS_FOUND_DOCKERFILE_HADOLINT=0
ERRORS_FOUND_EDITORCONFIG=0
ERRORS_FOUND_ENV=0
ERRORS_FOUND_GHERKIN=0
ERRORS_FOUND_GITHUB_ACTIONS=0
ERRORS_FOUND_GITLEAKS=0
ERRORS_FOUND_GO=0
ERRORS_FOUND_GOOGLE_JAVA_FORMAT=0
ERRORS_FOUND_GROOVY=0
ERRORS_FOUND_HTML=0
ERRORS_FOUND_JAVA=0
ERRORS_FOUND_JAVASCRIPT_ES=0
ERRORS_FOUND_JAVASCRIPT_STANDARD=0
ERRORS_FOUND_JSCPD=0
ERRORS_FOUND_JSON=0
ERRORS_FOUND_JSONC=0
ERRORS_FOUND_JSX=0
ERRORS_FOUND_KOTLIN=0
ERRORS_FOUND_KOTLIN_ANDROID=0
ERRORS_FOUND_KUBERNETES_KUBEVAL=0
ERRORS_FOUND_LATEX=0
ERRORS_FOUND_LUA=0
ERRORS_FOUND_MARKDOWN=0
ERRORS_FOUND_NATURAL_LANGUAGE=0
ERRORS_FOUND_OPENAPI=0
ERRORS_FOUND_PERL=0
ERRORS_FOUND_PHP_BUILTIN=0
ERRORS_FOUND_PHP_PHPCS=0
ERRORS_FOUND_PHP_PHPSTAN=0
ERRORS_FOUND_PHP_PSALM=0
ERRORS_FOUND_POWERSHELL=0
ERRORS_FOUND_PROTOBUF=0
ERRORS_FOUND_PYTHON_BLACK=0
ERRORS_FOUND_PYTHON_FLAKE8=0
ERRORS_FOUND_PYTHON_ISORT=0
ERRORS_FOUND_PYTHON_MYPY=0
ERRORS_FOUND_PYTHON_PYLINT=0
ERRORS_FOUND_R=0
ERRORS_FOUND_RAKU=0
ERRORS_FOUND_RUBY=0
ERRORS_FOUND_RUST_2015=0
ERRORS_FOUND_RUST_2018=0
ERRORS_FOUND_RUST_2021=0
ERRORS_FOUND_RUST_CLIPPY=0
ERRORS_FOUND_SCALAFMT=0
ERRORS_FOUND_SHELL_SHFMT=0
ERRORS_FOUND_SNAKEMAKE_LINT=0
ERRORS_FOUND_SNAKEMAKE_SNAKEFMT=0
ERRORS_FOUND_SQL=0
ERRORS_FOUND_SQLFLUFF=0
ERRORS_FOUND_STATES=0
ERRORS_FOUND_TEKTON=0
ERRORS_FOUND_TERRAFORM_TERRASCAN=0
ERRORS_FOUND_TERRAFORM_TFLINT=0
ERRORS_FOUND_TERRAGRUNT=0
ERRORS_FOUND_TSX=0
ERRORS_FOUND_TYPESCRIPT_ES=0
ERRORS_FOUND_TYPESCRIPT_STANDARD=0
ERRORS_FOUND_XML=0
ERRORS_FOUND_YAML=0
ERROR_ON_MISSING_EXEC_BIT=false
FILTER_REGEX_EXCLUDE=.*/securityReports/.*
GHERKIN_LINTER_RULES=/action/lib/.automation/.gherkin-lintrc
GITHUB_ACTION=__github_super-linter
GITHUB_ACTIONS=true
GITHUB_ACTIONS_LINTER_RULES=/action/lib/.automation/actionlint.yml
GITHUB_ACTION_REF=v4
GITHUB_ACTION_REPOSITORY=github/super-linter
GITHUB_ACTOR=PedroNogueiira
GITHUB_ACTOR_ID=109768792
GITHUB_API_URL=https://api.github.com
GITHUB_BASE_REF=
GITHUB_ENV=/github/file_commands/set_env_7f80ad09-2f5d-4314-a32d-df1563ccb532
GITHUB_EVENT_NAME=workflow_dispatch
GITHUB_EVENT_PATH=/github/workflow/event.json
GITHUB_GRAPHQL_URL=https://api.github.com/graphql
GITHUB_HEAD_REF=
GITHUB_JOB=super-linter-scan
GITHUB_OUTPUT=/github/file_commands/set_output_7f80ad09-2f5d-4314-a32d-df1563ccb532
GITHUB_PATH=/github/file_commands/add_path_7f80ad09-2f5d-4314-a32d-df1563ccb532
GITHUB_REF=refs/heads/master
GITHUB_REF_NAME=master
GITHUB_REF_PROTECTED=false
GITHUB_REF_TYPE=branch
GITHUB_REPOSITORY=desofs2025wednap1/desofs2025_wed_nap_1
GITHUB_REPOSITORY_ID=987967198
GITHUB_REPOSITORY_OWNER=desofs2025wednap1
GITHUB_REPOSITORY_OWNER_ID=212790838
GITHUB_RETENTION_DAYS=90
GITHUB_RUN_ATTEMPT=1
GITHUB_RUN_ID=15692209555
GITHUB_RUN_NUMBER=30
GITHUB_SERVER_URL=https://github.com
GITHUB_SHA=cd856b7b457334f8121f9dbf3ac2fa199dfe4eaa
GITHUB_STATE=/github/file_commands/save_state_7f80ad09-2f5d-4314-a32d-df1563ccb532
GITHUB_STEP_SUMMARY=/github/file_commands/step_summary_7f80ad09-2f5d-4314-a32d-df1563ccb532
GITHUB_TOKEN=ghs_VfHZCp1aVm4cLFrPo2E6eliHkRyQkA3PxPYe
GITHUB_TRIGGERING_ACTOR=PedroNogueiira
GITHUB_WORKFLOW=Super DevSecOps Pipeline
GITHUB_WORKFLOW_REF=desofs2025wednap1/desofs2025_wed_nap_1/.github/workflows/superpipeline.yml@refs/heads/master
GITHUB_WORKFLOW_SHA=cd856b7b457334f8121f9dbf3ac2fa199dfe4eaa
GITHUB_WORKSPACE=/github/workspace
GITLEAKS_LINTER_RULES=/action/lib/.automation/.gitleaks.toml
GO_LINTER_RULES=/action/lib/.automation/.golangci.yml
GROOVY_LINTER_RULES=/action/lib/.automation/.groovylintrc.json
HOME=/github/home
HOSTNAME=5ee10d9ebf36
HTML_LINTER_RULES=/action/lib/.automation/.htmlhintrc
IMAGE=standard
JAVASCRIPT_ES_LINTER_RULES=/action/lib/.automation/.eslintrc.yml
JAVASCRIPT_STANDARD_LINTER_RULES=--env browser --env es6 --env jest
JAVA_LINTER_RULES=/action/lib/.automation/sun_checks.xml
JSCPD_LINTER_RULES=/action/lib/.automation/.jscpd.json
JSX_LINTER_RULES=/action/lib/.automation/.eslintrc.yml
LATEX_LINTER_RULES=/action/lib/.automation/.chktexrc
LOG_DEBUG=
LOG_ERROR=
LOG_FILE=super-linter-reports/super-linter.log
LOG_LEVEL=INFO
LOG_NOTICE=
LOG_TEMP=/tmp/tmp.hUP0B19Pzp
LOG_TRACE=
LOG_VERBOSE=
LOG_WARN=
LUA_LINTER_RULES=/action/lib/.automation/.luacheckrc
MARKDOWN_LINTER_RULES=/action/lib/.automation/.markdown-lint.yml
NATURAL_LANGUAGE_LINTER_RULES=/action/lib/.automation/.textlintrc
NC=[0m
OPENAPI_LINTER_RULES=/action/lib/.automation/.openapirc.yml
OUTPUT_DETAILS=detailed
OUTPUT_FOLDER=super-linter-reports
OUTPUT_FORMAT=json
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/node_modules/.bin:/venvs/ansible-lint/bin:/venvs/black/bin:/venvs/cfn-lint/bin:/venvs/cpplint/bin:/venvs/flake8/bin:/venvs/isort/bin:/venvs/mypy/bin:/venvs/pylint/bin:/venvs/snakefmt/bin:/venvs/snakemake/bin:/venvs/sqlfluff/bin:/venvs/yamllint/bin:/venvs/yq/bin:/var/cache/dotnet/tools:/usr/share/dotnet
PGPASSWORD=root
PHP_BUILTIN_LINTER_RULES=/action/lib/.automation/php.ini
PHP_PHPCS_LINTER_RULES=/action/lib/.automation/phpcs.xml
PHP_PHPSTAN_LINTER_RULES=/action/lib/.automation/phpstan.neon
PHP_PSALM_LINTER_RULES=/action/lib/.automation/psalm.xml
POSTGRES_PASSWORD=root
POSTGRES_USER=postgres
POWERSHELL_LINTER_RULES=/action/lib/.automation/.powershell-psscriptanalyzer.psd1
PROTOBUF_LINTER_RULES=/action/lib/.automation/.protolintrc.yml
PWD=/github/workspace
PYTHON_BLACK_LINTER_RULES=/action/lib/.automation/.python-black
PYTHON_FLAKE8_LINTER_RULES=/action/lib/.automation/.flake8
PYTHON_ISORT_LINTER_RULES=/action/lib/.automation/.isort.cfg
PYTHON_MYPY_LINTER_RULES=/action/lib/.automation/.mypy.ini
PYTHON_PYLINT_LINTER_RULES=/action/lib/.automation/.python-lint
RUBY_LINTER_RULES=/action/lib/.automation/.ruby-lint.yml
RUNNER_ARCH=X64
RUNNER_ENVIRONMENT=github-hosted
RUNNER_NAME=GitHub Actions 1000001065
RUNNER_OS=Linux
RUNNER_TEMP=/home/runner/work/_temp
RUNNER_TOOL_CACHE=/opt/hostedtoolcache
RUNNER_WORKSPACE=/home/runner/work/desofs2025_wed_nap_1
R_LINTER_RULES=/action/lib/.automation/.lintr
SCALAFMT_LINTER_RULES=/action/lib/.automation/.scalafmt.conf
SHLVL=1
SNAKEMAKE_SNAKEFMT_LINTER_RULES=/action/lib/.automation/.snakefmt.toml
SNYK_TOKEN=f48b41e2-30e3-44d5-a464-b1af7ad93ae3
SQLFLUFF_LINTER_RULES=/action/lib/.automation//.sqlfluff
SQL_LINTER_RULES=/action/lib/.automation/.sql-config.json
TERRAFORM_TERRASCAN_LINTER_RULES=/action/lib/.automation/terrascan.toml
TERRAFORM_TFLINT_LINTER_RULES=/action/lib/.automation/.tflint.hcl
TEST_CASE_FOLDER=.automation/test
TFLINT_PLUGIN_DIR=/root/.tflint.d/plugins
TSX_LINTER_RULES=/action/lib/.automation/.eslintrc.yml
TYPESCRIPT_ES_LINTER_RULES=/action/lib/.automation/.eslintrc.yml
TYPESCRIPT_STANDARD_LINTER_RULES=--env browser --env es6 --env jest
TYPESCRIPT_STANDARD_TSCONFIG_LINTER_RULES=/action/lib/.automation/tsconfig.json
VALIDATE_ANSIBLE=true
VALIDATE_ARM=true
VALIDATE_BASH=true
VALIDATE_BASH_EXEC=true
VALIDATE_CLANG_FORMAT=true
VALIDATE_CLOJURE=true
VALIDATE_CLOUDFORMATION=true
VALIDATE_COFFEESCRIPT=true
VALIDATE_CPP=true
VALIDATE_CSHARP=true
VALIDATE_CSS=true
VALIDATE_DART=true
VALIDATE_DOCKERFILE_HADOLINT=true
VALIDATE_EDITORCONFIG=true
VALIDATE_ENV=true
VALIDATE_GHERKIN=true
VALIDATE_GITHUB_ACTIONS=true
VALIDATE_GITLEAKS=true
VALIDATE_GO=true
VALIDATE_GOOGLE_JAVA_FORMAT=true
VALIDATE_GROOVY=true
VALIDATE_HTML=true
VALIDATE_JAVA=true
VALIDATE_JAVASCRIPT_ES=true
VALIDATE_JAVASCRIPT_STANDARD=true
VALIDATE_JSCPD=true
VALIDATE_JSCPD_ALL_CODEBASE=false
VALIDATE_JSON=true
VALIDATE_JSONC=true
VALIDATE_JSX=true
VALIDATE_KOTLIN=true
VALIDATE_KOTLIN_ANDROID=true
VALIDATE_KUBERNETES_KUBEVAL=true
VALIDATE_LATEX=true
VALIDATE_LUA=true
VALIDATE_MARKDOWN=true
VALIDATE_NATURAL_LANGUAGE=true
VALIDATE_OPENAPI=true
VALIDATE_PERL=true
VALIDATE_PHP_BUILTIN=true
VALIDATE_PHP_PHPCS=true
VALIDATE_PHP_PHPSTAN=true
VALIDATE_PHP_PSALM=true
VALIDATE_POWERSHELL=true
VALIDATE_PROTOBUF=true
VALIDATE_PYTHON_BLACK=true
VALIDATE_PYTHON_FLAKE8=true
VALIDATE_PYTHON_ISORT=true
VALIDATE_PYTHON_MYPY=true
VALIDATE_PYTHON_PYLINT=true
VALIDATE_R=true
VALIDATE_RAKU=true
VALIDATE_RUBY=true
VALIDATE_RUST_2015=true
VALIDATE_RUST_2018=true
VALIDATE_RUST_2021=true
VALIDATE_RUST_CLIPPY=true
VALIDATE_SCALAFMT=true
VALIDATE_SHELL_SHFMT=true
VALIDATE_SNAKEMAKE_LINT=true
VALIDATE_SNAKEMAKE_SNAKEFMT=true
VALIDATE_SQL=true
VALIDATE_SQLFLUFF=true
VALIDATE_STATES=true
VALIDATE_TEKTON=true
VALIDATE_TERRAFORM_TERRASCAN=true
VALIDATE_TERRAFORM_TFLINT=true
VALIDATE_TERRAGRUNT=true
VALIDATE_TSX=true
VALIDATE_TYPESCRIPT_ES=true
VALIDATE_TYPESCRIPT_STANDARD=true
VALIDATE_XML=true
VALIDATE_YAML=true
VERSION_FILE=/action/lib/functions/linterVersions.txt
YAML_LINTER_RULES=/action/lib/.automation/.yaml-lint.yml
_=/bin/printenv[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   ------------------------------------[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Running linter for the ANSIBLE language...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_ANSIBLE...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting LINTER_NAME to ansible-lint...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to ansible-lint -vv -c /action/lib/.automation/.ansible-lint.yml...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_ANSIBLE...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   FILE_ARRAY_ANSIBLE file array contents: [0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Invoking ansible-lint linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[ANSIBLE][0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Running linter for the ARM language...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_ARM...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting LINTER_NAME to arm-ttk...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to Import-Module /usr/lib/microsoft/arm-ttk-master/arm-ttk/arm-ttk.psd1 ; ${config} = $(Import-PowerShellDataFile -Path /action/lib/.automation/.arm-ttk.psd1) ; Test-AzTemplate @config -TemplatePath...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_ARM...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   FILE_ARRAY_ARM file array contents: [0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Invoking arm-ttk linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[ARM][0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Running linter for the BASH language...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_BASH...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting LINTER_NAME to shellcheck...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to shellcheck --color --external-sources...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_BASH...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   FILE_ARRAY_BASH file array contents: /github/workspace/mvnw[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Invoking shellcheck linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   SKIP_FLAG: 0, list of files to lint: /github/workspace/mvnw[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Workspace path: /github/workspace[0m
[0m2025-06-16 21:22:04 [0;34m[INFO][0m   [0m
[0m2025-06-16 21:22:04 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:22:04 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Running LintCodebase. FILE_TYPE: BASH. Linter name: shellcheck, linter command: shellcheck --color --external-sources, TEST_CASE_RUN: false, FILTER_REGEX_INCLUDE: , FILTER_REGEX_EXCLUDE: .*/securityReports/.* files to lint: /github/workspace/mvnw[0m
[0m2025-06-16 21:22:04 [0;34m[INFO][0m   Linting [BASH] files...[0m
[0m2025-06-16 21:22:04 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:22:04 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/mvnw[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   FILE_STATUS (mvnw) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   File: /github/workspace/mvnw, FILE_NAME: mvnw, DIR_NAME:/github/workspace, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: bash, TEST_CASE_DIRECTORY: .automation/test/bash[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   BASH expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/bash/[0m
[0m2025-06-16 21:22:04 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:04 [0;34m[INFO][0m   File:[/github/workspace/mvnw][0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Found errors. Error code: 1, File type: BASH, Error on missing exec bit: false[0m
[0m2025-06-16 21:22:04 [0;31m[ERROR][0m   Found errors in [shellcheck] linter![0m
[0m2025-06-16 21:22:04 [0;31m[ERROR][0m   Error code: 1. Command output:[0m
------

[1mIn /github/workspace/mvnw line 40:[0m
[0m    . /etc/mavenrc[0m
[32m      ^----------^ SC1091 (info): Not following: /etc/mavenrc: openBinaryFile: does not exist (No such file or directory)[0m


[1mIn /github/workspace/mvnw line 44:[0m
[0m    . "$HOME/.mavenrc"[0m
[32m      ^--------------^ SC1091 (info): Not following: ./.mavenrc: openBinaryFile: does not exist (No such file or directory)[0m


[1mIn /github/workspace/mvnw line 53:[0m
[0mcase "`uname`" in[0m
[32m      ^-----^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
case "$(uname)" in


[1mIn /github/workspace/mvnw line 61:[0m
[0m        export JAVA_HOME="`/usr/libexec/java_home`"[0m
[33m               ^-------^ SC2155 (warning): Declare and assign separately to avoid masking return values.[0m
[32m                          ^----------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
        export JAVA_HOME="$(/usr/libexec/java_home)"


[1mIn /github/workspace/mvnw line 71:[0m
[0m    JAVA_HOME=`java-config --jre-home`[0m
[32m              ^----------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
    JAVA_HOME=$(java-config --jre-home)


[1mIn /github/workspace/mvnw line 81:[0m
[0m    ls=`ls -ld "$PRG"`[0m
[32m       ^-------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
    ls=$(ls -ld "$PRG")


[1mIn /github/workspace/mvnw line 82:[0m
[0m    link=`expr "$ls" : '.*-> \(.*\)$'`[0m
[32m         ^---------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
    link=$(expr "$ls" : '.*-> \(.*\)$')


[1mIn /github/workspace/mvnw line 86:[0m
[0m      PRG="`dirname "$PRG"`/$link"[0m
[32m           ^--------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
      PRG="$(dirname "$PRG")/$link"


[1mIn /github/workspace/mvnw line 90:[0m
[0m  saveddir=`pwd`[0m
[32m           ^---^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
  saveddir=$(pwd)


[1mIn /github/workspace/mvnw line 92:[0m
[0m  M2_HOME=`dirname "$PRG"`/..[0m
[32m          ^--------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
  M2_HOME=$(dirname "$PRG")/..


[1mIn /github/workspace/mvnw line 95:[0m
[0m  M2_HOME=`cd "$M2_HOME" && pwd`[0m
[32m          ^--------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
  M2_HOME=$(cd "$M2_HOME" && pwd)


[1mIn /github/workspace/mvnw line 97:[0m
[0m  cd "$saveddir"[0m
[33m  ^------------^ SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.[0m

[1mDid you mean: [0m
  cd "$saveddir" || exit


[1mIn /github/workspace/mvnw line 104:[0m
[0m    M2_HOME=`cygpath --unix "$M2_HOME"`[0m
[32m            ^-------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
    M2_HOME=$(cygpath --unix "$M2_HOME")


[1mIn /github/workspace/mvnw line 106:[0m
[0m    JAVA_HOME=`cygpath --unix "$JAVA_HOME"`[0m
[32m              ^---------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
    JAVA_HOME=$(cygpath --unix "$JAVA_HOME")


[1mIn /github/workspace/mvnw line 108:[0m
[0m    CLASSPATH=`cygpath --path --unix "$CLASSPATH"`[0m
[32m              ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
    CLASSPATH=$(cygpath --path --unix "$CLASSPATH")


[1mIn /github/workspace/mvnw line 114:[0m
[0m    M2_HOME="`(cd "$M2_HOME"; pwd)`"[0m
[32m             ^--------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m
[33m               ^-----------^ SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.[0m

[1mDid you mean: [0m
    M2_HOME="$((cd "$M2_HOME" || exit; pwd))"


[1mIn /github/workspace/mvnw line 116:[0m
[0m    JAVA_HOME="`(cd "$JAVA_HOME"; pwd)`"[0m
[32m               ^----------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m
[33m                 ^-------------^ SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.[0m

[1mDid you mean: [0m
    JAVA_HOME="$((cd "$JAVA_HOME" || exit; pwd))"


[1mIn /github/workspace/mvnw line 120:[0m
[0m  javaExecutable="`which javac`"[0m
[32m                  ^-----------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
  javaExecutable="$(which javac)"


[1mIn /github/workspace/mvnw line 121:[0m
[0m  if [ -n "$javaExecutable" ] && ! [ "`expr \"$javaExecutable\" : '\([^ ]*\)'`" = "no" ]; then[0m
[32m                                      ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
  if [ -n "$javaExecutable" ] && ! [ "$(expr \"$javaExecutable\" : '\([^ ]*\)')" = "no" ]; then


[1mIn /github/workspace/mvnw line 123:[0m
[0m    readLink=`which readlink`[0m
[32m             ^--------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
    readLink=$(which readlink)


[1mIn /github/workspace/mvnw line 124:[0m
[0m    if [ ! `expr "$readLink" : '\([^ ]*\)'` = "no" ]; then[0m
[33m           ^-- SC2046 (warning): Quote this to prevent word splitting.[0m
[32m           ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
    if [ ! $(expr "$readLink" : '\([^ ]*\)') = "no" ]; then


[1mIn /github/workspace/mvnw line 126:[0m
[0m        javaHome="`dirname \"$javaExecutable\"`"[0m
[32m                  ^---------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
        javaHome="$(dirname \"$javaExecutable\")"


[1mIn /github/workspace/mvnw line 127:[0m
[0m        javaExecutable="`cd \"$javaHome\" && pwd -P`/javac"[0m
[32m                        ^--------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
        javaExecutable="$(cd \"$javaHome\" && pwd -P)/javac"


[1mIn /github/workspace/mvnw line 129:[0m
[0m        javaExecutable="`readlink -f \"$javaExecutable\"`"[0m
[32m                        ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
        javaExecutable="$(readlink -f \"$javaExecutable\")"


[1mIn /github/workspace/mvnw line 131:[0m
[0m      javaHome="`dirname \"$javaExecutable\"`"[0m
[32m                ^---------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
      javaHome="$(dirname \"$javaExecutable\")"


[1mIn /github/workspace/mvnw line 132:[0m
[0m      javaHome=`expr "$javaHome" : '\(.*\)/bin'`[0m
[32m               ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
      javaHome=$(expr "$javaHome" : '\(.*\)/bin')


[1mIn /github/workspace/mvnw line 148:[0m
[0m    JAVACMD="`which java`"[0m
[32m             ^----------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
    JAVACMD="$(which java)"


[1mIn /github/workspace/mvnw line 162:[0m
[0mCLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher[0m
[33m^------------------^ SC2034 (warning): CLASSWORLDS_LAUNCHER appears unused. Verify use (or export if used externally).[0m


[1mIn /github/workspace/mvnw line 183:[0m
[0m      wdir=`cd "$wdir/.."; pwd`[0m
[32m           ^------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m
[33m            ^-----------^ SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.[0m

[1mDid you mean: [0m
      wdir=$(cd "$wdir/.." || exit; pwd)


[1mIn /github/workspace/mvnw line 193:[0m
[0m    echo "$(tr -s '
' ' ' < "$1")"[0m
[32m         ^------------------------^ SC2005 (style): Useless echo? Instead of 'echo $(cmd)', just use 'cmd'.[0m


[1mIn /github/workspace/mvnw line 197:[0m
[0mBASE_DIR=`find_maven_basedir "$(pwd)"`[0m
[32m         ^---------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
BASE_DIR=$(find_maven_basedir "$(pwd)")


[1mIn /github/workspace/mvnw line 219:[0m
[0m    while IFS="=" read key value; do[0m
[32m                  ^--^ SC2162 (info): read without -r will mangle backslashes.[0m


[1mIn /github/workspace/mvnw line 228:[0m
[0m      wrapperJarPath=`cygpath --path --windows "$wrapperJarPath"`[0m
[32m                     ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
      wrapperJarPath=$(cygpath --path --windows "$wrapperJarPath")


[1mIn /github/workspace/mvnw line 238:[0m
[0m            wget --http-user=$MVNW_USERNAME --http-password=$MVNW_PASSWORD "$jarUrl" -O "$wrapperJarPath"[0m
[32m                             ^------------^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m
[32m                                                            ^------------^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
            wget --http-user="$MVNW_USERNAME" --http-password="$MVNW_PASSWORD" "$jarUrl" -O "$wrapperJarPath"


[1mIn /github/workspace/mvnw line 247:[0m
[0m            curl --user $MVNW_USERNAME:$MVNW_PASSWORD -o "$wrapperJarPath" "$jarUrl" -f[0m
[32m                        ^------------^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m
[32m                                       ^------------^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
            curl --user "$MVNW_USERNAME":"$MVNW_PASSWORD" -o "$wrapperJarPath" "$jarUrl" -f


[1mIn /github/workspace/mvnw line 257:[0m
[0m          javaClass=`cygpath --path --windows "$javaClass"`[0m
[32m                    ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
          javaClass=$(cygpath --path --windows "$javaClass")


[1mIn /github/workspace/mvnw line 281:[0m
[0mexport MAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-"$BASE_DIR"}[0m
[32m                            ^---------------------------^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
export MAVEN_PROJECTBASEDIR="${MAVEN_BASEDIR:-"$BASE_DIR"}"


[1mIn /github/workspace/mvnw line 283:[0m
[0m  echo $MAVEN_PROJECTBASEDIR[0m
[32m       ^-------------------^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
  echo "$MAVEN_PROJECTBASEDIR"


[1mIn /github/workspace/mvnw line 290:[0m
[0m    M2_HOME=`cygpath --path --windows "$M2_HOME"`[0m
[32m            ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
    M2_HOME=$(cygpath --path --windows "$M2_HOME")


[1mIn /github/workspace/mvnw line 292:[0m
[0m    JAVA_HOME=`cygpath --path --windows "$JAVA_HOME"`[0m
[32m              ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
    JAVA_HOME=$(cygpath --path --windows "$JAVA_HOME")


[1mIn /github/workspace/mvnw line 294:[0m
[0m    CLASSPATH=`cygpath --path --windows "$CLASSPATH"`[0m
[32m              ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
    CLASSPATH=$(cygpath --path --windows "$CLASSPATH")


[1mIn /github/workspace/mvnw line 296:[0m
[0m    MAVEN_PROJECTBASEDIR=`cygpath --path --windows "$MAVEN_PROJECTBASEDIR"`[0m
[32m                         ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
    MAVEN_PROJECTBASEDIR=$(cygpath --path --windows "$MAVEN_PROJECTBASEDIR")


[1mIn /github/workspace/mvnw line 301:[0m
[0mMAVEN_CMD_LINE_ARGS="$MAVEN_CONFIG $@"[0m
[33m                    ^----------------^ SC2124 (warning): Assigning an array to a string! Assign as array, or use * instead of @ to concatenate.[0m


[1mIn /github/workspace/mvnw line 307:[0m
[0m  $MAVEN_OPTS \[0m
[32m  ^---------^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
  "$MAVEN_OPTS" \


[1mIn /github/workspace/mvnw line 310:[0m
[0m  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG "$@"[0m
[32m                      ^-----------^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
  ${WRAPPER_LAUNCHER} "$MAVEN_CONFIG" "$@"

For more information:
  https://www.shellcheck.net/wiki/SC2034 -- CLASSWORLDS_LAUNCHER appears unus...
  https://www.shellcheck.net/wiki/SC2046 -- Quote this to prevent word splitt...
  https://www.shellcheck.net/wiki/SC2124 -- Assigning an array to a string! A...
------[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Error code: 1. Command output:[0m
------

[1mIn /github/workspace/mvnw line 40:[0m
[0m    . /etc/mavenrc[0m
[32m      ^----------^ SC1091 (info): Not following: /etc/mavenrc: openBinaryFile: does not exist (No such file or directory)[0m


[1mIn /github/workspace/mvnw line 44:[0m
[0m    . "$HOME/.mavenrc"[0m
[32m      ^--------------^ SC1091 (info): Not following: ./.mavenrc: openBinaryFile: does not exist (No such file or directory)[0m


[1mIn /github/workspace/mvnw line 53:[0m
[0mcase "`uname`" in[0m
[32m      ^-----^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
case "$(uname)" in


[1mIn /github/workspace/mvnw line 61:[0m
[0m        export JAVA_HOME="`/usr/libexec/java_home`"[0m
[33m               ^-------^ SC2155 (warning): Declare and assign separately to avoid masking return values.[0m
[32m                          ^----------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
        export JAVA_HOME="$(/usr/libexec/java_home)"


[1mIn /github/workspace/mvnw line 71:[0m
[0m    JAVA_HOME=`java-config --jre-home`[0m
[32m              ^----------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
    JAVA_HOME=$(java-config --jre-home)


[1mIn /github/workspace/mvnw line 81:[0m
[0m    ls=`ls -ld "$PRG"`[0m
[32m       ^-------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
    ls=$(ls -ld "$PRG")


[1mIn /github/workspace/mvnw line 82:[0m
[0m    link=`expr "$ls" : '.*-> \(.*\)$'`[0m
[32m         ^---------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
    link=$(expr "$ls" : '.*-> \(.*\)$')


[1mIn /github/workspace/mvnw line 86:[0m
[0m      PRG="`dirname "$PRG"`/$link"[0m
[32m           ^--------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
      PRG="$(dirname "$PRG")/$link"


[1mIn /github/workspace/mvnw line 90:[0m
[0m  saveddir=`pwd`[0m
[32m           ^---^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
  saveddir=$(pwd)


[1mIn /github/workspace/mvnw line 92:[0m
[0m  M2_HOME=`dirname "$PRG"`/..[0m
[32m          ^--------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
  M2_HOME=$(dirname "$PRG")/..


[1mIn /github/workspace/mvnw line 95:[0m
[0m  M2_HOME=`cd "$M2_HOME" && pwd`[0m
[32m          ^--------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
  M2_HOME=$(cd "$M2_HOME" && pwd)


[1mIn /github/workspace/mvnw line 97:[0m
[0m  cd "$saveddir"[0m
[33m  ^------------^ SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.[0m

[1mDid you mean: [0m
  cd "$saveddir" || exit


[1mIn /github/workspace/mvnw line 104:[0m
[0m    M2_HOME=`cygpath --unix "$M2_HOME"`[0m
[32m            ^-------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
    M2_HOME=$(cygpath --unix "$M2_HOME")


[1mIn /github/workspace/mvnw line 106:[0m
[0m    JAVA_HOME=`cygpath --unix "$JAVA_HOME"`[0m
[32m              ^---------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
    JAVA_HOME=$(cygpath --unix "$JAVA_HOME")


[1mIn /github/workspace/mvnw line 108:[0m
[0m    CLASSPATH=`cygpath --path --unix "$CLASSPATH"`[0m
[32m              ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
    CLASSPATH=$(cygpath --path --unix "$CLASSPATH")


[1mIn /github/workspace/mvnw line 114:[0m
[0m    M2_HOME="`(cd "$M2_HOME"; pwd)`"[0m
[32m             ^--------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m
[33m               ^-----------^ SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.[0m

[1mDid you mean: [0m
    M2_HOME="$((cd "$M2_HOME" || exit; pwd))"


[1mIn /github/workspace/mvnw line 116:[0m
[0m    JAVA_HOME="`(cd "$JAVA_HOME"; pwd)`"[0m
[32m               ^----------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m
[33m                 ^-------------^ SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.[0m

[1mDid you mean: [0m
    JAVA_HOME="$((cd "$JAVA_HOME" || exit; pwd))"


[1mIn /github/workspace/mvnw line 120:[0m
[0m  javaExecutable="`which javac`"[0m
[32m                  ^-----------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
  javaExecutable="$(which javac)"


[1mIn /github/workspace/mvnw line 121:[0m
[0m  if [ -n "$javaExecutable" ] && ! [ "`expr \"$javaExecutable\" : '\([^ ]*\)'`" = "no" ]; then[0m
[32m                                      ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
  if [ -n "$javaExecutable" ] && ! [ "$(expr \"$javaExecutable\" : '\([^ ]*\)')" = "no" ]; then


[1mIn /github/workspace/mvnw line 123:[0m
[0m    readLink=`which readlink`[0m
[32m             ^--------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
    readLink=$(which readlink)


[1mIn /github/workspace/mvnw line 124:[0m
[0m    if [ ! `expr "$readLink" : '\([^ ]*\)'` = "no" ]; then[0m
[33m           ^-- SC2046 (warning): Quote this to prevent word splitting.[0m
[32m           ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
    if [ ! $(expr "$readLink" : '\([^ ]*\)') = "no" ]; then


[1mIn /github/workspace/mvnw line 126:[0m
[0m        javaHome="`dirname \"$javaExecutable\"`"[0m
[32m                  ^---------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
        javaHome="$(dirname \"$javaExecutable\")"


[1mIn /github/workspace/mvnw line 127:[0m
[0m        javaExecutable="`cd \"$javaHome\" && pwd -P`/javac"[0m
[32m                        ^--------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
        javaExecutable="$(cd \"$javaHome\" && pwd -P)/javac"


[1mIn /github/workspace/mvnw line 129:[0m
[0m        javaExecutable="`readlink -f \"$javaExecutable\"`"[0m
[32m                        ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
        javaExecutable="$(readlink -f \"$javaExecutable\")"


[1mIn /github/workspace/mvnw line 131:[0m
[0m      javaHome="`dirname \"$javaExecutable\"`"[0m
[32m                ^---------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
      javaHome="$(dirname \"$javaExecutable\")"


[1mIn /github/workspace/mvnw line 132:[0m
[0m      javaHome=`expr "$javaHome" : '\(.*\)/bin'`[0m
[32m               ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
      javaHome=$(expr "$javaHome" : '\(.*\)/bin')


[1mIn /github/workspace/mvnw line 148:[0m
[0m    JAVACMD="`which java`"[0m
[32m             ^----------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
    JAVACMD="$(which java)"


[1mIn /github/workspace/mvnw line 162:[0m
[0mCLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher[0m
[33m^------------------^ SC2034 (warning): CLASSWORLDS_LAUNCHER appears unused. Verify use (or export if used externally).[0m


[1mIn /github/workspace/mvnw line 183:[0m
[0m      wdir=`cd "$wdir/.."; pwd`[0m
[32m           ^------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m
[33m            ^-----------^ SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.[0m

[1mDid you mean: [0m
      wdir=$(cd "$wdir/.." || exit; pwd)


[1mIn /github/workspace/mvnw line 193:[0m
[0m    echo "$(tr -s '
' ' ' < "$1")"[0m
[32m         ^------------------------^ SC2005 (style): Useless echo? Instead of 'echo $(cmd)', just use 'cmd'.[0m


[1mIn /github/workspace/mvnw line 197:[0m
[0mBASE_DIR=`find_maven_basedir "$(pwd)"`[0m
[32m         ^---------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
BASE_DIR=$(find_maven_basedir "$(pwd)")


[1mIn /github/workspace/mvnw line 219:[0m
[0m    while IFS="=" read key value; do[0m
[32m                  ^--^ SC2162 (info): read without -r will mangle backslashes.[0m


[1mIn /github/workspace/mvnw line 228:[0m
[0m      wrapperJarPath=`cygpath --path --windows "$wrapperJarPath"`[0m
[32m                     ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
      wrapperJarPath=$(cygpath --path --windows "$wrapperJarPath")


[1mIn /github/workspace/mvnw line 238:[0m
[0m            wget --http-user=$MVNW_USERNAME --http-password=$MVNW_PASSWORD "$jarUrl" -O "$wrapperJarPath"[0m
[32m                             ^------------^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m
[32m                                                            ^------------^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
            wget --http-user="$MVNW_USERNAME" --http-password="$MVNW_PASSWORD" "$jarUrl" -O "$wrapperJarPath"


[1mIn /github/workspace/mvnw line 247:[0m
[0m            curl --user $MVNW_USERNAME:$MVNW_PASSWORD -o "$wrapperJarPath" "$jarUrl" -f[0m
[32m                        ^------------^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m
[32m                                       ^------------^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
            curl --user "$MVNW_USERNAME":"$MVNW_PASSWORD" -o "$wrapperJarPath" "$jarUrl" -f


[1mIn /github/workspace/mvnw line 257:[0m
[0m          javaClass=`cygpath --path --windows "$javaClass"`[0m
[32m                    ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
          javaClass=$(cygpath --path --windows "$javaClass")


[1mIn /github/workspace/mvnw line 281:[0m
[0mexport MAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-"$BASE_DIR"}[0m
[32m                            ^---------------------------^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
export MAVEN_PROJECTBASEDIR="${MAVEN_BASEDIR:-"$BASE_DIR"}"


[1mIn /github/workspace/mvnw line 283:[0m
[0m  echo $MAVEN_PROJECTBASEDIR[0m
[32m       ^-------------------^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
  echo "$MAVEN_PROJECTBASEDIR"


[1mIn /github/workspace/mvnw line 290:[0m
[0m    M2_HOME=`cygpath --path --windows "$M2_HOME"`[0m
[32m            ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
    M2_HOME=$(cygpath --path --windows "$M2_HOME")


[1mIn /github/workspace/mvnw line 292:[0m
[0m    JAVA_HOME=`cygpath --path --windows "$JAVA_HOME"`[0m
[32m              ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
    JAVA_HOME=$(cygpath --path --windows "$JAVA_HOME")


[1mIn /github/workspace/mvnw line 294:[0m
[0m    CLASSPATH=`cygpath --path --windows "$CLASSPATH"`[0m
[32m              ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
    CLASSPATH=$(cygpath --path --windows "$CLASSPATH")


[1mIn /github/workspace/mvnw line 296:[0m
[0m    MAVEN_PROJECTBASEDIR=`cygpath --path --windows "$MAVEN_PROJECTBASEDIR"`[0m
[32m                         ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.[0m

[1mDid you mean: [0m
    MAVEN_PROJECTBASEDIR=$(cygpath --path --windows "$MAVEN_PROJECTBASEDIR")


[1mIn /github/workspace/mvnw line 301:[0m
[0mMAVEN_CMD_LINE_ARGS="$MAVEN_CONFIG $@"[0m
[33m                    ^----------------^ SC2124 (warning): Assigning an array to a string! Assign as array, or use * instead of @ to concatenate.[0m


[1mIn /github/workspace/mvnw line 307:[0m
[0m  $MAVEN_OPTS \[0m
[32m  ^---------^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
  "$MAVEN_OPTS" \


[1mIn /github/workspace/mvnw line 310:[0m
[0m  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG "$@"[0m
[32m                      ^-----------^ SC2086 (info): Double quote to prevent globbing and word splitting.[0m

[1mDid you mean: [0m
  ${WRAPPER_LAUNCHER} "$MAVEN_CONFIG" "$@"

For more information:
  https://www.shellcheck.net/wiki/SC2034 -- CLASSWORLDS_LAUNCHER appears unus...
  https://www.shellcheck.net/wiki/SC2046 -- Quote this to prevent word splitt...
  https://www.shellcheck.net/wiki/SC2124 -- Assigning an array to a string! A...
------[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Running linter for the BASH_EXEC language...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_BASH_EXEC...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting LINTER_NAME to bash-exec...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to bash-exec...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_BASH_EXEC...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   FILE_ARRAY_BASH_EXEC file array contents: /github/workspace/mvnw[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Invoking bash-exec linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   SKIP_FLAG: 0, list of files to lint: /github/workspace/mvnw[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Workspace path: /github/workspace[0m
[0m2025-06-16 21:22:04 [0;34m[INFO][0m   [0m
[0m2025-06-16 21:22:04 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:22:04 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Running LintCodebase. FILE_TYPE: BASH_EXEC. Linter name: bash-exec, linter command: bash-exec, TEST_CASE_RUN: false, FILTER_REGEX_INCLUDE: , FILTER_REGEX_EXCLUDE: .*/securityReports/.* files to lint: /github/workspace/mvnw[0m
[0m2025-06-16 21:22:04 [0;34m[INFO][0m   Linting [BASH_EXEC] files...[0m
[0m2025-06-16 21:22:04 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:22:04 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/mvnw[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   FILE_STATUS (mvnw) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   File: /github/workspace/mvnw, FILE_NAME: mvnw, DIR_NAME:/github/workspace, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: bash_exec, TEST_CASE_DIRECTORY: .automation/test/bash_exec[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   BASH_EXEC expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/bash_exec/[0m
[0m2025-06-16 21:22:04 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:04 [0;34m[INFO][0m   File:[/github/workspace/mvnw][0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Found errors. Error code: 1, File type: BASH_EXEC, Error on missing exec bit: false[0m
[0m2025-06-16 21:22:04 [0;33m[WARN][0m   Warnings found in [bash-exec] linter![0m
[0m2025-06-16 21:22:04 [0;33m[WARN][0m   Error: File:[/github/workspace/mvnw] is not executable[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Error code: 1. Command output:[0m
------
Error: File:[/github/workspace/mvnw] is not executable
------[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Running linter for the CLANG_FORMAT language...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_CLANG_FORMAT...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting LINTER_NAME to clang-format...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to clang-format --Werror --dry-run...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_CLANG_FORMAT...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   FILE_ARRAY_CLANG_FORMAT file array contents: [0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Invoking clang-format linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[CLANG_FORMAT][0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Running linter for the CLOUDFORMATION language...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_CLOUDFORMATION...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting LINTER_NAME to cfn-lint...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to cfn-lint --config-file /action/lib/.automation/.cfnlintrc.yml...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_CLOUDFORMATION...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   FILE_ARRAY_CLOUDFORMATION file array contents: [0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Invoking cfn-lint linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[CLOUDFORMATION][0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Running linter for the CLOJURE language...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_CLOJURE...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting LINTER_NAME to clj-kondo...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to clj-kondo --config /action/lib/.automation/.clj-kondo/config.edn --lint...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_CLOJURE...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   FILE_ARRAY_CLOJURE file array contents: [0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Invoking clj-kondo linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[CLOJURE][0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Running linter for the COFFEESCRIPT language...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_COFFEESCRIPT...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting LINTER_NAME to coffeelint...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to coffeelint -f /action/lib/.automation/.coffee-lint.json...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_COFFEESCRIPT...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   FILE_ARRAY_COFFEESCRIPT file array contents: [0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Invoking coffeelint linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[COFFEESCRIPT][0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Running linter for the CPP language...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_CPP...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting LINTER_NAME to cpplint...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to cpplint...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_CPP...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   FILE_ARRAY_CPP file array contents: [0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Invoking cpplint linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[CPP][0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Running linter for the CSHARP language...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_CSHARP...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting LINTER_NAME to dotnet-format...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to dotnet-format --folder --check --exclude / --include...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_CSHARP...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   FILE_ARRAY_CSHARP file array contents: [0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Invoking dotnet-format linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[CSHARP][0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Running linter for the CSS language...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_CSS...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting LINTER_NAME to stylelint...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to stylelint --config /action/lib/.automation/.stylelintrc.json...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_CSS...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   FILE_ARRAY_CSS file array contents: [0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Invoking stylelint linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[CSS][0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Running linter for the DART language...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_DART...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting LINTER_NAME to dart...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to dartanalyzer --fatal-infos --fatal-warnings --options /action/lib/.automation/analysis_options.yml...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_DART...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   FILE_ARRAY_DART file array contents: [0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Invoking dart linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[DART][0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Running linter for the DOCKERFILE_HADOLINT language...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_DOCKERFILE_HADOLINT...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting LINTER_NAME to hadolint...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to hadolint -c /action/lib/.automation/.hadolint.yaml...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_DOCKERFILE_HADOLINT...[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   FILE_ARRAY_DOCKERFILE_HADOLINT file array contents: /github/workspace/Dockerfile[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Invoking hadolint linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   SKIP_FLAG: 0, list of files to lint: /github/workspace/Dockerfile[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Workspace path: /github/workspace[0m
[0m2025-06-16 21:22:04 [0;34m[INFO][0m   [0m
[0m2025-06-16 21:22:04 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:22:04 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:22:04 [0;34m[DEBUG][0m   Running LintCodebase. FILE_TYPE: DOCKERFILE_HADOLINT. Linter name: hadolint, linter command: hadolint -c /action/lib/.automation/.hadolint.yaml, TEST_CASE_RUN: false, FILTER_REGEX_INCLUDE: , FILTER_REGEX_EXCLUDE: .*/securityReports/.* files to lint: /github/workspace/Dockerfile[0m
[0m2025-06-16 21:22:04 [0;34m[INFO][0m   Linting [DOCKERFILE_HADOLINT] files...[0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/Dockerfile[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   FILE_TYPE for FILE /github/workspace/Dockerfile is related to Docker: DOCKERFILE_HADOLINT[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   FILE_STATUS (Dockerfile) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   File: /github/workspace/Dockerfile, FILE_NAME: Dockerfile, DIR_NAME:/github/workspace, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: dockerfile_hadolint, TEST_CASE_DIRECTORY: .automation/test/dockerfile_hadolint[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   DOCKERFILE_HADOLINT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/dockerfile_hadolint/[0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m   File:[/github/workspace/Dockerfile][0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Found errors. Error code: 1, File type: DOCKERFILE_HADOLINT, Error on missing exec bit: false[0m
[0m2025-06-16 21:22:05 [0;31m[ERROR][0m   Found errors in [hadolint] linter![0m
[0m2025-06-16 21:22:05 [0;31m[ERROR][0m   Error code: 1. Command output:[0m
------
/github/workspace/Dockerfile:6 DL3045 [1m[93mwarning[0m: `COPY` to a relative destination without `WORKDIR` set.
------[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Error code: 1. Command output:[0m
------
/github/workspace/Dockerfile:6 DL3045 [1m[93mwarning[0m: `COPY` to a relative destination without `WORKDIR` set.
------[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Running linter for the EDITORCONFIG language...[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_EDITORCONFIG...[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   No .editorconfig found at: /github/workspace/.editorconfig. Skipping EDITORCONFIG linting...[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Running linter for the ENV language...[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_ENV...[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Setting LINTER_NAME to dotenv-linter...[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to dotenv-linter...[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_ENV...[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   FILE_ARRAY_ENV file array contents: [0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Invoking dotenv-linter linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[ENV][0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Running linter for the GITHUB_ACTIONS language...[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_GITHUB_ACTIONS...[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Setting LINTER_NAME to actionlint...[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to actionlint -config-file /action/lib/.automation/actionlint.yml...[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_GITHUB_ACTIONS...[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   FILE_ARRAY_GITHUB_ACTIONS file array contents: /github/workspace/.github/workflows/cicd.yml /github/workspace/.github/workflows/detect-new-secrets.yml /github/workspace/.github/workflows/gitleaks.yml /github/workspace/.github/workflows/snyk-security.yml /github/workspace/.github/workflows/superlinter.yml /github/workspace/.github/workflows/superpipeline.yml[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Invoking actionlint linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   SKIP_FLAG: 0, list of files to lint: /github/workspace/.github/workflows/cicd.yml /github/workspace/.github/workflows/detect-new-secrets.yml /github/workspace/.github/workflows/gitleaks.yml /github/workspace/.github/workflows/snyk-security.yml /github/workspace/.github/workflows/superlinter.yml /github/workspace/.github/workflows/superpipeline.yml[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Workspace path: /github/workspace[0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m   [0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Running LintCodebase. FILE_TYPE: GITHUB_ACTIONS. Linter name: actionlint, linter command: actionlint -config-file /action/lib/.automation/actionlint.yml, TEST_CASE_RUN: false, FILTER_REGEX_INCLUDE: , FILTER_REGEX_EXCLUDE: .*/securityReports/.* files to lint: /github/workspace/.github/workflows/cicd.yml /github/workspace/.github/workflows/detect-new-secrets.yml /github/workspace/.github/workflows/gitleaks.yml /github/workspace/.github/workflows/snyk-security.yml /github/workspace/.github/workflows/superlinter.yml /github/workspace/.github/workflows/superpipeline.yml[0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m   Linting [GITHUB_ACTIONS] files...[0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/.github/workflows/cicd.yml[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   FILE_STATUS (cicd.yml) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   File: /github/workspace/.github/workflows/cicd.yml, FILE_NAME: cicd.yml, DIR_NAME:/github/workspace/.github/workflows, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: github_actions, TEST_CASE_DIRECTORY: .automation/test/github_actions[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   GITHUB_ACTIONS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/github_actions/[0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m   File:[/github/workspace/.github/workflows/cicd.yml][0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Found errors. Error code: 1, File type: GITHUB_ACTIONS, Error on missing exec bit: false[0m
[0m2025-06-16 21:22:05 [0;31m[ERROR][0m   Found errors in [actionlint] linter![0m
[0m2025-06-16 21:22:05 [0;31m[ERROR][0m   Error code: 1. Command output:[0m
------
.github/workflows/cicd.yml:96:9: shellcheck reported issue in this script: SC2086:info:3:42: Double quote to prevent globbing and word splitting [shellcheck]
   |
96 |         run: |
   |         ^~~~
.github/workflows/cicd.yml:96:9: shellcheck reported issue in this script: SC2086:info:12:22: Double quote to prevent globbing and word splitting [shellcheck]
   |
96 |         run: |
   |         ^~~~
.github/workflows/cicd.yml:162:9: shellcheck reported issue in this script: SC2034:warning:2:1: i appears unused. Verify use (or export if used externally) [shellcheck]
    |
162 |         run: |
    |         ^~~~
------[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Error code: 1. Command output:[0m
------
.github/workflows/cicd.yml:96:9: shellcheck reported issue in this script: SC2086:info:3:42: Double quote to prevent globbing and word splitting [shellcheck]
   |
96 |         run: |
   |         ^~~~
.github/workflows/cicd.yml:96:9: shellcheck reported issue in this script: SC2086:info:12:22: Double quote to prevent globbing and word splitting [shellcheck]
   |
96 |         run: |
   |         ^~~~
.github/workflows/cicd.yml:162:9: shellcheck reported issue in this script: SC2034:warning:2:1: i appears unused. Verify use (or export if used externally) [shellcheck]
    |
162 |         run: |
    |         ^~~~
------[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/.github/workflows/detect-new-secrets.yml[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   FILE_STATUS (detect-new-secrets.yml) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   File: /github/workspace/.github/workflows/detect-new-secrets.yml, FILE_NAME: detect-new-secrets.yml, DIR_NAME:/github/workspace/.github/workflows, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: github_actions, TEST_CASE_DIRECTORY: .automation/test/github_actions[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   GITHUB_ACTIONS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/github_actions/[0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m   File:[/github/workspace/.github/workflows/detect-new-secrets.yml][0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m    - File:[0;37m[detect-new-secrets.yml][0;34m was linted with [0;37m[actionlint][0;34m successfully[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

------[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/.github/workflows/gitleaks.yml[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   FILE_STATUS (gitleaks.yml) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   File: /github/workspace/.github/workflows/gitleaks.yml, FILE_NAME: gitleaks.yml, DIR_NAME:/github/workspace/.github/workflows, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: github_actions, TEST_CASE_DIRECTORY: .automation/test/github_actions[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   GITHUB_ACTIONS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/github_actions/[0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m   File:[/github/workspace/.github/workflows/gitleaks.yml][0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m    - File:[0;37m[gitleaks.yml][0;34m was linted with [0;37m[actionlint][0;34m successfully[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

------[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/.github/workflows/snyk-security.yml[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   FILE_STATUS (snyk-security.yml) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   File: /github/workspace/.github/workflows/snyk-security.yml, FILE_NAME: snyk-security.yml, DIR_NAME:/github/workspace/.github/workflows, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: github_actions, TEST_CASE_DIRECTORY: .automation/test/github_actions[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   GITHUB_ACTIONS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/github_actions/[0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m   File:[/github/workspace/.github/workflows/snyk-security.yml][0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m    - File:[0;37m[snyk-security.yml][0;34m was linted with [0;37m[actionlint][0;34m successfully[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

------[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/.github/workflows/superlinter.yml[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   FILE_STATUS (superlinter.yml) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   File: /github/workspace/.github/workflows/superlinter.yml, FILE_NAME: superlinter.yml, DIR_NAME:/github/workspace/.github/workflows, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: github_actions, TEST_CASE_DIRECTORY: .automation/test/github_actions[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   GITHUB_ACTIONS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/github_actions/[0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m   File:[/github/workspace/.github/workflows/superlinter.yml][0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m    - File:[0;37m[superlinter.yml][0;34m was linted with [0;37m[actionlint][0;34m successfully[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

------[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/.github/workflows/superpipeline.yml[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   FILE_STATUS (superpipeline.yml) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   File: /github/workspace/.github/workflows/superpipeline.yml, FILE_NAME: superpipeline.yml, DIR_NAME:/github/workspace/.github/workflows, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: github_actions, TEST_CASE_DIRECTORY: .automation/test/github_actions[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   GITHUB_ACTIONS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/github_actions/[0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m   File:[/github/workspace/.github/workflows/superpipeline.yml][0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Found errors. Error code: 1, File type: GITHUB_ACTIONS, Error on missing exec bit: false[0m
[0m2025-06-16 21:22:05 [0;31m[ERROR][0m   Found errors in [actionlint] linter![0m
[0m2025-06-16 21:22:05 [0;31m[ERROR][0m   Error code: 1. Command output:[0m
------
.github/workflows/superpipeline.yml:210:9: shellcheck reported issue in this script: SC2086:info:3:42: Double quote to prevent globbing and word splitting [shellcheck]
    |
210 |         run: |
    |         ^~~~
.github/workflows/superpipeline.yml:210:9: shellcheck reported issue in this script: SC2086:info:12:22: Double quote to prevent globbing and word splitting [shellcheck]
    |
210 |         run: |
    |         ^~~~
------[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Error code: 1. Command output:[0m
------
.github/workflows/superpipeline.yml:210:9: shellcheck reported issue in this script: SC2086:info:3:42: Double quote to prevent globbing and word splitting [shellcheck]
    |
210 |         run: |
    |         ^~~~
.github/workflows/superpipeline.yml:210:9: shellcheck reported issue in this script: SC2086:info:12:22: Double quote to prevent globbing and word splitting [shellcheck]
    |
210 |         run: |
    |         ^~~~
------[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Running linter for the GITLEAKS language...[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_GITLEAKS...[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Setting LINTER_NAME to gitleaks...[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to gitleaks detect --no-git -c /action/lib/.automation/.gitleaks.toml -v -s...[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_GITLEAKS...[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   FILE_ARRAY_GITLEAKS file array contents: /github/workspace/.gitattributes /github/workspace/.github/ISSUE_TEMPLATE/issue_template.yml /github/workspace/.github/actions/secret-scanner/excluded_files.patterns /github/workspace/.github/actions/secret-scanner/excluded_lines.patterns /github/workspace/.github/actions/secret-scanner/excluded_secrets.patterns /github/workspace/.github/workflows/cicd.yml /github/workspace/.github/workflows/detect-new-secrets.yml /github/workspace/.github/workflows/gitleaks.yml /github/workspace/.github/workflows/snyk-security.yml /github/workspace/.github/workflows/superlinter.yml /github/workspace/.github/workflows/superpipeline.yml /github/workspace/.gitignore /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java /github/workspace/.mvn/wrapper/maven-wrapper.jar /github/workspace/.mvn/wrapper/maven-wrapper.properties /github/workspace/.secrets.baseline /github/workspace/Deliverables/ASVSResults.png /github/workspace/Deliverables/DSOFT.pdf /github/workspace/Deliverables/DSOFTPart3.md /github/workspace/Deliverables/v4-ASVS-checklist-en.xlsx /github/workspace/Dockerfile /github/workspace/LICENSE /github/workspace/Project.pdf /github/workspace/README.md /github/workspace/docker-compose.yml /github/workspace/init.sql /github/workspace/lombok.config /github/workspace/mvnw /github/workspace/mvnw.cmd /github/workspace/pom.xml /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/EcommerceApplication.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect/ControllerAspect.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/MvcConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/SwaggerConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSocketConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/GraphQLRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/HeaderResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/PasswordResetRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderItemResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/FullPerfumeResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeSearchRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/SearchTypeRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/BaseUserResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UpdateUserRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UserResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/AuthProvider.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/Role.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/SearchPerfume.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiRequestException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/CaptchaException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/EmailException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/InputFieldException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordConfirmationException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderItemRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/ReviewRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/UserRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtAuthenticationException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtConfigurer.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserDetailsServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/CustomOAuth2UserService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/FacebookOAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GithubOAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GoogleOAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2SuccessHandler.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserFactory.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/AuthenticationService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/OrderService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/ReviewService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/UserService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java /github/workspace/src/main/resources/application.properties /github/workspace/src/main/resources/db/migration/V1__Init_BD.sql /github/workspace/src/main/resources/db/migration/V2__Add_users.sql /github/workspace/src/main/resources/db/migration/V3__Add_products.sql /github/workspace/src/main/resources/db/migration/V4__Add_orders.sql /github/workspace/src/main/resources/graphql/schemas.graphql /github/workspace/src/main/resources/mail-templates/order-template.html /github/workspace/src/main/resources/mail-templates/password-reset-template.html /github/workspace/src/main/resources/mail-templates/registration-template.html /github/workspace/src/main/resources/static/swagger-api/swagger.yaml /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/EcommerceApplicationTests.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapperTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapperTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java /github/workspace/src/test/resources/application-test.properties /github/workspace/src/test/resources/empty.jpg /github/workspace/src/test/resources/sql/create-orders-after.sql /github/workspace/src/test/resources/sql/create-orders-before.sql /github/workspace/src/test/resources/sql/create-perfumes-after.sql /github/workspace/src/test/resources/sql/create-perfumes-before.sql /github/workspace/src/test/resources/sql/create-user-after.sql /github/workspace/src/test/resources/sql/create-user-before.sql[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Invoking gitleaks linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   SKIP_FLAG: 0, list of files to lint: /github/workspace/.gitattributes /github/workspace/.github/ISSUE_TEMPLATE/issue_template.yml /github/workspace/.github/actions/secret-scanner/excluded_files.patterns /github/workspace/.github/actions/secret-scanner/excluded_lines.patterns /github/workspace/.github/actions/secret-scanner/excluded_secrets.patterns /github/workspace/.github/workflows/cicd.yml /github/workspace/.github/workflows/detect-new-secrets.yml /github/workspace/.github/workflows/gitleaks.yml /github/workspace/.github/workflows/snyk-security.yml /github/workspace/.github/workflows/superlinter.yml /github/workspace/.github/workflows/superpipeline.yml /github/workspace/.gitignore /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java /github/workspace/.mvn/wrapper/maven-wrapper.jar /github/workspace/.mvn/wrapper/maven-wrapper.properties /github/workspace/.secrets.baseline /github/workspace/Deliverables/ASVSResults.png /github/workspace/Deliverables/DSOFT.pdf /github/workspace/Deliverables/DSOFTPart3.md /github/workspace/Deliverables/v4-ASVS-checklist-en.xlsx /github/workspace/Dockerfile /github/workspace/LICENSE /github/workspace/Project.pdf /github/workspace/README.md /github/workspace/docker-compose.yml /github/workspace/init.sql /github/workspace/lombok.config /github/workspace/mvnw /github/workspace/mvnw.cmd /github/workspace/pom.xml /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/EcommerceApplication.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect/ControllerAspect.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/MvcConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/SwaggerConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSocketConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/GraphQLRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/HeaderResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/PasswordResetRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderItemResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/FullPerfumeResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeSearchRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/SearchTypeRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/BaseUserResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UpdateUserRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UserResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/AuthProvider.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/Role.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/SearchPerfume.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiRequestException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/CaptchaException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/EmailException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/InputFieldException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordConfirmationException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderItemRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/ReviewRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/UserRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtAuthenticationException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtConfigurer.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserDetailsServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/CustomOAuth2UserService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/FacebookOAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GithubOAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GoogleOAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2SuccessHandler.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserFactory.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/AuthenticationService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/OrderService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/ReviewService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/UserService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java /github/workspace/src/main/resources/application.properties /github/workspace/src/main/resources/db/migration/V1__Init_BD.sql /github/workspace/src/main/resources/db/migration/V2__Add_users.sql /github/workspace/src/main/resources/db/migration/V3__Add_products.sql /github/workspace/src/main/resources/db/migration/V4__Add_orders.sql /github/workspace/src/main/resources/graphql/schemas.graphql /github/workspace/src/main/resources/mail-templates/order-template.html /github/workspace/src/main/resources/mail-templates/password-reset-template.html /github/workspace/src/main/resources/mail-templates/registration-template.html /github/workspace/src/main/resources/static/swagger-api/swagger.yaml /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/EcommerceApplicationTests.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapperTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapperTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java /github/workspace/src/test/resources/application-test.properties /github/workspace/src/test/resources/empty.jpg /github/workspace/src/test/resources/sql/create-orders-after.sql /github/workspace/src/test/resources/sql/create-orders-before.sql /github/workspace/src/test/resources/sql/create-perfumes-after.sql /github/workspace/src/test/resources/sql/create-perfumes-before.sql /github/workspace/src/test/resources/sql/create-user-after.sql /github/workspace/src/test/resources/sql/create-user-before.sql[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Workspace path: /github/workspace[0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m   [0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Running LintCodebase. FILE_TYPE: GITLEAKS. Linter name: gitleaks, linter command: gitleaks detect --no-git -c /action/lib/.automation/.gitleaks.toml -v -s, TEST_CASE_RUN: false, FILTER_REGEX_INCLUDE: , FILTER_REGEX_EXCLUDE: .*/securityReports/.* files to lint: /github/workspace/.gitattributes /github/workspace/.github/ISSUE_TEMPLATE/issue_template.yml /github/workspace/.github/actions/secret-scanner/excluded_files.patterns /github/workspace/.github/actions/secret-scanner/excluded_lines.patterns /github/workspace/.github/actions/secret-scanner/excluded_secrets.patterns /github/workspace/.github/workflows/cicd.yml /github/workspace/.github/workflows/detect-new-secrets.yml /github/workspace/.github/workflows/gitleaks.yml /github/workspace/.github/workflows/snyk-security.yml /github/workspace/.github/workflows/superlinter.yml /github/workspace/.github/workflows/superpipeline.yml /github/workspace/.gitignore /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java /github/workspace/.mvn/wrapper/maven-wrapper.jar /github/workspace/.mvn/wrapper/maven-wrapper.properties /github/workspace/.secrets.baseline /github/workspace/Deliverables/ASVSResults.png /github/workspace/Deliverables/DSOFT.pdf /github/workspace/Deliverables/DSOFTPart3.md /github/workspace/Deliverables/v4-ASVS-checklist-en.xlsx /github/workspace/Dockerfile /github/workspace/LICENSE /github/workspace/Project.pdf /github/workspace/README.md /github/workspace/docker-compose.yml /github/workspace/init.sql /github/workspace/lombok.config /github/workspace/mvnw /github/workspace/mvnw.cmd /github/workspace/pom.xml /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/EcommerceApplication.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect/ControllerAspect.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/MvcConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/SwaggerConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSocketConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/GraphQLRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/HeaderResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/PasswordResetRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderItemResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/FullPerfumeResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeSearchRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/SearchTypeRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/BaseUserResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UpdateUserRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UserResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/AuthProvider.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/Role.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/SearchPerfume.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiRequestException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/CaptchaException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/EmailException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/InputFieldException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordConfirmationException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderItemRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/ReviewRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/UserRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtAuthenticationException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtConfigurer.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserDetailsServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/CustomOAuth2UserService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/FacebookOAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GithubOAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GoogleOAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2SuccessHandler.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserFactory.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/AuthenticationService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/OrderService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/ReviewService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/UserService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java /github/workspace/src/main/resources/application.properties /github/workspace/src/main/resources/db/migration/V1__Init_BD.sql /github/workspace/src/main/resources/db/migration/V2__Add_users.sql /github/workspace/src/main/resources/db/migration/V3__Add_products.sql /github/workspace/src/main/resources/db/migration/V4__Add_orders.sql /github/workspace/src/main/resources/graphql/schemas.graphql /github/workspace/src/main/resources/mail-templates/order-template.html /github/workspace/src/main/resources/mail-templates/password-reset-template.html /github/workspace/src/main/resources/mail-templates/registration-template.html /github/workspace/src/main/resources/static/swagger-api/swagger.yaml /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/EcommerceApplicationTests.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapperTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapperTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java /github/workspace/src/test/resources/application-test.properties /github/workspace/src/test/resources/empty.jpg /github/workspace/src/test/resources/sql/create-orders-after.sql /github/workspace/src/test/resources/sql/create-orders-before.sql /github/workspace/src/test/resources/sql/create-perfumes-after.sql /github/workspace/src/test/resources/sql/create-perfumes-before.sql /github/workspace/src/test/resources/sql/create-user-after.sql /github/workspace/src/test/resources/sql/create-user-before.sql[0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m   Linting [GITLEAKS] files...[0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/.gitattributes[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   FILE_STATUS (.gitattributes) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   File: /github/workspace/.gitattributes, FILE_NAME: .gitattributes, DIR_NAME:/github/workspace, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m   File:[/github/workspace/.gitattributes][0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m    - File:[0;37m[.gitattributes][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.81ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.81ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/.github/ISSUE_TEMPLATE/issue_template.yml[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   FILE_STATUS (template.yml) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   File: /github/workspace/.github/ISSUE_TEMPLATE/issue_template.yml, FILE_NAME: issue_template.yml, DIR_NAME:/github/workspace/.github/ISSUE_TEMPLATE, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m   File:[/github/workspace/.github/ISSUE_TEMPLATE/issue_template.yml][0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m    - File:[0;37m[issue_template.yml][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 10ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 10ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/.github/actions/secret-scanner/excluded_files.patterns[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   FILE_STATUS (files.patterns) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   File: /github/workspace/.github/actions/secret-scanner/excluded_files.patterns, FILE_NAME: excluded_files.patterns, DIR_NAME:/github/workspace/.github/actions/secret-scanner, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m   File:[/github/workspace/.github/actions/secret-scanner/excluded_files.patterns][0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m    - File:[0;37m[excluded_files.patterns][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.81ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.81ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/.github/actions/secret-scanner/excluded_lines.patterns[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   FILE_STATUS (lines.patterns) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   File: /github/workspace/.github/actions/secret-scanner/excluded_lines.patterns, FILE_NAME: excluded_lines.patterns, DIR_NAME:/github/workspace/.github/actions/secret-scanner, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m   File:[/github/workspace/.github/actions/secret-scanner/excluded_lines.patterns][0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m    - File:[0;37m[excluded_lines.patterns][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.93ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.93ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/.github/actions/secret-scanner/excluded_secrets.patterns[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   FILE_STATUS (secrets.patterns) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   File: /github/workspace/.github/actions/secret-scanner/excluded_secrets.patterns, FILE_NAME: excluded_secrets.patterns, DIR_NAME:/github/workspace/.github/actions/secret-scanner, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m   File:[/github/workspace/.github/actions/secret-scanner/excluded_secrets.patterns][0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m    - File:[0;37m[excluded_secrets.patterns][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.48ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.48ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/.github/workflows/cicd.yml[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   FILE_STATUS (cicd.yml) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   File: /github/workspace/.github/workflows/cicd.yml, FILE_NAME: cicd.yml, DIR_NAME:/github/workspace/.github/workflows, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m   File:[/github/workspace/.github/workflows/cicd.yml][0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m    - File:[0;37m[cicd.yml][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:05 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 11ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:05 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 11ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/.github/workflows/detect-new-secrets.yml[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   FILE_STATUS (detect-new-secrets.yml) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   File: /github/workspace/.github/workflows/detect-new-secrets.yml, FILE_NAME: detect-new-secrets.yml, DIR_NAME:/github/workspace/.github/workflows, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m   File:[/github/workspace/.github/workflows/detect-new-secrets.yml][0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m    - File:[0;37m[detect-new-secrets.yml][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.64ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.64ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/.github/workflows/gitleaks.yml[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   FILE_STATUS (gitleaks.yml) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   File: /github/workspace/.github/workflows/gitleaks.yml, FILE_NAME: gitleaks.yml, DIR_NAME:/github/workspace/.github/workflows, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m   File:[/github/workspace/.github/workflows/gitleaks.yml][0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m    - File:[0;37m[gitleaks.yml][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.53ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.53ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/.github/workflows/snyk-security.yml[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   FILE_STATUS (snyk-security.yml) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   File: /github/workspace/.github/workflows/snyk-security.yml, FILE_NAME: snyk-security.yml, DIR_NAME:/github/workspace/.github/workflows, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m   File:[/github/workspace/.github/workflows/snyk-security.yml][0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m    - File:[0;37m[snyk-security.yml][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.68ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.68ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/.github/workflows/superlinter.yml[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   FILE_STATUS (superlinter.yml) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   File: /github/workspace/.github/workflows/superlinter.yml, FILE_NAME: superlinter.yml, DIR_NAME:/github/workspace/.github/workflows, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m   File:[/github/workspace/.github/workflows/superlinter.yml][0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m    - File:[0;37m[superlinter.yml][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.27ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.27ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/.github/workflows/superpipeline.yml[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   FILE_STATUS (superpipeline.yml) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   File: /github/workspace/.github/workflows/superpipeline.yml, FILE_NAME: superpipeline.yml, DIR_NAME:/github/workspace/.github/workflows, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m   File:[/github/workspace/.github/workflows/superpipeline.yml][0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m    - File:[0;37m[superpipeline.yml][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 14.7ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 14.7ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/.gitignore[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   FILE_STATUS (.gitignore) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   File: /github/workspace/.gitignore, FILE_NAME: .gitignore, DIR_NAME:/github/workspace, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m   File:[/github/workspace/.gitignore][0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m    - File:[0;37m[.gitignore][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.69ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.69ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   FILE_STATUS (MavenWrapperDownloader.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   File: /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java, FILE_NAME: MavenWrapperDownloader.java, DIR_NAME:/github/workspace/.mvn/wrapper, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m   File:[/github/workspace/.mvn/wrapper/MavenWrapperDownloader.java][0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m    - File:[0;37m[MavenWrapperDownloader.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 10.5ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 10.5ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/.mvn/wrapper/maven-wrapper.jar[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   FILE_STATUS (maven-wrapper.jar) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   File: /github/workspace/.mvn/wrapper/maven-wrapper.jar, FILE_NAME: maven-wrapper.jar, DIR_NAME:/github/workspace/.mvn/wrapper, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m   File:[/github/workspace/.mvn/wrapper/maven-wrapper.jar][0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m    - File:[0;37m[maven-wrapper.jar][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.18ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.18ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/.mvn/wrapper/maven-wrapper.properties[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   FILE_STATUS (maven-wrapper.properties) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   File: /github/workspace/.mvn/wrapper/maven-wrapper.properties, FILE_NAME: maven-wrapper.properties, DIR_NAME:/github/workspace/.mvn/wrapper, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m   File:[/github/workspace/.mvn/wrapper/maven-wrapper.properties][0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m    - File:[0;37m[maven-wrapper.properties][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.68ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.68ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/.secrets.baseline[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   FILE_STATUS (.secrets.baseline) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   File: /github/workspace/.secrets.baseline, FILE_NAME: .secrets.baseline, DIR_NAME:/github/workspace, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m   File:[/github/workspace/.secrets.baseline][0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   Found errors. Error code: 1, File type: GITLEAKS, Error on missing exec bit: false[0m
[0m2025-06-16 21:22:06 [0;31m[ERROR][0m   Found errors in [gitleaks] linter![0m
[0m2025-06-16 21:22:06 [0;31m[ERROR][0m   Error code: 1. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

Finding:     "hashed_secret": "[1;3;mc02e64fe30e9872b226ce08e6f75078774eb53ef[0m",
Secret:      [1;3;mc02e64fe30e9872b226ce08e6f75078774eb53ef[0m
RuleID:      generic-api-key
Entropy:     3.533783
File:        /github/workspace/.secrets.baseline
Line:        124
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:124

Finding:     "hashed_secret": "[1;3;m92b489e92f8a365970b083172da03c01b9adb804[0m",
Secret:      [1;3;m92b489e92f8a365970b083172da03c01b9adb804[0m
RuleID:      generic-api-key
Entropy:     3.784830
File:        /github/workspace/.secrets.baseline
Line:        132
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:132

Finding:     "hashed_secret": "[1;3;mfc0713f8ed9b7b10bbfec6feb9a70d9654c7d904[0m",
Secret:      [1;3;mfc0713f8ed9b7b10bbfec6feb9a70d9654c7d904[0m
RuleID:      generic-api-key
Entropy:     3.725070
File:        /github/workspace/.secrets.baseline
Line:        140
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:140

Finding:     "hashed_secret": "[1;3;m374ab0f3cb1696b81de738e23a141c41dc5f9862[0m",
Secret:      [1;3;m374ab0f3cb1696b81de738e23a141c41dc5f9862[0m
RuleID:      generic-api-key
Entropy:     3.887326
File:        /github/workspace/.secrets.baseline
Line:        148
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:148

Finding:     "hashed_secret": "[1;3;md081d61c5baec4f8f8d0e7383f7b085d160815a4[0m",
Secret:      [1;3;md081d61c5baec4f8f8d0e7383f7b085d160815a4[0m
RuleID:      generic-api-key
Entropy:     3.696439
File:        /github/workspace/.secrets.baseline
Line:        156
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:156

Finding:     "hashed_secret": "[1;3;m7720d05adb61761aa4535bb727edbd3aa99a4c8d[0m",
Secret:      [1;3;m7720d05adb61761aa4535bb727edbd3aa99a4c8d[0m
RuleID:      generic-api-key
Entropy:     3.684829
File:        /github/workspace/.secrets.baseline
Line:        164
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:164

Finding:     "hashed_secret": "[1;3;m66dc481d9177a7ed3e3a29e308b2ccb8ba1359b8[0m",
Secret:      [1;3;m66dc481d9177a7ed3e3a29e308b2ccb8ba1359b8[0m
RuleID:      generic-api-key
Entropy:     3.789823
File:        /github/workspace/.secrets.baseline
Line:        172
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:172

Finding:     "hashed_secret": "[1;3;mc0db6ae4e544ec2cf4f595da15bc52f7604aa6e9[0m",
Secret:      [1;3;mc0db6ae4e544ec2cf4f595da15bc52f7604aa6e9[0m
RuleID:      generic-api-key
Entropy:     3.653702
File:        /github/workspace/.secrets.baseline
Line:        180
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:180

Finding:     "hashed_secret": "[1;3;m197f20d1da55e8b0bdebcad9ee490bdbc8daeb64[0m",
Secret:      [1;3;m197f20d1da55e8b0bdebcad9ee490bdbc8daeb64[0m
RuleID:      generic-api-key
Entropy:     3.649582
File:        /github/workspace/.secrets.baseline
Line:        188
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:188

Finding:     "hashed_secret": "[1;3;m8c514fe5b3c8ca4039817ed999b7c1eeaf795db8[0m",
Secret:      [1;3;m8c514fe5b3c8ca4039817ed999b7c1eeaf795db8[0m
RuleID:      generic-api-key
Entropy:     3.706198
File:        /github/workspace/.secrets.baseline
Line:        196
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:196

Finding:     "hashed_secret": "[1;3;md3e56dcab77d9ab936a48a46c102ab6bd59635fb[0m",
Secret:      [1;3;md3e56dcab77d9ab936a48a46c102ab6bd59635fb[0m
RuleID:      generic-api-key
Entropy:     3.744589
File:        /github/workspace/.secrets.baseline
Line:        204
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:204

Finding:     "hashed_secret": "[1;3;mfa50db5a844585e92133fcf533d50c4003c7245b[0m",
Secret:      [1;3;mfa50db5a844585e92133fcf533d50c4003c7245b[0m
RuleID:      generic-api-key
Entropy:     3.652656
File:        /github/workspace/.secrets.baseline
Line:        212
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:212

Finding:     "hashed_secret": "[1;3;m2f721b3348fe4f6e7fe692ffd691e680158ced29[0m",
Secret:      [1;3;m2f721b3348fe4f6e7fe692ffd691e680158ced29[0m
RuleID:      generic-api-key
Entropy:     3.687326
File:        /github/workspace/.secrets.baseline
Line:        220
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:220

Finding:     "hashed_secret": "[1;3;mc840402ad5b0212d11114d8e33c4ae14eb895c1d[0m",
Secret:      [1;3;mc840402ad5b0212d11114d8e33c4ae14eb895c1d[0m
RuleID:      generic-api-key
Entropy:     3.546039
File:        /github/workspace/.secrets.baseline
Line:        228
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:228

Finding:     "hashed_secret": "[1;3;m14d16e828db2f1b13b14770138ed1b673b5ee7af[0m",
Secret:      [1;3;m14d16e828db2f1b13b14770138ed1b673b5ee7af[0m
RuleID:      generic-api-key
Entropy:     3.583783
File:        /github/workspace/.secrets.baseline
Line:        236
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:236

Finding:     "hashed_secret": "[1;3;m6be847dab39646bdba8f498962e6f9f7c61e1dbc[0m",
Secret:      [1;3;m6be847dab39646bdba8f498962e6f9f7c61e1dbc[0m
RuleID:      generic-api-key
Entropy:     3.649582
File:        /github/workspace/.secrets.baseline
Line:        244
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:244

Finding:     "hashed_secret": "[1;3;m51c3eb65d1e0c926e60ba092771f1a16a1a5d5e0[0m",
Secret:      [1;3;m51c3eb65d1e0c926e60ba092771f1a16a1a5d5e0[0m
RuleID:      generic-api-key
Entropy:     3.634184
File:        /github/workspace/.secrets.baseline
Line:        254
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:254

Finding:     "hashed_secret": "[1;3;mc16b783d640d8e6496086bd160890593a0f654be[0m",
Secret:      [1;3;mc16b783d640d8e6496086bd160890593a0f654be[0m
RuleID:      generic-api-key
Entropy:     3.664911
File:        /github/workspace/.secrets.baseline
Line:        262
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:262

Finding:     "hashed_secret": "[1;3;m6d1e6b24e936c52ae6412ec836ae58fbe02d206e[0m",
Secret:      [1;3;m6d1e6b24e936c52ae6412ec836ae58fbe02d206e[0m
RuleID:      generic-api-key
Entropy:     3.652656
File:        /github/workspace/.secrets.baseline
Line:        270
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:270

Finding:     "hashed_secret": "[1;3;m3d82f41c7357e94fa77bae593ba23397c5af50ca[0m",
Secret:      [1;3;m3d82f41c7357e94fa77bae593ba23397c5af50ca[0m
RuleID:      generic-api-key
Entropy:     3.694588
File:        /github/workspace/.secrets.baseline
Line:        278
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:278

Finding:     "hashed_secret": "[1;3;m0a42650978d4c29e81f6b9e8bac1d02095b8459f[0m",
Secret:      [1;3;m0a42650978d4c29e81f6b9e8bac1d02095b8459f[0m
RuleID:      generic-api-key
Entropy:     3.806198
File:        /github/workspace/.secrets.baseline
Line:        286
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:286

Finding:     "hashed_secret": "[1;3;m0b06ac34ff82d8de19875e037bdd78dfd2e8e4f0[0m",
Secret:      [1;3;m0b06ac34ff82d8de19875e037bdd78dfd2e8e4f0[0m
RuleID:      generic-api-key
Entropy:     3.725070
File:        /github/workspace/.secrets.baseline
Line:        294
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:294

Finding:     "hashed_secret": "[1;3;m6b41d604a908b875a84506e1413d9041261ba7bd[0m",
Secret:      [1;3;m6b41d604a908b875a84506e1413d9041261ba7bd[0m
RuleID:      generic-api-key
Entropy:     3.634830
File:        /github/workspace/.secrets.baseline
Line:        304
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:304

Finding:     "hashed_secret": "[1;3;m51c3eb65d1e0c926e60ba092771f1a16a1a5d5e0[0m",
Secret:      [1;3;m51c3eb65d1e0c926e60ba092771f1a16a1a5d5e0[0m
RuleID:      generic-api-key
Entropy:     3.634184
File:        /github/workspace/.secrets.baseline
Line:        314
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:314

Finding:     "hashed_secret": "[1;3;m0a42650978d4c29e81f6b9e8bac1d02095b8459f[0m",
Secret:      [1;3;m0a42650978d4c29e81f6b9e8bac1d02095b8459f[0m
RuleID:      generic-api-key
Entropy:     3.806198
File:        /github/workspace/.secrets.baseline
Line:        322
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:322

Finding:     "hashed_secret": "[1;3;m0b06ac34ff82d8de19875e037bdd78dfd2e8e4f0[0m",
Secret:      [1;3;m0b06ac34ff82d8de19875e037bdd78dfd2e8e4f0[0m
RuleID:      generic-api-key
Entropy:     3.725070
File:        /github/workspace/.secrets.baseline
Line:        330
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:330

[90m9:22PM[0m [32mINF[0m scan completed in 14.1ms
[90m9:22PM[0m [31mWRN[0m leaks found: 26
------[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   Error code: 1. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

Finding:     "hashed_secret": "[1;3;mc02e64fe30e9872b226ce08e6f75078774eb53ef[0m",
Secret:      [1;3;mc02e64fe30e9872b226ce08e6f75078774eb53ef[0m
RuleID:      generic-api-key
Entropy:     3.533783
File:        /github/workspace/.secrets.baseline
Line:        124
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:124

Finding:     "hashed_secret": "[1;3;m92b489e92f8a365970b083172da03c01b9adb804[0m",
Secret:      [1;3;m92b489e92f8a365970b083172da03c01b9adb804[0m
RuleID:      generic-api-key
Entropy:     3.784830
File:        /github/workspace/.secrets.baseline
Line:        132
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:132

Finding:     "hashed_secret": "[1;3;mfc0713f8ed9b7b10bbfec6feb9a70d9654c7d904[0m",
Secret:      [1;3;mfc0713f8ed9b7b10bbfec6feb9a70d9654c7d904[0m
RuleID:      generic-api-key
Entropy:     3.725070
File:        /github/workspace/.secrets.baseline
Line:        140
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:140

Finding:     "hashed_secret": "[1;3;m374ab0f3cb1696b81de738e23a141c41dc5f9862[0m",
Secret:      [1;3;m374ab0f3cb1696b81de738e23a141c41dc5f9862[0m
RuleID:      generic-api-key
Entropy:     3.887326
File:        /github/workspace/.secrets.baseline
Line:        148
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:148

Finding:     "hashed_secret": "[1;3;md081d61c5baec4f8f8d0e7383f7b085d160815a4[0m",
Secret:      [1;3;md081d61c5baec4f8f8d0e7383f7b085d160815a4[0m
RuleID:      generic-api-key
Entropy:     3.696439
File:        /github/workspace/.secrets.baseline
Line:        156
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:156

Finding:     "hashed_secret": "[1;3;m7720d05adb61761aa4535bb727edbd3aa99a4c8d[0m",
Secret:      [1;3;m7720d05adb61761aa4535bb727edbd3aa99a4c8d[0m
RuleID:      generic-api-key
Entropy:     3.684829
File:        /github/workspace/.secrets.baseline
Line:        164
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:164

Finding:     "hashed_secret": "[1;3;m66dc481d9177a7ed3e3a29e308b2ccb8ba1359b8[0m",
Secret:      [1;3;m66dc481d9177a7ed3e3a29e308b2ccb8ba1359b8[0m
RuleID:      generic-api-key
Entropy:     3.789823
File:        /github/workspace/.secrets.baseline
Line:        172
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:172

Finding:     "hashed_secret": "[1;3;mc0db6ae4e544ec2cf4f595da15bc52f7604aa6e9[0m",
Secret:      [1;3;mc0db6ae4e544ec2cf4f595da15bc52f7604aa6e9[0m
RuleID:      generic-api-key
Entropy:     3.653702
File:        /github/workspace/.secrets.baseline
Line:        180
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:180

Finding:     "hashed_secret": "[1;3;m197f20d1da55e8b0bdebcad9ee490bdbc8daeb64[0m",
Secret:      [1;3;m197f20d1da55e8b0bdebcad9ee490bdbc8daeb64[0m
RuleID:      generic-api-key
Entropy:     3.649582
File:        /github/workspace/.secrets.baseline
Line:        188
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:188

Finding:     "hashed_secret": "[1;3;m8c514fe5b3c8ca4039817ed999b7c1eeaf795db8[0m",
Secret:      [1;3;m8c514fe5b3c8ca4039817ed999b7c1eeaf795db8[0m
RuleID:      generic-api-key
Entropy:     3.706198
File:        /github/workspace/.secrets.baseline
Line:        196
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:196

Finding:     "hashed_secret": "[1;3;md3e56dcab77d9ab936a48a46c102ab6bd59635fb[0m",
Secret:      [1;3;md3e56dcab77d9ab936a48a46c102ab6bd59635fb[0m
RuleID:      generic-api-key
Entropy:     3.744589
File:        /github/workspace/.secrets.baseline
Line:        204
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:204

Finding:     "hashed_secret": "[1;3;mfa50db5a844585e92133fcf533d50c4003c7245b[0m",
Secret:      [1;3;mfa50db5a844585e92133fcf533d50c4003c7245b[0m
RuleID:      generic-api-key
Entropy:     3.652656
File:        /github/workspace/.secrets.baseline
Line:        212
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:212

Finding:     "hashed_secret": "[1;3;m2f721b3348fe4f6e7fe692ffd691e680158ced29[0m",
Secret:      [1;3;m2f721b3348fe4f6e7fe692ffd691e680158ced29[0m
RuleID:      generic-api-key
Entropy:     3.687326
File:        /github/workspace/.secrets.baseline
Line:        220
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:220

Finding:     "hashed_secret": "[1;3;mc840402ad5b0212d11114d8e33c4ae14eb895c1d[0m",
Secret:      [1;3;mc840402ad5b0212d11114d8e33c4ae14eb895c1d[0m
RuleID:      generic-api-key
Entropy:     3.546039
File:        /github/workspace/.secrets.baseline
Line:        228
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:228

Finding:     "hashed_secret": "[1;3;m14d16e828db2f1b13b14770138ed1b673b5ee7af[0m",
Secret:      [1;3;m14d16e828db2f1b13b14770138ed1b673b5ee7af[0m
RuleID:      generic-api-key
Entropy:     3.583783
File:        /github/workspace/.secrets.baseline
Line:        236
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:236

Finding:     "hashed_secret": "[1;3;m6be847dab39646bdba8f498962e6f9f7c61e1dbc[0m",
Secret:      [1;3;m6be847dab39646bdba8f498962e6f9f7c61e1dbc[0m
RuleID:      generic-api-key
Entropy:     3.649582
File:        /github/workspace/.secrets.baseline
Line:        244
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:244

Finding:     "hashed_secret": "[1;3;m51c3eb65d1e0c926e60ba092771f1a16a1a5d5e0[0m",
Secret:      [1;3;m51c3eb65d1e0c926e60ba092771f1a16a1a5d5e0[0m
RuleID:      generic-api-key
Entropy:     3.634184
File:        /github/workspace/.secrets.baseline
Line:        254
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:254

Finding:     "hashed_secret": "[1;3;mc16b783d640d8e6496086bd160890593a0f654be[0m",
Secret:      [1;3;mc16b783d640d8e6496086bd160890593a0f654be[0m
RuleID:      generic-api-key
Entropy:     3.664911
File:        /github/workspace/.secrets.baseline
Line:        262
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:262

Finding:     "hashed_secret": "[1;3;m6d1e6b24e936c52ae6412ec836ae58fbe02d206e[0m",
Secret:      [1;3;m6d1e6b24e936c52ae6412ec836ae58fbe02d206e[0m
RuleID:      generic-api-key
Entropy:     3.652656
File:        /github/workspace/.secrets.baseline
Line:        270
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:270

Finding:     "hashed_secret": "[1;3;m3d82f41c7357e94fa77bae593ba23397c5af50ca[0m",
Secret:      [1;3;m3d82f41c7357e94fa77bae593ba23397c5af50ca[0m
RuleID:      generic-api-key
Entropy:     3.694588
File:        /github/workspace/.secrets.baseline
Line:        278
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:278

Finding:     "hashed_secret": "[1;3;m0a42650978d4c29e81f6b9e8bac1d02095b8459f[0m",
Secret:      [1;3;m0a42650978d4c29e81f6b9e8bac1d02095b8459f[0m
RuleID:      generic-api-key
Entropy:     3.806198
File:        /github/workspace/.secrets.baseline
Line:        286
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:286

Finding:     "hashed_secret": "[1;3;m0b06ac34ff82d8de19875e037bdd78dfd2e8e4f0[0m",
Secret:      [1;3;m0b06ac34ff82d8de19875e037bdd78dfd2e8e4f0[0m
RuleID:      generic-api-key
Entropy:     3.725070
File:        /github/workspace/.secrets.baseline
Line:        294
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:294

Finding:     "hashed_secret": "[1;3;m6b41d604a908b875a84506e1413d9041261ba7bd[0m",
Secret:      [1;3;m6b41d604a908b875a84506e1413d9041261ba7bd[0m
RuleID:      generic-api-key
Entropy:     3.634830
File:        /github/workspace/.secrets.baseline
Line:        304
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:304

Finding:     "hashed_secret": "[1;3;m51c3eb65d1e0c926e60ba092771f1a16a1a5d5e0[0m",
Secret:      [1;3;m51c3eb65d1e0c926e60ba092771f1a16a1a5d5e0[0m
RuleID:      generic-api-key
Entropy:     3.634184
File:        /github/workspace/.secrets.baseline
Line:        314
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:314

Finding:     "hashed_secret": "[1;3;m0a42650978d4c29e81f6b9e8bac1d02095b8459f[0m",
Secret:      [1;3;m0a42650978d4c29e81f6b9e8bac1d02095b8459f[0m
RuleID:      generic-api-key
Entropy:     3.806198
File:        /github/workspace/.secrets.baseline
Line:        322
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:322

Finding:     "hashed_secret": "[1;3;m0b06ac34ff82d8de19875e037bdd78dfd2e8e4f0[0m",
Secret:      [1;3;m0b06ac34ff82d8de19875e037bdd78dfd2e8e4f0[0m
RuleID:      generic-api-key
Entropy:     3.725070
File:        /github/workspace/.secrets.baseline
Line:        330
Fingerprint: /github/workspace/.secrets.baseline:generic-api-key:330

[90m9:22PM[0m [32mINF[0m scan completed in 14.1ms
[90m9:22PM[0m [31mWRN[0m leaks found: 26
------[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/Deliverables/ASVSResults.png[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   FILE_STATUS (ASVSResults.png) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   File: /github/workspace/Deliverables/ASVSResults.png, FILE_NAME: ASVSResults.png, DIR_NAME:/github/workspace/Deliverables, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m   File:[/github/workspace/Deliverables/ASVSResults.png][0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m    - File:[0;37m[ASVSResults.png][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 53.9ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 53.9ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/Deliverables/DSOFT.pdf[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   FILE_STATUS (DSOFT.pdf) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   File: /github/workspace/Deliverables/DSOFT.pdf, FILE_NAME: DSOFT.pdf, DIR_NAME:/github/workspace/Deliverables, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m   File:[/github/workspace/Deliverables/DSOFT.pdf][0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m    - File:[0;37m[DSOFT.pdf][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 10.9ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 10.9ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/Deliverables/DSOFTPart3.md[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   FILE_STATUS (DSOFTPart3.md) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   File: /github/workspace/Deliverables/DSOFTPart3.md, FILE_NAME: DSOFTPart3.md, DIR_NAME:/github/workspace/Deliverables, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m   File:[/github/workspace/Deliverables/DSOFTPart3.md][0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m    - File:[0;37m[DSOFTPart3.md][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 10.2ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 10.2ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/Deliverables/v4-ASVS-checklist-en.xlsx[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   FILE_STATUS (v4-ASVS-checklist-en.xlsx) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   File: /github/workspace/Deliverables/v4-ASVS-checklist-en.xlsx, FILE_NAME: v4-ASVS-checklist-en.xlsx, DIR_NAME:/github/workspace/Deliverables, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:06 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m   File:[/github/workspace/Deliverables/v4-ASVS-checklist-en.xlsx][0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m    - File:[0;37m[v4-ASVS-checklist-en.xlsx][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:06 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.38ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.38ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/Dockerfile[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   FILE_STATUS (Dockerfile) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   File: /github/workspace/Dockerfile, FILE_NAME: Dockerfile, DIR_NAME:/github/workspace, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m   File:[/github/workspace/Dockerfile][0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m    - File:[0;37m[Dockerfile][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.09ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.09ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/LICENSE[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   FILE_STATUS (LICENSE) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   File: /github/workspace/LICENSE, FILE_NAME: LICENSE, DIR_NAME:/github/workspace, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m   File:[/github/workspace/LICENSE][0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m    - File:[0;37m[LICENSE][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.39ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.39ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/Project.pdf[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   FILE_STATUS (Project.pdf) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   File: /github/workspace/Project.pdf, FILE_NAME: Project.pdf, DIR_NAME:/github/workspace, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m   File:[/github/workspace/Project.pdf][0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m    - File:[0;37m[Project.pdf][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.09ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.09ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/README.md[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   FILE_STATUS (README.md) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   File: /github/workspace/README.md, FILE_NAME: README.md, DIR_NAME:/github/workspace, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m   File:[/github/workspace/README.md][0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m    - File:[0;37m[README.md][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 11.5ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 11.5ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/docker-compose.yml[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   FILE_STATUS (docker-compose.yml) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   File: /github/workspace/docker-compose.yml, FILE_NAME: docker-compose.yml, DIR_NAME:/github/workspace, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m   File:[/github/workspace/docker-compose.yml][0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m    - File:[0;37m[docker-compose.yml][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.31ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.31ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/init.sql[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   FILE_STATUS (init.sql) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   File: /github/workspace/init.sql, FILE_NAME: init.sql, DIR_NAME:/github/workspace, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m   File:[/github/workspace/init.sql][0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m    - File:[0;37m[init.sql][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.11ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.11ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/lombok.config[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   FILE_STATUS (lombok.config) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   File: /github/workspace/lombok.config, FILE_NAME: lombok.config, DIR_NAME:/github/workspace, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m   File:[/github/workspace/lombok.config][0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m    - File:[0;37m[lombok.config][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.42ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.42ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/mvnw[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   FILE_STATUS (mvnw) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   File: /github/workspace/mvnw, FILE_NAME: mvnw, DIR_NAME:/github/workspace, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m   File:[/github/workspace/mvnw][0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m    - File:[0;37m[mvnw][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 12.4ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 12.4ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/mvnw.cmd[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   FILE_STATUS (mvnw.cmd) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   File: /github/workspace/mvnw.cmd, FILE_NAME: mvnw.cmd, DIR_NAME:/github/workspace, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m   File:[/github/workspace/mvnw.cmd][0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m    - File:[0;37m[mvnw.cmd][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 12.6ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 12.6ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/pom.xml[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   FILE_STATUS (pom.xml) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   File: /github/workspace/pom.xml, FILE_NAME: pom.xml, DIR_NAME:/github/workspace, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m   File:[/github/workspace/pom.xml][0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m    - File:[0;37m[pom.xml][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 12.2ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 12.2ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/EcommerceApplication.java[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   FILE_STATUS (EcommerceApplication.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/EcommerceApplication.java, FILE_NAME: EcommerceApplication.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/EcommerceApplication.java][0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m    - File:[0;37m[EcommerceApplication.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.43ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.43ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect/ControllerAspect.java[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   FILE_STATUS (ControllerAspect.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect/ControllerAspect.java, FILE_NAME: ControllerAspect.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect/ControllerAspect.java][0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m    - File:[0;37m[ControllerAspect.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.01ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.01ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   FILE_STATUS (ApplicationConfiguration.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java, FILE_NAME: ApplicationConfiguration.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java][0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m    - File:[0;37m[ApplicationConfiguration.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.44ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.44ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   FILE_STATUS (EmailConfiguration.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java, FILE_NAME: EmailConfiguration.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java][0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m    - File:[0;37m[EmailConfiguration.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.87ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.87ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/MvcConfiguration.java[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   FILE_STATUS (MvcConfiguration.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/MvcConfiguration.java, FILE_NAME: MvcConfiguration.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:07 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:07 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/MvcConfiguration.java][0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m    - File:[0;37m[MvcConfiguration.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.05ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.05ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/SwaggerConfiguration.java[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   FILE_STATUS (SwaggerConfiguration.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/SwaggerConfiguration.java, FILE_NAME: SwaggerConfiguration.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/SwaggerConfiguration.java][0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m    - File:[0;37m[SwaggerConfiguration.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.39ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.39ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   FILE_STATUS (WebSecurityConfiguration.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java, FILE_NAME: WebSecurityConfiguration.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java][0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m    - File:[0;37m[WebSecurityConfiguration.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.74ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.74ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSocketConfiguration.java[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   FILE_STATUS (WebSocketConfiguration.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSocketConfiguration.java, FILE_NAME: WebSocketConfiguration.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSocketConfiguration.java][0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m    - File:[0;37m[WebSocketConfiguration.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.1ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.1ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   FILE_STATUS (ErrorMessage.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java, FILE_NAME: ErrorMessage.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java][0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m    - File:[0;37m[ErrorMessage.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.69ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.69ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   FILE_STATUS (PathConstants.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java, FILE_NAME: PathConstants.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java][0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m    - File:[0;37m[PathConstants.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.44ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.44ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   FILE_STATUS (AdminController.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java, FILE_NAME: AdminController.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java][0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m    - File:[0;37m[AdminController.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 10.7ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 10.7ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   FILE_STATUS (AuthenticationController.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java, FILE_NAME: AuthenticationController.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java][0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m    - File:[0;37m[AuthenticationController.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.65ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.65ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   FILE_STATUS (OrderController.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java, FILE_NAME: OrderController.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java][0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m    - File:[0;37m[OrderController.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.51ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.51ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeController.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java, FILE_NAME: PerfumeController.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java][0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m    - File:[0;37m[PerfumeController.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 10.4ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 10.4ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   FILE_STATUS (RegistrationController.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java, FILE_NAME: RegistrationController.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java][0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m    - File:[0;37m[RegistrationController.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.23ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.23ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   FILE_STATUS (ReviewController.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java, FILE_NAME: ReviewController.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java][0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m    - File:[0;37m[ReviewController.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.32ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.32ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   FILE_STATUS (UserController.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java, FILE_NAME: UserController.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java][0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m    - File:[0;37m[UserController.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.74ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.74ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   FILE_STATUS (Order.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java, FILE_NAME: Order.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java][0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m    - File:[0;37m[Order.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.29ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.29ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   FILE_STATUS (OrderItem.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java, FILE_NAME: OrderItem.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java][0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m    - File:[0;37m[OrderItem.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:08 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.56ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.56ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:08 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   FILE_STATUS (Perfume.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java, FILE_NAME: Perfume.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java][0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m    - File:[0;37m[Perfume.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.28ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.28ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   FILE_STATUS (Review.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java, FILE_NAME: Review.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java][0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m    - File:[0;37m[Review.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.45ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.45ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   FILE_STATUS (User.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java, FILE_NAME: User.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java][0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m    - File:[0;37m[User.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.18ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.18ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   FILE_STATUS (CaptchaResponse.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java, FILE_NAME: CaptchaResponse.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java][0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m    - File:[0;37m[CaptchaResponse.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.28ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.28ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/GraphQLRequest.java[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   FILE_STATUS (GraphQLRequest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/GraphQLRequest.java, FILE_NAME: GraphQLRequest.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/GraphQLRequest.java][0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m    - File:[0;37m[GraphQLRequest.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.6ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.6ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/HeaderResponse.java[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   FILE_STATUS (HeaderResponse.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/HeaderResponse.java, FILE_NAME: HeaderResponse.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/HeaderResponse.java][0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m    - File:[0;37m[HeaderResponse.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.42ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.42ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/PasswordResetRequest.java[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   FILE_STATUS (PasswordResetRequest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/PasswordResetRequest.java, FILE_NAME: PasswordResetRequest.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/PasswordResetRequest.java][0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m    - File:[0;37m[PasswordResetRequest.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.67ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.67ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   FILE_STATUS (RegistrationRequest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java, FILE_NAME: RegistrationRequest.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java][0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m    - File:[0;37m[RegistrationRequest.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.47ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.47ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationRequest.java[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   FILE_STATUS (AuthenticationRequest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationRequest.java, FILE_NAME: AuthenticationRequest.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationRequest.java][0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m    - File:[0;37m[AuthenticationRequest.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.55ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.55ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationResponse.java[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   FILE_STATUS (AuthenticationResponse.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationResponse.java, FILE_NAME: AuthenticationResponse.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationResponse.java][0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m    - File:[0;37m[AuthenticationResponse.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.94ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.94ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderItemResponse.java[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   FILE_STATUS (OrderItemResponse.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderItemResponse.java, FILE_NAME: OrderItemResponse.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderItemResponse.java][0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m    - File:[0;37m[OrderItemResponse.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.96ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.96ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   FILE_STATUS (OrderRequest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java, FILE_NAME: OrderRequest.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java][0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m    - File:[0;37m[OrderRequest.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.71ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.71ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   FILE_STATUS (OrderResponse.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java, FILE_NAME: OrderResponse.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java][0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m    - File:[0;37m[OrderResponse.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.48ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.48ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/FullPerfumeResponse.java[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   FILE_STATUS (FullPerfumeResponse.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/FullPerfumeResponse.java, FILE_NAME: FullPerfumeResponse.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/FullPerfumeResponse.java][0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m    - File:[0;37m[FullPerfumeResponse.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.14ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.14ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeRequest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java, FILE_NAME: PerfumeRequest.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:09 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:09 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java][0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m    - File:[0;37m[PerfumeRequest.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.5ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.5ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeResponse.java[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeResponse.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeResponse.java, FILE_NAME: PerfumeResponse.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeResponse.java][0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m    - File:[0;37m[PerfumeResponse.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.79ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.79ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeSearchRequest.java[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeSearchRequest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeSearchRequest.java, FILE_NAME: PerfumeSearchRequest.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeSearchRequest.java][0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m    - File:[0;37m[PerfumeSearchRequest.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.73ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.73ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/SearchTypeRequest.java[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   FILE_STATUS (SearchTypeRequest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/SearchTypeRequest.java, FILE_NAME: SearchTypeRequest.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/SearchTypeRequest.java][0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m    - File:[0;37m[SearchTypeRequest.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.18ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.18ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewRequest.java[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   FILE_STATUS (ReviewRequest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewRequest.java, FILE_NAME: ReviewRequest.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewRequest.java][0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m    - File:[0;37m[ReviewRequest.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.15ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.15ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewResponse.java[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   FILE_STATUS (ReviewResponse.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewResponse.java, FILE_NAME: ReviewResponse.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewResponse.java][0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m    - File:[0;37m[ReviewResponse.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.9ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.9ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/BaseUserResponse.java[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   FILE_STATUS (BaseUserResponse.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/BaseUserResponse.java, FILE_NAME: BaseUserResponse.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/BaseUserResponse.java][0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m    - File:[0;37m[BaseUserResponse.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.56ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.56ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UpdateUserRequest.java[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   FILE_STATUS (UpdateUserRequest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UpdateUserRequest.java, FILE_NAME: UpdateUserRequest.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UpdateUserRequest.java][0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m    - File:[0;37m[UpdateUserRequest.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.38ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.38ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UserResponse.java[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   FILE_STATUS (UserResponse.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UserResponse.java, FILE_NAME: UserResponse.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UserResponse.java][0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m    - File:[0;37m[UserResponse.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.45ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.45ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/AuthProvider.java[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   FILE_STATUS (AuthProvider.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/AuthProvider.java, FILE_NAME: AuthProvider.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/AuthProvider.java][0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m    - File:[0;37m[AuthProvider.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.1ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.1ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/Role.java[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   FILE_STATUS (Role.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/Role.java, FILE_NAME: Role.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/Role.java][0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m    - File:[0;37m[Role.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.6ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.6ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/SearchPerfume.java[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   FILE_STATUS (SearchPerfume.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/SearchPerfume.java, FILE_NAME: SearchPerfume.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/SearchPerfume.java][0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m    - File:[0;37m[SearchPerfume.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.94ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.94ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   FILE_STATUS (ApiExceptionHandler.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java, FILE_NAME: ApiExceptionHandler.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java][0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m    - File:[0;37m[ApiExceptionHandler.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.11ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.11ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiRequestException.java[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   FILE_STATUS (ApiRequestException.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiRequestException.java, FILE_NAME: ApiRequestException.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiRequestException.java][0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m    - File:[0;37m[ApiRequestException.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.57ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.57ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/CaptchaException.java[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   FILE_STATUS (CaptchaException.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/CaptchaException.java, FILE_NAME: CaptchaException.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/CaptchaException.java][0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m    - File:[0;37m[CaptchaException.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.38ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.38ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/EmailException.java[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   FILE_STATUS (EmailException.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/EmailException.java, FILE_NAME: EmailException.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:10 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:10 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/EmailException.java][0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m    - File:[0;37m[EmailException.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.03ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.03ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/InputFieldException.java[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   FILE_STATUS (InputFieldException.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/InputFieldException.java, FILE_NAME: InputFieldException.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/InputFieldException.java][0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m    - File:[0;37m[InputFieldException.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.64ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.64ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordConfirmationException.java[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   FILE_STATUS (PasswordConfirmationException.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordConfirmationException.java, FILE_NAME: PasswordConfirmationException.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordConfirmationException.java][0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m    - File:[0;37m[PasswordConfirmationException.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.97ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.97ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordException.java[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   FILE_STATUS (PasswordException.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordException.java, FILE_NAME: PasswordException.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordException.java][0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m    - File:[0;37m[PasswordException.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.57ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.57ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   FILE_STATUS (AuthenticationMapper.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java, FILE_NAME: AuthenticationMapper.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java][0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m    - File:[0;37m[AuthenticationMapper.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.94ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.94ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   FILE_STATUS (CommonMapper.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java, FILE_NAME: CommonMapper.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java][0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m    - File:[0;37m[CommonMapper.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.35ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.35ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   FILE_STATUS (OrderMapper.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java, FILE_NAME: OrderMapper.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java][0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m    - File:[0;37m[OrderMapper.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.33ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.33ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeMapper.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java, FILE_NAME: PerfumeMapper.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java][0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m    - File:[0;37m[PerfumeMapper.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.51ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.51ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   FILE_STATUS (ReviewMapper.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java, FILE_NAME: ReviewMapper.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java][0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m    - File:[0;37m[ReviewMapper.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.6ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.6ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   FILE_STATUS (UserMapper.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java, FILE_NAME: UserMapper.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java][0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m    - File:[0;37m[UserMapper.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.17ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.17ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderItemRepository.java[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   FILE_STATUS (OrderItemRepository.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderItemRepository.java, FILE_NAME: OrderItemRepository.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderItemRepository.java][0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m    - File:[0;37m[OrderItemRepository.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.19ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.19ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderRepository.java[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   FILE_STATUS (OrderRepository.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderRepository.java, FILE_NAME: OrderRepository.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderRepository.java][0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m    - File:[0;37m[OrderRepository.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.83ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.83ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeRepository.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java, FILE_NAME: PerfumeRepository.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java][0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m    - File:[0;37m[PerfumeRepository.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.36ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.36ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/ReviewRepository.java[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   FILE_STATUS (ReviewRepository.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/ReviewRepository.java, FILE_NAME: ReviewRepository.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/ReviewRepository.java][0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m    - File:[0;37m[ReviewRepository.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/UserRepository.java[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   FILE_STATUS (UserRepository.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/UserRepository.java, FILE_NAME: UserRepository.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/UserRepository.java][0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m    - File:[0;37m[UserRepository.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:11 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.46ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.46ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java[0m
[0m2025-06-16 21:22:11 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeProjection.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java, FILE_NAME: PerfumeProjection.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java][0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m    - File:[0;37m[PerfumeProjection.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.15ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.15ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtAuthenticationException.java[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   FILE_STATUS (JwtAuthenticationException.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtAuthenticationException.java, FILE_NAME: JwtAuthenticationException.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtAuthenticationException.java][0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m    - File:[0;37m[JwtAuthenticationException.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.55ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.55ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtConfigurer.java[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   FILE_STATUS (JwtConfigurer.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtConfigurer.java, FILE_NAME: JwtConfigurer.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtConfigurer.java][0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m    - File:[0;37m[JwtConfigurer.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.34ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.34ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   FILE_STATUS (JwtFilter.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java, FILE_NAME: JwtFilter.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java][0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m    - File:[0;37m[JwtFilter.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.79ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.79ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   FILE_STATUS (JwtProvider.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java, FILE_NAME: JwtProvider.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java][0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m    - File:[0;37m[JwtProvider.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.73ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.73ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserDetailsServiceImpl.java[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   FILE_STATUS (UserDetailsServiceImpl.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserDetailsServiceImpl.java, FILE_NAME: UserDetailsServiceImpl.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserDetailsServiceImpl.java][0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m    - File:[0;37m[UserDetailsServiceImpl.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   FILE_STATUS (UserPrincipal.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java, FILE_NAME: UserPrincipal.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java][0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m    - File:[0;37m[UserPrincipal.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.51ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.51ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/CustomOAuth2UserService.java[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   FILE_STATUS (CustomOAuth2UserService.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/CustomOAuth2UserService.java, FILE_NAME: CustomOAuth2UserService.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/CustomOAuth2UserService.java][0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m    - File:[0;37m[CustomOAuth2UserService.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.4ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.4ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/FacebookOAuth2UserInfo.java[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   FILE_STATUS (FacebookOAuth2UserInfo.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/FacebookOAuth2UserInfo.java, FILE_NAME: FacebookOAuth2UserInfo.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/FacebookOAuth2UserInfo.java][0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m    - File:[0;37m[FacebookOAuth2UserInfo.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.84ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.84ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GithubOAuth2UserInfo.java[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   FILE_STATUS (GithubOAuth2UserInfo.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GithubOAuth2UserInfo.java, FILE_NAME: GithubOAuth2UserInfo.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GithubOAuth2UserInfo.java][0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m    - File:[0;37m[GithubOAuth2UserInfo.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GoogleOAuth2UserInfo.java[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   FILE_STATUS (GoogleOAuth2UserInfo.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GoogleOAuth2UserInfo.java, FILE_NAME: GoogleOAuth2UserInfo.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GoogleOAuth2UserInfo.java][0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m    - File:[0;37m[GoogleOAuth2UserInfo.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.92ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.92ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2SuccessHandler.java[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   FILE_STATUS (OAuth2SuccessHandler.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2SuccessHandler.java, FILE_NAME: OAuth2SuccessHandler.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2SuccessHandler.java][0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m    - File:[0;37m[OAuth2SuccessHandler.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.06ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.06ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserFactory.java[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   FILE_STATUS (OAuth2UserFactory.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserFactory.java, FILE_NAME: OAuth2UserFactory.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserFactory.java][0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m    - File:[0;37m[OAuth2UserFactory.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.75ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.75ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   FILE_STATUS (OAuth2UserInfo.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java, FILE_NAME: OAuth2UserInfo.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java][0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m    - File:[0;37m[OAuth2UserInfo.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.61ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.61ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/AuthenticationService.java[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   FILE_STATUS (AuthenticationService.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/AuthenticationService.java, FILE_NAME: AuthenticationService.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:12 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:12 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/AuthenticationService.java][0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m    - File:[0;37m[AuthenticationService.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.83ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.83ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   FILE_STATUS (AuthenticationServiceImpl.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java, FILE_NAME: AuthenticationServiceImpl.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java][0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m    - File:[0;37m[AuthenticationServiceImpl.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 12.5ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 12.5ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   FILE_STATUS (OrderServiceImpl.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java, FILE_NAME: OrderServiceImpl.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java][0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m    - File:[0;37m[OrderServiceImpl.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 10ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 10ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeServiceImpl.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java, FILE_NAME: PerfumeServiceImpl.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java][0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m    - File:[0;37m[PerfumeServiceImpl.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 11.5ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 11.5ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   FILE_STATUS (ReviewServiceImpl.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java, FILE_NAME: ReviewServiceImpl.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java][0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m    - File:[0;37m[ReviewServiceImpl.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.94ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.94ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   FILE_STATUS (UserServiceImpl.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java, FILE_NAME: UserServiceImpl.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java][0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m    - File:[0;37m[UserServiceImpl.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 10ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 10ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/OrderService.java[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   FILE_STATUS (OrderService.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/OrderService.java, FILE_NAME: OrderService.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/OrderService.java][0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m    - File:[0;37m[OrderService.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.96ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.96ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeService.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java, FILE_NAME: PerfumeService.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java][0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m    - File:[0;37m[PerfumeService.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.26ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.26ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/ReviewService.java[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   FILE_STATUS (ReviewService.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/ReviewService.java, FILE_NAME: ReviewService.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/ReviewService.java][0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m    - File:[0;37m[ReviewService.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.81ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.81ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/UserService.java[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   FILE_STATUS (UserService.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/UserService.java, FILE_NAME: UserService.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/UserService.java][0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m    - File:[0;37m[UserService.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.45ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.45ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   FILE_STATUS (MailSender.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java, FILE_NAME: MailSender.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java][0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m    - File:[0;37m[MailSender.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.47ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.47ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   FILE_STATUS (GraphQLProvider.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java, FILE_NAME: GraphQLProvider.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java][0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m    - File:[0;37m[GraphQLProvider.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.57ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.57ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/resources/application.properties[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   FILE_STATUS (application.properties) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   File: /github/workspace/src/main/resources/application.properties, FILE_NAME: application.properties, DIR_NAME:/github/workspace/src/main/resources, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m   File:[/github/workspace/src/main/resources/application.properties][0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   Found errors. Error code: 1, File type: GITLEAKS, Error on missing exec bit: false[0m
[0m2025-06-16 21:22:13 [0;31m[ERROR][0m   Found errors in [gitleaks] linter![0m
[0m2025-06-16 21:22:13 [0;31m[ERROR][0m   Error code: 1. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

Finding:     ...azon.aws.access-key=[1;3;mAKIATP4TDBGPCTXUIXD2[0m
Secret:      [1;3;mAKIATP4TDBGPCTXUIXD2[0m
RuleID:      aws-access-token
Entropy:     3.584184
File:        /github/workspace/src/main/resources/application.properties
Line:        37
Fingerprint: /github/workspace/src/main/resources/application.properties:aws-access-token:37

Finding:     ...registration.google.client-secret=[1;3;mRZptmh1c6LEfNhYHDLqGLqAJ[0m
spring.security.oau...
Secret:      [1;3;mRZptmh1c6LEfNhYHDLqGLqAJ[0m
RuleID:      generic-api-key
Entropy:     4.220176
File:        /github/workspace/src/main/resources/application.properties
Line:        24
Fingerprint: /github/workspace/src/main/resources/application.properties:generic-api-key:24

Finding:     ...registration.github.client-id=[1;3;m95162f0ca4fbb8236c3d[0m
spring.security.oau...
Secret:      [1;3;m95162f0ca4fbb8236c3d[0m
RuleID:      generic-api-key
Entropy:     3.721928
File:        /github/workspace/src/main/resources/application.properties
Line:        33
Fingerprint: /github/workspace/src/main/resources/application.properties:generic-api-key:33

Finding:     ...registration.github.client-secret=[1;3;mc80297b73b6710455005bd5cfd4427fe7034b9ed[0m
spring.security.oau...
Secret:      [1;3;mc80297b73b6710455005bd5cfd4427fe7034b9ed[0m
RuleID:      generic-api-key
Entropy:     3.722574
File:        /github/workspace/src/main/resources/application.properties
Line:        34
Fingerprint: /github/workspace/src/main/resources/application.properties:generic-api-key:34

Finding:     recaptcha.secret=[1;3;m6Lc5cLkZAAAAANUjd4--Jx6PioSC_N-9MFKT3PsA[0m
recaptcha.url=https...
Secret:      [1;3;m6Lc5cLkZAAAAANUjd4--Jx6PioSC_N-9MFKT3PsA[0m
RuleID:      generic-api-key
Entropy:     4.565311
File:        /github/workspace/src/main/resources/application.properties
Line:        41
Fingerprint: /github/workspace/src/main/resources/application.properties:generic-api-key:41

Finding:     ...client.registration.facebook.client-secret=[1;3;m8b3ef3edaec63d2905c50decd3db471e[0m
spring.security.oau...
Secret:      [1;3;m8b3ef3edaec63d2905c50decd3db471e[0m
RuleID:      facebook
Entropy:     3.688307
File:        /github/workspace/src/main/resources/application.properties
Line:        28
Fingerprint: /github/workspace/src/main/resources/application.properties:facebook:28

[90m9:22PM[0m [32mINF[0m scan completed in 10.2ms
[90m9:22PM[0m [31mWRN[0m leaks found: 6
------[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   Error code: 1. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

Finding:     ...azon.aws.access-key=[1;3;mAKIATP4TDBGPCTXUIXD2[0m
Secret:      [1;3;mAKIATP4TDBGPCTXUIXD2[0m
RuleID:      aws-access-token
Entropy:     3.584184
File:        /github/workspace/src/main/resources/application.properties
Line:        37
Fingerprint: /github/workspace/src/main/resources/application.properties:aws-access-token:37

Finding:     ...registration.google.client-secret=[1;3;mRZptmh1c6LEfNhYHDLqGLqAJ[0m
spring.security.oau...
Secret:      [1;3;mRZptmh1c6LEfNhYHDLqGLqAJ[0m
RuleID:      generic-api-key
Entropy:     4.220176
File:        /github/workspace/src/main/resources/application.properties
Line:        24
Fingerprint: /github/workspace/src/main/resources/application.properties:generic-api-key:24

Finding:     ...registration.github.client-id=[1;3;m95162f0ca4fbb8236c3d[0m
spring.security.oau...
Secret:      [1;3;m95162f0ca4fbb8236c3d[0m
RuleID:      generic-api-key
Entropy:     3.721928
File:        /github/workspace/src/main/resources/application.properties
Line:        33
Fingerprint: /github/workspace/src/main/resources/application.properties:generic-api-key:33

Finding:     ...registration.github.client-secret=[1;3;mc80297b73b6710455005bd5cfd4427fe7034b9ed[0m
spring.security.oau...
Secret:      [1;3;mc80297b73b6710455005bd5cfd4427fe7034b9ed[0m
RuleID:      generic-api-key
Entropy:     3.722574
File:        /github/workspace/src/main/resources/application.properties
Line:        34
Fingerprint: /github/workspace/src/main/resources/application.properties:generic-api-key:34

Finding:     recaptcha.secret=[1;3;m6Lc5cLkZAAAAANUjd4--Jx6PioSC_N-9MFKT3PsA[0m
recaptcha.url=https...
Secret:      [1;3;m6Lc5cLkZAAAAANUjd4--Jx6PioSC_N-9MFKT3PsA[0m
RuleID:      generic-api-key
Entropy:     4.565311
File:        /github/workspace/src/main/resources/application.properties
Line:        41
Fingerprint: /github/workspace/src/main/resources/application.properties:generic-api-key:41

Finding:     ...client.registration.facebook.client-secret=[1;3;m8b3ef3edaec63d2905c50decd3db471e[0m
spring.security.oau...
Secret:      [1;3;m8b3ef3edaec63d2905c50decd3db471e[0m
RuleID:      facebook
Entropy:     3.688307
File:        /github/workspace/src/main/resources/application.properties
Line:        28
Fingerprint: /github/workspace/src/main/resources/application.properties:facebook:28

[90m9:22PM[0m [32mINF[0m scan completed in 10.2ms
[90m9:22PM[0m [31mWRN[0m leaks found: 6
------[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/resources/db/migration/V1__Init_BD.sql[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   FILE_STATUS () is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   File: /github/workspace/src/main/resources/db/migration/V1__Init_BD.sql, FILE_NAME: V1__Init_BD.sql, DIR_NAME:/github/workspace/src/main/resources/db/migration, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m   File:[/github/workspace/src/main/resources/db/migration/V1__Init_BD.sql][0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m    - File:[0;37m[V1__Init_BD.sql][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 10.1ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 10.1ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/resources/db/migration/V2__Add_users.sql[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   FILE_STATUS () is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   File: /github/workspace/src/main/resources/db/migration/V2__Add_users.sql, FILE_NAME: V2__Add_users.sql, DIR_NAME:/github/workspace/src/main/resources/db/migration, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:13 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:13 [0;34m[INFO][0m   File:[/github/workspace/src/main/resources/db/migration/V2__Add_users.sql][0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m    - File:[0;37m[V2__Add_users.sql][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.49ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.49ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/resources/db/migration/V3__Add_products.sql[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   FILE_STATUS () is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   File: /github/workspace/src/main/resources/db/migration/V3__Add_products.sql, FILE_NAME: V3__Add_products.sql, DIR_NAME:/github/workspace/src/main/resources/db/migration, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m   File:[/github/workspace/src/main/resources/db/migration/V3__Add_products.sql][0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m    - File:[0;37m[V3__Add_products.sql][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 26.4ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 26.4ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/resources/db/migration/V4__Add_orders.sql[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   FILE_STATUS () is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   File: /github/workspace/src/main/resources/db/migration/V4__Add_orders.sql, FILE_NAME: V4__Add_orders.sql, DIR_NAME:/github/workspace/src/main/resources/db/migration, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m   File:[/github/workspace/src/main/resources/db/migration/V4__Add_orders.sql][0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m    - File:[0;37m[V4__Add_orders.sql][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.82ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.82ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/resources/graphql/schemas.graphql[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   FILE_STATUS (schemas.graphql) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   File: /github/workspace/src/main/resources/graphql/schemas.graphql, FILE_NAME: schemas.graphql, DIR_NAME:/github/workspace/src/main/resources/graphql, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m   File:[/github/workspace/src/main/resources/graphql/schemas.graphql][0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m    - File:[0;37m[schemas.graphql][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.27ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.27ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/resources/mail-templates/order-template.html[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   FILE_STATUS (order-template.html) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   File: /github/workspace/src/main/resources/mail-templates/order-template.html, FILE_NAME: order-template.html, DIR_NAME:/github/workspace/src/main/resources/mail-templates, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m   File:[/github/workspace/src/main/resources/mail-templates/order-template.html][0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m    - File:[0;37m[order-template.html][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.5ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.5ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/resources/mail-templates/password-reset-template.html[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   FILE_STATUS (password-reset-template.html) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   File: /github/workspace/src/main/resources/mail-templates/password-reset-template.html, FILE_NAME: password-reset-template.html, DIR_NAME:/github/workspace/src/main/resources/mail-templates, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m   File:[/github/workspace/src/main/resources/mail-templates/password-reset-template.html][0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m    - File:[0;37m[password-reset-template.html][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.66ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.66ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/resources/mail-templates/registration-template.html[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   FILE_STATUS (registration-template.html) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   File: /github/workspace/src/main/resources/mail-templates/registration-template.html, FILE_NAME: registration-template.html, DIR_NAME:/github/workspace/src/main/resources/mail-templates, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m   File:[/github/workspace/src/main/resources/mail-templates/registration-template.html][0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m    - File:[0;37m[registration-template.html][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.73ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.73ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/resources/static/swagger-api/swagger.yaml[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   FILE_STATUS (swagger.yaml) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   File: /github/workspace/src/main/resources/static/swagger-api/swagger.yaml, FILE_NAME: swagger.yaml, DIR_NAME:/github/workspace/src/main/resources/static/swagger-api, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m   File:[/github/workspace/src/main/resources/static/swagger-api/swagger.yaml][0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m    - File:[0;37m[swagger.yaml][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 26.4ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 26.4ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/EcommerceApplicationTests.java[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   FILE_STATUS (EcommerceApplicationTests.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/EcommerceApplicationTests.java, FILE_NAME: EcommerceApplicationTests.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/EcommerceApplicationTests.java][0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m    - File:[0;37m[EcommerceApplicationTests.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 10.4ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 10.4ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   FILE_STATUS (AdminControllerTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java, FILE_NAME: AdminControllerTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java][0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m    - File:[0;37m[AdminControllerTest.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 14.8ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 14.8ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   FILE_STATUS (AuthenticationControllerTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java, FILE_NAME: AuthenticationControllerTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java][0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m    - File:[0;37m[AuthenticationControllerTest.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 11.8ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 11.8ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   FILE_STATUS (OrderControllerTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java, FILE_NAME: OrderControllerTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java][0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m    - File:[0;37m[OrderControllerTest.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 11.7ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 11.7ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeControllerTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java, FILE_NAME: PerfumeControllerTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java][0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m    - File:[0;37m[PerfumeControllerTest.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 13.5ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 13.5ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   FILE_STATUS (RegistrationControllerTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java, FILE_NAME: RegistrationControllerTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java][0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m    - File:[0;37m[RegistrationControllerTest.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 11.4ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 11.4ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   FILE_STATUS (ReviewControllerTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java, FILE_NAME: ReviewControllerTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:14 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:14 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java][0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m    - File:[0;37m[ReviewControllerTest.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 10.6ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 10.6ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   FILE_STATUS (UserControllerTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java, FILE_NAME: UserControllerTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java][0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m    - File:[0;37m[UserControllerTest.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 11.1ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 11.1ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   FILE_STATUS (OrderItemTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java, FILE_NAME: OrderItemTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java][0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m    - File:[0;37m[OrderItemTest.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   FILE_STATUS (OrderTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java, FILE_NAME: OrderTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java][0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m    - File:[0;37m[OrderTest.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 11ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 11ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java, FILE_NAME: PerfumeTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java][0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m    - File:[0;37m[PerfumeTest.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 10ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 10ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   FILE_STATUS (ReviewTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java, FILE_NAME: ReviewTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java][0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m    - File:[0;37m[ReviewTest.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.43ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.43ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   FILE_STATUS (UserTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java, FILE_NAME: UserTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java][0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m    - File:[0;37m[UserTest.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 10.1ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 10.1ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapperTest.java[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   FILE_STATUS (OrderMapperTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapperTest.java, FILE_NAME: OrderMapperTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapperTest.java][0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m    - File:[0;37m[OrderMapperTest.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.08ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.08ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeMapperTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java, FILE_NAME: PerfumeMapperTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java][0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m    - File:[0;37m[PerfumeMapperTest.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.44ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.44ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapperTest.java[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   FILE_STATUS (UserMapperTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapperTest.java, FILE_NAME: UserMapperTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapperTest.java][0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m    - File:[0;37m[UserMapperTest.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.45ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.45ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   FILE_STATUS (AuthenticationServiceImplTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java, FILE_NAME: AuthenticationServiceImplTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java][0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m    - File:[0;37m[AuthenticationServiceImplTest.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 12.5ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 12.5ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   FILE_STATUS (OrderServiceImplTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java, FILE_NAME: OrderServiceImplTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java][0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m    - File:[0;37m[OrderServiceImplTest.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 11.1ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 11.1ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeServiceImplTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java, FILE_NAME: PerfumeServiceImplTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java][0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m    - File:[0;37m[PerfumeServiceImplTest.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 10.4ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 10.4ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   FILE_STATUS (ReviewServiceImplTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java, FILE_NAME: ReviewServiceImplTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java][0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m    - File:[0;37m[ReviewServiceImplTest.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.2ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.2ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   FILE_STATUS (UserServiceImlTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java, FILE_NAME: UserServiceImlTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java][0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m    - File:[0;37m[UserServiceImlTest.java][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:15 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.63ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:15 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.63ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   FILE_STATUS (TestConstants.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java, FILE_NAME: TestConstants.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:16 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:16 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java][0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   Found errors. Error code: 1, File type: GITLEAKS, Error on missing exec bit: false[0m
[0m2025-06-16 21:22:16 [0;31m[ERROR][0m   Found errors in [gitleaks] linter![0m
[0m2025-06-16 21:22:16 [0;31m[ERROR][0m   Error code: 1. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

Finding:     ...c final String USER_PASSWORD_RESET_CODE = "[1;3;m3f9bcdb0-2241-4c34-803e-598b497d571f[0m";
Secret:      [1;3;m3f9bcdb0-2241-4c34-803e-598b497d571f[0m
RuleID:      generic-api-key
Entropy:     3.829240
File:        /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java
Line:        10
Fingerprint: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:generic-api-key:10

[90m9:22PM[0m [32mINF[0m scan completed in 10.2ms
[90m9:22PM[0m [31mWRN[0m leaks found: 1
------[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   Error code: 1. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

Finding:     ...c final String USER_PASSWORD_RESET_CODE = "[1;3;m3f9bcdb0-2241-4c34-803e-598b497d571f[0m";
Secret:      [1;3;m3f9bcdb0-2241-4c34-803e-598b497d571f[0m
RuleID:      generic-api-key
Entropy:     3.829240
File:        /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java
Line:        10
Fingerprint: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:generic-api-key:10

[90m9:22PM[0m [32mINF[0m scan completed in 10.2ms
[90m9:22PM[0m [31mWRN[0m leaks found: 1
------[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/resources/application-test.properties[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   FILE_STATUS (application-test.properties) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   File: /github/workspace/src/test/resources/application-test.properties, FILE_NAME: application-test.properties, DIR_NAME:/github/workspace/src/test/resources, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:16 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:16 [0;34m[INFO][0m   File:[/github/workspace/src/test/resources/application-test.properties][0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   Found errors. Error code: 1, File type: GITLEAKS, Error on missing exec bit: false[0m
[0m2025-06-16 21:22:16 [0;31m[ERROR][0m   Found errors in [gitleaks] linter![0m
[0m2025-06-16 21:22:16 [0;31m[ERROR][0m   Error code: 1. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

Finding:     recaptcha.secret=[1;3;m6Lc5cLkZAAAAANUjd4--Jx6PioSC_N-9MFKT3PsA[0m
Secret:      [1;3;m6Lc5cLkZAAAAANUjd4--Jx6PioSC_N-9MFKT3PsA[0m
RuleID:      generic-api-key
Entropy:     4.565311
File:        /github/workspace/src/test/resources/application-test.properties
Line:        17
Fingerprint: /github/workspace/src/test/resources/application-test.properties:generic-api-key:17

Finding:     jwt.secret=[1;3;mYV9Qc3k0Q3ZRa0p0NzhsdUNWcjRxVGdTb2N1d0lKbXM=[0m
jwt.expiration=6048...
Secret:      [1;3;mYV9Qc3k0Q3ZRa0p0NzhsdUNWcjRxVGdTb2N1d0lKbXM=[0m
RuleID:      generic-api-key
Entropy:     4.788755
File:        /github/workspace/src/test/resources/application-test.properties
Line:        22
Fingerprint: /github/workspace/src/test/resources/application-test.properties:generic-api-key:22

[90m9:22PM[0m [32mINF[0m scan completed in 9.56ms
[90m9:22PM[0m [31mWRN[0m leaks found: 2
------[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   Error code: 1. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

Finding:     recaptcha.secret=[1;3;m6Lc5cLkZAAAAANUjd4--Jx6PioSC_N-9MFKT3PsA[0m
Secret:      [1;3;m6Lc5cLkZAAAAANUjd4--Jx6PioSC_N-9MFKT3PsA[0m
RuleID:      generic-api-key
Entropy:     4.565311
File:        /github/workspace/src/test/resources/application-test.properties
Line:        17
Fingerprint: /github/workspace/src/test/resources/application-test.properties:generic-api-key:17

Finding:     jwt.secret=[1;3;mYV9Qc3k0Q3ZRa0p0NzhsdUNWcjRxVGdTb2N1d0lKbXM=[0m
jwt.expiration=6048...
Secret:      [1;3;mYV9Qc3k0Q3ZRa0p0NzhsdUNWcjRxVGdTb2N1d0lKbXM=[0m
RuleID:      generic-api-key
Entropy:     4.788755
File:        /github/workspace/src/test/resources/application-test.properties
Line:        22
Fingerprint: /github/workspace/src/test/resources/application-test.properties:generic-api-key:22

[90m9:22PM[0m [32mINF[0m scan completed in 9.56ms
[90m9:22PM[0m [31mWRN[0m leaks found: 2
------[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/resources/empty.jpg[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   FILE_STATUS (empty.jpg) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   File: /github/workspace/src/test/resources/empty.jpg, FILE_NAME: empty.jpg, DIR_NAME:/github/workspace/src/test/resources, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:16 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:16 [0;34m[INFO][0m   File:[/github/workspace/src/test/resources/empty.jpg][0m
[0m2025-06-16 21:22:16 [0;34m[INFO][0m    - File:[0;37m[empty.jpg][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:16 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.16ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.16ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/resources/sql/create-orders-after.sql[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   FILE_STATUS (create-orders-after.sql) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   File: /github/workspace/src/test/resources/sql/create-orders-after.sql, FILE_NAME: create-orders-after.sql, DIR_NAME:/github/workspace/src/test/resources/sql, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:16 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:16 [0;34m[INFO][0m   File:[/github/workspace/src/test/resources/sql/create-orders-after.sql][0m
[0m2025-06-16 21:22:16 [0;34m[INFO][0m    - File:[0;37m[create-orders-after.sql][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:16 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.08ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.08ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/resources/sql/create-orders-before.sql[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   FILE_STATUS (create-orders-before.sql) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   File: /github/workspace/src/test/resources/sql/create-orders-before.sql, FILE_NAME: create-orders-before.sql, DIR_NAME:/github/workspace/src/test/resources/sql, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:16 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:16 [0;34m[INFO][0m   File:[/github/workspace/src/test/resources/sql/create-orders-before.sql][0m
[0m2025-06-16 21:22:16 [0;34m[INFO][0m    - File:[0;37m[create-orders-before.sql][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:16 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.46ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.46ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/resources/sql/create-perfumes-after.sql[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   FILE_STATUS (create-perfumes-after.sql) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   File: /github/workspace/src/test/resources/sql/create-perfumes-after.sql, FILE_NAME: create-perfumes-after.sql, DIR_NAME:/github/workspace/src/test/resources/sql, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:16 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:16 [0;34m[INFO][0m   File:[/github/workspace/src/test/resources/sql/create-perfumes-after.sql][0m
[0m2025-06-16 21:22:16 [0;34m[INFO][0m    - File:[0;37m[create-perfumes-after.sql][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:16 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.86ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 8.86ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/resources/sql/create-perfumes-before.sql[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   FILE_STATUS (create-perfumes-before.sql) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   File: /github/workspace/src/test/resources/sql/create-perfumes-before.sql, FILE_NAME: create-perfumes-before.sql, DIR_NAME:/github/workspace/src/test/resources/sql, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:16 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:16 [0;34m[INFO][0m   File:[/github/workspace/src/test/resources/sql/create-perfumes-before.sql][0m
[0m2025-06-16 21:22:16 [0;34m[INFO][0m    - File:[0;37m[create-perfumes-before.sql][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:16 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 13.7ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 13.7ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/resources/sql/create-user-after.sql[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   FILE_STATUS (create-user-after.sql) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   File: /github/workspace/src/test/resources/sql/create-user-after.sql, FILE_NAME: create-user-after.sql, DIR_NAME:/github/workspace/src/test/resources/sql, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:16 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:16 [0;34m[INFO][0m   File:[/github/workspace/src/test/resources/sql/create-user-after.sql][0m
[0m2025-06-16 21:22:16 [0;34m[INFO][0m    - File:[0;37m[create-user-after.sql][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:16 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.16ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.16ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/resources/sql/create-user-before.sql[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   FILE_STATUS (create-user-before.sql) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   File: /github/workspace/src/test/resources/sql/create-user-before.sql, FILE_NAME: create-user-before.sql, DIR_NAME:/github/workspace/src/test/resources/sql, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: gitleaks, TEST_CASE_DIRECTORY: .automation/test/gitleaks[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   GITLEAKS expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/gitleaks/[0m
[0m2025-06-16 21:22:16 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:16 [0;34m[INFO][0m   File:[/github/workspace/src/test/resources/sql/create-user-before.sql][0m
[0m2025-06-16 21:22:16 [0;34m[INFO][0m    - File:[0;37m[create-user-before.sql][0;34m was linted with [0;37m[gitleaks][0;34m successfully[0m
[0m2025-06-16 21:22:16 [0;34m[INFO][0m      - Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.73ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks

[90m9:22PM[0m [32mINF[0m scan completed in 9.73ms
[90m9:22PM[0m [32mINF[0m no leaks found
------[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   Running linter for the GHERKIN language...[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_GHERKIN...[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   Setting LINTER_NAME to gherkin-lint...[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to gherkin-lint -c /action/lib/.automation/.gherkin-lintrc...[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_GHERKIN...[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   FILE_ARRAY_GHERKIN file array contents: [0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   Invoking gherkin-lint linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[GHERKIN][0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   Running linter for the GO language...[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_GO...[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   Setting LINTER_NAME to golangci-lint...[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to golangci-lint run --fast -c /action/lib/.automation/.golangci.yml...[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_GO...[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   FILE_ARRAY_GO file array contents: [0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   Invoking golangci-lint linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[GO][0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   Running linter for the GOOGLE_JAVA_FORMAT language...[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_GOOGLE_JAVA_FORMAT...[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   Setting LINTER_NAME to google-java-format...[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to java -jar /usr/bin/google-java-format...[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_GOOGLE_JAVA_FORMAT...[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   FILE_ARRAY_GOOGLE_JAVA_FORMAT file array contents: /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/EcommerceApplication.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect/ControllerAspect.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/MvcConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/SwaggerConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSocketConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/GraphQLRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/HeaderResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/PasswordResetRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderItemResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/FullPerfumeResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeSearchRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/SearchTypeRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/BaseUserResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UpdateUserRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UserResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/AuthProvider.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/Role.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/SearchPerfume.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiRequestException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/CaptchaException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/EmailException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/InputFieldException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordConfirmationException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderItemRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/ReviewRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/UserRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtAuthenticationException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtConfigurer.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserDetailsServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/CustomOAuth2UserService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/FacebookOAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GithubOAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GoogleOAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2SuccessHandler.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserFactory.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/AuthenticationService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/OrderService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/ReviewService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/UserService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/EcommerceApplicationTests.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapperTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapperTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   Invoking google-java-format linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   SKIP_FLAG: 0, list of files to lint: /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/EcommerceApplication.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect/ControllerAspect.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/MvcConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/SwaggerConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSocketConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/GraphQLRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/HeaderResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/PasswordResetRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderItemResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/FullPerfumeResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeSearchRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/SearchTypeRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/BaseUserResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UpdateUserRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UserResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/AuthProvider.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/Role.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/SearchPerfume.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiRequestException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/CaptchaException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/EmailException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/InputFieldException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordConfirmationException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderItemRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/ReviewRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/UserRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtAuthenticationException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtConfigurer.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserDetailsServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/CustomOAuth2UserService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/FacebookOAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GithubOAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GoogleOAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2SuccessHandler.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserFactory.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/AuthenticationService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/OrderService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/ReviewService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/UserService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/EcommerceApplicationTests.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapperTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapperTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   Workspace path: /github/workspace[0m
[0m2025-06-16 21:22:16 [0;34m[INFO][0m   [0m
[0m2025-06-16 21:22:16 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:22:16 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   Running LintCodebase. FILE_TYPE: GOOGLE_JAVA_FORMAT. Linter name: google-java-format, linter command: java -jar /usr/bin/google-java-format, TEST_CASE_RUN: false, FILTER_REGEX_INCLUDE: , FILTER_REGEX_EXCLUDE: .*/securityReports/.* files to lint: /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/EcommerceApplication.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect/ControllerAspect.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/MvcConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/SwaggerConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSocketConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/GraphQLRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/HeaderResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/PasswordResetRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderItemResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/FullPerfumeResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeSearchRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/SearchTypeRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/BaseUserResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UpdateUserRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UserResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/AuthProvider.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/Role.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/SearchPerfume.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiRequestException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/CaptchaException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/EmailException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/InputFieldException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordConfirmationException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderItemRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/ReviewRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/UserRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtAuthenticationException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtConfigurer.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserDetailsServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/CustomOAuth2UserService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/FacebookOAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GithubOAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GoogleOAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2SuccessHandler.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserFactory.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/AuthenticationService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/OrderService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/ReviewService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/UserService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/EcommerceApplicationTests.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapperTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapperTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java[0m
[0m2025-06-16 21:22:16 [0;34m[INFO][0m   Linting [GOOGLE_JAVA_FORMAT] files...[0m
[0m2025-06-16 21:22:16 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:22:16 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   FILE_STATUS (MavenWrapperDownloader.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   File: /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java, FILE_NAME: MavenWrapperDownloader.java, DIR_NAME:/github/workspace/.mvn/wrapper, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:16 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:16 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:16 [0;34m[INFO][0m   File:[/github/workspace/.mvn/wrapper/MavenWrapperDownloader.java][0m
[0m2025-06-16 21:22:17 [0;34m[INFO][0m    - File:[0;37m[MavenWrapperDownloader.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:17 [0;34m[INFO][0m      - Command output:[0m
------
/*
 * Copyright 2007-present the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import java.io.*;
import java.net.*;
import java.nio.channels.*;
import java.util.Properties;

public class MavenWrapperDownloader {

  private static final String WRAPPER_VERSION = "0.5.6";
  /** Default URL to download the maven-wrapper.jar from, if no 'downloadUrl' is provided. */
  private static final String DEFAULT_DOWNLOAD_URL =
      "https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/"
          + WRAPPER_VERSION
          + "/maven-wrapper-"
          + WRAPPER_VERSION
          + ".jar";

  /**
   * Path to the maven-wrapper.properties file, which might contain a downloadUrl property to use
   * instead of the default one.
   */
  private static final String MAVEN_WRAPPER_PROPERTIES_PATH =
      ".mvn/wrapper/maven-wrapper.properties";

  /** Path where the maven-wrapper.jar will be saved to. */
  private static final String MAVEN_WRAPPER_JAR_PATH = ".mvn/wrapper/maven-wrapper.jar";

  /**
   * Name of the property which should be used to override the default download url for the wrapper.
   */
  private static final String PROPERTY_NAME_WRAPPER_URL = "wrapperUrl";

  public static void main(String args[]) {
    System.out.println("- Downloader started");
    File baseDirectory = new File(args[0]);
    System.out.println("- Using base directory: " + baseDirectory.getAbsolutePath());

    // If the maven-wrapper.properties exists, read it and check if it contains a custom
    // wrapperUrl parameter.
    File mavenWrapperPropertyFile = new File(baseDirectory, MAVEN_WRAPPER_PROPERTIES_PATH);
    String url = DEFAULT_DOWNLOAD_URL;
    if (mavenWrapperPropertyFile.exists()) {
      FileInputStream mavenWrapperPropertyFileInputStream = null;
      try {
        mavenWrapperPropertyFileInputStream = new FileInputStream(mavenWrapperPropertyFile);
        Properties mavenWrapperProperties = new Properties();
        mavenWrapperProperties.load(mavenWrapperPropertyFileInputStream);
        url = mavenWrapperProperties.getProperty(PROPERTY_NAME_WRAPPER_URL, url);
      } catch (IOException e) {
        System.out.println("- ERROR loading '" + MAVEN_WRAPPER_PROPERTIES_PATH + "'");
      } finally {
        try {
          if (mavenWrapperPropertyFileInputStream != null) {
            mavenWrapperPropertyFileInputStream.close();
          }
        } catch (IOException e) {
          // Ignore ...
        }
      }
    }
    System.out.println("- Downloading from: " + url);

    File outputFile = new File(baseDirectory.getAbsolutePath(), MAVEN_WRAPPER_JAR_PATH);
    if (!outputFile.getParentFile().exists()) {
      if (!outputFile.getParentFile().mkdirs()) {
        System.out.println(
            "- ERROR creating output directory '"
                + outputFile.getParentFile().getAbsolutePath()
                + "'");
      }
    }
    System.out.println("- Downloading to: " + outputFile.getAbsolutePath());
    try {
      downloadFileFromURL(url, outputFile);
      System.out.println("Done");
      System.exit(0);
    } catch (Throwable e) {
      System.out.println("- Error downloading");
      e.printStackTrace();
      System.exit(1);
    }
  }

  private static void downloadFileFromURL(String urlString, File destination) throws Exception {
    if (System.getenv("MVNW_USERNAME") != null && System.getenv("MVNW_PASSWORD") != null) {
      String username = System.getenv("MVNW_USERNAME");
      char[] password = System.getenv("MVNW_PASSWORD").toCharArray();
      Authenticator.setDefault(
          new Authenticator() {
            @Override
            protected PasswordAuthentication getPasswordAuthentication() {
              return new PasswordAuthentication(username, password);
            }
          });
    }
    URL website = new URL(urlString);
    ReadableByteChannel rbc;
    rbc = Channels.newChannel(website.openStream());
    FileOutputStream fos = new FileOutputStream(destination);
    fos.getChannel().transferFrom(rbc, 0, Long.MAX_VALUE);
    fos.close();
    rbc.close();
  }
}
------[0m
[0m2025-06-16 21:22:17 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
/*
 * Copyright 2007-present the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import java.io.*;
import java.net.*;
import java.nio.channels.*;
import java.util.Properties;

public class MavenWrapperDownloader {

  private static final String WRAPPER_VERSION = "0.5.6";
  /** Default URL to download the maven-wrapper.jar from, if no 'downloadUrl' is provided. */
  private static final String DEFAULT_DOWNLOAD_URL =
      "https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/"
          + WRAPPER_VERSION
          + "/maven-wrapper-"
          + WRAPPER_VERSION
          + ".jar";

  /**
   * Path to the maven-wrapper.properties file, which might contain a downloadUrl property to use
   * instead of the default one.
   */
  private static final String MAVEN_WRAPPER_PROPERTIES_PATH =
      ".mvn/wrapper/maven-wrapper.properties";

  /** Path where the maven-wrapper.jar will be saved to. */
  private static final String MAVEN_WRAPPER_JAR_PATH = ".mvn/wrapper/maven-wrapper.jar";

  /**
   * Name of the property which should be used to override the default download url for the wrapper.
   */
  private static final String PROPERTY_NAME_WRAPPER_URL = "wrapperUrl";

  public static void main(String args[]) {
    System.out.println("- Downloader started");
    File baseDirectory = new File(args[0]);
    System.out.println("- Using base directory: " + baseDirectory.getAbsolutePath());

    // If the maven-wrapper.properties exists, read it and check if it contains a custom
    // wrapperUrl parameter.
    File mavenWrapperPropertyFile = new File(baseDirectory, MAVEN_WRAPPER_PROPERTIES_PATH);
    String url = DEFAULT_DOWNLOAD_URL;
    if (mavenWrapperPropertyFile.exists()) {
      FileInputStream mavenWrapperPropertyFileInputStream = null;
      try {
        mavenWrapperPropertyFileInputStream = new FileInputStream(mavenWrapperPropertyFile);
        Properties mavenWrapperProperties = new Properties();
        mavenWrapperProperties.load(mavenWrapperPropertyFileInputStream);
        url = mavenWrapperProperties.getProperty(PROPERTY_NAME_WRAPPER_URL, url);
      } catch (IOException e) {
        System.out.println("- ERROR loading '" + MAVEN_WRAPPER_PROPERTIES_PATH + "'");
      } finally {
        try {
          if (mavenWrapperPropertyFileInputStream != null) {
            mavenWrapperPropertyFileInputStream.close();
          }
        } catch (IOException e) {
          // Ignore ...
        }
      }
    }
    System.out.println("- Downloading from: " + url);

    File outputFile = new File(baseDirectory.getAbsolutePath(), MAVEN_WRAPPER_JAR_PATH);
    if (!outputFile.getParentFile().exists()) {
      if (!outputFile.getParentFile().mkdirs()) {
        System.out.println(
            "- ERROR creating output directory '"
                + outputFile.getParentFile().getAbsolutePath()
                + "'");
      }
    }
    System.out.println("- Downloading to: " + outputFile.getAbsolutePath());
    try {
      downloadFileFromURL(url, outputFile);
      System.out.println("Done");
      System.exit(0);
    } catch (Throwable e) {
      System.out.println("- Error downloading");
      e.printStackTrace();
      System.exit(1);
    }
  }

  private static void downloadFileFromURL(String urlString, File destination) throws Exception {
    if (System.getenv("MVNW_USERNAME") != null && System.getenv("MVNW_PASSWORD") != null) {
      String username = System.getenv("MVNW_USERNAME");
      char[] password = System.getenv("MVNW_PASSWORD").toCharArray();
      Authenticator.setDefault(
          new Authenticator() {
            @Override
            protected PasswordAuthentication getPasswordAuthentication() {
              return new PasswordAuthentication(username, password);
            }
          });
    }
    URL website = new URL(urlString);
    ReadableByteChannel rbc;
    rbc = Channels.newChannel(website.openStream());
    FileOutputStream fos = new FileOutputStream(destination);
    fos.getChannel().transferFrom(rbc, 0, Long.MAX_VALUE);
    fos.close();
    rbc.close();
  }
}
------[0m
[0m2025-06-16 21:22:17 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/EcommerceApplication.java[0m
[0m2025-06-16 21:22:17 [0;34m[DEBUG][0m   FILE_STATUS (EcommerceApplication.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:17 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/EcommerceApplication.java, FILE_NAME: EcommerceApplication.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:17 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:17 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:17 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/EcommerceApplication.java][0m
[0m2025-06-16 21:22:18 [0;34m[INFO][0m    - File:[0;37m[EcommerceApplication.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:18 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class EcommerceApplication {

  public static void main(String[] args) {
    SpringApplication.run(EcommerceApplication.class, args);
  }
}
------[0m
[0m2025-06-16 21:22:18 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class EcommerceApplication {

  public static void main(String[] args) {
    SpringApplication.run(EcommerceApplication.class, args);
  }
}
------[0m
[0m2025-06-16 21:22:18 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect/ControllerAspect.java[0m
[0m2025-06-16 21:22:18 [0;34m[DEBUG][0m   FILE_STATUS (ControllerAspect.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:18 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect/ControllerAspect.java, FILE_NAME: ControllerAspect.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:18 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:18 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:18 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect/ControllerAspect.java][0m
[0m2025-06-16 21:22:18 [0;34m[INFO][0m    - File:[0;37m[ControllerAspect.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:18 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.aspect;

import java.util.Arrays;
import org.aspectj.lang.ProceedingJoinPoint;
import org.aspectj.lang.annotation.Around;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Pointcut;
import org.springframework.stereotype.Component;

@Aspect
@Component
public class ControllerAspect {

  @Pointcut(value = "execution(* com.gmail.merikbest2015.ecommerce.controller.*.*(..))")
  public void executeLogging() {}

  @Around("executeLogging()")
  public Object loggingAround(ProceedingJoinPoint joinPoint) throws Throwable {
    Object proceed = joinPoint.proceed();
    String className = "CLASS: [" + joinPoint.getTarget().getClass().getSimpleName() + "],";
    String methodName = " METHOD: [" + joinPoint.getSignature().getName() + "()],";
    System.out.print(className + methodName + " REQUEST: ");
    if (joinPoint.getArgs().length > 0) {
      Arrays.stream(joinPoint.getArgs()).forEach(System.out::println);
    } else {
      System.out.println("[]");
    }
    System.out.println(className + methodName + " RESPONSE: " + proceed.toString());
    return proceed;
  }
}
------[0m
[0m2025-06-16 21:22:18 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.aspect;

import java.util.Arrays;
import org.aspectj.lang.ProceedingJoinPoint;
import org.aspectj.lang.annotation.Around;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Pointcut;
import org.springframework.stereotype.Component;

@Aspect
@Component
public class ControllerAspect {

  @Pointcut(value = "execution(* com.gmail.merikbest2015.ecommerce.controller.*.*(..))")
  public void executeLogging() {}

  @Around("executeLogging()")
  public Object loggingAround(ProceedingJoinPoint joinPoint) throws Throwable {
    Object proceed = joinPoint.proceed();
    String className = "CLASS: [" + joinPoint.getTarget().getClass().getSimpleName() + "],";
    String methodName = " METHOD: [" + joinPoint.getSignature().getName() + "()],";
    System.out.print(className + methodName + " REQUEST: ");
    if (joinPoint.getArgs().length > 0) {
      Arrays.stream(joinPoint.getArgs()).forEach(System.out::println);
    } else {
      System.out.println("[]");
    }
    System.out.println(className + methodName + " RESPONSE: " + proceed.toString());
    return proceed;
  }
}
------[0m
[0m2025-06-16 21:22:18 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java[0m
[0m2025-06-16 21:22:18 [0;34m[DEBUG][0m   FILE_STATUS (ApplicationConfiguration.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:18 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java, FILE_NAME: ApplicationConfiguration.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:18 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:18 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:18 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java][0m
[0m2025-06-16 21:22:19 [0;34m[INFO][0m    - File:[0;37m[ApplicationConfiguration.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:19 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.configuration;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.data.projection.SpelAwareProxyProjectionFactory;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import software.amazon.awssdk.auth.credentials.AwsBasicCredentials;
import software.amazon.awssdk.auth.credentials.StaticCredentialsProvider;
import software.amazon.awssdk.regions.Region;
import software.amazon.awssdk.services.s3.S3Client;

@Configuration
public class ApplicationConfiguration {

  @Value("${amazon.aws.access-key}")
  private String awsAccessKey;

  @Value("${amazon.aws.secret-key}")
  private String awsAccessSecret;

  @Bean
  public PasswordEncoder getPasswordEncoder() {
    return new BCryptPasswordEncoder(8);
  }

  @Bean
  public S3Client s3Client() { // Changed return type to S3Client
    AwsBasicCredentials credentials =
        AwsBasicCredentials.create(awsAccessKey, awsAccessSecret); // Updated credentials creation
    return S3Client.builder() // Updated to S3Client builder
        .credentialsProvider(
            StaticCredentialsProvider.create(credentials)) // Updated credentials provider
        .region(Region.EU_CENTRAL_1) // Updated region
        .build();
  }

  @Bean
  public ModelMapper modelMapper() {
    ModelMapper mapper = new ModelMapper();
    mapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
    return mapper;
  }

  @Bean
  public SpelAwareProxyProjectionFactory projectionFactory() {
    return new SpelAwareProxyProjectionFactory();
  }
}
------[0m
[0m2025-06-16 21:22:19 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.configuration;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.data.projection.SpelAwareProxyProjectionFactory;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import software.amazon.awssdk.auth.credentials.AwsBasicCredentials;
import software.amazon.awssdk.auth.credentials.StaticCredentialsProvider;
import software.amazon.awssdk.regions.Region;
import software.amazon.awssdk.services.s3.S3Client;

@Configuration
public class ApplicationConfiguration {

  @Value("${amazon.aws.access-key}")
  private String awsAccessKey;

  @Value("${amazon.aws.secret-key}")
  private String awsAccessSecret;

  @Bean
  public PasswordEncoder getPasswordEncoder() {
    return new BCryptPasswordEncoder(8);
  }

  @Bean
  public S3Client s3Client() { // Changed return type to S3Client
    AwsBasicCredentials credentials =
        AwsBasicCredentials.create(awsAccessKey, awsAccessSecret); // Updated credentials creation
    return S3Client.builder() // Updated to S3Client builder
        .credentialsProvider(
            StaticCredentialsProvider.create(credentials)) // Updated credentials provider
        .region(Region.EU_CENTRAL_1) // Updated region
        .build();
  }

  @Bean
  public ModelMapper modelMapper() {
    ModelMapper mapper = new ModelMapper();
    mapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
    return mapper;
  }

  @Bean
  public SpelAwareProxyProjectionFactory projectionFactory() {
    return new SpelAwareProxyProjectionFactory();
  }
}
------[0m
[0m2025-06-16 21:22:19 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java[0m
[0m2025-06-16 21:22:19 [0;34m[DEBUG][0m   FILE_STATUS (EmailConfiguration.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:19 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java, FILE_NAME: EmailConfiguration.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:19 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:19 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:19 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java][0m
[0m2025-06-16 21:22:19 [0;34m[INFO][0m    - File:[0;37m[EmailConfiguration.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:19 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.configuration;

import java.util.Properties;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.mail.javamail.JavaMailSenderImpl;
import org.thymeleaf.spring6.SpringTemplateEngine;
import org.thymeleaf.templateresolver.ClassLoaderTemplateResolver;
import org.thymeleaf.templateresolver.ITemplateResolver;

@Configuration
public class EmailConfiguration {

  @Value("${spring.mail.host}")
  private String host;

  @Value("${spring.mail.username}")
  private String username;

  @Value("${spring.mail.password}")
  private String password;

  @Value("${spring.mail.port}")
  private int port;

  @Value("${spring.mail.protocol}")
  private String protocol;

  @Value("${spring.mail.properties.mail.smtp.auth}")
  private String auth;

  @Value("${spring.mail.properties.mail.smtp.starttls.enable}")
  private String enable;

  @Value("${mail.debug}")
  private String debug;

  @Bean
  public JavaMailSender getMailSender() {
    JavaMailSenderImpl mailSender = new JavaMailSenderImpl();
    mailSender.setHost(host);
    mailSender.setPort(port);
    mailSender.setUsername(username);
    mailSender.setPassword(password);
    Properties mailProperties = mailSender.getJavaMailProperties();
    mailProperties.setProperty("mail.transport.protocol", protocol);
    mailProperties.setProperty("mail.debug", debug);
    mailProperties.setProperty("mail.smtp.auth", auth);
    mailProperties.setProperty("mail.smtp.starttls.enable", enable);
    return mailSender;
  }

  @Bean
  public ITemplateResolver thymeleafTemplateResolver() {
    ClassLoaderTemplateResolver templateResolver = new ClassLoaderTemplateResolver();
    templateResolver.setPrefix("mail-templates/");
    templateResolver.setSuffix(".html");
    templateResolver.setTemplateMode("HTML");
    templateResolver.setCharacterEncoding("UTF-8");
    return templateResolver;
  }

  @Bean
  public SpringTemplateEngine thymeleafTemplateEngine() {
    SpringTemplateEngine templateEngine = new SpringTemplateEngine();
    templateEngine.setTemplateResolver(thymeleafTemplateResolver());
    return templateEngine;
  }
}
------[0m
[0m2025-06-16 21:22:19 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.configuration;

import java.util.Properties;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.mail.javamail.JavaMailSenderImpl;
import org.thymeleaf.spring6.SpringTemplateEngine;
import org.thymeleaf.templateresolver.ClassLoaderTemplateResolver;
import org.thymeleaf.templateresolver.ITemplateResolver;

@Configuration
public class EmailConfiguration {

  @Value("${spring.mail.host}")
  private String host;

  @Value("${spring.mail.username}")
  private String username;

  @Value("${spring.mail.password}")
  private String password;

  @Value("${spring.mail.port}")
  private int port;

  @Value("${spring.mail.protocol}")
  private String protocol;

  @Value("${spring.mail.properties.mail.smtp.auth}")
  private String auth;

  @Value("${spring.mail.properties.mail.smtp.starttls.enable}")
  private String enable;

  @Value("${mail.debug}")
  private String debug;

  @Bean
  public JavaMailSender getMailSender() {
    JavaMailSenderImpl mailSender = new JavaMailSenderImpl();
    mailSender.setHost(host);
    mailSender.setPort(port);
    mailSender.setUsername(username);
    mailSender.setPassword(password);
    Properties mailProperties = mailSender.getJavaMailProperties();
    mailProperties.setProperty("mail.transport.protocol", protocol);
    mailProperties.setProperty("mail.debug", debug);
    mailProperties.setProperty("mail.smtp.auth", auth);
    mailProperties.setProperty("mail.smtp.starttls.enable", enable);
    return mailSender;
  }

  @Bean
  public ITemplateResolver thymeleafTemplateResolver() {
    ClassLoaderTemplateResolver templateResolver = new ClassLoaderTemplateResolver();
    templateResolver.setPrefix("mail-templates/");
    templateResolver.setSuffix(".html");
    templateResolver.setTemplateMode("HTML");
    templateResolver.setCharacterEncoding("UTF-8");
    return templateResolver;
  }

  @Bean
  public SpringTemplateEngine thymeleafTemplateEngine() {
    SpringTemplateEngine templateEngine = new SpringTemplateEngine();
    templateEngine.setTemplateResolver(thymeleafTemplateResolver());
    return templateEngine;
  }
}
------[0m
[0m2025-06-16 21:22:19 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/MvcConfiguration.java[0m
[0m2025-06-16 21:22:19 [0;34m[DEBUG][0m   FILE_STATUS (MvcConfiguration.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:19 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/MvcConfiguration.java, FILE_NAME: MvcConfiguration.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:19 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:19 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:19 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/MvcConfiguration.java][0m
[0m2025-06-16 21:22:20 [0;34m[INFO][0m    - File:[0;37m[MvcConfiguration.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:20 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.configuration;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.web.client.RestTemplate;
import org.springframework.web.servlet.config.annotation.CorsRegistry;
import org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;

@Configuration
public class MvcConfiguration implements WebMvcConfigurer {

  @Value("${hostname}")
  private String hostname;

  @Bean
  public RestTemplate getRestTemplate() {
    return new RestTemplate();
  }

  @Override
  public void addResourceHandlers(ResourceHandlerRegistry registry) {
    registry.addResourceHandler("/static/**").addResourceLocations("classpath:/static/");
  }

  @Override
  public void addCorsMappings(CorsRegistry registry) {
    registry
        .addMapping("/api/v1/**")
        .allowedOrigins("http://" + hostname)
        .allowedMethods("HEAD", "OPTIONS", "GET", "POST", "PUT", "PATCH", "DELETE")
        .exposedHeaders("page-total-count")
        .exposedHeaders("page-total-elements")
        .allowedHeaders("*");
  }
}
------[0m
[0m2025-06-16 21:22:20 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.configuration;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.web.client.RestTemplate;
import org.springframework.web.servlet.config.annotation.CorsRegistry;
import org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;

@Configuration
public class MvcConfiguration implements WebMvcConfigurer {

  @Value("${hostname}")
  private String hostname;

  @Bean
  public RestTemplate getRestTemplate() {
    return new RestTemplate();
  }

  @Override
  public void addResourceHandlers(ResourceHandlerRegistry registry) {
    registry.addResourceHandler("/static/**").addResourceLocations("classpath:/static/");
  }

  @Override
  public void addCorsMappings(CorsRegistry registry) {
    registry
        .addMapping("/api/v1/**")
        .allowedOrigins("http://" + hostname)
        .allowedMethods("HEAD", "OPTIONS", "GET", "POST", "PUT", "PATCH", "DELETE")
        .exposedHeaders("page-total-count")
        .exposedHeaders("page-total-elements")
        .allowedHeaders("*");
  }
}
------[0m
[0m2025-06-16 21:22:20 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/SwaggerConfiguration.java[0m
[0m2025-06-16 21:22:20 [0;34m[DEBUG][0m   FILE_STATUS (SwaggerConfiguration.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:20 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/SwaggerConfiguration.java, FILE_NAME: SwaggerConfiguration.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:20 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:20 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:20 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/SwaggerConfiguration.java][0m
[0m2025-06-16 21:22:20 [0;34m[INFO][0m    - File:[0;37m[SwaggerConfiguration.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:20 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.configuration;

import io.swagger.v3.oas.models.OpenAPI;
import io.swagger.v3.oas.models.info.Contact;
import io.swagger.v3.oas.models.info.Info;
import io.swagger.v3.oas.models.info.License;
import io.swagger.v3.oas.models.servers.Server;
import java.util.List;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

@Configuration
public class SwaggerConfiguration {

  @Bean
  public OpenAPI customOpenAPI() {
    return new OpenAPI()
        .info(
            new Info()
                .title("E-commerce API")
                .version("1.0.0")
                .description("API para sistema de e-commerce")
                .contact(
                    new Contact()
                        .name("Seu Nome")
                        .email("seu.email@exemplo.com")
                        .url("https://github.com/seu-usuario"))
                .license(
                    new License().name("MIT License").url("https://opensource.org/licenses/MIT")))
        .servers(
            List.of(
                new Server()
                    .url("http://localhost:8080")
                    .description("Servidor de Desenvolvimento"),
                new Server().url("https://api.exemplo.com").description("Servidor de Produção")));
  }
}
------[0m
[0m2025-06-16 21:22:20 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.configuration;

import io.swagger.v3.oas.models.OpenAPI;
import io.swagger.v3.oas.models.info.Contact;
import io.swagger.v3.oas.models.info.Info;
import io.swagger.v3.oas.models.info.License;
import io.swagger.v3.oas.models.servers.Server;
import java.util.List;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

@Configuration
public class SwaggerConfiguration {

  @Bean
  public OpenAPI customOpenAPI() {
    return new OpenAPI()
        .info(
            new Info()
                .title("E-commerce API")
                .version("1.0.0")
                .description("API para sistema de e-commerce")
                .contact(
                    new Contact()
                        .name("Seu Nome")
                        .email("seu.email@exemplo.com")
                        .url("https://github.com/seu-usuario"))
                .license(
                    new License().name("MIT License").url("https://opensource.org/licenses/MIT")))
        .servers(
            List.of(
                new Server()
                    .url("http://localhost:8080")
                    .description("Servidor de Desenvolvimento"),
                new Server().url("https://api.exemplo.com").description("Servidor de Produção")));
  }
}
------[0m
[0m2025-06-16 21:22:20 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java[0m
[0m2025-06-16 21:22:20 [0;34m[DEBUG][0m   FILE_STATUS (WebSecurityConfiguration.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:20 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java, FILE_NAME: WebSecurityConfiguration.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:20 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:20 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:20 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java][0m
[0m2025-06-16 21:22:21 [0;34m[INFO][0m    - File:[0;37m[WebSecurityConfiguration.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:21 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.configuration;

import com.gmail.merikbest2015.ecommerce.security.JwtConfigurer;
import com.gmail.merikbest2015.ecommerce.security.oauth2.CustomOAuth2UserService;
import com.gmail.merikbest2015.ecommerce.security.oauth2.OAuth2SuccessHandler;
import lombok.RequiredArgsConstructor;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.config.Customizer;
import org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration;
import org.springframework.security.config.annotation.method.configuration.EnableMethodSecurity;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.http.SessionCreationPolicy;
import org.springframework.security.web.SecurityFilterChain;
import org.springframework.security.web.csrf.CookieCsrfTokenRepository;

@Configuration
@RequiredArgsConstructor
@EnableWebSecurity
@EnableMethodSecurity(
    proxyTargetClass = false) // Alterado para usar proxy por interface em vez de por classe
public class WebSecurityConfiguration {

  private final JwtConfigurer jwtConfigurer;
  private final OAuth2SuccessHandler oauthSuccessHandler;
  private final CustomOAuth2UserService oAuth2UserService;

  @Bean
  public SecurityFilterChain filterChain(HttpSecurity http) throws Exception {
    http.cors(Customizer.withDefaults())
        .csrf(
            csrf ->
                csrf.csrfTokenRepository(
                    CookieCsrfTokenRepository
                        .withHttpOnlyFalse())) // Updated: CSRF protection enabled with
                                               // CookieCsrfTokenRepository
        .sessionManagement(
            session -> session.sessionCreationPolicy(SessionCreationPolicy.STATELESS))
        .authorizeHttpRequests(
            authorize ->
                authorize
                    .requestMatchers(
                        "/api/v1/auth/**",
                        "/api/v1/auth/login",
                        "/api/v1/registration/**",
                        "/api/v1/perfumes/**",
                        "/api/v1/users/cart",
                        "/api/v1/order/**",
                        "/api/v1/review/**",
                        "/websocket",
                        "/websocket/**",
                        "/img/**",
                        "/static/**")
                    .permitAll()
                    .requestMatchers(
                        "/auth/**",
                        "/oauth2/**",
                        "/swagger-ui/**",
                        "/swagger-resources/**",
                        "/v2/api-docs",
                        "/v3/api-docs/**")
                    .permitAll()
                    .requestMatchers("/api/v1/admin/**")
                    .hasAuthority("ADMIN")
                    .anyRequest()
                    .authenticated())
        .oauth2Login(
            oauth2 ->
                oauth2
                    .authorizationEndpoint(
                        authorization -> authorization.baseUri("/oauth2/authorize"))
                    .userInfoEndpoint(userInfo -> userInfo.userService(oAuth2UserService))
                    .successHandler(oauthSuccessHandler))
        .with(jwtConfigurer, Customizer.withDefaults()); // Updated: apply() replaced with with()
    return http.build();
  }

  @Bean
  public AuthenticationManager authenticationManager(
      AuthenticationConfiguration authenticationConfiguration) throws Exception {
    return authenticationConfiguration.getAuthenticationManager();
  }
}
------[0m
[0m2025-06-16 21:22:21 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.configuration;

import com.gmail.merikbest2015.ecommerce.security.JwtConfigurer;
import com.gmail.merikbest2015.ecommerce.security.oauth2.CustomOAuth2UserService;
import com.gmail.merikbest2015.ecommerce.security.oauth2.OAuth2SuccessHandler;
import lombok.RequiredArgsConstructor;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.config.Customizer;
import org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration;
import org.springframework.security.config.annotation.method.configuration.EnableMethodSecurity;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.http.SessionCreationPolicy;
import org.springframework.security.web.SecurityFilterChain;
import org.springframework.security.web.csrf.CookieCsrfTokenRepository;

@Configuration
@RequiredArgsConstructor
@EnableWebSecurity
@EnableMethodSecurity(
    proxyTargetClass = false) // Alterado para usar proxy por interface em vez de por classe
public class WebSecurityConfiguration {

  private final JwtConfigurer jwtConfigurer;
  private final OAuth2SuccessHandler oauthSuccessHandler;
  private final CustomOAuth2UserService oAuth2UserService;

  @Bean
  public SecurityFilterChain filterChain(HttpSecurity http) throws Exception {
    http.cors(Customizer.withDefaults())
        .csrf(
            csrf ->
                csrf.csrfTokenRepository(
                    CookieCsrfTokenRepository
                        .withHttpOnlyFalse())) // Updated: CSRF protection enabled with
                                               // CookieCsrfTokenRepository
        .sessionManagement(
            session -> session.sessionCreationPolicy(SessionCreationPolicy.STATELESS))
        .authorizeHttpRequests(
            authorize ->
                authorize
                    .requestMatchers(
                        "/api/v1/auth/**",
                        "/api/v1/auth/login",
                        "/api/v1/registration/**",
                        "/api/v1/perfumes/**",
                        "/api/v1/users/cart",
                        "/api/v1/order/**",
                        "/api/v1/review/**",
                        "/websocket",
                        "/websocket/**",
                        "/img/**",
                        "/static/**")
                    .permitAll()
                    .requestMatchers(
                        "/auth/**",
                        "/oauth2/**",
                        "/swagger-ui/**",
                        "/swagger-resources/**",
                        "/v2/api-docs",
                        "/v3/api-docs/**")
                    .permitAll()
                    .requestMatchers("/api/v1/admin/**")
                    .hasAuthority("ADMIN")
                    .anyRequest()
                    .authenticated())
        .oauth2Login(
            oauth2 ->
                oauth2
                    .authorizationEndpoint(
                        authorization -> authorization.baseUri("/oauth2/authorize"))
                    .userInfoEndpoint(userInfo -> userInfo.userService(oAuth2UserService))
                    .successHandler(oauthSuccessHandler))
        .with(jwtConfigurer, Customizer.withDefaults()); // Updated: apply() replaced with with()
    return http.build();
  }

  @Bean
  public AuthenticationManager authenticationManager(
      AuthenticationConfiguration authenticationConfiguration) throws Exception {
    return authenticationConfiguration.getAuthenticationManager();
  }
}
------[0m
[0m2025-06-16 21:22:21 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSocketConfiguration.java[0m
[0m2025-06-16 21:22:21 [0;34m[DEBUG][0m   FILE_STATUS (WebSocketConfiguration.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:21 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSocketConfiguration.java, FILE_NAME: WebSocketConfiguration.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:21 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:21 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:21 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSocketConfiguration.java][0m
[0m2025-06-16 21:22:21 [0;34m[INFO][0m    - File:[0;37m[WebSocketConfiguration.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:21 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.configuration;

import org.springframework.context.annotation.Configuration;
import org.springframework.messaging.simp.config.MessageBrokerRegistry;
import org.springframework.web.socket.config.annotation.EnableWebSocketMessageBroker;
import org.springframework.web.socket.config.annotation.StompEndpointRegistry;
import org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer;

@Configuration
@EnableWebSocketMessageBroker
public class WebSocketConfiguration implements WebSocketMessageBrokerConfigurer {

  @Override
  public void configureMessageBroker(MessageBrokerRegistry config) {
    config.enableSimpleBroker("/topic");
    config.setApplicationDestinationPrefixes("/app");
  }

  @Override
  public void registerStompEndpoints(StompEndpointRegistry registry) {
    registry.addEndpoint("/websocket").setAllowedOrigins("*").withSockJS();
  }
}
------[0m
[0m2025-06-16 21:22:21 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.configuration;

import org.springframework.context.annotation.Configuration;
import org.springframework.messaging.simp.config.MessageBrokerRegistry;
import org.springframework.web.socket.config.annotation.EnableWebSocketMessageBroker;
import org.springframework.web.socket.config.annotation.StompEndpointRegistry;
import org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer;

@Configuration
@EnableWebSocketMessageBroker
public class WebSocketConfiguration implements WebSocketMessageBrokerConfigurer {

  @Override
  public void configureMessageBroker(MessageBrokerRegistry config) {
    config.enableSimpleBroker("/topic");
    config.setApplicationDestinationPrefixes("/app");
  }

  @Override
  public void registerStompEndpoints(StompEndpointRegistry registry) {
    registry.addEndpoint("/websocket").setAllowedOrigins("*").withSockJS();
  }
}
------[0m
[0m2025-06-16 21:22:21 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java[0m
[0m2025-06-16 21:22:21 [0;34m[DEBUG][0m   FILE_STATUS (ErrorMessage.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:21 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java, FILE_NAME: ErrorMessage.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:21 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:21 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:22 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java][0m
[0m2025-06-16 21:22:22 [0;34m[INFO][0m    - File:[0;37m[ErrorMessage.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:22 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.constants;

public class ErrorMessage {
  public static final String INVALID_JWT_TOKEN = "JWT token is expired or invalid";
  public static final String EMAIL_NOT_FOUND = "Email not found";
  public static final String INCORRECT_PASSWORD = "Incorrect password or email";
  public static final String PASSWORDS_DO_NOT_MATCH = "Passwords do not match.";
  public static final String EMAIL_IN_USE = "Email is already in use.";
  public static final String INVALID_PASSWORD_CODE = "Password reset code is invalid!";
  public static final String EMPTY_PASSWORD_CONFIRMATION = "Password confirmation cannot be empty.";
  public static final String ACTIVATION_CODE_NOT_FOUND = "Activation code not found.";
  public static final String ORDER_NOT_FOUND = "Order not found.";
  public static final String PERFUME_NOT_FOUND = "Perfume not found.";
  public static final String USER_NOT_FOUND = "User not found.";
  public static final String EMPTY_FIRST_NAME = "First name cannot be empty";
  public static final String EMPTY_LAST_NAME = "Last name cannot be empty";
  public static final String PASSWORD_CHARACTER_LENGTH =
      "The password must be between 6 and 16 characters long";
  public static final String PASSWORD2_CHARACTER_LENGTH =
      "The password confirmation must be between 6 and 16 characters long";
  public static final String INCORRECT_EMAIL = "Incorrect email";
  public static final String EMAIL_CANNOT_BE_EMPTY = "Email cannot be empty";
  public static final String FILL_IN_THE_INPUT_FIELD = "Fill in the input field";
  public static final String EMPTY_PHONE_NUMBER = "Phone number cannot be empty";
  public static final String EMPTY_POST_INDEX = "Post index cannot be empty";
}
------[0m
[0m2025-06-16 21:22:22 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.constants;

public class ErrorMessage {
  public static final String INVALID_JWT_TOKEN = "JWT token is expired or invalid";
  public static final String EMAIL_NOT_FOUND = "Email not found";
  public static final String INCORRECT_PASSWORD = "Incorrect password or email";
  public static final String PASSWORDS_DO_NOT_MATCH = "Passwords do not match.";
  public static final String EMAIL_IN_USE = "Email is already in use.";
  public static final String INVALID_PASSWORD_CODE = "Password reset code is invalid!";
  public static final String EMPTY_PASSWORD_CONFIRMATION = "Password confirmation cannot be empty.";
  public static final String ACTIVATION_CODE_NOT_FOUND = "Activation code not found.";
  public static final String ORDER_NOT_FOUND = "Order not found.";
  public static final String PERFUME_NOT_FOUND = "Perfume not found.";
  public static final String USER_NOT_FOUND = "User not found.";
  public static final String EMPTY_FIRST_NAME = "First name cannot be empty";
  public static final String EMPTY_LAST_NAME = "Last name cannot be empty";
  public static final String PASSWORD_CHARACTER_LENGTH =
      "The password must be between 6 and 16 characters long";
  public static final String PASSWORD2_CHARACTER_LENGTH =
      "The password confirmation must be between 6 and 16 characters long";
  public static final String INCORRECT_EMAIL = "Incorrect email";
  public static final String EMAIL_CANNOT_BE_EMPTY = "Email cannot be empty";
  public static final String FILL_IN_THE_INPUT_FIELD = "Fill in the input field";
  public static final String EMPTY_PHONE_NUMBER = "Phone number cannot be empty";
  public static final String EMPTY_POST_INDEX = "Post index cannot be empty";
}
------[0m
[0m2025-06-16 21:22:22 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java[0m
[0m2025-06-16 21:22:22 [0;34m[DEBUG][0m   FILE_STATUS (PathConstants.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:22 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java, FILE_NAME: PathConstants.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:22 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:22 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:22 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java][0m
[0m2025-06-16 21:22:23 [0;34m[INFO][0m    - File:[0;37m[PathConstants.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:23 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.constants;

public class PathConstants {

  public static final String API_V1 = "/api/v1";
  public static final String ORDER = "/order";
  public static final String ORDERS = "/orders";
  public static final String PERFUMES = "/perfumes";
  public static final String USER = "/user";
  public static final String GRAPHQL = "/graphql";

  public static final String API_V1_ADMIN = API_V1 + "/admin";
  public static final String API_V1_AUTH = API_V1 + "/auth";
  public static final String API_V1_ORDER = API_V1 + ORDER;
  public static final String API_V1_PERFUMES = API_V1 + PERFUMES;
  public static final String API_V1_REGISTRATION = API_V1 + "/registration";
  public static final String API_V1_REVIEW = API_V1 + "/review";
  public static final String API_V1_USERS = API_V1 + "/users";

  public static final String ADD = "/add";
  public static final String EDIT = "/edit";
  public static final String CART = "/cart";
  public static final String DELETE_BY_PERFUME_ID = "/delete/{perfumeId}";
  public static final String ORDER_BY_EMAIL = ORDER + "/{userEmail}";
  public static final String ORDER_DELETE = ORDER + "/delete/{orderId}";
  public static final String USER_BY_ID = USER + "/{userId}";
  public static final String USER_ALL = USER + "/all";
  public static final String GRAPHQL_USER = GRAPHQL + USER;
  public static final String GRAPHQL_USER_ALL = GRAPHQL + USER + "/all";
  public static final String GRAPHQL_ORDERS = GRAPHQL + ORDERS;
  public static final String GRAPHQL_ORDER = GRAPHQL + ORDER;

  public static final String LOGIN = "/login";
  public static final String FORGOT_EMAIL = "/forgot/{email}";
  public static final String RESET = "/reset";
  public static final String CODE = "/{code}";
  public static final String RESET_CODE = RESET + CODE;
  public static final String ACTIVATE_CODE = "/activate" + CODE;
  public static final String EDIT_PASSWORD = "/edit/password";

  public static final String ORDER_ID = "/{orderId}";
  public static final String ORDER_ID_ITEMS = ORDER_ID + "/items";

  public static final String PERFUME_ID = "/{perfumeId}";
  public static final String IDS = "/ids";
  public static final String SEARCH = "/search";
  public static final String SEARCH_GENDER = SEARCH + "/gender";
  public static final String SEARCH_PERFUMER = SEARCH + "/perfumer";
  public static final String SEARCH_TEXT = SEARCH + "/text";
  public static final String GRAPHQL_IDS = GRAPHQL + IDS;
  public static final String GRAPHQL_PERFUMES = GRAPHQL + PERFUMES;
  public static final String GRAPHQL_PERFUME = GRAPHQL + "/perfume";
}
------[0m
[0m2025-06-16 21:22:23 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.constants;

public class PathConstants {

  public static final String API_V1 = "/api/v1";
  public static final String ORDER = "/order";
  public static final String ORDERS = "/orders";
  public static final String PERFUMES = "/perfumes";
  public static final String USER = "/user";
  public static final String GRAPHQL = "/graphql";

  public static final String API_V1_ADMIN = API_V1 + "/admin";
  public static final String API_V1_AUTH = API_V1 + "/auth";
  public static final String API_V1_ORDER = API_V1 + ORDER;
  public static final String API_V1_PERFUMES = API_V1 + PERFUMES;
  public static final String API_V1_REGISTRATION = API_V1 + "/registration";
  public static final String API_V1_REVIEW = API_V1 + "/review";
  public static final String API_V1_USERS = API_V1 + "/users";

  public static final String ADD = "/add";
  public static final String EDIT = "/edit";
  public static final String CART = "/cart";
  public static final String DELETE_BY_PERFUME_ID = "/delete/{perfumeId}";
  public static final String ORDER_BY_EMAIL = ORDER + "/{userEmail}";
  public static final String ORDER_DELETE = ORDER + "/delete/{orderId}";
  public static final String USER_BY_ID = USER + "/{userId}";
  public static final String USER_ALL = USER + "/all";
  public static final String GRAPHQL_USER = GRAPHQL + USER;
  public static final String GRAPHQL_USER_ALL = GRAPHQL + USER + "/all";
  public static final String GRAPHQL_ORDERS = GRAPHQL + ORDERS;
  public static final String GRAPHQL_ORDER = GRAPHQL + ORDER;

  public static final String LOGIN = "/login";
  public static final String FORGOT_EMAIL = "/forgot/{email}";
  public static final String RESET = "/reset";
  public static final String CODE = "/{code}";
  public static final String RESET_CODE = RESET + CODE;
  public static final String ACTIVATE_CODE = "/activate" + CODE;
  public static final String EDIT_PASSWORD = "/edit/password";

  public static final String ORDER_ID = "/{orderId}";
  public static final String ORDER_ID_ITEMS = ORDER_ID + "/items";

  public static final String PERFUME_ID = "/{perfumeId}";
  public static final String IDS = "/ids";
  public static final String SEARCH = "/search";
  public static final String SEARCH_GENDER = SEARCH + "/gender";
  public static final String SEARCH_PERFUMER = SEARCH + "/perfumer";
  public static final String SEARCH_TEXT = SEARCH + "/text";
  public static final String GRAPHQL_IDS = GRAPHQL + IDS;
  public static final String GRAPHQL_PERFUMES = GRAPHQL + PERFUMES;
  public static final String GRAPHQL_PERFUME = GRAPHQL + "/perfume";
}
------[0m
[0m2025-06-16 21:22:23 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java[0m
[0m2025-06-16 21:22:23 [0;34m[DEBUG][0m   FILE_STATUS (AdminController.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:23 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java, FILE_NAME: AdminController.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:23 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:23 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:23 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java][0m
[0m2025-06-16 21:22:23 [0;34m[INFO][0m    - File:[0;37m[AdminController.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:23 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.controller;

import static com.gmail.merikbest2015.ecommerce.constants.PathConstants.*;

import com.gmail.merikbest2015.ecommerce.dto.GraphQLRequest;
import com.gmail.merikbest2015.ecommerce.dto.HeaderResponse;
import com.gmail.merikbest2015.ecommerce.dto.order.OrderResponse;
import com.gmail.merikbest2015.ecommerce.dto.perfume.FullPerfumeResponse;
import com.gmail.merikbest2015.ecommerce.dto.perfume.PerfumeRequest;
import com.gmail.merikbest2015.ecommerce.dto.user.BaseUserResponse;
import com.gmail.merikbest2015.ecommerce.dto.user.UserResponse;
import com.gmail.merikbest2015.ecommerce.mapper.OrderMapper;
import com.gmail.merikbest2015.ecommerce.mapper.PerfumeMapper;
import com.gmail.merikbest2015.ecommerce.mapper.UserMapper;
import com.gmail.merikbest2015.ecommerce.service.graphql.GraphQLProvider;
import graphql.ExecutionResult;
import jakarta.validation.Valid;
import java.util.List;
import lombok.RequiredArgsConstructor;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.data.domain.Pageable;
import org.springframework.data.web.PageableDefault;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

@RestController
@RequiredArgsConstructor
// @PreAuthorize("hasAuthority('ADMIN')")
@RequestMapping(API_V1_ADMIN)
public class AdminController {

  private static final Logger logger = LoggerFactory.getLogger(AdminController.class);

  private final UserMapper userMapper;
  private final PerfumeMapper perfumeMapper;
  private final OrderMapper orderMapper;
  private final GraphQLProvider graphQLProvider;

  @PostMapping(ADD)
  public ResponseEntity<FullPerfumeResponse> addPerfume(
      @RequestPart(name = "file", required = false) MultipartFile file,
      @RequestPart("perfume") @Valid PerfumeRequest perfume,
      BindingResult bindingResult) {
    logger.info("Admin request to add perfume: title='{}'", perfume.getPerfumeTitle());
    return ResponseEntity.ok(perfumeMapper.savePerfume(perfume, file, bindingResult));
  }

  @PostMapping(EDIT)
  public ResponseEntity<FullPerfumeResponse> updatePerfume(
      @RequestPart(name = "file", required = false) MultipartFile file,
      @RequestPart("perfume") @Valid PerfumeRequest perfume,
      BindingResult bindingResult) {
    logger.info(
        "Admin request to update perfume: id={}, title='{}'",
        perfume.getId(),
        perfume.getPerfumeTitle());
    return ResponseEntity.ok(perfumeMapper.savePerfume(perfume, file, bindingResult));
  }

  @DeleteMapping(DELETE_BY_PERFUME_ID)
  public ResponseEntity<String> deletePerfume(@PathVariable Long perfumeId) {
    logger.info("Admin request to delete perfume with id: {}", perfumeId);
    return ResponseEntity.ok(perfumeMapper.deletePerfume(perfumeId));
  }

  @GetMapping(ORDERS)
  public ResponseEntity<List<OrderResponse>> getAllOrders(@PageableDefault() Pageable pageable) {
    logger.info("Admin request to get all orders, pageable: {}", pageable);
    HeaderResponse<OrderResponse> response = orderMapper.getAllOrders(pageable);
    return ResponseEntity.ok().headers(response.getHeaders()).body(response.getItems());
  }

  @GetMapping(ORDER_BY_EMAIL)
  public ResponseEntity<List<OrderResponse>> getUserOrdersByEmail(
      @PathVariable String userEmail, @PageableDefault() Pageable pageable) {
    logger.info(
        "Admin request to get orders by user email: '{}', pageable: {}", userEmail, pageable);
    HeaderResponse<OrderResponse> response = orderMapper.getUserOrders(userEmail, pageable);
    return ResponseEntity.ok().headers(response.getHeaders()).body(response.getItems());
  }

  @DeleteMapping(ORDER_DELETE)
  public ResponseEntity<String> deleteOrder(@PathVariable Long orderId) {
    logger.info("Admin request to delete order with id: {}", orderId);
    return ResponseEntity.ok(orderMapper.deleteOrder(orderId));
  }

  @GetMapping(USER_BY_ID)
  public ResponseEntity<UserResponse> getUserById(@PathVariable Long userId) {
    logger.info("Admin request to get user by id: {}", userId);
    return ResponseEntity.ok(userMapper.getUserById(userId));
  }

  @GetMapping(USER_ALL)
  public ResponseEntity<List<BaseUserResponse>> getAllUsers(@PageableDefault() Pageable pageable) {
    logger.info("Admin request to get all users, pageable: {}", pageable);
    HeaderResponse<BaseUserResponse> response = userMapper.getAllUsers(pageable);
    return ResponseEntity.ok().headers(response.getHeaders()).body(response.getItems());
  }

  @PostMapping(GRAPHQL_USER)
  public ResponseEntity<ExecutionResult> getUserByQuery(@RequestBody GraphQLRequest request) {
    logger.info("Admin GraphQL query for user: {}", request.getQuery());
    return ResponseEntity.ok(graphQLProvider.getGraphQL().execute(request.getQuery()));
  }

  @PostMapping(GRAPHQL_USER_ALL)
  public ResponseEntity<ExecutionResult> getAllUsersByQuery(@RequestBody GraphQLRequest request) {
    logger.info("Admin GraphQL query for all users: {}", request.getQuery());
    return ResponseEntity.ok(graphQLProvider.getGraphQL().execute(request.getQuery()));
  }

  @PostMapping(GRAPHQL_ORDERS)
  public ResponseEntity<ExecutionResult> getAllOrdersQuery(@RequestBody GraphQLRequest request) {
    logger.info("Admin GraphQL query for all orders: {}", request.getQuery());
    return ResponseEntity.ok(graphQLProvider.getGraphQL().execute(request.getQuery()));
  }

  @PostMapping(GRAPHQL_ORDER)
  public ResponseEntity<ExecutionResult> getUserOrdersByEmailQuery(
      @RequestBody GraphQLRequest request) {
    logger.info("Admin GraphQL query for orders by user email: {}", request.getQuery());
    return ResponseEntity.ok(graphQLProvider.getGraphQL().execute(request.getQuery()));
  }
}
------[0m
[0m2025-06-16 21:22:23 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.controller;

import static com.gmail.merikbest2015.ecommerce.constants.PathConstants.*;

import com.gmail.merikbest2015.ecommerce.dto.GraphQLRequest;
import com.gmail.merikbest2015.ecommerce.dto.HeaderResponse;
import com.gmail.merikbest2015.ecommerce.dto.order.OrderResponse;
import com.gmail.merikbest2015.ecommerce.dto.perfume.FullPerfumeResponse;
import com.gmail.merikbest2015.ecommerce.dto.perfume.PerfumeRequest;
import com.gmail.merikbest2015.ecommerce.dto.user.BaseUserResponse;
import com.gmail.merikbest2015.ecommerce.dto.user.UserResponse;
import com.gmail.merikbest2015.ecommerce.mapper.OrderMapper;
import com.gmail.merikbest2015.ecommerce.mapper.PerfumeMapper;
import com.gmail.merikbest2015.ecommerce.mapper.UserMapper;
import com.gmail.merikbest2015.ecommerce.service.graphql.GraphQLProvider;
import graphql.ExecutionResult;
import jakarta.validation.Valid;
import java.util.List;
import lombok.RequiredArgsConstructor;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.data.domain.Pageable;
import org.springframework.data.web.PageableDefault;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

@RestController
@RequiredArgsConstructor
// @PreAuthorize("hasAuthority('ADMIN')")
@RequestMapping(API_V1_ADMIN)
public class AdminController {

  private static final Logger logger = LoggerFactory.getLogger(AdminController.class);

  private final UserMapper userMapper;
  private final PerfumeMapper perfumeMapper;
  private final OrderMapper orderMapper;
  private final GraphQLProvider graphQLProvider;

  @PostMapping(ADD)
  public ResponseEntity<FullPerfumeResponse> addPerfume(
      @RequestPart(name = "file", required = false) MultipartFile file,
      @RequestPart("perfume") @Valid PerfumeRequest perfume,
      BindingResult bindingResult) {
    logger.info("Admin request to add perfume: title='{}'", perfume.getPerfumeTitle());
    return ResponseEntity.ok(perfumeMapper.savePerfume(perfume, file, bindingResult));
  }

  @PostMapping(EDIT)
  public ResponseEntity<FullPerfumeResponse> updatePerfume(
      @RequestPart(name = "file", required = false) MultipartFile file,
      @RequestPart("perfume") @Valid PerfumeRequest perfume,
      BindingResult bindingResult) {
    logger.info(
        "Admin request to update perfume: id={}, title='{}'",
        perfume.getId(),
        perfume.getPerfumeTitle());
    return ResponseEntity.ok(perfumeMapper.savePerfume(perfume, file, bindingResult));
  }

  @DeleteMapping(DELETE_BY_PERFUME_ID)
  public ResponseEntity<String> deletePerfume(@PathVariable Long perfumeId) {
    logger.info("Admin request to delete perfume with id: {}", perfumeId);
    return ResponseEntity.ok(perfumeMapper.deletePerfume(perfumeId));
  }

  @GetMapping(ORDERS)
  public ResponseEntity<List<OrderResponse>> getAllOrders(@PageableDefault() Pageable pageable) {
    logger.info("Admin request to get all orders, pageable: {}", pageable);
    HeaderResponse<OrderResponse> response = orderMapper.getAllOrders(pageable);
    return ResponseEntity.ok().headers(response.getHeaders()).body(response.getItems());
  }

  @GetMapping(ORDER_BY_EMAIL)
  public ResponseEntity<List<OrderResponse>> getUserOrdersByEmail(
      @PathVariable String userEmail, @PageableDefault() Pageable pageable) {
    logger.info(
        "Admin request to get orders by user email: '{}', pageable: {}", userEmail, pageable);
    HeaderResponse<OrderResponse> response = orderMapper.getUserOrders(userEmail, pageable);
    return ResponseEntity.ok().headers(response.getHeaders()).body(response.getItems());
  }

  @DeleteMapping(ORDER_DELETE)
  public ResponseEntity<String> deleteOrder(@PathVariable Long orderId) {
    logger.info("Admin request to delete order with id: {}", orderId);
    return ResponseEntity.ok(orderMapper.deleteOrder(orderId));
  }

  @GetMapping(USER_BY_ID)
  public ResponseEntity<UserResponse> getUserById(@PathVariable Long userId) {
    logger.info("Admin request to get user by id: {}", userId);
    return ResponseEntity.ok(userMapper.getUserById(userId));
  }

  @GetMapping(USER_ALL)
  public ResponseEntity<List<BaseUserResponse>> getAllUsers(@PageableDefault() Pageable pageable) {
    logger.info("Admin request to get all users, pageable: {}", pageable);
    HeaderResponse<BaseUserResponse> response = userMapper.getAllUsers(pageable);
    return ResponseEntity.ok().headers(response.getHeaders()).body(response.getItems());
  }

  @PostMapping(GRAPHQL_USER)
  public ResponseEntity<ExecutionResult> getUserByQuery(@RequestBody GraphQLRequest request) {
    logger.info("Admin GraphQL query for user: {}", request.getQuery());
    return ResponseEntity.ok(graphQLProvider.getGraphQL().execute(request.getQuery()));
  }

  @PostMapping(GRAPHQL_USER_ALL)
  public ResponseEntity<ExecutionResult> getAllUsersByQuery(@RequestBody GraphQLRequest request) {
    logger.info("Admin GraphQL query for all users: {}", request.getQuery());
    return ResponseEntity.ok(graphQLProvider.getGraphQL().execute(request.getQuery()));
  }

  @PostMapping(GRAPHQL_ORDERS)
  public ResponseEntity<ExecutionResult> getAllOrdersQuery(@RequestBody GraphQLRequest request) {
    logger.info("Admin GraphQL query for all orders: {}", request.getQuery());
    return ResponseEntity.ok(graphQLProvider.getGraphQL().execute(request.getQuery()));
  }

  @PostMapping(GRAPHQL_ORDER)
  public ResponseEntity<ExecutionResult> getUserOrdersByEmailQuery(
      @RequestBody GraphQLRequest request) {
    logger.info("Admin GraphQL query for orders by user email: {}", request.getQuery());
    return ResponseEntity.ok(graphQLProvider.getGraphQL().execute(request.getQuery()));
  }
}
------[0m
[0m2025-06-16 21:22:23 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java[0m
[0m2025-06-16 21:22:23 [0;34m[DEBUG][0m   FILE_STATUS (AuthenticationController.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:23 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java, FILE_NAME: AuthenticationController.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:23 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:23 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:23 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java][0m
[0m2025-06-16 21:22:24 [0;34m[INFO][0m    - File:[0;37m[AuthenticationController.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:24 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.controller;

import static com.gmail.merikbest2015.ecommerce.constants.PathConstants.*;

import com.gmail.merikbest2015.ecommerce.dto.PasswordResetRequest;
import com.gmail.merikbest2015.ecommerce.dto.auth.AuthenticationRequest;
import com.gmail.merikbest2015.ecommerce.dto.auth.AuthenticationResponse;
import com.gmail.merikbest2015.ecommerce.mapper.AuthenticationMapper;
import com.gmail.merikbest2015.ecommerce.security.UserPrincipal;
import jakarta.validation.Valid;
import lombok.RequiredArgsConstructor;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.ResponseEntity;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.util.HtmlUtils;

@RestController
@RequiredArgsConstructor
@RequestMapping(API_V1_AUTH)
public class AuthenticationController {

  private static final Logger logger = LoggerFactory.getLogger(AuthenticationController.class);

  private final AuthenticationMapper authenticationMapper;

  @PostMapping(LOGIN)
  public ResponseEntity<AuthenticationResponse> login(@RequestBody AuthenticationRequest request) {
    logger.info("Login attempt for email: {}", request.getEmail());
    return ResponseEntity.ok(authenticationMapper.login(request));
  }

  @GetMapping(FORGOT_EMAIL)
  public ResponseEntity<String> forgotPassword(@PathVariable String email) {
    logger.info("Password reset code requested for email: {}", email);
    return ResponseEntity.ok(authenticationMapper.sendPasswordResetCode(email));
  }

  @GetMapping(RESET_CODE)
  public ResponseEntity<String> getEmailByPasswordResetCode(@PathVariable String code) {
    logger.info("Retrieving email by password reset code: {}", code);
    String emailFromMapper = authenticationMapper.getEmailByPasswordResetCode(code);
    String escapedEmail = (emailFromMapper != null) ? HtmlUtils.htmlEscape(emailFromMapper) : null;
    return ResponseEntity.ok(escapedEmail);
  }

  @PostMapping(RESET)
  public ResponseEntity<String> passwordReset(@RequestBody PasswordResetRequest passwordReset) {
    logger.info("Password reset requested for email: {}", passwordReset.getEmail());
    return ResponseEntity.ok(
        authenticationMapper.passwordReset(passwordReset.getEmail(), passwordReset));
  }

  @PutMapping(EDIT_PASSWORD)
  public ResponseEntity<String> updateUserPassword(
      @AuthenticationPrincipal UserPrincipal user,
      @Valid @RequestBody PasswordResetRequest passwordReset,
      BindingResult bindingResult) {
    logger.info("User {} requested password update", user.getEmail());
    return ResponseEntity.ok(
        authenticationMapper.passwordReset(user.getEmail(), passwordReset, bindingResult));
  }
}
------[0m
[0m2025-06-16 21:22:24 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.controller;

import static com.gmail.merikbest2015.ecommerce.constants.PathConstants.*;

import com.gmail.merikbest2015.ecommerce.dto.PasswordResetRequest;
import com.gmail.merikbest2015.ecommerce.dto.auth.AuthenticationRequest;
import com.gmail.merikbest2015.ecommerce.dto.auth.AuthenticationResponse;
import com.gmail.merikbest2015.ecommerce.mapper.AuthenticationMapper;
import com.gmail.merikbest2015.ecommerce.security.UserPrincipal;
import jakarta.validation.Valid;
import lombok.RequiredArgsConstructor;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.ResponseEntity;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.util.HtmlUtils;

@RestController
@RequiredArgsConstructor
@RequestMapping(API_V1_AUTH)
public class AuthenticationController {

  private static final Logger logger = LoggerFactory.getLogger(AuthenticationController.class);

  private final AuthenticationMapper authenticationMapper;

  @PostMapping(LOGIN)
  public ResponseEntity<AuthenticationResponse> login(@RequestBody AuthenticationRequest request) {
    logger.info("Login attempt for email: {}", request.getEmail());
    return ResponseEntity.ok(authenticationMapper.login(request));
  }

  @GetMapping(FORGOT_EMAIL)
  public ResponseEntity<String> forgotPassword(@PathVariable String email) {
    logger.info("Password reset code requested for email: {}", email);
    return ResponseEntity.ok(authenticationMapper.sendPasswordResetCode(email));
  }

  @GetMapping(RESET_CODE)
  public ResponseEntity<String> getEmailByPasswordResetCode(@PathVariable String code) {
    logger.info("Retrieving email by password reset code: {}", code);
    String emailFromMapper = authenticationMapper.getEmailByPasswordResetCode(code);
    String escapedEmail = (emailFromMapper != null) ? HtmlUtils.htmlEscape(emailFromMapper) : null;
    return ResponseEntity.ok(escapedEmail);
  }

  @PostMapping(RESET)
  public ResponseEntity<String> passwordReset(@RequestBody PasswordResetRequest passwordReset) {
    logger.info("Password reset requested for email: {}", passwordReset.getEmail());
    return ResponseEntity.ok(
        authenticationMapper.passwordReset(passwordReset.getEmail(), passwordReset));
  }

  @PutMapping(EDIT_PASSWORD)
  public ResponseEntity<String> updateUserPassword(
      @AuthenticationPrincipal UserPrincipal user,
      @Valid @RequestBody PasswordResetRequest passwordReset,
      BindingResult bindingResult) {
    logger.info("User {} requested password update", user.getEmail());
    return ResponseEntity.ok(
        authenticationMapper.passwordReset(user.getEmail(), passwordReset, bindingResult));
  }
}
------[0m
[0m2025-06-16 21:22:24 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java[0m
[0m2025-06-16 21:22:24 [0;34m[DEBUG][0m   FILE_STATUS (OrderController.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:24 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java, FILE_NAME: OrderController.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:24 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:24 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:24 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java][0m
[0m2025-06-16 21:22:25 [0;34m[INFO][0m    - File:[0;37m[OrderController.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:25 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.controller;

import static com.gmail.merikbest2015.ecommerce.constants.PathConstants.*;

import com.gmail.merikbest2015.ecommerce.dto.GraphQLRequest;
import com.gmail.merikbest2015.ecommerce.dto.HeaderResponse;
import com.gmail.merikbest2015.ecommerce.dto.order.OrderItemResponse;
import com.gmail.merikbest2015.ecommerce.dto.order.OrderRequest;
import com.gmail.merikbest2015.ecommerce.dto.order.OrderResponse;
import com.gmail.merikbest2015.ecommerce.mapper.OrderMapper;
import com.gmail.merikbest2015.ecommerce.security.UserPrincipal;
import com.gmail.merikbest2015.ecommerce.service.graphql.GraphQLProvider;
import graphql.ExecutionResult;
import jakarta.validation.Valid;
import java.util.List;
import lombok.RequiredArgsConstructor;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.data.domain.Pageable;
import org.springframework.data.web.PageableDefault;
import org.springframework.http.ResponseEntity;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.*;

@RestController
@RequiredArgsConstructor
@RequestMapping(API_V1_ORDER)
public class OrderController {

  private static final Logger logger = LoggerFactory.getLogger(OrderController.class);

  private final OrderMapper orderMapper;
  private final GraphQLProvider graphQLProvider;

  @GetMapping(ORDER_ID)
  public ResponseEntity<OrderResponse> getOrderById(@PathVariable Long orderId) {
    logger.info("Fetching order by ID: {}", orderId);
    return ResponseEntity.ok(orderMapper.getOrderById(orderId));
  }

  @GetMapping(ORDER_ID_ITEMS)
  public ResponseEntity<List<OrderItemResponse>> getOrderItemsByOrderId(
      @PathVariable Long orderId) {
    logger.info("Fetching order items for order ID: {}", orderId);
    return ResponseEntity.ok(orderMapper.getOrderItemsByOrderId(orderId));
  }

  @GetMapping
  public ResponseEntity<List<OrderResponse>> getUserOrders(
      @AuthenticationPrincipal UserPrincipal user, @PageableDefault() Pageable pageable) {
    logger.info("Fetching orders for user: {}", user.getEmail());
    HeaderResponse<OrderResponse> response = orderMapper.getUserOrders(user.getEmail(), pageable);
    return ResponseEntity.ok().headers(response.getHeaders()).body(response.getItems());
  }

  @PostMapping
  public ResponseEntity<OrderResponse> postOrder(
      @Valid @RequestBody OrderRequest order, BindingResult bindingResult) {
    logger.info("Posting new order");
    return ResponseEntity.ok(orderMapper.postOrder(order, bindingResult));
  }

  @PostMapping(GRAPHQL)
  public ResponseEntity<ExecutionResult> getUserOrdersByQuery(@RequestBody GraphQLRequest request) {
    logger.info("GraphQL query for user orders received");
    return ResponseEntity.ok(graphQLProvider.getGraphQL().execute(request.getQuery()));
  }
}
------[0m
[0m2025-06-16 21:22:25 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.controller;

import static com.gmail.merikbest2015.ecommerce.constants.PathConstants.*;

import com.gmail.merikbest2015.ecommerce.dto.GraphQLRequest;
import com.gmail.merikbest2015.ecommerce.dto.HeaderResponse;
import com.gmail.merikbest2015.ecommerce.dto.order.OrderItemResponse;
import com.gmail.merikbest2015.ecommerce.dto.order.OrderRequest;
import com.gmail.merikbest2015.ecommerce.dto.order.OrderResponse;
import com.gmail.merikbest2015.ecommerce.mapper.OrderMapper;
import com.gmail.merikbest2015.ecommerce.security.UserPrincipal;
import com.gmail.merikbest2015.ecommerce.service.graphql.GraphQLProvider;
import graphql.ExecutionResult;
import jakarta.validation.Valid;
import java.util.List;
import lombok.RequiredArgsConstructor;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.data.domain.Pageable;
import org.springframework.data.web.PageableDefault;
import org.springframework.http.ResponseEntity;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.*;

@RestController
@RequiredArgsConstructor
@RequestMapping(API_V1_ORDER)
public class OrderController {

  private static final Logger logger = LoggerFactory.getLogger(OrderController.class);

  private final OrderMapper orderMapper;
  private final GraphQLProvider graphQLProvider;

  @GetMapping(ORDER_ID)
  public ResponseEntity<OrderResponse> getOrderById(@PathVariable Long orderId) {
    logger.info("Fetching order by ID: {}", orderId);
    return ResponseEntity.ok(orderMapper.getOrderById(orderId));
  }

  @GetMapping(ORDER_ID_ITEMS)
  public ResponseEntity<List<OrderItemResponse>> getOrderItemsByOrderId(
      @PathVariable Long orderId) {
    logger.info("Fetching order items for order ID: {}", orderId);
    return ResponseEntity.ok(orderMapper.getOrderItemsByOrderId(orderId));
  }

  @GetMapping
  public ResponseEntity<List<OrderResponse>> getUserOrders(
      @AuthenticationPrincipal UserPrincipal user, @PageableDefault() Pageable pageable) {
    logger.info("Fetching orders for user: {}", user.getEmail());
    HeaderResponse<OrderResponse> response = orderMapper.getUserOrders(user.getEmail(), pageable);
    return ResponseEntity.ok().headers(response.getHeaders()).body(response.getItems());
  }

  @PostMapping
  public ResponseEntity<OrderResponse> postOrder(
      @Valid @RequestBody OrderRequest order, BindingResult bindingResult) {
    logger.info("Posting new order");
    return ResponseEntity.ok(orderMapper.postOrder(order, bindingResult));
  }

  @PostMapping(GRAPHQL)
  public ResponseEntity<ExecutionResult> getUserOrdersByQuery(@RequestBody GraphQLRequest request) {
    logger.info("GraphQL query for user orders received");
    return ResponseEntity.ok(graphQLProvider.getGraphQL().execute(request.getQuery()));
  }
}
------[0m
[0m2025-06-16 21:22:25 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java[0m
[0m2025-06-16 21:22:25 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeController.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:25 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java, FILE_NAME: PerfumeController.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:25 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:25 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:25 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java][0m
[0m2025-06-16 21:22:25 [0;34m[INFO][0m    - File:[0;37m[PerfumeController.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:25 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.controller;

import static com.gmail.merikbest2015.ecommerce.constants.PathConstants.*;

import com.gmail.merikbest2015.ecommerce.dto.GraphQLRequest;
import com.gmail.merikbest2015.ecommerce.dto.HeaderResponse;
import com.gmail.merikbest2015.ecommerce.dto.perfume.*;
import com.gmail.merikbest2015.ecommerce.mapper.PerfumeMapper;
import com.gmail.merikbest2015.ecommerce.service.graphql.GraphQLProvider;
import graphql.ExecutionResult;
import java.util.List;
import lombok.RequiredArgsConstructor;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.data.domain.Pageable;
import org.springframework.data.web.PageableDefault;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

@RestController
@RequiredArgsConstructor
@RequestMapping(API_V1_PERFUMES)
public class PerfumeController {

  private static final Logger logger = LoggerFactory.getLogger(PerfumeController.class);

  private final PerfumeMapper perfumeMapper;
  private final GraphQLProvider graphQLProvider;

  @GetMapping
  public ResponseEntity<List<PerfumeResponse>> getAllPerfumes(
      @PageableDefault(size = 15) Pageable pageable) {
    logger.info("Fetching all perfumes with pageable: {}", pageable);
    HeaderResponse<PerfumeResponse> response = perfumeMapper.getAllPerfumes(pageable);
    return ResponseEntity.ok().headers(response.getHeaders()).body(response.getItems());
  }

  @GetMapping(PERFUME_ID)
  public ResponseEntity<FullPerfumeResponse> getPerfumeById(@PathVariable Long perfumeId) {
    logger.info("Fetching perfume by ID: {}", perfumeId);
    return ResponseEntity.ok(perfumeMapper.getPerfumeById(perfumeId));
  }

  @PostMapping(IDS)
  public ResponseEntity<List<PerfumeResponse>> getPerfumesByIds(
      @RequestBody List<Long> perfumesIds) {
    logger.info("Fetching perfumes by IDs: {}", perfumesIds);
    return ResponseEntity.ok(perfumeMapper.getPerfumesByIds(perfumesIds));
  }

  @PostMapping(SEARCH)
  public ResponseEntity<List<PerfumeResponse>> findPerfumesByFilterParams(
      @RequestBody PerfumeSearchRequest filter, @PageableDefault(size = 15) Pageable pageable) {
    logger.info("Searching perfumes by filter params: {} with pageable: {}", filter, pageable);
    HeaderResponse<PerfumeResponse> response =
        perfumeMapper.findPerfumesByFilterParams(filter, pageable);
    return ResponseEntity.ok().headers(response.getHeaders()).body(response.getItems());
  }

  @PostMapping(SEARCH_GENDER)
  public ResponseEntity<List<PerfumeResponse>> findByPerfumeGender(
      @RequestBody PerfumeSearchRequest filter) {
    logger.info("Searching perfumes by gender: {}", filter.getPerfumeGender());
    return ResponseEntity.ok(perfumeMapper.findByPerfumeGender(filter.getPerfumeGender()));
  }

  @PostMapping(SEARCH_PERFUMER)
  public ResponseEntity<List<PerfumeResponse>> findByPerfumer(
      @RequestBody PerfumeSearchRequest filter) {
    logger.info("Searching perfumes by perfumer: {}", filter.getPerfumer());
    return ResponseEntity.ok(perfumeMapper.findByPerfumer(filter.getPerfumer()));
  }

  @PostMapping(SEARCH_TEXT)
  public ResponseEntity<List<PerfumeResponse>> findByInputText(
      @RequestBody SearchTypeRequest searchType, @PageableDefault(size = 15) Pageable pageable) {
    logger.info(
        "Searching perfumes by input text. SearchType: {}, Text: {}, Pageable: {}",
        searchType.getSearchType(),
        searchType.getText(),
        pageable);
    HeaderResponse<PerfumeResponse> response =
        perfumeMapper.findByInputText(searchType.getSearchType(), searchType.getText(), pageable);
    return ResponseEntity.ok().headers(response.getHeaders()).body(response.getItems());
  }

  @PostMapping(GRAPHQL_IDS)
  public ResponseEntity<ExecutionResult> getPerfumesByIdsQuery(
      @RequestBody GraphQLRequest request) {
    logger.info("GraphQL query for perfumes by IDs received");
    return ResponseEntity.ok(graphQLProvider.getGraphQL().execute(request.getQuery()));
  }

  @PostMapping(GRAPHQL_PERFUMES)
  public ResponseEntity<ExecutionResult> getAllPerfumesByQuery(
      @RequestBody GraphQLRequest request) {
    logger.info("GraphQL query for all perfumes received");
    return ResponseEntity.ok(graphQLProvider.getGraphQL().execute(request.getQuery()));
  }

  @PostMapping(GRAPHQL_PERFUME)
  public ResponseEntity<ExecutionResult> getPerfumeByQuery(@RequestBody GraphQLRequest request) {
    logger.info("GraphQL query for perfume received");
    return ResponseEntity.ok(graphQLProvider.getGraphQL().execute(request.getQuery()));
  }
}
------[0m
[0m2025-06-16 21:22:25 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.controller;

import static com.gmail.merikbest2015.ecommerce.constants.PathConstants.*;

import com.gmail.merikbest2015.ecommerce.dto.GraphQLRequest;
import com.gmail.merikbest2015.ecommerce.dto.HeaderResponse;
import com.gmail.merikbest2015.ecommerce.dto.perfume.*;
import com.gmail.merikbest2015.ecommerce.mapper.PerfumeMapper;
import com.gmail.merikbest2015.ecommerce.service.graphql.GraphQLProvider;
import graphql.ExecutionResult;
import java.util.List;
import lombok.RequiredArgsConstructor;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.data.domain.Pageable;
import org.springframework.data.web.PageableDefault;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

@RestController
@RequiredArgsConstructor
@RequestMapping(API_V1_PERFUMES)
public class PerfumeController {

  private static final Logger logger = LoggerFactory.getLogger(PerfumeController.class);

  private final PerfumeMapper perfumeMapper;
  private final GraphQLProvider graphQLProvider;

  @GetMapping
  public ResponseEntity<List<PerfumeResponse>> getAllPerfumes(
      @PageableDefault(size = 15) Pageable pageable) {
    logger.info("Fetching all perfumes with pageable: {}", pageable);
    HeaderResponse<PerfumeResponse> response = perfumeMapper.getAllPerfumes(pageable);
    return ResponseEntity.ok().headers(response.getHeaders()).body(response.getItems());
  }

  @GetMapping(PERFUME_ID)
  public ResponseEntity<FullPerfumeResponse> getPerfumeById(@PathVariable Long perfumeId) {
    logger.info("Fetching perfume by ID: {}", perfumeId);
    return ResponseEntity.ok(perfumeMapper.getPerfumeById(perfumeId));
  }

  @PostMapping(IDS)
  public ResponseEntity<List<PerfumeResponse>> getPerfumesByIds(
      @RequestBody List<Long> perfumesIds) {
    logger.info("Fetching perfumes by IDs: {}", perfumesIds);
    return ResponseEntity.ok(perfumeMapper.getPerfumesByIds(perfumesIds));
  }

  @PostMapping(SEARCH)
  public ResponseEntity<List<PerfumeResponse>> findPerfumesByFilterParams(
      @RequestBody PerfumeSearchRequest filter, @PageableDefault(size = 15) Pageable pageable) {
    logger.info("Searching perfumes by filter params: {} with pageable: {}", filter, pageable);
    HeaderResponse<PerfumeResponse> response =
        perfumeMapper.findPerfumesByFilterParams(filter, pageable);
    return ResponseEntity.ok().headers(response.getHeaders()).body(response.getItems());
  }

  @PostMapping(SEARCH_GENDER)
  public ResponseEntity<List<PerfumeResponse>> findByPerfumeGender(
      @RequestBody PerfumeSearchRequest filter) {
    logger.info("Searching perfumes by gender: {}", filter.getPerfumeGender());
    return ResponseEntity.ok(perfumeMapper.findByPerfumeGender(filter.getPerfumeGender()));
  }

  @PostMapping(SEARCH_PERFUMER)
  public ResponseEntity<List<PerfumeResponse>> findByPerfumer(
      @RequestBody PerfumeSearchRequest filter) {
    logger.info("Searching perfumes by perfumer: {}", filter.getPerfumer());
    return ResponseEntity.ok(perfumeMapper.findByPerfumer(filter.getPerfumer()));
  }

  @PostMapping(SEARCH_TEXT)
  public ResponseEntity<List<PerfumeResponse>> findByInputText(
      @RequestBody SearchTypeRequest searchType, @PageableDefault(size = 15) Pageable pageable) {
    logger.info(
        "Searching perfumes by input text. SearchType: {}, Text: {}, Pageable: {}",
        searchType.getSearchType(),
        searchType.getText(),
        pageable);
    HeaderResponse<PerfumeResponse> response =
        perfumeMapper.findByInputText(searchType.getSearchType(), searchType.getText(), pageable);
    return ResponseEntity.ok().headers(response.getHeaders()).body(response.getItems());
  }

  @PostMapping(GRAPHQL_IDS)
  public ResponseEntity<ExecutionResult> getPerfumesByIdsQuery(
      @RequestBody GraphQLRequest request) {
    logger.info("GraphQL query for perfumes by IDs received");
    return ResponseEntity.ok(graphQLProvider.getGraphQL().execute(request.getQuery()));
  }

  @PostMapping(GRAPHQL_PERFUMES)
  public ResponseEntity<ExecutionResult> getAllPerfumesByQuery(
      @RequestBody GraphQLRequest request) {
    logger.info("GraphQL query for all perfumes received");
    return ResponseEntity.ok(graphQLProvider.getGraphQL().execute(request.getQuery()));
  }

  @PostMapping(GRAPHQL_PERFUME)
  public ResponseEntity<ExecutionResult> getPerfumeByQuery(@RequestBody GraphQLRequest request) {
    logger.info("GraphQL query for perfume received");
    return ResponseEntity.ok(graphQLProvider.getGraphQL().execute(request.getQuery()));
  }
}
------[0m
[0m2025-06-16 21:22:25 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java[0m
[0m2025-06-16 21:22:25 [0;34m[DEBUG][0m   FILE_STATUS (RegistrationController.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:25 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java, FILE_NAME: RegistrationController.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:25 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:25 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:25 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java][0m
[0m2025-06-16 21:22:26 [0;34m[INFO][0m    - File:[0;37m[RegistrationController.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:26 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.controller;

import static com.gmail.merikbest2015.ecommerce.constants.PathConstants.ACTIVATE_CODE;
import static com.gmail.merikbest2015.ecommerce.constants.PathConstants.API_V1_REGISTRATION;

import com.gmail.merikbest2015.ecommerce.dto.RegistrationRequest;
import com.gmail.merikbest2015.ecommerce.mapper.AuthenticationMapper;
import jakarta.validation.Valid;
import lombok.RequiredArgsConstructor;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.*;

@RestController
@RequiredArgsConstructor
@RequestMapping(API_V1_REGISTRATION)
public class RegistrationController {

  private static final Logger logger = LoggerFactory.getLogger(RegistrationController.class);

  private final AuthenticationMapper authenticationMapper;

  @PostMapping
  public ResponseEntity<String> registration(
      @Valid @RequestBody RegistrationRequest user, BindingResult bindingResult) {
    logger.info("Registering user with email: {}", user.getEmail());
    String response = authenticationMapper.registerUser(user.getCaptcha(), user, bindingResult);
    logger.info("Registration response: {}", response);
    return ResponseEntity.ok(response);
  }

  @GetMapping(ACTIVATE_CODE)
  public ResponseEntity<String> activateEmailCode(@PathVariable String code) {
    logger.info("Activating user with code: {}", code);
    String response = authenticationMapper.activateUser(code);
    logger.info("Activation response: {}", response);
    return ResponseEntity.ok(response);
  }
}
------[0m
[0m2025-06-16 21:22:26 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.controller;

import static com.gmail.merikbest2015.ecommerce.constants.PathConstants.ACTIVATE_CODE;
import static com.gmail.merikbest2015.ecommerce.constants.PathConstants.API_V1_REGISTRATION;

import com.gmail.merikbest2015.ecommerce.dto.RegistrationRequest;
import com.gmail.merikbest2015.ecommerce.mapper.AuthenticationMapper;
import jakarta.validation.Valid;
import lombok.RequiredArgsConstructor;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.*;

@RestController
@RequiredArgsConstructor
@RequestMapping(API_V1_REGISTRATION)
public class RegistrationController {

  private static final Logger logger = LoggerFactory.getLogger(RegistrationController.class);

  private final AuthenticationMapper authenticationMapper;

  @PostMapping
  public ResponseEntity<String> registration(
      @Valid @RequestBody RegistrationRequest user, BindingResult bindingResult) {
    logger.info("Registering user with email: {}", user.getEmail());
    String response = authenticationMapper.registerUser(user.getCaptcha(), user, bindingResult);
    logger.info("Registration response: {}", response);
    return ResponseEntity.ok(response);
  }

  @GetMapping(ACTIVATE_CODE)
  public ResponseEntity<String> activateEmailCode(@PathVariable String code) {
    logger.info("Activating user with code: {}", code);
    String response = authenticationMapper.activateUser(code);
    logger.info("Activation response: {}", response);
    return ResponseEntity.ok(response);
  }
}
------[0m
[0m2025-06-16 21:22:26 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java[0m
[0m2025-06-16 21:22:26 [0;34m[DEBUG][0m   FILE_STATUS (ReviewController.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:26 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java, FILE_NAME: ReviewController.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:26 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:26 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:26 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java][0m
[0m2025-06-16 21:22:26 [0;34m[INFO][0m    - File:[0;37m[ReviewController.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:26 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.controller;

import static com.gmail.merikbest2015.ecommerce.constants.PathConstants.API_V1_REVIEW;
import static com.gmail.merikbest2015.ecommerce.constants.PathConstants.PERFUME_ID;

import com.gmail.merikbest2015.ecommerce.dto.review.ReviewRequest;
import com.gmail.merikbest2015.ecommerce.dto.review.ReviewResponse;
import com.gmail.merikbest2015.ecommerce.mapper.ReviewMapper;
import jakarta.validation.Valid;
import java.util.List;
import lombok.RequiredArgsConstructor;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.ResponseEntity;
import org.springframework.messaging.simp.SimpMessagingTemplate;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.*;

@RestController
@RequiredArgsConstructor
@RequestMapping(API_V1_REVIEW)
public class ReviewController {

  private static final Logger logger = LoggerFactory.getLogger(ReviewController.class);

  private final ReviewMapper reviewMapper;
  private final SimpMessagingTemplate messagingTemplate;

  @GetMapping(PERFUME_ID)
  public ResponseEntity<List<ReviewResponse>> getReviewsByPerfumeId(@PathVariable Long perfumeId) {
    logger.info("Fetching reviews for perfumeId={}", perfumeId);
    List<ReviewResponse> reviews = reviewMapper.getReviewsByPerfumeId(perfumeId);
    logger.info("Found {} reviews", reviews.size());
    return ResponseEntity.ok(reviews);
  }

  @PostMapping
  public ResponseEntity<ReviewResponse> addReviewToPerfume(
      @Valid @RequestBody ReviewRequest reviewRequest, BindingResult bindingResult) {
    logger.info(
        "Adding review for perfumeId={}, userId={}",
        reviewRequest.getPerfumeId(),
        reviewRequest.getPerfumeId());
    ReviewResponse review =
        reviewMapper.addReviewToPerfume(reviewRequest, reviewRequest.getPerfumeId(), bindingResult);
    messagingTemplate.convertAndSend("/topic/reviews/" + reviewRequest.getPerfumeId(), review);
    logger.info(
        "Review added and sent to websocket topic for perfumeId={}", reviewRequest.getPerfumeId());
    return ResponseEntity.ok(review);
  }
}
------[0m
[0m2025-06-16 21:22:26 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.controller;

import static com.gmail.merikbest2015.ecommerce.constants.PathConstants.API_V1_REVIEW;
import static com.gmail.merikbest2015.ecommerce.constants.PathConstants.PERFUME_ID;

import com.gmail.merikbest2015.ecommerce.dto.review.ReviewRequest;
import com.gmail.merikbest2015.ecommerce.dto.review.ReviewResponse;
import com.gmail.merikbest2015.ecommerce.mapper.ReviewMapper;
import jakarta.validation.Valid;
import java.util.List;
import lombok.RequiredArgsConstructor;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.ResponseEntity;
import org.springframework.messaging.simp.SimpMessagingTemplate;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.*;

@RestController
@RequiredArgsConstructor
@RequestMapping(API_V1_REVIEW)
public class ReviewController {

  private static final Logger logger = LoggerFactory.getLogger(ReviewController.class);

  private final ReviewMapper reviewMapper;
  private final SimpMessagingTemplate messagingTemplate;

  @GetMapping(PERFUME_ID)
  public ResponseEntity<List<ReviewResponse>> getReviewsByPerfumeId(@PathVariable Long perfumeId) {
    logger.info("Fetching reviews for perfumeId={}", perfumeId);
    List<ReviewResponse> reviews = reviewMapper.getReviewsByPerfumeId(perfumeId);
    logger.info("Found {} reviews", reviews.size());
    return ResponseEntity.ok(reviews);
  }

  @PostMapping
  public ResponseEntity<ReviewResponse> addReviewToPerfume(
      @Valid @RequestBody ReviewRequest reviewRequest, BindingResult bindingResult) {
    logger.info(
        "Adding review for perfumeId={}, userId={}",
        reviewRequest.getPerfumeId(),
        reviewRequest.getPerfumeId());
    ReviewResponse review =
        reviewMapper.addReviewToPerfume(reviewRequest, reviewRequest.getPerfumeId(), bindingResult);
    messagingTemplate.convertAndSend("/topic/reviews/" + reviewRequest.getPerfumeId(), review);
    logger.info(
        "Review added and sent to websocket topic for perfumeId={}", reviewRequest.getPerfumeId());
    return ResponseEntity.ok(review);
  }
}
------[0m
[0m2025-06-16 21:22:26 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java[0m
[0m2025-06-16 21:22:26 [0;34m[DEBUG][0m   FILE_STATUS (UserController.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:26 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java, FILE_NAME: UserController.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:26 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:26 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:26 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java][0m
[0m2025-06-16 21:22:27 [0;34m[INFO][0m    - File:[0;37m[UserController.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:27 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.controller;

import static com.gmail.merikbest2015.ecommerce.constants.PathConstants.*;

import com.gmail.merikbest2015.ecommerce.dto.GraphQLRequest;
import com.gmail.merikbest2015.ecommerce.dto.perfume.PerfumeResponse;
import com.gmail.merikbest2015.ecommerce.dto.user.UpdateUserRequest;
import com.gmail.merikbest2015.ecommerce.dto.user.UserResponse;
import com.gmail.merikbest2015.ecommerce.mapper.UserMapper;
import com.gmail.merikbest2015.ecommerce.security.UserPrincipal;
import com.gmail.merikbest2015.ecommerce.service.graphql.GraphQLProvider;
import graphql.ExecutionResult;
import jakarta.validation.Valid;
import java.util.List;
import lombok.RequiredArgsConstructor;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.ResponseEntity;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.*;

@RestController
@RequiredArgsConstructor
@RequestMapping(API_V1_USERS)
public class UserController {

  private static final Logger logger = LoggerFactory.getLogger(UserController.class);

  private final UserMapper userMapper;
  private final GraphQLProvider graphQLProvider;

  @GetMapping
  public ResponseEntity<UserResponse> getUserInfo(@AuthenticationPrincipal UserPrincipal user) {
    logger.info("Fetching user info for email={}", user.getEmail());
    UserResponse response = userMapper.getUserInfo(user.getEmail());
    logger.info("User info fetched for email={}", user.getEmail());
    return ResponseEntity.ok(response);
  }

  @PutMapping
  public ResponseEntity<UserResponse> updateUserInfo(
      @AuthenticationPrincipal UserPrincipal user,
      @Valid @RequestBody UpdateUserRequest request,
      BindingResult bindingResult) {
    logger.info("Updating user info for email={}", user.getEmail());
    UserResponse response = userMapper.updateUserInfo(user.getEmail(), request, bindingResult);
    logger.info("User info updated for email={}", user.getEmail());
    return ResponseEntity.ok(response);
  }

  @PostMapping(CART)
  public ResponseEntity<List<PerfumeResponse>> getCart(@RequestBody List<Long> perfumesIds) {
    logger.info("Fetching cart for perfumesIds={}", perfumesIds);
    List<PerfumeResponse> cart = userMapper.getCart(perfumesIds);
    logger.info("Cart fetched with {} items", cart.size());
    return ResponseEntity.ok(cart);
  }

  @PostMapping(GRAPHQL)
  public ResponseEntity<ExecutionResult> getUserInfoByQuery(@RequestBody GraphQLRequest request) {
    logger.info("Executing GraphQL user info query");
    ExecutionResult result = graphQLProvider.getGraphQL().execute(request.getQuery());
    logger.info("GraphQL user info query executed");
    return ResponseEntity.ok(result);
  }
}
------[0m
[0m2025-06-16 21:22:27 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.controller;

import static com.gmail.merikbest2015.ecommerce.constants.PathConstants.*;

import com.gmail.merikbest2015.ecommerce.dto.GraphQLRequest;
import com.gmail.merikbest2015.ecommerce.dto.perfume.PerfumeResponse;
import com.gmail.merikbest2015.ecommerce.dto.user.UpdateUserRequest;
import com.gmail.merikbest2015.ecommerce.dto.user.UserResponse;
import com.gmail.merikbest2015.ecommerce.mapper.UserMapper;
import com.gmail.merikbest2015.ecommerce.security.UserPrincipal;
import com.gmail.merikbest2015.ecommerce.service.graphql.GraphQLProvider;
import graphql.ExecutionResult;
import jakarta.validation.Valid;
import java.util.List;
import lombok.RequiredArgsConstructor;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.ResponseEntity;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.*;

@RestController
@RequiredArgsConstructor
@RequestMapping(API_V1_USERS)
public class UserController {

  private static final Logger logger = LoggerFactory.getLogger(UserController.class);

  private final UserMapper userMapper;
  private final GraphQLProvider graphQLProvider;

  @GetMapping
  public ResponseEntity<UserResponse> getUserInfo(@AuthenticationPrincipal UserPrincipal user) {
    logger.info("Fetching user info for email={}", user.getEmail());
    UserResponse response = userMapper.getUserInfo(user.getEmail());
    logger.info("User info fetched for email={}", user.getEmail());
    return ResponseEntity.ok(response);
  }

  @PutMapping
  public ResponseEntity<UserResponse> updateUserInfo(
      @AuthenticationPrincipal UserPrincipal user,
      @Valid @RequestBody UpdateUserRequest request,
      BindingResult bindingResult) {
    logger.info("Updating user info for email={}", user.getEmail());
    UserResponse response = userMapper.updateUserInfo(user.getEmail(), request, bindingResult);
    logger.info("User info updated for email={}", user.getEmail());
    return ResponseEntity.ok(response);
  }

  @PostMapping(CART)
  public ResponseEntity<List<PerfumeResponse>> getCart(@RequestBody List<Long> perfumesIds) {
    logger.info("Fetching cart for perfumesIds={}", perfumesIds);
    List<PerfumeResponse> cart = userMapper.getCart(perfumesIds);
    logger.info("Cart fetched with {} items", cart.size());
    return ResponseEntity.ok(cart);
  }

  @PostMapping(GRAPHQL)
  public ResponseEntity<ExecutionResult> getUserInfoByQuery(@RequestBody GraphQLRequest request) {
    logger.info("Executing GraphQL user info query");
    ExecutionResult result = graphQLProvider.getGraphQL().execute(request.getQuery());
    logger.info("GraphQL user info query executed");
    return ResponseEntity.ok(result);
  }
}
------[0m
[0m2025-06-16 21:22:27 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java[0m
[0m2025-06-16 21:22:27 [0;34m[DEBUG][0m   FILE_STATUS (Order.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:27 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java, FILE_NAME: Order.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:27 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:27 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:27 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java][0m
[0m2025-06-16 21:22:27 [0;34m[INFO][0m    - File:[0;37m[Order.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:27 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.domain;

import jakarta.persistence.*;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.regex.Pattern;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

@Getter
@Setter
@ToString
@Entity
@Table(name = "orders")
public class Order {

  @Id
  @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "orders_seq")
  @SequenceGenerator(
      name = "orders_seq",
      sequenceName = "orders_seq",
      initialValue = 6,
      allocationSize = 1)
  @Column(name = "id")
  private Long id;

  @Column(name = "total_price")
  private Double totalPrice;

  @Column(name = "date")
  private LocalDate date;

  @Column(name = "first_name")
  private String firstName;

  @Column(name = "last_name")
  private String lastName;

  @Column(name = "city")
  private String city;

  @Column(name = "address")
  private String address;

  @Column(name = "email")
  private String email;

  @Column(name = "phone_number")
  private String phoneNumber;

  @Column(name = "post_index")
  private Integer postIndex;

  @OneToMany(fetch = FetchType.EAGER)
  private List<OrderItem> orderItems;

  public Order() {
    this.date = LocalDate.now();
    this.orderItems = new ArrayList<>();
  }

  public Order(
      Double totalPrice,
      LocalDate date,
      String firstName,
      String lastName,
      String city,
      String address,
      String email,
      String phoneNumber,
      Integer postIndex) {

    validateTotalPrice(totalPrice);
    validateDate(date);
    validateNames(firstName, lastName);
    validateAddress(city, address);
    validateEmail(email);
    validatePhoneNumber(phoneNumber);
    validatePostIndex(postIndex);

    this.totalPrice = totalPrice;
    this.date = date;
    this.firstName = firstName;
    this.lastName = lastName;
    this.city = city;
    this.address = address;
    this.email = email;
    this.phoneNumber = phoneNumber;
    this.postIndex = postIndex;
    this.orderItems = new ArrayList<>();
  }

  private void validateTotalPrice(Double price) {
    if (price == null || price < 0) {
      throw new IllegalArgumentException("Total price must be non-null and non-negative.");
    }
  }

  private void validateDate(LocalDate date) {
    if (date == null) {
      throw new IllegalArgumentException("Date must not be null.");
    }
    if (date.isAfter(LocalDate.now())) {
      throw new IllegalArgumentException("Date cannot be in the future.");
    }
  }

  private void validateNames(String firstName, String lastName) {
    if (firstName == null || firstName.trim().isEmpty()) {
      throw new IllegalArgumentException("First name must not be blank.");
    }
    if (lastName == null || lastName.trim().isEmpty()) {
      throw new IllegalArgumentException("Last name must not be blank.");
    }
  }

  private void validateAddress(String city, String address) {
    if (city == null || city.trim().isEmpty()) {
      throw new IllegalArgumentException("City must not be blank.");
    }
    if (address == null || address.trim().isEmpty()) {
      throw new IllegalArgumentException("Address must not be blank.");
    }
  }

  private void validateEmail(String email) {
    if (email == null || email.trim().isEmpty()) {
      throw new IllegalArgumentException("Email must not be blank.");
    }
    String emailRegex = "^[\w-.]+@([\w-]+\.)+[\w-]{2,4}$";
    if (!Pattern.matches(emailRegex, email)) {
      throw new IllegalArgumentException("Email format is invalid.");
    }
  }

  private void validatePhoneNumber(String phoneNumber) {
    if (phoneNumber == null || phoneNumber.trim().isEmpty()) {
      throw new IllegalArgumentException("Phone number must not be blank.");
    }
    String phoneRegex = "^[+]?\d{7,15}$";
    if (!Pattern.matches(phoneRegex, phoneNumber)) {
      throw new IllegalArgumentException("Phone number format is invalid.");
    }
  }

  private void validatePostIndex(Integer postIndex) {
    if (postIndex == null || postIndex <= 0) {
      throw new IllegalArgumentException("Post index must be positive.");
    }
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) return true;
    if (o == null || getClass() != o.getClass()) return false;
    Order order = (Order) o;
    return Objects.equals(id, order.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id);
  }
}
------[0m
[0m2025-06-16 21:22:27 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.domain;

import jakarta.persistence.*;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.regex.Pattern;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

@Getter
@Setter
@ToString
@Entity
@Table(name = "orders")
public class Order {

  @Id
  @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "orders_seq")
  @SequenceGenerator(
      name = "orders_seq",
      sequenceName = "orders_seq",
      initialValue = 6,
      allocationSize = 1)
  @Column(name = "id")
  private Long id;

  @Column(name = "total_price")
  private Double totalPrice;

  @Column(name = "date")
  private LocalDate date;

  @Column(name = "first_name")
  private String firstName;

  @Column(name = "last_name")
  private String lastName;

  @Column(name = "city")
  private String city;

  @Column(name = "address")
  private String address;

  @Column(name = "email")
  private String email;

  @Column(name = "phone_number")
  private String phoneNumber;

  @Column(name = "post_index")
  private Integer postIndex;

  @OneToMany(fetch = FetchType.EAGER)
  private List<OrderItem> orderItems;

  public Order() {
    this.date = LocalDate.now();
    this.orderItems = new ArrayList<>();
  }

  public Order(
      Double totalPrice,
      LocalDate date,
      String firstName,
      String lastName,
      String city,
      String address,
      String email,
      String phoneNumber,
      Integer postIndex) {

    validateTotalPrice(totalPrice);
    validateDate(date);
    validateNames(firstName, lastName);
    validateAddress(city, address);
    validateEmail(email);
    validatePhoneNumber(phoneNumber);
    validatePostIndex(postIndex);

    this.totalPrice = totalPrice;
    this.date = date;
    this.firstName = firstName;
    this.lastName = lastName;
    this.city = city;
    this.address = address;
    this.email = email;
    this.phoneNumber = phoneNumber;
    this.postIndex = postIndex;
    this.orderItems = new ArrayList<>();
  }

  private void validateTotalPrice(Double price) {
    if (price == null || price < 0) {
      throw new IllegalArgumentException("Total price must be non-null and non-negative.");
    }
  }

  private void validateDate(LocalDate date) {
    if (date == null) {
      throw new IllegalArgumentException("Date must not be null.");
    }
    if (date.isAfter(LocalDate.now())) {
      throw new IllegalArgumentException("Date cannot be in the future.");
    }
  }

  private void validateNames(String firstName, String lastName) {
    if (firstName == null || firstName.trim().isEmpty()) {
      throw new IllegalArgumentException("First name must not be blank.");
    }
    if (lastName == null || lastName.trim().isEmpty()) {
      throw new IllegalArgumentException("Last name must not be blank.");
    }
  }

  private void validateAddress(String city, String address) {
    if (city == null || city.trim().isEmpty()) {
      throw new IllegalArgumentException("City must not be blank.");
    }
    if (address == null || address.trim().isEmpty()) {
      throw new IllegalArgumentException("Address must not be blank.");
    }
  }

  private void validateEmail(String email) {
    if (email == null || email.trim().isEmpty()) {
      throw new IllegalArgumentException("Email must not be blank.");
    }
    String emailRegex = "^[\w-.]+@([\w-]+\.)+[\w-]{2,4}$";
    if (!Pattern.matches(emailRegex, email)) {
      throw new IllegalArgumentException("Email format is invalid.");
    }
  }

  private void validatePhoneNumber(String phoneNumber) {
    if (phoneNumber == null || phoneNumber.trim().isEmpty()) {
      throw new IllegalArgumentException("Phone number must not be blank.");
    }
    String phoneRegex = "^[+]?\d{7,15}$";
    if (!Pattern.matches(phoneRegex, phoneNumber)) {
      throw new IllegalArgumentException("Phone number format is invalid.");
    }
  }

  private void validatePostIndex(Integer postIndex) {
    if (postIndex == null || postIndex <= 0) {
      throw new IllegalArgumentException("Post index must be positive.");
    }
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) return true;
    if (o == null || getClass() != o.getClass()) return false;
    Order order = (Order) o;
    return Objects.equals(id, order.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id);
  }
}
------[0m
[0m2025-06-16 21:22:27 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java[0m
[0m2025-06-16 21:22:27 [0;34m[DEBUG][0m   FILE_STATUS (OrderItem.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:27 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java, FILE_NAME: OrderItem.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:27 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:27 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:27 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java][0m
[0m2025-06-16 21:22:28 [0;34m[INFO][0m    - File:[0;37m[OrderItem.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:28 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.domain;

import jakarta.persistence.*;
import java.util.Objects;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

@Entity
@Getter
@Setter
@ToString
@Table(name = "order_item")
public class OrderItem {

  @Id
  @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "order_item_seq")
  @SequenceGenerator(
      name = "order_item_seq",
      sequenceName = "order_item_seq",
      initialValue = 12,
      allocationSize = 1)
  @Column(name = "id")
  private Long id;

  @Column(name = "amount")
  private Long amount;

  @Column(name = "quantity")
  private Long quantity;

  @OneToOne private Perfume perfume;

  public OrderItem() {}

  public OrderItem(Long amount, Long quantity, Perfume perfume) {
    validateAmount(amount);
    validateQuantity(quantity);
    validatePerfume(perfume);

    this.amount = amount;
    this.quantity = quantity;
    this.perfume = perfume;
  }

  // Getters and setters if needed...

  private void validateAmount(Long amount) {
    if (amount == null || amount < 0) {
      throw new IllegalArgumentException("Amount must be non-null and non-negative.");
    }
  }

  private void validateQuantity(Long quantity) {
    if (quantity == null || quantity <= 0) {
      throw new IllegalArgumentException("Quantity must be non-null and positive.");
    }
  }

  private void validatePerfume(Perfume perfume) {
    if (perfume == null) {
      throw new IllegalArgumentException("Perfume must not be null.");
    }
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) return true;
    if (o == null || getClass() != o.getClass()) return false;
    OrderItem orderItem = (OrderItem) o;
    return Objects.equals(id, orderItem.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id);
  }
}
------[0m
[0m2025-06-16 21:22:28 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.domain;

import jakarta.persistence.*;
import java.util.Objects;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

@Entity
@Getter
@Setter
@ToString
@Table(name = "order_item")
public class OrderItem {

  @Id
  @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "order_item_seq")
  @SequenceGenerator(
      name = "order_item_seq",
      sequenceName = "order_item_seq",
      initialValue = 12,
      allocationSize = 1)
  @Column(name = "id")
  private Long id;

  @Column(name = "amount")
  private Long amount;

  @Column(name = "quantity")
  private Long quantity;

  @OneToOne private Perfume perfume;

  public OrderItem() {}

  public OrderItem(Long amount, Long quantity, Perfume perfume) {
    validateAmount(amount);
    validateQuantity(quantity);
    validatePerfume(perfume);

    this.amount = amount;
    this.quantity = quantity;
    this.perfume = perfume;
  }

  // Getters and setters if needed...

  private void validateAmount(Long amount) {
    if (amount == null || amount < 0) {
      throw new IllegalArgumentException("Amount must be non-null and non-negative.");
    }
  }

  private void validateQuantity(Long quantity) {
    if (quantity == null || quantity <= 0) {
      throw new IllegalArgumentException("Quantity must be non-null and positive.");
    }
  }

  private void validatePerfume(Perfume perfume) {
    if (perfume == null) {
      throw new IllegalArgumentException("Perfume must not be null.");
    }
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) return true;
    if (o == null || getClass() != o.getClass()) return false;
    OrderItem orderItem = (OrderItem) o;
    return Objects.equals(id, orderItem.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id);
  }
}
------[0m
[0m2025-06-16 21:22:28 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java[0m
[0m2025-06-16 21:22:28 [0;34m[DEBUG][0m   FILE_STATUS (Perfume.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:28 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java, FILE_NAME: Perfume.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:28 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:28 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:28 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java][0m
[0m2025-06-16 21:22:29 [0;34m[INFO][0m    - File:[0;37m[Perfume.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:29 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.domain;

import jakarta.persistence.*;
import java.util.*;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

@Getter
@Setter
@ToString
@Entity
@Table(name = "perfume")
public class Perfume {

  @Id
  @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "perfume_id_seq")
  @SequenceGenerator(
      name = "perfume_id_seq",
      sequenceName = "perfume_id_seq",
      initialValue = 109,
      allocationSize = 1)
  @Column(name = "id")
  private Long id;

  @Column(name = "perfume_title")
  private String perfumeTitle;

  @Column(name = "perfumer")
  private String perfumer;

  @Column(name = "year")
  private Integer year;

  @Column(name = "country")
  private String country;

  @Column(name = "perfume_gender")
  private String perfumeGender;

  @Column(name = "fragrance_top_notes")
  private String fragranceTopNotes;

  @Column(name = "fragrance_middle_notes")
  private String fragranceMiddleNotes;

  @Column(name = "fragrance_base_notes")
  private String fragranceBaseNotes;

  @Column(name = "description")
  private String description;

  @Column(name = "filename")
  private String filename;

  @Column(name = "price")
  private Integer price;

  @Column(name = "volume")
  private String volume;

  @Column(name = "type")
  private String type;

  @Column(name = "perfume_rating")
  private Double perfumeRating;

  @OneToMany @ToString.Exclude private List<Review> reviews;

  public Perfume(
      String perfumeTitle,
      String perfumer,
      Integer year,
      String country,
      String perfumeGender,
      String fragranceTopNotes,
      String fragranceMiddleNotes,
      String fragranceBaseNotes,
      String description,
      String filename,
      Integer price,
      String volume,
      String type,
      Double perfumeRating) {

    validatePerfumeTitle(perfumeTitle);
    validateYear(year);
    validateCountry(country);
    validateRating(perfumeRating);

    this.perfumeTitle = perfumeTitle;
    this.perfumer = perfumer;
    this.year = year;
    this.country = country;
    this.perfumeGender = perfumeGender;
    this.fragranceTopNotes = fragranceTopNotes;
    this.fragranceMiddleNotes = fragranceMiddleNotes;
    this.fragranceBaseNotes = fragranceBaseNotes;
    this.description = description;
    this.filename = filename;
    this.price = price;
    this.volume = volume;
    this.type = type;
    this.perfumeRating = perfumeRating;
  }

  public Perfume() {}

  private void validatePerfumeTitle(String title) {
    if (title == null || title.trim().isEmpty()) {
      throw new IllegalArgumentException("Perfume title must not be blank.");
    }
  }

  private void validateYear(Integer year) {
    if (year == null || year < 1800 || year > 2100) {
      throw new IllegalArgumentException("Year must be between 1800 and 2100.");
    }
  }

  private void validateCountry(String country) {
    if (country == null || country.trim().isEmpty()) {
      throw new IllegalArgumentException("Country must not be blank.");
    }

    boolean isValid = Arrays.asList(Locale.getISOCountries()).contains(country.toUpperCase());
    if (!isValid) {
      throw new IllegalArgumentException(
          "Country must be a valid ISO country code (e.g., 'US', 'FR').");
    }
  }

  private void validateRating(Double rating) {
    if (rating != null && (rating < 0.0 || rating > 5.0)) {
      throw new IllegalArgumentException("Rating must be between 0 and 5.");
    }
  }

  public boolean reviewExists(Long reviewId) {
    return reviews.stream().anyMatch(review -> review.getId().equals(reviewId));
  }

  public void addReview(Review review) {
    if (reviews == null) {
      reviews = new ArrayList<>();
    }
    reviews.add(review);
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) return true;
    if (o == null || getClass() != o.getClass()) return false;
    Perfume perfume = (Perfume) o;
    return Objects.equals(id, perfume.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id);
  }
}
------[0m
[0m2025-06-16 21:22:29 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.domain;

import jakarta.persistence.*;
import java.util.*;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

@Getter
@Setter
@ToString
@Entity
@Table(name = "perfume")
public class Perfume {

  @Id
  @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "perfume_id_seq")
  @SequenceGenerator(
      name = "perfume_id_seq",
      sequenceName = "perfume_id_seq",
      initialValue = 109,
      allocationSize = 1)
  @Column(name = "id")
  private Long id;

  @Column(name = "perfume_title")
  private String perfumeTitle;

  @Column(name = "perfumer")
  private String perfumer;

  @Column(name = "year")
  private Integer year;

  @Column(name = "country")
  private String country;

  @Column(name = "perfume_gender")
  private String perfumeGender;

  @Column(name = "fragrance_top_notes")
  private String fragranceTopNotes;

  @Column(name = "fragrance_middle_notes")
  private String fragranceMiddleNotes;

  @Column(name = "fragrance_base_notes")
  private String fragranceBaseNotes;

  @Column(name = "description")
  private String description;

  @Column(name = "filename")
  private String filename;

  @Column(name = "price")
  private Integer price;

  @Column(name = "volume")
  private String volume;

  @Column(name = "type")
  private String type;

  @Column(name = "perfume_rating")
  private Double perfumeRating;

  @OneToMany @ToString.Exclude private List<Review> reviews;

  public Perfume(
      String perfumeTitle,
      String perfumer,
      Integer year,
      String country,
      String perfumeGender,
      String fragranceTopNotes,
      String fragranceMiddleNotes,
      String fragranceBaseNotes,
      String description,
      String filename,
      Integer price,
      String volume,
      String type,
      Double perfumeRating) {

    validatePerfumeTitle(perfumeTitle);
    validateYear(year);
    validateCountry(country);
    validateRating(perfumeRating);

    this.perfumeTitle = perfumeTitle;
    this.perfumer = perfumer;
    this.year = year;
    this.country = country;
    this.perfumeGender = perfumeGender;
    this.fragranceTopNotes = fragranceTopNotes;
    this.fragranceMiddleNotes = fragranceMiddleNotes;
    this.fragranceBaseNotes = fragranceBaseNotes;
    this.description = description;
    this.filename = filename;
    this.price = price;
    this.volume = volume;
    this.type = type;
    this.perfumeRating = perfumeRating;
  }

  public Perfume() {}

  private void validatePerfumeTitle(String title) {
    if (title == null || title.trim().isEmpty()) {
      throw new IllegalArgumentException("Perfume title must not be blank.");
    }
  }

  private void validateYear(Integer year) {
    if (year == null || year < 1800 || year > 2100) {
      throw new IllegalArgumentException("Year must be between 1800 and 2100.");
    }
  }

  private void validateCountry(String country) {
    if (country == null || country.trim().isEmpty()) {
      throw new IllegalArgumentException("Country must not be blank.");
    }

    boolean isValid = Arrays.asList(Locale.getISOCountries()).contains(country.toUpperCase());
    if (!isValid) {
      throw new IllegalArgumentException(
          "Country must be a valid ISO country code (e.g., 'US', 'FR').");
    }
  }

  private void validateRating(Double rating) {
    if (rating != null && (rating < 0.0 || rating > 5.0)) {
      throw new IllegalArgumentException("Rating must be between 0 and 5.");
    }
  }

  public boolean reviewExists(Long reviewId) {
    return reviews.stream().anyMatch(review -> review.getId().equals(reviewId));
  }

  public void addReview(Review review) {
    if (reviews == null) {
      reviews = new ArrayList<>();
    }
    reviews.add(review);
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) return true;
    if (o == null || getClass() != o.getClass()) return false;
    Perfume perfume = (Perfume) o;
    return Objects.equals(id, perfume.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id);
  }
}
------[0m
[0m2025-06-16 21:22:29 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java[0m
[0m2025-06-16 21:22:29 [0;34m[DEBUG][0m   FILE_STATUS (Review.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:29 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java, FILE_NAME: Review.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:29 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:29 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:29 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java][0m
[0m2025-06-16 21:22:29 [0;34m[INFO][0m    - File:[0;37m[Review.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:29 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.domain;

import jakarta.persistence.*;
import java.time.LocalDate;
import java.util.Objects;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

@Getter
@Setter
@ToString
@Entity
@Table(name = "review")
public class Review {

  @Id
  @GeneratedValue(strategy = GenerationType.IDENTITY)
  @Column(name = "id")
  private Long id;

  @Column(name = "author")
  private String author;

  @Column(name = "message")
  private String message;

  @Column(name = "rating")
  private Integer rating;

  @Column(name = "date")
  private LocalDate date;

  public Review() {
    this.date = LocalDate.now();
  }

  public Review(String author, String message, Integer rating, LocalDate date) {
    validateAuthor(author);
    validateMessage(message);
    validateRating(rating);
    validateDate(date);

    this.author = author;
    this.message = message;
    this.rating = rating;
    this.date = date != null ? date : LocalDate.now();
  }

  // Example validation methods

  private void validateAuthor(String author) {
    if (author == null || author.trim().isEmpty()) {
      throw new IllegalArgumentException("Author must not be blank.");
    }
  }

  private void validateMessage(String message) {
    if (message == null || message.trim().isEmpty()) {
      throw new IllegalArgumentException("Message must not be blank.");
    }
  }

  private void validateRating(Integer rating) {
    if (rating == null || rating < 1 || rating > 5) {
      throw new IllegalArgumentException("Rating must be between 1 and 5.");
    }
  }

  private void validateDate(LocalDate date) {
    if (date != null && date.isAfter(LocalDate.now())) {
      throw new IllegalArgumentException("Date cannot be in the future.");
    }
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) return true;
    if (o == null || getClass() != o.getClass()) return false;
    Review review = (Review) o;
    return Objects.equals(id, review.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id);
  }
}
------[0m
[0m2025-06-16 21:22:29 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.domain;

import jakarta.persistence.*;
import java.time.LocalDate;
import java.util.Objects;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

@Getter
@Setter
@ToString
@Entity
@Table(name = "review")
public class Review {

  @Id
  @GeneratedValue(strategy = GenerationType.IDENTITY)
  @Column(name = "id")
  private Long id;

  @Column(name = "author")
  private String author;

  @Column(name = "message")
  private String message;

  @Column(name = "rating")
  private Integer rating;

  @Column(name = "date")
  private LocalDate date;

  public Review() {
    this.date = LocalDate.now();
  }

  public Review(String author, String message, Integer rating, LocalDate date) {
    validateAuthor(author);
    validateMessage(message);
    validateRating(rating);
    validateDate(date);

    this.author = author;
    this.message = message;
    this.rating = rating;
    this.date = date != null ? date : LocalDate.now();
  }

  // Example validation methods

  private void validateAuthor(String author) {
    if (author == null || author.trim().isEmpty()) {
      throw new IllegalArgumentException("Author must not be blank.");
    }
  }

  private void validateMessage(String message) {
    if (message == null || message.trim().isEmpty()) {
      throw new IllegalArgumentException("Message must not be blank.");
    }
  }

  private void validateRating(Integer rating) {
    if (rating == null || rating < 1 || rating > 5) {
      throw new IllegalArgumentException("Rating must be between 1 and 5.");
    }
  }

  private void validateDate(LocalDate date) {
    if (date != null && date.isAfter(LocalDate.now())) {
      throw new IllegalArgumentException("Date cannot be in the future.");
    }
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) return true;
    if (o == null || getClass() != o.getClass()) return false;
    Review review = (Review) o;
    return Objects.equals(id, review.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id);
  }
}
------[0m
[0m2025-06-16 21:22:29 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java[0m
[0m2025-06-16 21:22:29 [0;34m[DEBUG][0m   FILE_STATUS (User.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:29 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java, FILE_NAME: User.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:29 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:29 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:29 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java][0m
[0m2025-06-16 21:22:30 [0;34m[INFO][0m    - File:[0;37m[User.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:30 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.domain;

import com.gmail.merikbest2015.ecommerce.enums.AuthProvider;
import com.gmail.merikbest2015.ecommerce.enums.Role;
import jakarta.persistence.*;
import java.util.Objects;
import java.util.Set;
import java.util.regex.Pattern;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

@Getter
@Setter
@ToString
@Entity
@Table(name = "users")
public class User {

  @Id
  @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "users_id_seq")
  @SequenceGenerator(
      name = "users_id_seq",
      sequenceName = "users_id_seq",
      initialValue = 4,
      allocationSize = 1)
  @Column(name = "id")
  private Long id;

  @Column(name = "email")
  private String email;

  @Column(name = "password")
  private String password;

  @Column(name = "first_name")
  private String firstName;

  @Column(name = "last_name")
  private String lastName;

  @Column(name = "city")
  private String city;

  @Column(name = "address")
  private String address;

  @Column(name = "phone_number")
  private String phoneNumber;

  @Column(name = "post_index")
  private String postIndex;

  @Column(name = "activation_code")
  private String activationCode;

  @Column(name = "password_reset_code")
  private String passwordResetCode;

  @Column(name = "active")
  private boolean active;

  @Column(name = "provider")
  @Enumerated(EnumType.STRING)
  private AuthProvider provider;

  @ElementCollection(targetClass = Role.class, fetch = FetchType.EAGER)
  @CollectionTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"))
  @Enumerated(EnumType.STRING)
  private Set<Role> roles;

  public User() {
    // default constructor for JPA
  }

  public User(
      String email,
      String password,
      String firstName,
      String lastName,
      String city,
      String address,
      String phoneNumber,
      String postIndex,
      String activationCode,
      String passwordResetCode,
      boolean active,
      AuthProvider provider,
      Set<Role> roles) {

    validateEmail(email);
    validatePhoneNumber(phoneNumber);
    validatePostIndex(postIndex);

    this.email = email;
    this.password = password;
    this.firstName = firstName;
    this.lastName = lastName;
    this.city = city;
    this.address = address;
    this.phoneNumber = phoneNumber;
    this.postIndex = postIndex;
    this.activationCode = activationCode;
    this.passwordResetCode = passwordResetCode;
    this.active = active;
    this.provider = provider;
    this.roles = roles;
  }

  private void validateEmail(String email) {
    if (email == null || email.trim().isEmpty()) {
      throw new IllegalArgumentException("Email must not be blank.");
    }
    String emailRegex = "^[\w-.]+@[\w-]+\.[a-z]{2,}$";
    if (!Pattern.compile(emailRegex, Pattern.CASE_INSENSITIVE).matcher(email).matches()) {
      throw new IllegalArgumentException("Email format is invalid.");
    }
  }

  private void validatePhoneNumber(String phoneNumber) {
    if (phoneNumber != null && !phoneNumber.trim().isEmpty()) {
      // Simple validation: digits, +, -, spaces allowed
      String phoneRegex = "^[+\d\s-]{7,15}$";
      if (!Pattern.compile(phoneRegex).matcher(phoneNumber).matches()) {
        throw new IllegalArgumentException("Phone number format is invalid.");
      }
    }
  }

  private void validatePostIndex(String postIndex) {
    if (postIndex != null && !postIndex.trim().isEmpty()) {
      // Simple postal code validation - customize as needed
      if (postIndex.length() > 10) {
        throw new IllegalArgumentException("Post index is too long.");
      }
    }
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) return true;
    if (o == null || getClass() != o.getClass()) return false;
    User user = (User) o;
    return Objects.equals(id, user.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id);
  }
}
------[0m
[0m2025-06-16 21:22:30 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.domain;

import com.gmail.merikbest2015.ecommerce.enums.AuthProvider;
import com.gmail.merikbest2015.ecommerce.enums.Role;
import jakarta.persistence.*;
import java.util.Objects;
import java.util.Set;
import java.util.regex.Pattern;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

@Getter
@Setter
@ToString
@Entity
@Table(name = "users")
public class User {

  @Id
  @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "users_id_seq")
  @SequenceGenerator(
      name = "users_id_seq",
      sequenceName = "users_id_seq",
      initialValue = 4,
      allocationSize = 1)
  @Column(name = "id")
  private Long id;

  @Column(name = "email")
  private String email;

  @Column(name = "password")
  private String password;

  @Column(name = "first_name")
  private String firstName;

  @Column(name = "last_name")
  private String lastName;

  @Column(name = "city")
  private String city;

  @Column(name = "address")
  private String address;

  @Column(name = "phone_number")
  private String phoneNumber;

  @Column(name = "post_index")
  private String postIndex;

  @Column(name = "activation_code")
  private String activationCode;

  @Column(name = "password_reset_code")
  private String passwordResetCode;

  @Column(name = "active")
  private boolean active;

  @Column(name = "provider")
  @Enumerated(EnumType.STRING)
  private AuthProvider provider;

  @ElementCollection(targetClass = Role.class, fetch = FetchType.EAGER)
  @CollectionTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"))
  @Enumerated(EnumType.STRING)
  private Set<Role> roles;

  public User() {
    // default constructor for JPA
  }

  public User(
      String email,
      String password,
      String firstName,
      String lastName,
      String city,
      String address,
      String phoneNumber,
      String postIndex,
      String activationCode,
      String passwordResetCode,
      boolean active,
      AuthProvider provider,
      Set<Role> roles) {

    validateEmail(email);
    validatePhoneNumber(phoneNumber);
    validatePostIndex(postIndex);

    this.email = email;
    this.password = password;
    this.firstName = firstName;
    this.lastName = lastName;
    this.city = city;
    this.address = address;
    this.phoneNumber = phoneNumber;
    this.postIndex = postIndex;
    this.activationCode = activationCode;
    this.passwordResetCode = passwordResetCode;
    this.active = active;
    this.provider = provider;
    this.roles = roles;
  }

  private void validateEmail(String email) {
    if (email == null || email.trim().isEmpty()) {
      throw new IllegalArgumentException("Email must not be blank.");
    }
    String emailRegex = "^[\w-.]+@[\w-]+\.[a-z]{2,}$";
    if (!Pattern.compile(emailRegex, Pattern.CASE_INSENSITIVE).matcher(email).matches()) {
      throw new IllegalArgumentException("Email format is invalid.");
    }
  }

  private void validatePhoneNumber(String phoneNumber) {
    if (phoneNumber != null && !phoneNumber.trim().isEmpty()) {
      // Simple validation: digits, +, -, spaces allowed
      String phoneRegex = "^[+\d\s-]{7,15}$";
      if (!Pattern.compile(phoneRegex).matcher(phoneNumber).matches()) {
        throw new IllegalArgumentException("Phone number format is invalid.");
      }
    }
  }

  private void validatePostIndex(String postIndex) {
    if (postIndex != null && !postIndex.trim().isEmpty()) {
      // Simple postal code validation - customize as needed
      if (postIndex.length() > 10) {
        throw new IllegalArgumentException("Post index is too long.");
      }
    }
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) return true;
    if (o == null || getClass() != o.getClass()) return false;
    User user = (User) o;
    return Objects.equals(id, user.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id);
  }
}
------[0m
[0m2025-06-16 21:22:30 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java[0m
[0m2025-06-16 21:22:30 [0;34m[DEBUG][0m   FILE_STATUS (CaptchaResponse.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:30 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java, FILE_NAME: CaptchaResponse.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:30 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:30 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:30 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java][0m
[0m2025-06-16 21:22:30 [0;34m[INFO][0m    - File:[0;37m[CaptchaResponse.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:30 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.dto;

import com.fasterxml.jackson.annotation.JsonAlias;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import java.util.Set;

@JsonIgnoreProperties(ignoreUnknown = true)
public class CaptchaResponse {

  private boolean success;

  @JsonAlias("error-codes")
  private Set<String> errorCodes;

  public boolean isSuccess() {
    return success;
  }

  public void setSuccess(boolean success) {
    this.success = success;
  }

  public Set<String> getErrorCodes() {
    return errorCodes;
  }

  public void setErrorCodes(Set<String> errorCodes) {
    this.errorCodes = errorCodes;
  }
}
------[0m
[0m2025-06-16 21:22:30 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.dto;

import com.fasterxml.jackson.annotation.JsonAlias;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import java.util.Set;

@JsonIgnoreProperties(ignoreUnknown = true)
public class CaptchaResponse {

  private boolean success;

  @JsonAlias("error-codes")
  private Set<String> errorCodes;

  public boolean isSuccess() {
    return success;
  }

  public void setSuccess(boolean success) {
    this.success = success;
  }

  public Set<String> getErrorCodes() {
    return errorCodes;
  }

  public void setErrorCodes(Set<String> errorCodes) {
    this.errorCodes = errorCodes;
  }
}
------[0m
[0m2025-06-16 21:22:30 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/GraphQLRequest.java[0m
[0m2025-06-16 21:22:30 [0;34m[DEBUG][0m   FILE_STATUS (GraphQLRequest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:30 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/GraphQLRequest.java, FILE_NAME: GraphQLRequest.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:30 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:30 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:30 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/GraphQLRequest.java][0m
[0m2025-06-16 21:22:31 [0;34m[INFO][0m    - File:[0;37m[GraphQLRequest.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:31 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.dto;

import lombok.Data;

@Data
public class GraphQLRequest {
  private String query;
}
------[0m
[0m2025-06-16 21:22:31 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.dto;

import lombok.Data;

@Data
public class GraphQLRequest {
  private String query;
}
------[0m
[0m2025-06-16 21:22:31 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/HeaderResponse.java[0m
[0m2025-06-16 21:22:31 [0;34m[DEBUG][0m   FILE_STATUS (HeaderResponse.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:31 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/HeaderResponse.java, FILE_NAME: HeaderResponse.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:31 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:31 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:31 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/HeaderResponse.java][0m
[0m2025-06-16 21:22:31 [0;34m[INFO][0m    - File:[0;37m[HeaderResponse.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:31 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.dto;

import java.util.List;
import lombok.AllArgsConstructor;
import lombok.Data;
import org.springframework.http.HttpHeaders;

@Data
@AllArgsConstructor
public class HeaderResponse<T> {
  private List<T> items;
  private HttpHeaders headers;
}
------[0m
[0m2025-06-16 21:22:31 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.dto;

import java.util.List;
import lombok.AllArgsConstructor;
import lombok.Data;
import org.springframework.http.HttpHeaders;

@Data
@AllArgsConstructor
public class HeaderResponse<T> {
  private List<T> items;
  private HttpHeaders headers;
}
------[0m
[0m2025-06-16 21:22:31 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/PasswordResetRequest.java[0m
[0m2025-06-16 21:22:31 [0;34m[DEBUG][0m   FILE_STATUS (PasswordResetRequest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:31 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/PasswordResetRequest.java, FILE_NAME: PasswordResetRequest.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:31 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:31 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:31 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/PasswordResetRequest.java][0m
[0m2025-06-16 21:22:32 [0;34m[INFO][0m    - File:[0;37m[PasswordResetRequest.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:32 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.dto;

import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.PASSWORD2_CHARACTER_LENGTH;
import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.PASSWORD_CHARACTER_LENGTH;

import jakarta.validation.constraints.Size;
import lombok.Data;

@Data
public class PasswordResetRequest {

  private String email;

  @Size(min = 6, max = 16, message = PASSWORD_CHARACTER_LENGTH)
  private String password;

  @Size(min = 6, max = 16, message = PASSWORD2_CHARACTER_LENGTH)
  private String password2;
}
------[0m
[0m2025-06-16 21:22:32 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.dto;

import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.PASSWORD2_CHARACTER_LENGTH;
import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.PASSWORD_CHARACTER_LENGTH;

import jakarta.validation.constraints.Size;
import lombok.Data;

@Data
public class PasswordResetRequest {

  private String email;

  @Size(min = 6, max = 16, message = PASSWORD_CHARACTER_LENGTH)
  private String password;

  @Size(min = 6, max = 16, message = PASSWORD2_CHARACTER_LENGTH)
  private String password2;
}
------[0m
[0m2025-06-16 21:22:32 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java[0m
[0m2025-06-16 21:22:32 [0;34m[DEBUG][0m   FILE_STATUS (RegistrationRequest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:32 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java, FILE_NAME: RegistrationRequest.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:32 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:32 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:32 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java][0m
[0m2025-06-16 21:22:32 [0;34m[INFO][0m    - File:[0;37m[RegistrationRequest.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:32 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.dto;

import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.*;

import jakarta.validation.constraints.Email;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.Size;
import lombok.Data;

@Data
public class RegistrationRequest {

  @NotBlank(message = "Fill captcha.")
  private String captcha;

  @NotBlank(message = EMPTY_FIRST_NAME)
  private String firstName;

  @NotBlank(message = EMPTY_LAST_NAME)
  private String lastName;

  @Size(min = 6, max = 16, message = PASSWORD_CHARACTER_LENGTH)
  private String password;

  @Size(min = 6, max = 16, message = PASSWORD2_CHARACTER_LENGTH)
  private String password2;

  @Email(message = INCORRECT_EMAIL)
  @NotBlank(message = EMAIL_CANNOT_BE_EMPTY)
  private String email;
}
------[0m
[0m2025-06-16 21:22:32 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.dto;

import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.*;

import jakarta.validation.constraints.Email;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.Size;
import lombok.Data;

@Data
public class RegistrationRequest {

  @NotBlank(message = "Fill captcha.")
  private String captcha;

  @NotBlank(message = EMPTY_FIRST_NAME)
  private String firstName;

  @NotBlank(message = EMPTY_LAST_NAME)
  private String lastName;

  @Size(min = 6, max = 16, message = PASSWORD_CHARACTER_LENGTH)
  private String password;

  @Size(min = 6, max = 16, message = PASSWORD2_CHARACTER_LENGTH)
  private String password2;

  @Email(message = INCORRECT_EMAIL)
  @NotBlank(message = EMAIL_CANNOT_BE_EMPTY)
  private String email;
}
------[0m
[0m2025-06-16 21:22:32 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationRequest.java[0m
[0m2025-06-16 21:22:32 [0;34m[DEBUG][0m   FILE_STATUS (AuthenticationRequest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:32 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationRequest.java, FILE_NAME: AuthenticationRequest.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:32 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:32 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:32 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationRequest.java][0m
[0m2025-06-16 21:22:33 [0;34m[INFO][0m    - File:[0;37m[AuthenticationRequest.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:33 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.dto.auth;

import lombok.Data;

@Data
public class AuthenticationRequest {
  private String email;
  private String password;
}
------[0m
[0m2025-06-16 21:22:33 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.dto.auth;

import lombok.Data;

@Data
public class AuthenticationRequest {
  private String email;
  private String password;
}
------[0m
[0m2025-06-16 21:22:33 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationResponse.java[0m
[0m2025-06-16 21:22:33 [0;34m[DEBUG][0m   FILE_STATUS (AuthenticationResponse.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:33 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationResponse.java, FILE_NAME: AuthenticationResponse.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:33 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:33 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:33 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationResponse.java][0m
[0m2025-06-16 21:22:33 [0;34m[INFO][0m    - File:[0;37m[AuthenticationResponse.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:33 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.dto.auth;

import com.gmail.merikbest2015.ecommerce.dto.user.UserResponse;
import lombok.Data;

@Data
public class AuthenticationResponse {
  private UserResponse user;
  private String token;
}
------[0m
[0m2025-06-16 21:22:33 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.dto.auth;

import com.gmail.merikbest2015.ecommerce.dto.user.UserResponse;
import lombok.Data;

@Data
public class AuthenticationResponse {
  private UserResponse user;
  private String token;
}
------[0m
[0m2025-06-16 21:22:33 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderItemResponse.java[0m
[0m2025-06-16 21:22:33 [0;34m[DEBUG][0m   FILE_STATUS (OrderItemResponse.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:33 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderItemResponse.java, FILE_NAME: OrderItemResponse.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:33 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:33 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:33 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderItemResponse.java][0m
[0m2025-06-16 21:22:34 [0;34m[INFO][0m    - File:[0;37m[OrderItemResponse.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:34 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.dto.order;

import com.gmail.merikbest2015.ecommerce.dto.perfume.PerfumeResponse;
import lombok.Getter;
import lombok.Setter;

@Getter
@Setter
public class OrderItemResponse {
  private Long id;
  private Long amount;
  private Long quantity;
  private PerfumeResponse perfume;
}
------[0m
[0m2025-06-16 21:22:34 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.dto.order;

import com.gmail.merikbest2015.ecommerce.dto.perfume.PerfumeResponse;
import lombok.Getter;
import lombok.Setter;

@Getter
@Setter
public class OrderItemResponse {
  private Long id;
  private Long amount;
  private Long quantity;
  private PerfumeResponse perfume;
}
------[0m
[0m2025-06-16 21:22:34 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java[0m
[0m2025-06-16 21:22:34 [0;34m[DEBUG][0m   FILE_STATUS (OrderRequest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:34 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java, FILE_NAME: OrderRequest.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:34 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:34 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:34 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java][0m
[0m2025-06-16 21:22:34 [0;34m[INFO][0m    - File:[0;37m[OrderRequest.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:34 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.dto.order;

import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.*;

import jakarta.validation.constraints.Email;
import jakarta.validation.constraints.Min;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
import java.util.Map;
import lombok.Data;

@Data
public class OrderRequest {

  private Double totalPrice;
  private Map<Long, Long> perfumesId;

  @NotBlank(message = FILL_IN_THE_INPUT_FIELD)
  private String firstName;

  @NotBlank(message = FILL_IN_THE_INPUT_FIELD)
  private String lastName;

  @NotBlank(message = FILL_IN_THE_INPUT_FIELD)
  private String city;

  @NotBlank(message = FILL_IN_THE_INPUT_FIELD)
  private String address;

  @Email(message = INCORRECT_EMAIL)
  @NotBlank(message = EMAIL_CANNOT_BE_EMPTY)
  private String email;

  @NotBlank(message = EMPTY_PHONE_NUMBER)
  private String phoneNumber;

  @NotNull(message = EMPTY_POST_INDEX)
  @Min(value = 5, message = "Post index must contain 5 digits")
  private Integer postIndex;
}
------[0m
[0m2025-06-16 21:22:34 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.dto.order;

import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.*;

import jakarta.validation.constraints.Email;
import jakarta.validation.constraints.Min;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
import java.util.Map;
import lombok.Data;

@Data
public class OrderRequest {

  private Double totalPrice;
  private Map<Long, Long> perfumesId;

  @NotBlank(message = FILL_IN_THE_INPUT_FIELD)
  private String firstName;

  @NotBlank(message = FILL_IN_THE_INPUT_FIELD)
  private String lastName;

  @NotBlank(message = FILL_IN_THE_INPUT_FIELD)
  private String city;

  @NotBlank(message = FILL_IN_THE_INPUT_FIELD)
  private String address;

  @Email(message = INCORRECT_EMAIL)
  @NotBlank(message = EMAIL_CANNOT_BE_EMPTY)
  private String email;

  @NotBlank(message = EMPTY_PHONE_NUMBER)
  private String phoneNumber;

  @NotNull(message = EMPTY_POST_INDEX)
  @Min(value = 5, message = "Post index must contain 5 digits")
  private Integer postIndex;
}
------[0m
[0m2025-06-16 21:22:34 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java[0m
[0m2025-06-16 21:22:34 [0;34m[DEBUG][0m   FILE_STATUS (OrderResponse.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:34 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java, FILE_NAME: OrderResponse.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:34 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:34 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:34 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java][0m
[0m2025-06-16 21:22:35 [0;34m[INFO][0m    - File:[0;37m[OrderResponse.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:35 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.dto.order;

import java.time.LocalDate;
import lombok.Getter;
import lombok.Setter;

@Getter
@Setter
public class OrderResponse {
  private Long id;
  private Double totalPrice;
  private LocalDate date;
  private String firstName;
  private String lastName;
  private String city;
  private String address;
  private String email;
  private String phoneNumber;
  private Integer postIndex;
}
------[0m
[0m2025-06-16 21:22:35 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.dto.order;

import java.time.LocalDate;
import lombok.Getter;
import lombok.Setter;

@Getter
@Setter
public class OrderResponse {
  private Long id;
  private Double totalPrice;
  private LocalDate date;
  private String firstName;
  private String lastName;
  private String city;
  private String address;
  private String email;
  private String phoneNumber;
  private Integer postIndex;
}
------[0m
[0m2025-06-16 21:22:35 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/FullPerfumeResponse.java[0m
[0m2025-06-16 21:22:35 [0;34m[DEBUG][0m   FILE_STATUS (FullPerfumeResponse.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:35 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/FullPerfumeResponse.java, FILE_NAME: FullPerfumeResponse.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:35 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:35 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:35 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/FullPerfumeResponse.java][0m
[0m2025-06-16 21:22:35 [0;34m[INFO][0m    - File:[0;37m[FullPerfumeResponse.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:35 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.dto.perfume;

import lombok.Getter;
import lombok.Setter;
import org.springframework.web.multipart.MultipartFile;

@Getter
@Setter
public class FullPerfumeResponse extends PerfumeResponse {
  private Integer year;
  private String country;
  private String perfumeGender;
  private String fragranceTopNotes;
  private String fragranceMiddleNotes;
  private String fragranceBaseNotes;
  private String description;
  private String type;
  private MultipartFile file;
}
------[0m
[0m2025-06-16 21:22:35 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.dto.perfume;

import lombok.Getter;
import lombok.Setter;
import org.springframework.web.multipart.MultipartFile;

@Getter
@Setter
public class FullPerfumeResponse extends PerfumeResponse {
  private Integer year;
  private String country;
  private String perfumeGender;
  private String fragranceTopNotes;
  private String fragranceMiddleNotes;
  private String fragranceBaseNotes;
  private String description;
  private String type;
  private MultipartFile file;
}
------[0m
[0m2025-06-16 21:22:35 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java[0m
[0m2025-06-16 21:22:35 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeRequest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:35 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java, FILE_NAME: PerfumeRequest.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:35 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:35 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:35 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java][0m
[0m2025-06-16 21:22:36 [0;34m[INFO][0m    - File:[0;37m[PerfumeRequest.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:36 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.dto.perfume;

import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.FILL_IN_THE_INPUT_FIELD;

import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
import lombok.Data;
import org.hibernate.validator.constraints.Length;

@Data
public class PerfumeRequest {

  private Long id;
  private String filename;

  @NotBlank(message = FILL_IN_THE_INPUT_FIELD)
  @Length(max = 255)
  private String perfumeTitle;

  @NotBlank(message = FILL_IN_THE_INPUT_FIELD)
  @Length(max = 255)
  private String perfumer;

  @NotNull(message = FILL_IN_THE_INPUT_FIELD)
  private Integer year;

  @NotBlank(message = FILL_IN_THE_INPUT_FIELD)
  @Length(max = 255)
  private String country;

  @NotBlank(message = FILL_IN_THE_INPUT_FIELD)
  @Length(max = 255)
  private String perfumeGender;

  @NotBlank(message = FILL_IN_THE_INPUT_FIELD)
  @Length(max = 255)
  private String fragranceTopNotes;

  @NotBlank(message = FILL_IN_THE_INPUT_FIELD)
  @Length(max = 255)
  private String fragranceMiddleNotes;

  @NotBlank(message = FILL_IN_THE_INPUT_FIELD)
  @Length(max = 255)
  private String fragranceBaseNotes;

  @NotNull(message = FILL_IN_THE_INPUT_FIELD)
  private Integer price;

  @NotBlank(message = FILL_IN_THE_INPUT_FIELD)
  @Length(max = 255)
  private String volume;

  @NotBlank(message = FILL_IN_THE_INPUT_FIELD)
  @Length(max = 255)
  private String type;
}
------[0m
[0m2025-06-16 21:22:36 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.dto.perfume;

import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.FILL_IN_THE_INPUT_FIELD;

import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
import lombok.Data;
import org.hibernate.validator.constraints.Length;

@Data
public class PerfumeRequest {

  private Long id;
  private String filename;

  @NotBlank(message = FILL_IN_THE_INPUT_FIELD)
  @Length(max = 255)
  private String perfumeTitle;

  @NotBlank(message = FILL_IN_THE_INPUT_FIELD)
  @Length(max = 255)
  private String perfumer;

  @NotNull(message = FILL_IN_THE_INPUT_FIELD)
  private Integer year;

  @NotBlank(message = FILL_IN_THE_INPUT_FIELD)
  @Length(max = 255)
  private String country;

  @NotBlank(message = FILL_IN_THE_INPUT_FIELD)
  @Length(max = 255)
  private String perfumeGender;

  @NotBlank(message = FILL_IN_THE_INPUT_FIELD)
  @Length(max = 255)
  private String fragranceTopNotes;

  @NotBlank(message = FILL_IN_THE_INPUT_FIELD)
  @Length(max = 255)
  private String fragranceMiddleNotes;

  @NotBlank(message = FILL_IN_THE_INPUT_FIELD)
  @Length(max = 255)
  private String fragranceBaseNotes;

  @NotNull(message = FILL_IN_THE_INPUT_FIELD)
  private Integer price;

  @NotBlank(message = FILL_IN_THE_INPUT_FIELD)
  @Length(max = 255)
  private String volume;

  @NotBlank(message = FILL_IN_THE_INPUT_FIELD)
  @Length(max = 255)
  private String type;
}
------[0m
[0m2025-06-16 21:22:36 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeResponse.java[0m
[0m2025-06-16 21:22:36 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeResponse.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:36 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeResponse.java, FILE_NAME: PerfumeResponse.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:36 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:36 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:36 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeResponse.java][0m
[0m2025-06-16 21:22:36 [0;34m[INFO][0m    - File:[0;37m[PerfumeResponse.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:36 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.dto.perfume;

import lombok.Getter;
import lombok.Setter;

@Getter
@Setter
public class PerfumeResponse {
  private Long id;
  private String perfumeTitle;
  private String perfumer;
  private Integer price;
  private Double perfumeRating;
  private String filename;
  private Integer reviewsCount;
  private String volume;
}
------[0m
[0m2025-06-16 21:22:36 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.dto.perfume;

import lombok.Getter;
import lombok.Setter;

@Getter
@Setter
public class PerfumeResponse {
  private Long id;
  private String perfumeTitle;
  private String perfumer;
  private Integer price;
  private Double perfumeRating;
  private String filename;
  private Integer reviewsCount;
  private String volume;
}
------[0m
[0m2025-06-16 21:22:36 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeSearchRequest.java[0m
[0m2025-06-16 21:22:36 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeSearchRequest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:36 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeSearchRequest.java, FILE_NAME: PerfumeSearchRequest.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:36 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:36 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:36 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeSearchRequest.java][0m
[0m2025-06-16 21:22:37 [0;34m[INFO][0m    - File:[0;37m[PerfumeSearchRequest.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:37 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.dto.perfume;

import java.util.List;
import lombok.Data;

@Data
public class PerfumeSearchRequest {
  private List<String> perfumers;
  private List<String> genders;
  private List<Integer> prices;
  private Boolean sortByPrice;
  private String perfumer;
  private String perfumeGender;
}
------[0m
[0m2025-06-16 21:22:37 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.dto.perfume;

import java.util.List;
import lombok.Data;

@Data
public class PerfumeSearchRequest {
  private List<String> perfumers;
  private List<String> genders;
  private List<Integer> prices;
  private Boolean sortByPrice;
  private String perfumer;
  private String perfumeGender;
}
------[0m
[0m2025-06-16 21:22:37 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/SearchTypeRequest.java[0m
[0m2025-06-16 21:22:37 [0;34m[DEBUG][0m   FILE_STATUS (SearchTypeRequest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:37 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/SearchTypeRequest.java, FILE_NAME: SearchTypeRequest.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:37 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:37 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:37 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/SearchTypeRequest.java][0m
[0m2025-06-16 21:22:37 [0;34m[INFO][0m    - File:[0;37m[SearchTypeRequest.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:38 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.dto.perfume;

import com.gmail.merikbest2015.ecommerce.enums.SearchPerfume;
import lombok.Data;

@Data
public class SearchTypeRequest {
  private SearchPerfume searchType;
  private String text;
}
------[0m
[0m2025-06-16 21:22:38 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.dto.perfume;

import com.gmail.merikbest2015.ecommerce.enums.SearchPerfume;
import lombok.Data;

@Data
public class SearchTypeRequest {
  private SearchPerfume searchType;
  private String text;
}
------[0m
[0m2025-06-16 21:22:38 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewRequest.java[0m
[0m2025-06-16 21:22:38 [0;34m[DEBUG][0m   FILE_STATUS (ReviewRequest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:38 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewRequest.java, FILE_NAME: ReviewRequest.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:38 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:38 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:38 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewRequest.java][0m
[0m2025-06-16 21:22:38 [0;34m[INFO][0m    - File:[0;37m[ReviewRequest.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:38 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.dto.review;

import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.FILL_IN_THE_INPUT_FIELD;

import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
import lombok.Data;

@Data
public class ReviewRequest {

  private Long perfumeId;

  @NotBlank(message = FILL_IN_THE_INPUT_FIELD)
  private String author;

  @NotBlank(message = FILL_IN_THE_INPUT_FIELD)
  private String message;

  @NotNull(message = "Choose perfume rating")
  private Integer rating;
}
------[0m
[0m2025-06-16 21:22:38 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.dto.review;

import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.FILL_IN_THE_INPUT_FIELD;

import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
import lombok.Data;

@Data
public class ReviewRequest {

  private Long perfumeId;

  @NotBlank(message = FILL_IN_THE_INPUT_FIELD)
  private String author;

  @NotBlank(message = FILL_IN_THE_INPUT_FIELD)
  private String message;

  @NotNull(message = "Choose perfume rating")
  private Integer rating;
}
------[0m
[0m2025-06-16 21:22:38 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewResponse.java[0m
[0m2025-06-16 21:22:38 [0;34m[DEBUG][0m   FILE_STATUS (ReviewResponse.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:38 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewResponse.java, FILE_NAME: ReviewResponse.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:38 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:38 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:38 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewResponse.java][0m
[0m2025-06-16 21:22:39 [0;34m[INFO][0m    - File:[0;37m[ReviewResponse.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:39 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.dto.review;

import java.time.LocalDate;
import lombok.Data;

@Data
public class ReviewResponse {
  private Long id;
  private String author;
  private String message;
  private Integer rating;
  private LocalDate date;
}
------[0m
[0m2025-06-16 21:22:39 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.dto.review;

import java.time.LocalDate;
import lombok.Data;

@Data
public class ReviewResponse {
  private Long id;
  private String author;
  private String message;
  private Integer rating;
  private LocalDate date;
}
------[0m
[0m2025-06-16 21:22:39 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/BaseUserResponse.java[0m
[0m2025-06-16 21:22:39 [0;34m[DEBUG][0m   FILE_STATUS (BaseUserResponse.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:39 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/BaseUserResponse.java, FILE_NAME: BaseUserResponse.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:39 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:39 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:39 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/BaseUserResponse.java][0m
[0m2025-06-16 21:22:39 [0;34m[INFO][0m    - File:[0;37m[BaseUserResponse.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:39 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.dto.user;

import com.gmail.merikbest2015.ecommerce.enums.Role;
import java.util.Set;
import lombok.Getter;
import lombok.Setter;

@Getter
@Setter
public class BaseUserResponse {
  private Long id;
  private String email;
  private String firstName;
  private Set<Role> roles;
  private String provider;
}
------[0m
[0m2025-06-16 21:22:39 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.dto.user;

import com.gmail.merikbest2015.ecommerce.enums.Role;
import java.util.Set;
import lombok.Getter;
import lombok.Setter;

@Getter
@Setter
public class BaseUserResponse {
  private Long id;
  private String email;
  private String firstName;
  private Set<Role> roles;
  private String provider;
}
------[0m
[0m2025-06-16 21:22:39 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UpdateUserRequest.java[0m
[0m2025-06-16 21:22:39 [0;34m[DEBUG][0m   FILE_STATUS (UpdateUserRequest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:39 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UpdateUserRequest.java, FILE_NAME: UpdateUserRequest.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:39 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:39 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:39 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UpdateUserRequest.java][0m
[0m2025-06-16 21:22:40 [0;34m[INFO][0m    - File:[0;37m[UpdateUserRequest.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:40 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.dto.user;

import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.EMPTY_FIRST_NAME;
import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.EMPTY_LAST_NAME;

import jakarta.validation.constraints.NotBlank;
import lombok.Data;

@Data
public class UpdateUserRequest {
  private Long id;

  @NotBlank(message = EMPTY_FIRST_NAME)
  private String firstName;

  @NotBlank(message = EMPTY_LAST_NAME)
  private String lastName;

  private String city;
  private String address;
  private String phoneNumber;
  private String postIndex;
}
------[0m
[0m2025-06-16 21:22:40 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.dto.user;

import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.EMPTY_FIRST_NAME;
import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.EMPTY_LAST_NAME;

import jakarta.validation.constraints.NotBlank;
import lombok.Data;

@Data
public class UpdateUserRequest {
  private Long id;

  @NotBlank(message = EMPTY_FIRST_NAME)
  private String firstName;

  @NotBlank(message = EMPTY_LAST_NAME)
  private String lastName;

  private String city;
  private String address;
  private String phoneNumber;
  private String postIndex;
}
------[0m
[0m2025-06-16 21:22:40 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UserResponse.java[0m
[0m2025-06-16 21:22:40 [0;34m[DEBUG][0m   FILE_STATUS (UserResponse.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:40 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UserResponse.java, FILE_NAME: UserResponse.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:40 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:40 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:40 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UserResponse.java][0m
[0m2025-06-16 21:22:40 [0;34m[INFO][0m    - File:[0;37m[UserResponse.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:40 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.dto.user;

import lombok.Getter;
import lombok.Setter;

@Getter
@Setter
public class UserResponse extends BaseUserResponse {
  private String lastName;
  private String city;
  private String address;
  private String phoneNumber;
  private String postIndex;
}
------[0m
[0m2025-06-16 21:22:40 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.dto.user;

import lombok.Getter;
import lombok.Setter;

@Getter
@Setter
public class UserResponse extends BaseUserResponse {
  private String lastName;
  private String city;
  private String address;
  private String phoneNumber;
  private String postIndex;
}
------[0m
[0m2025-06-16 21:22:40 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/AuthProvider.java[0m
[0m2025-06-16 21:22:40 [0;34m[DEBUG][0m   FILE_STATUS (AuthProvider.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:40 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/AuthProvider.java, FILE_NAME: AuthProvider.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:40 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:40 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:40 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/AuthProvider.java][0m
[0m2025-06-16 21:22:41 [0;34m[INFO][0m    - File:[0;37m[AuthProvider.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:41 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.enums;

public enum AuthProvider {
  LOCAL,
  GOOGLE,
  GITHUB,
  FACEBOOK
}
------[0m
[0m2025-06-16 21:22:41 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.enums;

public enum AuthProvider {
  LOCAL,
  GOOGLE,
  GITHUB,
  FACEBOOK
}
------[0m
[0m2025-06-16 21:22:41 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/Role.java[0m
[0m2025-06-16 21:22:41 [0;34m[DEBUG][0m   FILE_STATUS (Role.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:41 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/Role.java, FILE_NAME: Role.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:41 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:41 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:41 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/Role.java][0m
[0m2025-06-16 21:22:41 [0;34m[INFO][0m    - File:[0;37m[Role.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:41 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.enums;

public enum Role {
  USER,
  ADMIN
}
------[0m
[0m2025-06-16 21:22:41 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.enums;

public enum Role {
  USER,
  ADMIN
}
------[0m
[0m2025-06-16 21:22:41 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/SearchPerfume.java[0m
[0m2025-06-16 21:22:41 [0;34m[DEBUG][0m   FILE_STATUS (SearchPerfume.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:41 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/SearchPerfume.java, FILE_NAME: SearchPerfume.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:41 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:41 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:41 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/SearchPerfume.java][0m
[0m2025-06-16 21:22:42 [0;34m[INFO][0m    - File:[0;37m[SearchPerfume.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:42 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.enums;

public enum SearchPerfume {
  BRAND,
  PERFUME_TITLE,
  COUNTRY
}
------[0m
[0m2025-06-16 21:22:42 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.enums;

public enum SearchPerfume {
  BRAND,
  PERFUME_TITLE,
  COUNTRY
}
------[0m
[0m2025-06-16 21:22:42 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java[0m
[0m2025-06-16 21:22:42 [0;34m[DEBUG][0m   FILE_STATUS (ApiExceptionHandler.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:42 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java, FILE_NAME: ApiExceptionHandler.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:42 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:42 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:42 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java][0m
[0m2025-06-16 21:22:42 [0;34m[INFO][0m    - File:[0;37m[ApiExceptionHandler.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:42 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.exception;

import com.gmail.merikbest2015.ecommerce.security.JwtAuthenticationException;
import java.util.Map;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.ExceptionHandler;

@ControllerAdvice
public class ApiExceptionHandler {

  @ExceptionHandler(ApiRequestException.class)
  public ResponseEntity<String> handleApiRequestException(ApiRequestException exception) {
    return ResponseEntity.status(exception.getStatus()).body(exception.getMessage());
  }

  @ExceptionHandler(PasswordConfirmationException.class)
  public ResponseEntity<PasswordConfirmationException> handlePasswordConfirmationException(
      PasswordConfirmationException exception) {
    return ResponseEntity.badRequest()
        .body(new PasswordConfirmationException(exception.getPassword2Error()));
  }

  @ExceptionHandler(PasswordException.class)
  public ResponseEntity<PasswordException> handlePasswordException(PasswordException exception) {
    return ResponseEntity.badRequest().body(new PasswordException(exception.getPasswordError()));
  }

  @ExceptionHandler(EmailException.class)
  public ResponseEntity<EmailException> handleEmailError(EmailException exception) {
    return ResponseEntity.badRequest().body(new EmailException(exception.getEmailError()));
  }

  @ExceptionHandler(CaptchaException.class)
  public ResponseEntity<CaptchaException> handleCaptchaException(CaptchaException exception) {
    return ResponseEntity.badRequest().body(new CaptchaException(exception.getCaptchaError()));
  }

  @ExceptionHandler(InputFieldException.class)
  public ResponseEntity<Map<String, String>> handleInputFieldException(
      InputFieldException exception) {
    InputFieldException inputFieldException = new InputFieldException(exception.getBindingResult());
    return ResponseEntity.badRequest().body(inputFieldException.getErrorsMap());
  }

  @ExceptionHandler(JwtAuthenticationException.class)
  public ResponseEntity<String> handleJwtAuthenticationException(
      JwtAuthenticationException exception) {
    return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body(exception.getMessage());
  }
}
------[0m
[0m2025-06-16 21:22:42 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.exception;

import com.gmail.merikbest2015.ecommerce.security.JwtAuthenticationException;
import java.util.Map;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.ExceptionHandler;

@ControllerAdvice
public class ApiExceptionHandler {

  @ExceptionHandler(ApiRequestException.class)
  public ResponseEntity<String> handleApiRequestException(ApiRequestException exception) {
    return ResponseEntity.status(exception.getStatus()).body(exception.getMessage());
  }

  @ExceptionHandler(PasswordConfirmationException.class)
  public ResponseEntity<PasswordConfirmationException> handlePasswordConfirmationException(
      PasswordConfirmationException exception) {
    return ResponseEntity.badRequest()
        .body(new PasswordConfirmationException(exception.getPassword2Error()));
  }

  @ExceptionHandler(PasswordException.class)
  public ResponseEntity<PasswordException> handlePasswordException(PasswordException exception) {
    return ResponseEntity.badRequest().body(new PasswordException(exception.getPasswordError()));
  }

  @ExceptionHandler(EmailException.class)
  public ResponseEntity<EmailException> handleEmailError(EmailException exception) {
    return ResponseEntity.badRequest().body(new EmailException(exception.getEmailError()));
  }

  @ExceptionHandler(CaptchaException.class)
  public ResponseEntity<CaptchaException> handleCaptchaException(CaptchaException exception) {
    return ResponseEntity.badRequest().body(new CaptchaException(exception.getCaptchaError()));
  }

  @ExceptionHandler(InputFieldException.class)
  public ResponseEntity<Map<String, String>> handleInputFieldException(
      InputFieldException exception) {
    InputFieldException inputFieldException = new InputFieldException(exception.getBindingResult());
    return ResponseEntity.badRequest().body(inputFieldException.getErrorsMap());
  }

  @ExceptionHandler(JwtAuthenticationException.class)
  public ResponseEntity<String> handleJwtAuthenticationException(
      JwtAuthenticationException exception) {
    return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body(exception.getMessage());
  }
}
------[0m
[0m2025-06-16 21:22:42 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiRequestException.java[0m
[0m2025-06-16 21:22:42 [0;34m[DEBUG][0m   FILE_STATUS (ApiRequestException.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:42 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiRequestException.java, FILE_NAME: ApiRequestException.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:42 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:42 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:42 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiRequestException.java][0m
[0m2025-06-16 21:22:43 [0;34m[INFO][0m    - File:[0;37m[ApiRequestException.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:43 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.exception;

import lombok.Getter;
import org.springframework.http.HttpStatus;

@Getter
public class ApiRequestException extends RuntimeException {
  private final HttpStatus status;

  public ApiRequestException(String message, HttpStatus status) {
    super(message);
    this.status = status;
  }
}
------[0m
[0m2025-06-16 21:22:43 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.exception;

import lombok.Getter;
import org.springframework.http.HttpStatus;

@Getter
public class ApiRequestException extends RuntimeException {
  private final HttpStatus status;

  public ApiRequestException(String message, HttpStatus status) {
    super(message);
    this.status = status;
  }
}
------[0m
[0m2025-06-16 21:22:43 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/CaptchaException.java[0m
[0m2025-06-16 21:22:43 [0;34m[DEBUG][0m   FILE_STATUS (CaptchaException.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:43 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/CaptchaException.java, FILE_NAME: CaptchaException.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:43 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:43 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:43 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/CaptchaException.java][0m
[0m2025-06-16 21:22:43 [0;34m[INFO][0m    - File:[0;37m[CaptchaException.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:43 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.exception;

import lombok.Getter;

@Getter
public class CaptchaException extends RuntimeException {
  private final String captchaError;

  public CaptchaException(String captchaError) {
    this.captchaError = captchaError;
  }
}
------[0m
[0m2025-06-16 21:22:43 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.exception;

import lombok.Getter;

@Getter
public class CaptchaException extends RuntimeException {
  private final String captchaError;

  public CaptchaException(String captchaError) {
    this.captchaError = captchaError;
  }
}
------[0m
[0m2025-06-16 21:22:43 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/EmailException.java[0m
[0m2025-06-16 21:22:43 [0;34m[DEBUG][0m   FILE_STATUS (EmailException.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:43 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/EmailException.java, FILE_NAME: EmailException.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:43 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:43 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:43 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/EmailException.java][0m
[0m2025-06-16 21:22:44 [0;34m[INFO][0m    - File:[0;37m[EmailException.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:44 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.exception;

import lombok.Getter;

@Getter
public class EmailException extends RuntimeException {
  private final String emailError;

  public EmailException(String emailError) {
    this.emailError = emailError;
  }
}
------[0m
[0m2025-06-16 21:22:44 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.exception;

import lombok.Getter;

@Getter
public class EmailException extends RuntimeException {
  private final String emailError;

  public EmailException(String emailError) {
    this.emailError = emailError;
  }
}
------[0m
[0m2025-06-16 21:22:44 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/InputFieldException.java[0m
[0m2025-06-16 21:22:44 [0;34m[DEBUG][0m   FILE_STATUS (InputFieldException.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:44 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/InputFieldException.java, FILE_NAME: InputFieldException.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:44 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:44 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:44 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/InputFieldException.java][0m
[0m2025-06-16 21:22:44 [0;34m[INFO][0m    - File:[0;37m[InputFieldException.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:44 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.exception;

import java.util.Map;
import java.util.stream.Collectors;
import lombok.Getter;
import org.springframework.validation.BindingResult;
import org.springframework.validation.FieldError;

@Getter
public class InputFieldException extends RuntimeException {

  private final BindingResult bindingResult;
  private final Map<String, String> errorsMap;

  public InputFieldException(BindingResult bindingResult) {
    this.bindingResult = bindingResult;
    this.errorsMap =
        bindingResult.getFieldErrors().stream()
            .collect(
                Collectors.toMap(
                    fieldError -> fieldError.getField() + "Error", FieldError::getDefaultMessage));
  }
}
------[0m
[0m2025-06-16 21:22:44 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.exception;

import java.util.Map;
import java.util.stream.Collectors;
import lombok.Getter;
import org.springframework.validation.BindingResult;
import org.springframework.validation.FieldError;

@Getter
public class InputFieldException extends RuntimeException {

  private final BindingResult bindingResult;
  private final Map<String, String> errorsMap;

  public InputFieldException(BindingResult bindingResult) {
    this.bindingResult = bindingResult;
    this.errorsMap =
        bindingResult.getFieldErrors().stream()
            .collect(
                Collectors.toMap(
                    fieldError -> fieldError.getField() + "Error", FieldError::getDefaultMessage));
  }
}
------[0m
[0m2025-06-16 21:22:44 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordConfirmationException.java[0m
[0m2025-06-16 21:22:44 [0;34m[DEBUG][0m   FILE_STATUS (PasswordConfirmationException.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:44 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordConfirmationException.java, FILE_NAME: PasswordConfirmationException.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:44 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:44 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:44 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordConfirmationException.java][0m
[0m2025-06-16 21:22:45 [0;34m[INFO][0m    - File:[0;37m[PasswordConfirmationException.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:45 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.exception;

import lombok.Getter;

@Getter
public class PasswordConfirmationException extends RuntimeException {
  private final String password2Error;

  public PasswordConfirmationException(String password2Error) {
    this.password2Error = password2Error;
  }
}
------[0m
[0m2025-06-16 21:22:45 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.exception;

import lombok.Getter;

@Getter
public class PasswordConfirmationException extends RuntimeException {
  private final String password2Error;

  public PasswordConfirmationException(String password2Error) {
    this.password2Error = password2Error;
  }
}
------[0m
[0m2025-06-16 21:22:45 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordException.java[0m
[0m2025-06-16 21:22:45 [0;34m[DEBUG][0m   FILE_STATUS (PasswordException.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:45 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordException.java, FILE_NAME: PasswordException.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:45 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:45 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:45 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordException.java][0m
[0m2025-06-16 21:22:45 [0;34m[INFO][0m    - File:[0;37m[PasswordException.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:45 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.exception;

import lombok.Getter;

@Getter
public class PasswordException extends RuntimeException {
  private final String passwordError;

  public PasswordException(String passwordError) {
    this.passwordError = passwordError;
  }
}
------[0m
[0m2025-06-16 21:22:45 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.exception;

import lombok.Getter;

@Getter
public class PasswordException extends RuntimeException {
  private final String passwordError;

  public PasswordException(String passwordError) {
    this.passwordError = passwordError;
  }
}
------[0m
[0m2025-06-16 21:22:45 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java[0m
[0m2025-06-16 21:22:45 [0;34m[DEBUG][0m   FILE_STATUS (AuthenticationMapper.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:45 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java, FILE_NAME: AuthenticationMapper.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:45 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:45 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:45 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java][0m
[0m2025-06-16 21:22:46 [0;34m[INFO][0m    - File:[0;37m[AuthenticationMapper.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:46 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.mapper;

import com.gmail.merikbest2015.ecommerce.domain.User;
import com.gmail.merikbest2015.ecommerce.dto.PasswordResetRequest;
import com.gmail.merikbest2015.ecommerce.dto.RegistrationRequest;
import com.gmail.merikbest2015.ecommerce.dto.auth.AuthenticationRequest;
import com.gmail.merikbest2015.ecommerce.dto.auth.AuthenticationResponse;
import com.gmail.merikbest2015.ecommerce.dto.user.UserResponse;
import com.gmail.merikbest2015.ecommerce.exception.InputFieldException;
import com.gmail.merikbest2015.ecommerce.service.AuthenticationService;
import java.util.Map;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Component;
import org.springframework.validation.BindingResult;

@Component
@RequiredArgsConstructor
public class AuthenticationMapper {

  private final AuthenticationService authenticationService;
  private final CommonMapper commonMapper;

  public AuthenticationResponse login(AuthenticationRequest request) {
    Map<String, Object> credentials =
        authenticationService.login(request.getEmail(), request.getPassword());
    AuthenticationResponse response = new AuthenticationResponse();
    response.setUser(commonMapper.convertToResponse(credentials.get("user"), UserResponse.class));
    response.setToken((String) credentials.get("token"));
    return response;
  }

  public String getEmailByPasswordResetCode(String code) {
    return authenticationService.getEmailByPasswordResetCode(code);
  }

  public String registerUser(
      String captcha, RegistrationRequest registrationRequest, BindingResult bindingResult) {
    if (bindingResult.hasErrors()) {
      throw new InputFieldException(bindingResult);
    }
    User user = commonMapper.convertToEntity(registrationRequest, User.class);
    return authenticationService.registerUser(user, captcha, registrationRequest.getPassword2());
  }

  public String activateUser(String code) {
    return authenticationService.activateUser(code);
  }

  public String sendPasswordResetCode(String email) {
    return authenticationService.sendPasswordResetCode(email);
  }

  public String passwordReset(String email, PasswordResetRequest passwordReset) {
    return authenticationService.passwordReset(
        email, passwordReset.getPassword(), passwordReset.getPassword2());
  }

  public String passwordReset(
      String email, PasswordResetRequest passwordReset, BindingResult bindingResult) {
    if (bindingResult.hasErrors()) {
      throw new InputFieldException(bindingResult);
    } else {
      return authenticationService.passwordReset(
          email, passwordReset.getPassword(), passwordReset.getPassword2());
    }
  }
}
------[0m
[0m2025-06-16 21:22:46 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.mapper;

import com.gmail.merikbest2015.ecommerce.domain.User;
import com.gmail.merikbest2015.ecommerce.dto.PasswordResetRequest;
import com.gmail.merikbest2015.ecommerce.dto.RegistrationRequest;
import com.gmail.merikbest2015.ecommerce.dto.auth.AuthenticationRequest;
import com.gmail.merikbest2015.ecommerce.dto.auth.AuthenticationResponse;
import com.gmail.merikbest2015.ecommerce.dto.user.UserResponse;
import com.gmail.merikbest2015.ecommerce.exception.InputFieldException;
import com.gmail.merikbest2015.ecommerce.service.AuthenticationService;
import java.util.Map;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Component;
import org.springframework.validation.BindingResult;

@Component
@RequiredArgsConstructor
public class AuthenticationMapper {

  private final AuthenticationService authenticationService;
  private final CommonMapper commonMapper;

  public AuthenticationResponse login(AuthenticationRequest request) {
    Map<String, Object> credentials =
        authenticationService.login(request.getEmail(), request.getPassword());
    AuthenticationResponse response = new AuthenticationResponse();
    response.setUser(commonMapper.convertToResponse(credentials.get("user"), UserResponse.class));
    response.setToken((String) credentials.get("token"));
    return response;
  }

  public String getEmailByPasswordResetCode(String code) {
    return authenticationService.getEmailByPasswordResetCode(code);
  }

  public String registerUser(
      String captcha, RegistrationRequest registrationRequest, BindingResult bindingResult) {
    if (bindingResult.hasErrors()) {
      throw new InputFieldException(bindingResult);
    }
    User user = commonMapper.convertToEntity(registrationRequest, User.class);
    return authenticationService.registerUser(user, captcha, registrationRequest.getPassword2());
  }

  public String activateUser(String code) {
    return authenticationService.activateUser(code);
  }

  public String sendPasswordResetCode(String email) {
    return authenticationService.sendPasswordResetCode(email);
  }

  public String passwordReset(String email, PasswordResetRequest passwordReset) {
    return authenticationService.passwordReset(
        email, passwordReset.getPassword(), passwordReset.getPassword2());
  }

  public String passwordReset(
      String email, PasswordResetRequest passwordReset, BindingResult bindingResult) {
    if (bindingResult.hasErrors()) {
      throw new InputFieldException(bindingResult);
    } else {
      return authenticationService.passwordReset(
          email, passwordReset.getPassword(), passwordReset.getPassword2());
    }
  }
}
------[0m
[0m2025-06-16 21:22:46 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java[0m
[0m2025-06-16 21:22:46 [0;34m[DEBUG][0m   FILE_STATUS (CommonMapper.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:46 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java, FILE_NAME: CommonMapper.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:46 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:46 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:46 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java][0m
[0m2025-06-16 21:22:47 [0;34m[INFO][0m    - File:[0;37m[CommonMapper.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:47 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.mapper;

import com.gmail.merikbest2015.ecommerce.dto.HeaderResponse;
import java.util.List;
import java.util.stream.Collectors;
import lombok.RequiredArgsConstructor;
import org.modelmapper.ModelMapper;
import org.springframework.http.HttpHeaders;
import org.springframework.stereotype.Component;

@Component
@RequiredArgsConstructor
public class CommonMapper {

  private final ModelMapper modelMapper;

  <T, S> S convertToEntity(T data, Class<S> type) {
    return modelMapper.map(data, type);
  }

  <T, S> S convertToResponse(T data, Class<S> type) {
    return modelMapper.map(data, type);
  }

  <T, S> List<S> convertToResponseList(List<T> lists, Class<S> type) {
    return lists.stream().map(list -> convertToResponse(list, type)).collect(Collectors.toList());
  }

  <T, S> HeaderResponse<S> getHeaderResponse(
      List<T> orders, Integer totalPages, Long totalElements, Class<S> type) {
    List<S> orderResponses = convertToResponseList(orders, type);
    HttpHeaders responseHeaders = new HttpHeaders();
    responseHeaders.add("page-total-count", String.valueOf(totalPages));
    responseHeaders.add("page-total-elements", String.valueOf(totalElements));
    return new HeaderResponse<S>(orderResponses, responseHeaders);
  }
}
------[0m
[0m2025-06-16 21:22:47 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.mapper;

import com.gmail.merikbest2015.ecommerce.dto.HeaderResponse;
import java.util.List;
import java.util.stream.Collectors;
import lombok.RequiredArgsConstructor;
import org.modelmapper.ModelMapper;
import org.springframework.http.HttpHeaders;
import org.springframework.stereotype.Component;

@Component
@RequiredArgsConstructor
public class CommonMapper {

  private final ModelMapper modelMapper;

  <T, S> S convertToEntity(T data, Class<S> type) {
    return modelMapper.map(data, type);
  }

  <T, S> S convertToResponse(T data, Class<S> type) {
    return modelMapper.map(data, type);
  }

  <T, S> List<S> convertToResponseList(List<T> lists, Class<S> type) {
    return lists.stream().map(list -> convertToResponse(list, type)).collect(Collectors.toList());
  }

  <T, S> HeaderResponse<S> getHeaderResponse(
      List<T> orders, Integer totalPages, Long totalElements, Class<S> type) {
    List<S> orderResponses = convertToResponseList(orders, type);
    HttpHeaders responseHeaders = new HttpHeaders();
    responseHeaders.add("page-total-count", String.valueOf(totalPages));
    responseHeaders.add("page-total-elements", String.valueOf(totalElements));
    return new HeaderResponse<S>(orderResponses, responseHeaders);
  }
}
------[0m
[0m2025-06-16 21:22:47 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java[0m
[0m2025-06-16 21:22:47 [0;34m[DEBUG][0m   FILE_STATUS (OrderMapper.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:47 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java, FILE_NAME: OrderMapper.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:47 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:47 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:47 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java][0m
[0m2025-06-16 21:22:47 [0;34m[INFO][0m    - File:[0;37m[OrderMapper.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:47 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.mapper;

import com.gmail.merikbest2015.ecommerce.domain.Order;
import com.gmail.merikbest2015.ecommerce.dto.HeaderResponse;
import com.gmail.merikbest2015.ecommerce.dto.order.OrderItemResponse;
import com.gmail.merikbest2015.ecommerce.dto.order.OrderRequest;
import com.gmail.merikbest2015.ecommerce.dto.order.OrderResponse;
import com.gmail.merikbest2015.ecommerce.exception.InputFieldException;
import com.gmail.merikbest2015.ecommerce.service.OrderService;
import java.util.List;
import lombok.RequiredArgsConstructor;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Component;
import org.springframework.validation.BindingResult;

@Component
@RequiredArgsConstructor
public class OrderMapper {

  private final CommonMapper commonMapper;
  private final OrderService orderService;

  public OrderResponse getOrderById(Long orderId) {
    return commonMapper.convertToResponse(orderService.getOrderById(orderId), OrderResponse.class);
  }

  public List<OrderItemResponse> getOrderItemsByOrderId(Long orderId) {
    return commonMapper.convertToResponseList(
        orderService.getOrderItemsByOrderId(orderId), OrderItemResponse.class);
  }

  public HeaderResponse<OrderResponse> getAllOrders(Pageable pageable) {
    Page<Order> orders = orderService.getAllOrders(pageable);
    return commonMapper.getHeaderResponse(
        orders.getContent(),
        orders.getTotalPages(),
        orders.getTotalElements(),
        OrderResponse.class);
  }

  public HeaderResponse<OrderResponse> getUserOrders(String email, Pageable pageable) {
    Page<Order> orders = orderService.getUserOrders(email, pageable);
    return commonMapper.getHeaderResponse(
        orders.getContent(),
        orders.getTotalPages(),
        orders.getTotalElements(),
        OrderResponse.class);
  }

  public String deleteOrder(Long orderId) {
    return orderService.deleteOrder(orderId);
  }

  public OrderResponse postOrder(OrderRequest orderRequest, BindingResult bindingResult) {
    if (bindingResult.hasErrors()) {
      throw new InputFieldException(bindingResult);
    }
    Order order =
        orderService.postOrder(
            commonMapper.convertToEntity(orderRequest, Order.class), orderRequest.getPerfumesId());
    return commonMapper.convertToResponse(order, OrderResponse.class);
  }
}
------[0m
[0m2025-06-16 21:22:47 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.mapper;

import com.gmail.merikbest2015.ecommerce.domain.Order;
import com.gmail.merikbest2015.ecommerce.dto.HeaderResponse;
import com.gmail.merikbest2015.ecommerce.dto.order.OrderItemResponse;
import com.gmail.merikbest2015.ecommerce.dto.order.OrderRequest;
import com.gmail.merikbest2015.ecommerce.dto.order.OrderResponse;
import com.gmail.merikbest2015.ecommerce.exception.InputFieldException;
import com.gmail.merikbest2015.ecommerce.service.OrderService;
import java.util.List;
import lombok.RequiredArgsConstructor;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Component;
import org.springframework.validation.BindingResult;

@Component
@RequiredArgsConstructor
public class OrderMapper {

  private final CommonMapper commonMapper;
  private final OrderService orderService;

  public OrderResponse getOrderById(Long orderId) {
    return commonMapper.convertToResponse(orderService.getOrderById(orderId), OrderResponse.class);
  }

  public List<OrderItemResponse> getOrderItemsByOrderId(Long orderId) {
    return commonMapper.convertToResponseList(
        orderService.getOrderItemsByOrderId(orderId), OrderItemResponse.class);
  }

  public HeaderResponse<OrderResponse> getAllOrders(Pageable pageable) {
    Page<Order> orders = orderService.getAllOrders(pageable);
    return commonMapper.getHeaderResponse(
        orders.getContent(),
        orders.getTotalPages(),
        orders.getTotalElements(),
        OrderResponse.class);
  }

  public HeaderResponse<OrderResponse> getUserOrders(String email, Pageable pageable) {
    Page<Order> orders = orderService.getUserOrders(email, pageable);
    return commonMapper.getHeaderResponse(
        orders.getContent(),
        orders.getTotalPages(),
        orders.getTotalElements(),
        OrderResponse.class);
  }

  public String deleteOrder(Long orderId) {
    return orderService.deleteOrder(orderId);
  }

  public OrderResponse postOrder(OrderRequest orderRequest, BindingResult bindingResult) {
    if (bindingResult.hasErrors()) {
      throw new InputFieldException(bindingResult);
    }
    Order order =
        orderService.postOrder(
            commonMapper.convertToEntity(orderRequest, Order.class), orderRequest.getPerfumesId());
    return commonMapper.convertToResponse(order, OrderResponse.class);
  }
}
------[0m
[0m2025-06-16 21:22:47 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java[0m
[0m2025-06-16 21:22:47 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeMapper.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:47 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java, FILE_NAME: PerfumeMapper.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:47 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:47 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:47 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java][0m
[0m2025-06-16 21:22:48 [0;34m[INFO][0m    - File:[0;37m[PerfumeMapper.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:48 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.mapper;

import com.gmail.merikbest2015.ecommerce.domain.Perfume;
import com.gmail.merikbest2015.ecommerce.dto.HeaderResponse;
import com.gmail.merikbest2015.ecommerce.dto.perfume.FullPerfumeResponse;
import com.gmail.merikbest2015.ecommerce.dto.perfume.PerfumeRequest;
import com.gmail.merikbest2015.ecommerce.dto.perfume.PerfumeResponse;
import com.gmail.merikbest2015.ecommerce.dto.perfume.PerfumeSearchRequest;
import com.gmail.merikbest2015.ecommerce.enums.SearchPerfume;
import com.gmail.merikbest2015.ecommerce.exception.InputFieldException;
import com.gmail.merikbest2015.ecommerce.repository.projection.PerfumeProjection;
import com.gmail.merikbest2015.ecommerce.service.PerfumeService;
import java.util.List;
import lombok.RequiredArgsConstructor;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Component;
import org.springframework.validation.BindingResult;
import org.springframework.web.multipart.MultipartFile;

@Component
@RequiredArgsConstructor
public class PerfumeMapper {

  private final CommonMapper commonMapper;
  private final PerfumeService perfumeService;

  public FullPerfumeResponse getPerfumeById(Long perfumeId) {
    return commonMapper.convertToResponse(
        perfumeService.getPerfumeById(perfumeId), FullPerfumeResponse.class);
  }

  public List<PerfumeResponse> getPerfumesByIds(List<Long> perfumesId) {
    return commonMapper.convertToResponseList(
        perfumeService.getPerfumesByIds(perfumesId), PerfumeResponse.class);
  }

  public HeaderResponse<PerfumeResponse> getAllPerfumes(Pageable pageable) {
    Page<PerfumeProjection> perfumes = perfumeService.getAllPerfumes(pageable);
    return commonMapper.getHeaderResponse(
        perfumes.getContent(),
        perfumes.getTotalPages(),
        perfumes.getTotalElements(),
        PerfumeResponse.class);
  }

  public HeaderResponse<PerfumeResponse> findPerfumesByFilterParams(
      PerfumeSearchRequest filter, Pageable pageable) {
    Page<PerfumeProjection> perfumes = perfumeService.findPerfumesByFilterParams(filter, pageable);
    return commonMapper.getHeaderResponse(
        perfumes.getContent(),
        perfumes.getTotalPages(),
        perfumes.getTotalElements(),
        PerfumeResponse.class);
  }

  public List<PerfumeResponse> findByPerfumer(String perfumer) {
    return commonMapper.convertToResponseList(
        perfumeService.findByPerfumer(perfumer), PerfumeResponse.class);
  }

  public List<PerfumeResponse> findByPerfumeGender(String perfumeGender) {
    return commonMapper.convertToResponseList(
        perfumeService.findByPerfumeGender(perfumeGender), PerfumeResponse.class);
  }

  public HeaderResponse<PerfumeResponse> findByInputText(
      SearchPerfume searchType, String text, Pageable pageable) {
    Page<PerfumeProjection> perfumes = perfumeService.findByInputText(searchType, text, pageable);
    return commonMapper.getHeaderResponse(
        perfumes.getContent(),
        perfumes.getTotalPages(),
        perfumes.getTotalElements(),
        PerfumeResponse.class);
  }

  public FullPerfumeResponse savePerfume(
      PerfumeRequest perfumeRequest, MultipartFile file, BindingResult bindingResult) {
    if (bindingResult.hasErrors()) {
      throw new InputFieldException(bindingResult);
    }
    Perfume perfume = commonMapper.convertToEntity(perfumeRequest, Perfume.class);
    return commonMapper.convertToResponse(
        perfumeService.savePerfume(perfume, file), FullPerfumeResponse.class);
  }

  public String deletePerfume(Long perfumeId) {
    return perfumeService.deletePerfume(perfumeId);
  }
}
------[0m
[0m2025-06-16 21:22:48 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.mapper;

import com.gmail.merikbest2015.ecommerce.domain.Perfume;
import com.gmail.merikbest2015.ecommerce.dto.HeaderResponse;
import com.gmail.merikbest2015.ecommerce.dto.perfume.FullPerfumeResponse;
import com.gmail.merikbest2015.ecommerce.dto.perfume.PerfumeRequest;
import com.gmail.merikbest2015.ecommerce.dto.perfume.PerfumeResponse;
import com.gmail.merikbest2015.ecommerce.dto.perfume.PerfumeSearchRequest;
import com.gmail.merikbest2015.ecommerce.enums.SearchPerfume;
import com.gmail.merikbest2015.ecommerce.exception.InputFieldException;
import com.gmail.merikbest2015.ecommerce.repository.projection.PerfumeProjection;
import com.gmail.merikbest2015.ecommerce.service.PerfumeService;
import java.util.List;
import lombok.RequiredArgsConstructor;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Component;
import org.springframework.validation.BindingResult;
import org.springframework.web.multipart.MultipartFile;

@Component
@RequiredArgsConstructor
public class PerfumeMapper {

  private final CommonMapper commonMapper;
  private final PerfumeService perfumeService;

  public FullPerfumeResponse getPerfumeById(Long perfumeId) {
    return commonMapper.convertToResponse(
        perfumeService.getPerfumeById(perfumeId), FullPerfumeResponse.class);
  }

  public List<PerfumeResponse> getPerfumesByIds(List<Long> perfumesId) {
    return commonMapper.convertToResponseList(
        perfumeService.getPerfumesByIds(perfumesId), PerfumeResponse.class);
  }

  public HeaderResponse<PerfumeResponse> getAllPerfumes(Pageable pageable) {
    Page<PerfumeProjection> perfumes = perfumeService.getAllPerfumes(pageable);
    return commonMapper.getHeaderResponse(
        perfumes.getContent(),
        perfumes.getTotalPages(),
        perfumes.getTotalElements(),
        PerfumeResponse.class);
  }

  public HeaderResponse<PerfumeResponse> findPerfumesByFilterParams(
      PerfumeSearchRequest filter, Pageable pageable) {
    Page<PerfumeProjection> perfumes = perfumeService.findPerfumesByFilterParams(filter, pageable);
    return commonMapper.getHeaderResponse(
        perfumes.getContent(),
        perfumes.getTotalPages(),
        perfumes.getTotalElements(),
        PerfumeResponse.class);
  }

  public List<PerfumeResponse> findByPerfumer(String perfumer) {
    return commonMapper.convertToResponseList(
        perfumeService.findByPerfumer(perfumer), PerfumeResponse.class);
  }

  public List<PerfumeResponse> findByPerfumeGender(String perfumeGender) {
    return commonMapper.convertToResponseList(
        perfumeService.findByPerfumeGender(perfumeGender), PerfumeResponse.class);
  }

  public HeaderResponse<PerfumeResponse> findByInputText(
      SearchPerfume searchType, String text, Pageable pageable) {
    Page<PerfumeProjection> perfumes = perfumeService.findByInputText(searchType, text, pageable);
    return commonMapper.getHeaderResponse(
        perfumes.getContent(),
        perfumes.getTotalPages(),
        perfumes.getTotalElements(),
        PerfumeResponse.class);
  }

  public FullPerfumeResponse savePerfume(
      PerfumeRequest perfumeRequest, MultipartFile file, BindingResult bindingResult) {
    if (bindingResult.hasErrors()) {
      throw new InputFieldException(bindingResult);
    }
    Perfume perfume = commonMapper.convertToEntity(perfumeRequest, Perfume.class);
    return commonMapper.convertToResponse(
        perfumeService.savePerfume(perfume, file), FullPerfumeResponse.class);
  }

  public String deletePerfume(Long perfumeId) {
    return perfumeService.deletePerfume(perfumeId);
  }
}
------[0m
[0m2025-06-16 21:22:48 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java[0m
[0m2025-06-16 21:22:48 [0;34m[DEBUG][0m   FILE_STATUS (ReviewMapper.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:48 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java, FILE_NAME: ReviewMapper.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:48 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:48 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:48 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java][0m
[0m2025-06-16 21:22:48 [0;34m[INFO][0m    - File:[0;37m[ReviewMapper.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:48 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.mapper;

import com.gmail.merikbest2015.ecommerce.domain.Review;
import com.gmail.merikbest2015.ecommerce.dto.review.ReviewRequest;
import com.gmail.merikbest2015.ecommerce.dto.review.ReviewResponse;
import com.gmail.merikbest2015.ecommerce.exception.InputFieldException;
import com.gmail.merikbest2015.ecommerce.service.ReviewService;
import java.util.List;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Component;
import org.springframework.validation.BindingResult;

@Component
@RequiredArgsConstructor
public class ReviewMapper {

  private final CommonMapper commonMapper;
  private final ReviewService reviewService;

  public List<ReviewResponse> getReviewsByPerfumeId(Long perfumeId) {
    return commonMapper.convertToResponseList(
        reviewService.getReviewsByPerfumeId(perfumeId), ReviewResponse.class);
  }

  public ReviewResponse addReviewToPerfume(
      ReviewRequest reviewRequest, Long perfumeId, BindingResult bindingResult) {
    if (bindingResult.hasErrors()) {
      throw new InputFieldException(bindingResult);
    }
    Review review = commonMapper.convertToEntity(reviewRequest, Review.class);
    return commonMapper.convertToResponse(
        reviewService.addReviewToPerfume(review, perfumeId), ReviewResponse.class);
  }
}
------[0m
[0m2025-06-16 21:22:48 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.mapper;

import com.gmail.merikbest2015.ecommerce.domain.Review;
import com.gmail.merikbest2015.ecommerce.dto.review.ReviewRequest;
import com.gmail.merikbest2015.ecommerce.dto.review.ReviewResponse;
import com.gmail.merikbest2015.ecommerce.exception.InputFieldException;
import com.gmail.merikbest2015.ecommerce.service.ReviewService;
import java.util.List;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Component;
import org.springframework.validation.BindingResult;

@Component
@RequiredArgsConstructor
public class ReviewMapper {

  private final CommonMapper commonMapper;
  private final ReviewService reviewService;

  public List<ReviewResponse> getReviewsByPerfumeId(Long perfumeId) {
    return commonMapper.convertToResponseList(
        reviewService.getReviewsByPerfumeId(perfumeId), ReviewResponse.class);
  }

  public ReviewResponse addReviewToPerfume(
      ReviewRequest reviewRequest, Long perfumeId, BindingResult bindingResult) {
    if (bindingResult.hasErrors()) {
      throw new InputFieldException(bindingResult);
    }
    Review review = commonMapper.convertToEntity(reviewRequest, Review.class);
    return commonMapper.convertToResponse(
        reviewService.addReviewToPerfume(review, perfumeId), ReviewResponse.class);
  }
}
------[0m
[0m2025-06-16 21:22:48 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java[0m
[0m2025-06-16 21:22:48 [0;34m[DEBUG][0m   FILE_STATUS (UserMapper.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:48 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java, FILE_NAME: UserMapper.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:48 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:48 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:48 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java][0m
[0m2025-06-16 21:22:49 [0;34m[INFO][0m    - File:[0;37m[UserMapper.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:49 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.mapper;

import com.gmail.merikbest2015.ecommerce.domain.User;
import com.gmail.merikbest2015.ecommerce.dto.HeaderResponse;
import com.gmail.merikbest2015.ecommerce.dto.perfume.PerfumeResponse;
import com.gmail.merikbest2015.ecommerce.dto.user.BaseUserResponse;
import com.gmail.merikbest2015.ecommerce.dto.user.UpdateUserRequest;
import com.gmail.merikbest2015.ecommerce.dto.user.UserResponse;
import com.gmail.merikbest2015.ecommerce.exception.InputFieldException;
import com.gmail.merikbest2015.ecommerce.service.UserService;
import java.util.List;
import lombok.RequiredArgsConstructor;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Component;
import org.springframework.validation.BindingResult;

@Component
@RequiredArgsConstructor
public class UserMapper {

  private final CommonMapper commonMapper;
  private final UserService userService;

  public UserResponse getUserById(Long userId) {
    return commonMapper.convertToResponse(userService.getUserById(userId), UserResponse.class);
  }

  public UserResponse getUserInfo(String email) {
    return commonMapper.convertToResponse(userService.getUserInfo(email), UserResponse.class);
  }

  public List<PerfumeResponse> getCart(List<Long> perfumesIds) {
    return commonMapper.convertToResponseList(
        userService.getCart(perfumesIds), PerfumeResponse.class);
  }

  public HeaderResponse<BaseUserResponse> getAllUsers(Pageable pageable) {
    Page<User> users = userService.getAllUsers(pageable);
    return commonMapper.getHeaderResponse(
        users.getContent(),
        users.getTotalPages(),
        users.getTotalElements(),
        BaseUserResponse.class);
  }

  public UserResponse updateUserInfo(
      String email, UpdateUserRequest userRequest, BindingResult bindingResult) {
    if (bindingResult.hasErrors()) {
      throw new InputFieldException(bindingResult);
    }
    User user = commonMapper.convertToEntity(userRequest, User.class);
    return commonMapper.convertToResponse(
        userService.updateUserInfo(email, user), UserResponse.class);
  }
}
------[0m
[0m2025-06-16 21:22:49 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.mapper;

import com.gmail.merikbest2015.ecommerce.domain.User;
import com.gmail.merikbest2015.ecommerce.dto.HeaderResponse;
import com.gmail.merikbest2015.ecommerce.dto.perfume.PerfumeResponse;
import com.gmail.merikbest2015.ecommerce.dto.user.BaseUserResponse;
import com.gmail.merikbest2015.ecommerce.dto.user.UpdateUserRequest;
import com.gmail.merikbest2015.ecommerce.dto.user.UserResponse;
import com.gmail.merikbest2015.ecommerce.exception.InputFieldException;
import com.gmail.merikbest2015.ecommerce.service.UserService;
import java.util.List;
import lombok.RequiredArgsConstructor;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Component;
import org.springframework.validation.BindingResult;

@Component
@RequiredArgsConstructor
public class UserMapper {

  private final CommonMapper commonMapper;
  private final UserService userService;

  public UserResponse getUserById(Long userId) {
    return commonMapper.convertToResponse(userService.getUserById(userId), UserResponse.class);
  }

  public UserResponse getUserInfo(String email) {
    return commonMapper.convertToResponse(userService.getUserInfo(email), UserResponse.class);
  }

  public List<PerfumeResponse> getCart(List<Long> perfumesIds) {
    return commonMapper.convertToResponseList(
        userService.getCart(perfumesIds), PerfumeResponse.class);
  }

  public HeaderResponse<BaseUserResponse> getAllUsers(Pageable pageable) {
    Page<User> users = userService.getAllUsers(pageable);
    return commonMapper.getHeaderResponse(
        users.getContent(),
        users.getTotalPages(),
        users.getTotalElements(),
        BaseUserResponse.class);
  }

  public UserResponse updateUserInfo(
      String email, UpdateUserRequest userRequest, BindingResult bindingResult) {
    if (bindingResult.hasErrors()) {
      throw new InputFieldException(bindingResult);
    }
    User user = commonMapper.convertToEntity(userRequest, User.class);
    return commonMapper.convertToResponse(
        userService.updateUserInfo(email, user), UserResponse.class);
  }
}
------[0m
[0m2025-06-16 21:22:49 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderItemRepository.java[0m
[0m2025-06-16 21:22:49 [0;34m[DEBUG][0m   FILE_STATUS (OrderItemRepository.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:49 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderItemRepository.java, FILE_NAME: OrderItemRepository.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:49 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:49 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:49 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderItemRepository.java][0m
[0m2025-06-16 21:22:49 [0;34m[INFO][0m    - File:[0;37m[OrderItemRepository.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:49 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.repository;

import com.gmail.merikbest2015.ecommerce.domain.OrderItem;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;

@Repository
public interface OrderItemRepository extends JpaRepository<OrderItem, Long> {}
------[0m
[0m2025-06-16 21:22:49 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.repository;

import com.gmail.merikbest2015.ecommerce.domain.OrderItem;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;

@Repository
public interface OrderItemRepository extends JpaRepository<OrderItem, Long> {}
------[0m
[0m2025-06-16 21:22:49 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderRepository.java[0m
[0m2025-06-16 21:22:49 [0;34m[DEBUG][0m   FILE_STATUS (OrderRepository.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:49 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderRepository.java, FILE_NAME: OrderRepository.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:49 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:49 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:49 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderRepository.java][0m
[0m2025-06-16 21:22:50 [0;34m[INFO][0m    - File:[0;37m[OrderRepository.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:50 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.repository;

import com.gmail.merikbest2015.ecommerce.domain.Order;
import java.util.List;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;

@Repository
public interface OrderRepository extends JpaRepository<Order, Long> {

  List<Order> findAllByOrderByIdAsc();

  Page<Order> findAllByOrderByIdAsc(Pageable pageable);

  List<Order> findOrderByEmail(String email);

  Page<Order> findOrderByEmail(String email, Pageable pageable);
}
------[0m
[0m2025-06-16 21:22:50 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.repository;

import com.gmail.merikbest2015.ecommerce.domain.Order;
import java.util.List;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;

@Repository
public interface OrderRepository extends JpaRepository<Order, Long> {

  List<Order> findAllByOrderByIdAsc();

  Page<Order> findAllByOrderByIdAsc(Pageable pageable);

  List<Order> findOrderByEmail(String email);

  Page<Order> findOrderByEmail(String email, Pageable pageable);
}
------[0m
[0m2025-06-16 21:22:50 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java[0m
[0m2025-06-16 21:22:50 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeRepository.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:50 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java, FILE_NAME: PerfumeRepository.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:50 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:50 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:50 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java][0m
[0m2025-06-16 21:22:50 [0;34m[INFO][0m    - File:[0;37m[PerfumeRepository.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:50 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.repository;

import com.gmail.merikbest2015.ecommerce.domain.Perfume;
import com.gmail.merikbest2015.ecommerce.repository.projection.PerfumeProjection;
import java.util.List;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.stereotype.Repository;

@Repository
public interface PerfumeRepository extends JpaRepository<Perfume, Long> {

  List<PerfumeProjection> findAllByOrderByIdAsc();

  @Query("SELECT perfume FROM Perfume perfume ORDER BY perfume.id ASC")
  Page<PerfumeProjection> findAllByOrderByIdAsc(Pageable pageable);

  List<Perfume> findByPerfumerOrderByPriceDesc(String perfumer);

  List<Perfume> findByPerfumeGenderOrderByPriceDesc(String perfumeGender);

  List<Perfume> findByIdIn(List<Long> perfumesIds);

  @Query("SELECT perfume FROM Perfume perfume WHERE perfume.id IN :perfumesIds")
  List<PerfumeProjection> getPerfumesByIds(List<Long> perfumesIds);

  @Query(
      "SELECT perfume FROM Perfume perfume WHERE (coalesce(:perfumers, null) IS NULL OR"
          + " perfume.perfumer IN :perfumers) AND (coalesce(:genders, null) IS NULL OR"
          + " perfume.perfumeGender IN :genders) AND (coalesce(:priceStart, null) IS NULL OR"
          + " perfume.price BETWEEN :priceStart AND :priceEnd) ORDER BY CASE WHEN :sortByPrice ="
          + " true THEN perfume.price ELSE -perfume.price END ASC")
  Page<PerfumeProjection> findPerfumesByFilterParams(
      List<String> perfumers,
      List<String> genders,
      Integer priceStart,
      Integer priceEnd,
      boolean sortByPrice,
      Pageable pageable);

  @Query(
      "SELECT perfume FROM Perfume perfume "
          + "WHERE UPPER(perfume.perfumer) LIKE UPPER(CONCAT('%',:text,'%')) "
          + "ORDER BY perfume.price DESC")
  Page<PerfumeProjection> findByPerfumer(String text, Pageable pageable);

  @Query(
      "SELECT perfume FROM Perfume perfume "
          + "WHERE UPPER(perfume.perfumeTitle) LIKE UPPER(CONCAT('%',:text,'%')) "
          + "ORDER BY perfume.price DESC")
  Page<PerfumeProjection> findByPerfumeTitle(String text, Pageable pageable);

  @Query(
      "SELECT perfume FROM Perfume perfume "
          + "WHERE UPPER(perfume.country) LIKE UPPER(CONCAT('%',:text,'%')) "
          + "ORDER BY perfume.price DESC")
  Page<PerfumeProjection> findByManufacturerCountry(String text, Pageable pageable);
}
------[0m
[0m2025-06-16 21:22:50 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.repository;

import com.gmail.merikbest2015.ecommerce.domain.Perfume;
import com.gmail.merikbest2015.ecommerce.repository.projection.PerfumeProjection;
import java.util.List;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.stereotype.Repository;

@Repository
public interface PerfumeRepository extends JpaRepository<Perfume, Long> {

  List<PerfumeProjection> findAllByOrderByIdAsc();

  @Query("SELECT perfume FROM Perfume perfume ORDER BY perfume.id ASC")
  Page<PerfumeProjection> findAllByOrderByIdAsc(Pageable pageable);

  List<Perfume> findByPerfumerOrderByPriceDesc(String perfumer);

  List<Perfume> findByPerfumeGenderOrderByPriceDesc(String perfumeGender);

  List<Perfume> findByIdIn(List<Long> perfumesIds);

  @Query("SELECT perfume FROM Perfume perfume WHERE perfume.id IN :perfumesIds")
  List<PerfumeProjection> getPerfumesByIds(List<Long> perfumesIds);

  @Query(
      "SELECT perfume FROM Perfume perfume WHERE (coalesce(:perfumers, null) IS NULL OR"
          + " perfume.perfumer IN :perfumers) AND (coalesce(:genders, null) IS NULL OR"
          + " perfume.perfumeGender IN :genders) AND (coalesce(:priceStart, null) IS NULL OR"
          + " perfume.price BETWEEN :priceStart AND :priceEnd) ORDER BY CASE WHEN :sortByPrice ="
          + " true THEN perfume.price ELSE -perfume.price END ASC")
  Page<PerfumeProjection> findPerfumesByFilterParams(
      List<String> perfumers,
      List<String> genders,
      Integer priceStart,
      Integer priceEnd,
      boolean sortByPrice,
      Pageable pageable);

  @Query(
      "SELECT perfume FROM Perfume perfume "
          + "WHERE UPPER(perfume.perfumer) LIKE UPPER(CONCAT('%',:text,'%')) "
          + "ORDER BY perfume.price DESC")
  Page<PerfumeProjection> findByPerfumer(String text, Pageable pageable);

  @Query(
      "SELECT perfume FROM Perfume perfume "
          + "WHERE UPPER(perfume.perfumeTitle) LIKE UPPER(CONCAT('%',:text,'%')) "
          + "ORDER BY perfume.price DESC")
  Page<PerfumeProjection> findByPerfumeTitle(String text, Pageable pageable);

  @Query(
      "SELECT perfume FROM Perfume perfume "
          + "WHERE UPPER(perfume.country) LIKE UPPER(CONCAT('%',:text,'%')) "
          + "ORDER BY perfume.price DESC")
  Page<PerfumeProjection> findByManufacturerCountry(String text, Pageable pageable);
}
------[0m
[0m2025-06-16 21:22:50 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/ReviewRepository.java[0m
[0m2025-06-16 21:22:50 [0;34m[DEBUG][0m   FILE_STATUS (ReviewRepository.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:50 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/ReviewRepository.java, FILE_NAME: ReviewRepository.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:50 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:50 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:50 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/ReviewRepository.java][0m
[0m2025-06-16 21:22:51 [0;34m[INFO][0m    - File:[0;37m[ReviewRepository.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:51 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.repository;

import com.gmail.merikbest2015.ecommerce.domain.Review;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;

@Repository
public interface ReviewRepository extends JpaRepository<Review, Long> {}
------[0m
[0m2025-06-16 21:22:51 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.repository;

import com.gmail.merikbest2015.ecommerce.domain.Review;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;

@Repository
public interface ReviewRepository extends JpaRepository<Review, Long> {}
------[0m
[0m2025-06-16 21:22:51 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/UserRepository.java[0m
[0m2025-06-16 21:22:51 [0;34m[DEBUG][0m   FILE_STATUS (UserRepository.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:51 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/UserRepository.java, FILE_NAME: UserRepository.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:51 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:51 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:51 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/UserRepository.java][0m
[0m2025-06-16 21:22:52 [0;34m[INFO][0m    - File:[0;37m[UserRepository.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:52 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.repository;

import com.gmail.merikbest2015.ecommerce.domain.User;
import java.util.List;
import java.util.Optional;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.stereotype.Repository;

@Repository
public interface UserRepository extends JpaRepository<User, Long> {

  List<User> findAllByOrderByIdAsc();

  Page<User> findAllByOrderByIdAsc(Pageable pageable);

  Optional<User> findByActivationCode(String code);

  Optional<User> findByEmail(String email);

  @Query("SELECT user.email FROM User user WHERE user.passwordResetCode = :code")
  Optional<String> getEmailByPasswordResetCode(String code);
}
------[0m
[0m2025-06-16 21:22:52 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.repository;

import com.gmail.merikbest2015.ecommerce.domain.User;
import java.util.List;
import java.util.Optional;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.stereotype.Repository;

@Repository
public interface UserRepository extends JpaRepository<User, Long> {

  List<User> findAllByOrderByIdAsc();

  Page<User> findAllByOrderByIdAsc(Pageable pageable);

  Optional<User> findByActivationCode(String code);

  Optional<User> findByEmail(String email);

  @Query("SELECT user.email FROM User user WHERE user.passwordResetCode = :code")
  Optional<String> getEmailByPasswordResetCode(String code);
}
------[0m
[0m2025-06-16 21:22:52 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java[0m
[0m2025-06-16 21:22:52 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeProjection.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:52 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java, FILE_NAME: PerfumeProjection.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:52 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:52 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:52 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java][0m
[0m2025-06-16 21:22:52 [0;34m[INFO][0m    - File:[0;37m[PerfumeProjection.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:52 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.repository.projection;

import org.springframework.beans.factory.annotation.Value;

public interface PerfumeProjection {
  Long getId();

  String getPerfumeTitle();

  String getPerfumer();

  Integer getPrice();

  String getFilename();

  Double getPerfumeRating();

  @Value("#{target.reviews.size()}")
  Integer getReviewsCount();

  void setPerfumer(String perfumer);

  void setPerfumeGender(String perfumeGender);

  void setPrice(Integer price);
}
------[0m
[0m2025-06-16 21:22:52 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.repository.projection;

import org.springframework.beans.factory.annotation.Value;

public interface PerfumeProjection {
  Long getId();

  String getPerfumeTitle();

  String getPerfumer();

  Integer getPrice();

  String getFilename();

  Double getPerfumeRating();

  @Value("#{target.reviews.size()}")
  Integer getReviewsCount();

  void setPerfumer(String perfumer);

  void setPerfumeGender(String perfumeGender);

  void setPrice(Integer price);
}
------[0m
[0m2025-06-16 21:22:52 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtAuthenticationException.java[0m
[0m2025-06-16 21:22:52 [0;34m[DEBUG][0m   FILE_STATUS (JwtAuthenticationException.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:52 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtAuthenticationException.java, FILE_NAME: JwtAuthenticationException.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:52 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:52 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:52 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtAuthenticationException.java][0m
[0m2025-06-16 21:22:53 [0;34m[INFO][0m    - File:[0;37m[JwtAuthenticationException.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:53 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.security;

import lombok.Getter;
import org.springframework.http.HttpStatus;
import org.springframework.security.core.AuthenticationException;

@Getter
public class JwtAuthenticationException extends AuthenticationException {

  private HttpStatus httpStatus;

  public JwtAuthenticationException(String msg) {
    super(msg);
  }

  public JwtAuthenticationException(String msg, HttpStatus httpStatus) {
    super(msg);
    this.httpStatus = httpStatus;
  }
}
------[0m
[0m2025-06-16 21:22:53 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.security;

import lombok.Getter;
import org.springframework.http.HttpStatus;
import org.springframework.security.core.AuthenticationException;

@Getter
public class JwtAuthenticationException extends AuthenticationException {

  private HttpStatus httpStatus;

  public JwtAuthenticationException(String msg) {
    super(msg);
  }

  public JwtAuthenticationException(String msg, HttpStatus httpStatus) {
    super(msg);
    this.httpStatus = httpStatus;
  }
}
------[0m
[0m2025-06-16 21:22:53 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtConfigurer.java[0m
[0m2025-06-16 21:22:53 [0;34m[DEBUG][0m   FILE_STATUS (JwtConfigurer.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:53 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtConfigurer.java, FILE_NAME: JwtConfigurer.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:53 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:53 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:53 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtConfigurer.java][0m
[0m2025-06-16 21:22:53 [0;34m[INFO][0m    - File:[0;37m[JwtConfigurer.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:53 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.security;

import lombok.RequiredArgsConstructor;
import org.springframework.security.config.annotation.SecurityConfigurerAdapter;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.web.DefaultSecurityFilterChain;
import org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;
import org.springframework.stereotype.Component;

@Component
@RequiredArgsConstructor
public class JwtConfigurer
    extends SecurityConfigurerAdapter<DefaultSecurityFilterChain, HttpSecurity> {

  private final JwtFilter jwtFilter;

  @Override
  public void configure(HttpSecurity builder) {
    builder.addFilterBefore(jwtFilter, UsernamePasswordAuthenticationFilter.class);
  }
}
------[0m
[0m2025-06-16 21:22:53 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.security;

import lombok.RequiredArgsConstructor;
import org.springframework.security.config.annotation.SecurityConfigurerAdapter;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.web.DefaultSecurityFilterChain;
import org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;
import org.springframework.stereotype.Component;

@Component
@RequiredArgsConstructor
public class JwtConfigurer
    extends SecurityConfigurerAdapter<DefaultSecurityFilterChain, HttpSecurity> {

  private final JwtFilter jwtFilter;

  @Override
  public void configure(HttpSecurity builder) {
    builder.addFilterBefore(jwtFilter, UsernamePasswordAuthenticationFilter.class);
  }
}
------[0m
[0m2025-06-16 21:22:53 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java[0m
[0m2025-06-16 21:22:53 [0;34m[DEBUG][0m   FILE_STATUS (JwtFilter.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:53 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java, FILE_NAME: JwtFilter.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:53 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:53 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:53 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java][0m
[0m2025-06-16 21:22:54 [0;34m[INFO][0m    - File:[0;37m[JwtFilter.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:54 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.security;

import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.INVALID_JWT_TOKEN;

import jakarta.servlet.FilterChain;
import jakarta.servlet.ServletException;
import jakarta.servlet.ServletRequest;
import jakarta.servlet.ServletResponse;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import java.io.IOException;
import lombok.RequiredArgsConstructor;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.stereotype.Component;
import org.springframework.web.filter.GenericFilterBean;

@Component
@RequiredArgsConstructor
public class JwtFilter extends GenericFilterBean {

  private final JwtProvider jwtProvider;

  @Override
  public void doFilter(
      ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)
      throws IOException, ServletException {
    String token = jwtProvider.resolveToken((HttpServletRequest) servletRequest);

    try {
      if (token != null && jwtProvider.validateToken(token)) {
        Authentication authentication = jwtProvider.getAuthentication(token);

        if (authentication != null) {
          SecurityContextHolder.getContext().setAuthentication(authentication);
        }
      }
    } catch (JwtAuthenticationException e) {
      SecurityContextHolder.clearContext();
      ((HttpServletResponse) servletResponse).sendError(e.getHttpStatus().value());
      throw new JwtAuthenticationException(INVALID_JWT_TOKEN);
    }
    filterChain.doFilter(servletRequest, servletResponse);
  }
}
------[0m
[0m2025-06-16 21:22:54 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.security;

import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.INVALID_JWT_TOKEN;

import jakarta.servlet.FilterChain;
import jakarta.servlet.ServletException;
import jakarta.servlet.ServletRequest;
import jakarta.servlet.ServletResponse;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import java.io.IOException;
import lombok.RequiredArgsConstructor;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.stereotype.Component;
import org.springframework.web.filter.GenericFilterBean;

@Component
@RequiredArgsConstructor
public class JwtFilter extends GenericFilterBean {

  private final JwtProvider jwtProvider;

  @Override
  public void doFilter(
      ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)
      throws IOException, ServletException {
    String token = jwtProvider.resolveToken((HttpServletRequest) servletRequest);

    try {
      if (token != null && jwtProvider.validateToken(token)) {
        Authentication authentication = jwtProvider.getAuthentication(token);

        if (authentication != null) {
          SecurityContextHolder.getContext().setAuthentication(authentication);
        }
      }
    } catch (JwtAuthenticationException e) {
      SecurityContextHolder.clearContext();
      ((HttpServletResponse) servletResponse).sendError(e.getHttpStatus().value());
      throw new JwtAuthenticationException(INVALID_JWT_TOKEN);
    }
    filterChain.doFilter(servletRequest, servletResponse);
  }
}
------[0m
[0m2025-06-16 21:22:54 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java[0m
[0m2025-06-16 21:22:54 [0;34m[DEBUG][0m   FILE_STATUS (JwtProvider.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:54 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java, FILE_NAME: JwtProvider.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:54 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:54 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:54 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java][0m
[0m2025-06-16 21:22:54 [0;34m[INFO][0m    - File:[0;37m[JwtProvider.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:54 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.security;

import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.INVALID_JWT_TOKEN;

import io.jsonwebtoken.Claims;
import io.jsonwebtoken.Jws;
import io.jsonwebtoken.JwtException;
import io.jsonwebtoken.Jwts;
import io.jsonwebtoken.security.Keys;
import jakarta.annotation.PostConstruct;
import jakarta.servlet.http.HttpServletRequest;
import java.nio.charset.StandardCharsets;
import java.util.Date;
import javax.crypto.SecretKey;
import lombok.RequiredArgsConstructor;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Lazy;
import org.springframework.http.HttpStatus;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.stereotype.Component;

@Component
@RequiredArgsConstructor
public class JwtProvider {
  @Qualifier("userDetailsServiceImpl")
  @Lazy
  private final UserDetailsService userDetailsService;

  @Value("${jwt.header}")
  private String authorizationHeader;

  @Value("${jwt.secret}")
  private String secretKeyString; // Renomeado para evitar confusão com o objeto SecretKey

  @Value("${jwt.expiration}")
  private long validityInMilliseconds;

  private SecretKey actualSecretKey;

  @PostConstruct
  protected void init() {
    // Assumindo que secretKeyString é a string secreta literal das propriedades
    byte[] keyBytes = secretKeyString.getBytes(StandardCharsets.UTF_8);
    this.actualSecretKey = Keys.hmacShaKeyFor(keyBytes);
  }

  public String createToken(String username, String role) {
    Date now = new Date();
    Date validity = new Date(now.getTime() + validityInMilliseconds * 1000);

    return Jwts.builder()
        .subject(username) // Método atualizado
        .claim("role", role) // Método atualizado para adicionar claims customizadas
        .issuedAt(now) // Método atualizado
        .expiration(validity) // Método atualizado
        .signWith(actualSecretKey, Jwts.SIG.HS256)
        .compact();
  }

  public boolean validateToken(String token) {
    try {
      Jws<Claims> claimsJws =
          Jwts.parser().verifyWith(actualSecretKey).build().parseSignedClaims(token);
      return !claimsJws.getPayload().getExpiration().before(new Date());
    } catch (JwtException | IllegalArgumentException exception) {
      throw new JwtAuthenticationException(INVALID_JWT_TOKEN, HttpStatus.UNAUTHORIZED);
    }
  }

  public Authentication getAuthentication(String token) {
    UserDetails userDetails = this.userDetailsService.loadUserByUsername(getUsername(token));
    return new UsernamePasswordAuthenticationToken(userDetails, "", userDetails.getAuthorities());
  }

  public String getUsername(String token) {
    return Jwts.parser()
        .verifyWith(actualSecretKey)
        .build()
        .parseSignedClaims(token)
        .getPayload()
        .getSubject();
  }

  public String resolveToken(HttpServletRequest request) {
    return request.getHeader(authorizationHeader);
  }
}
------[0m
[0m2025-06-16 21:22:54 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.security;

import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.INVALID_JWT_TOKEN;

import io.jsonwebtoken.Claims;
import io.jsonwebtoken.Jws;
import io.jsonwebtoken.JwtException;
import io.jsonwebtoken.Jwts;
import io.jsonwebtoken.security.Keys;
import jakarta.annotation.PostConstruct;
import jakarta.servlet.http.HttpServletRequest;
import java.nio.charset.StandardCharsets;
import java.util.Date;
import javax.crypto.SecretKey;
import lombok.RequiredArgsConstructor;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Lazy;
import org.springframework.http.HttpStatus;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.stereotype.Component;

@Component
@RequiredArgsConstructor
public class JwtProvider {
  @Qualifier("userDetailsServiceImpl")
  @Lazy
  private final UserDetailsService userDetailsService;

  @Value("${jwt.header}")
  private String authorizationHeader;

  @Value("${jwt.secret}")
  private String secretKeyString; // Renomeado para evitar confusão com o objeto SecretKey

  @Value("${jwt.expiration}")
  private long validityInMilliseconds;

  private SecretKey actualSecretKey;

  @PostConstruct
  protected void init() {
    // Assumindo que secretKeyString é a string secreta literal das propriedades
    byte[] keyBytes = secretKeyString.getBytes(StandardCharsets.UTF_8);
    this.actualSecretKey = Keys.hmacShaKeyFor(keyBytes);
  }

  public String createToken(String username, String role) {
    Date now = new Date();
    Date validity = new Date(now.getTime() + validityInMilliseconds * 1000);

    return Jwts.builder()
        .subject(username) // Método atualizado
        .claim("role", role) // Método atualizado para adicionar claims customizadas
        .issuedAt(now) // Método atualizado
        .expiration(validity) // Método atualizado
        .signWith(actualSecretKey, Jwts.SIG.HS256)
        .compact();
  }

  public boolean validateToken(String token) {
    try {
      Jws<Claims> claimsJws =
          Jwts.parser().verifyWith(actualSecretKey).build().parseSignedClaims(token);
      return !claimsJws.getPayload().getExpiration().before(new Date());
    } catch (JwtException | IllegalArgumentException exception) {
      throw new JwtAuthenticationException(INVALID_JWT_TOKEN, HttpStatus.UNAUTHORIZED);
    }
  }

  public Authentication getAuthentication(String token) {
    UserDetails userDetails = this.userDetailsService.loadUserByUsername(getUsername(token));
    return new UsernamePasswordAuthenticationToken(userDetails, "", userDetails.getAuthorities());
  }

  public String getUsername(String token) {
    return Jwts.parser()
        .verifyWith(actualSecretKey)
        .build()
        .parseSignedClaims(token)
        .getPayload()
        .getSubject();
  }

  public String resolveToken(HttpServletRequest request) {
    return request.getHeader(authorizationHeader);
  }
}
------[0m
[0m2025-06-16 21:22:54 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserDetailsServiceImpl.java[0m
[0m2025-06-16 21:22:54 [0;34m[DEBUG][0m   FILE_STATUS (UserDetailsServiceImpl.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:54 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserDetailsServiceImpl.java, FILE_NAME: UserDetailsServiceImpl.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:54 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:54 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:54 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserDetailsServiceImpl.java][0m
[0m2025-06-16 21:22:55 [0;34m[INFO][0m    - File:[0;37m[UserDetailsServiceImpl.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:55 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.security;

import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.USER_NOT_FOUND;

import com.gmail.merikbest2015.ecommerce.domain.User;
import com.gmail.merikbest2015.ecommerce.repository.UserRepository;
import lombok.RequiredArgsConstructor;
import org.springframework.security.authentication.LockedException;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.stereotype.Service;

@Service("userDetailsServiceImpl")
@RequiredArgsConstructor
public class UserDetailsServiceImpl implements UserDetailsService {

  private final UserRepository userRepository;

  @Override
  public UserDetails loadUserByUsername(String email) throws UsernameNotFoundException {
    User user =
        userRepository
            .findByEmail(email)
            .orElseThrow(() -> new UsernameNotFoundException(USER_NOT_FOUND));
    if (user.getActivationCode() != null) {
      throw new LockedException("Email not activated");
    }
    return UserPrincipal.create(user);
  }
}
------[0m
[0m2025-06-16 21:22:55 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.security;

import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.USER_NOT_FOUND;

import com.gmail.merikbest2015.ecommerce.domain.User;
import com.gmail.merikbest2015.ecommerce.repository.UserRepository;
import lombok.RequiredArgsConstructor;
import org.springframework.security.authentication.LockedException;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.stereotype.Service;

@Service("userDetailsServiceImpl")
@RequiredArgsConstructor
public class UserDetailsServiceImpl implements UserDetailsService {

  private final UserRepository userRepository;

  @Override
  public UserDetails loadUserByUsername(String email) throws UsernameNotFoundException {
    User user =
        userRepository
            .findByEmail(email)
            .orElseThrow(() -> new UsernameNotFoundException(USER_NOT_FOUND));
    if (user.getActivationCode() != null) {
      throw new LockedException("Email not activated");
    }
    return UserPrincipal.create(user);
  }
}
------[0m
[0m2025-06-16 21:22:55 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java[0m
[0m2025-06-16 21:22:55 [0;34m[DEBUG][0m   FILE_STATUS (UserPrincipal.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:55 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java, FILE_NAME: UserPrincipal.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:55 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:55 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:55 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java][0m
[0m2025-06-16 21:22:55 [0;34m[INFO][0m    - File:[0;37m[UserPrincipal.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:55 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.security;

import com.gmail.merikbest2015.ecommerce.domain.User;
import java.util.Collection;
import java.util.Collections;
import java.util.List;
import java.util.Map;
import lombok.Data;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.oauth2.core.user.OAuth2User;

@Data
public class UserPrincipal implements UserDetails, OAuth2User {

  private final Long id;
  private final String email;
  private final String password;
  private final Collection<? extends GrantedAuthority> authorities;
  private Map<String, Object> attributes;

  public static UserPrincipal create(User user) {
    String userRole = user.getRoles().iterator().next().toString();
    List<GrantedAuthority> authorities =
        Collections.singletonList(new SimpleGrantedAuthority(userRole));
    return new UserPrincipal(user.getId(), user.getEmail(), user.getPassword(), authorities);
  }

  public static UserPrincipal create(User user, Map<String, Object> attributes) {
    UserPrincipal userPrincipal = UserPrincipal.create(user);
    userPrincipal.setAttributes(attributes);
    return userPrincipal;
  }

  @Override
  public Map<String, Object> getAttributes() {
    return attributes;
  }

  @Override
  public String getName() {
    return email;
  }

  @Override
  public Collection<? extends GrantedAuthority> getAuthorities() {
    return authorities;
  }

  @Override
  public String getPassword() {
    return password;
  }

  @Override
  public String getUsername() {
    return email;
  }

  @Override
  public boolean isAccountNonExpired() {
    return true;
  }

  @Override
  public boolean isAccountNonLocked() {
    return true;
  }

  @Override
  public boolean isCredentialsNonExpired() {
    return true;
  }

  @Override
  public boolean isEnabled() {
    return true;
  }
}
------[0m
[0m2025-06-16 21:22:55 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.security;

import com.gmail.merikbest2015.ecommerce.domain.User;
import java.util.Collection;
import java.util.Collections;
import java.util.List;
import java.util.Map;
import lombok.Data;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.oauth2.core.user.OAuth2User;

@Data
public class UserPrincipal implements UserDetails, OAuth2User {

  private final Long id;
  private final String email;
  private final String password;
  private final Collection<? extends GrantedAuthority> authorities;
  private Map<String, Object> attributes;

  public static UserPrincipal create(User user) {
    String userRole = user.getRoles().iterator().next().toString();
    List<GrantedAuthority> authorities =
        Collections.singletonList(new SimpleGrantedAuthority(userRole));
    return new UserPrincipal(user.getId(), user.getEmail(), user.getPassword(), authorities);
  }

  public static UserPrincipal create(User user, Map<String, Object> attributes) {
    UserPrincipal userPrincipal = UserPrincipal.create(user);
    userPrincipal.setAttributes(attributes);
    return userPrincipal;
  }

  @Override
  public Map<String, Object> getAttributes() {
    return attributes;
  }

  @Override
  public String getName() {
    return email;
  }

  @Override
  public Collection<? extends GrantedAuthority> getAuthorities() {
    return authorities;
  }

  @Override
  public String getPassword() {
    return password;
  }

  @Override
  public String getUsername() {
    return email;
  }

  @Override
  public boolean isAccountNonExpired() {
    return true;
  }

  @Override
  public boolean isAccountNonLocked() {
    return true;
  }

  @Override
  public boolean isCredentialsNonExpired() {
    return true;
  }

  @Override
  public boolean isEnabled() {
    return true;
  }
}
------[0m
[0m2025-06-16 21:22:55 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/CustomOAuth2UserService.java[0m
[0m2025-06-16 21:22:55 [0;34m[DEBUG][0m   FILE_STATUS (CustomOAuth2UserService.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:55 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/CustomOAuth2UserService.java, FILE_NAME: CustomOAuth2UserService.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:55 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:55 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:55 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/CustomOAuth2UserService.java][0m
[0m2025-06-16 21:22:56 [0;34m[INFO][0m    - File:[0;37m[CustomOAuth2UserService.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:56 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.security.oauth2;

import com.gmail.merikbest2015.ecommerce.domain.User;
import com.gmail.merikbest2015.ecommerce.security.UserPrincipal;
import com.gmail.merikbest2015.ecommerce.service.AuthenticationService;
import com.gmail.merikbest2015.ecommerce.service.UserService;
import lombok.RequiredArgsConstructor;
import org.springframework.context.annotation.Lazy;
import org.springframework.security.oauth2.client.userinfo.DefaultOAuth2UserService;
import org.springframework.security.oauth2.client.userinfo.OAuth2UserRequest;
import org.springframework.security.oauth2.core.OAuth2AuthenticationException;
import org.springframework.security.oauth2.core.user.OAuth2User;
import org.springframework.stereotype.Service;

@Service
@RequiredArgsConstructor
public class CustomOAuth2UserService extends DefaultOAuth2UserService {

  @Lazy private final AuthenticationService authenticationService;
  private final UserService userService;

  @Override
  public OAuth2User loadUser(OAuth2UserRequest userRequest) throws OAuth2AuthenticationException {
    String provider = userRequest.getClientRegistration().getRegistrationId();
    OAuth2User oAuth2User = super.loadUser(userRequest);
    OAuth2UserInfo oAuth2UserInfo =
        OAuth2UserFactory.getOAuth2UserInfo(provider, oAuth2User.getAttributes());
    User user = userService.getUserInfo(oAuth2UserInfo.getEmail());

    if (user == null) {
      user = authenticationService.registerOauth2User(provider, oAuth2UserInfo);
    } else {
      user = authenticationService.updateOauth2User(user, provider, oAuth2UserInfo);
    }
    return UserPrincipal.create(user, oAuth2User.getAttributes());
  }
}
------[0m
[0m2025-06-16 21:22:56 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.security.oauth2;

import com.gmail.merikbest2015.ecommerce.domain.User;
import com.gmail.merikbest2015.ecommerce.security.UserPrincipal;
import com.gmail.merikbest2015.ecommerce.service.AuthenticationService;
import com.gmail.merikbest2015.ecommerce.service.UserService;
import lombok.RequiredArgsConstructor;
import org.springframework.context.annotation.Lazy;
import org.springframework.security.oauth2.client.userinfo.DefaultOAuth2UserService;
import org.springframework.security.oauth2.client.userinfo.OAuth2UserRequest;
import org.springframework.security.oauth2.core.OAuth2AuthenticationException;
import org.springframework.security.oauth2.core.user.OAuth2User;
import org.springframework.stereotype.Service;

@Service
@RequiredArgsConstructor
public class CustomOAuth2UserService extends DefaultOAuth2UserService {

  @Lazy private final AuthenticationService authenticationService;
  private final UserService userService;

  @Override
  public OAuth2User loadUser(OAuth2UserRequest userRequest) throws OAuth2AuthenticationException {
    String provider = userRequest.getClientRegistration().getRegistrationId();
    OAuth2User oAuth2User = super.loadUser(userRequest);
    OAuth2UserInfo oAuth2UserInfo =
        OAuth2UserFactory.getOAuth2UserInfo(provider, oAuth2User.getAttributes());
    User user = userService.getUserInfo(oAuth2UserInfo.getEmail());

    if (user == null) {
      user = authenticationService.registerOauth2User(provider, oAuth2UserInfo);
    } else {
      user = authenticationService.updateOauth2User(user, provider, oAuth2UserInfo);
    }
    return UserPrincipal.create(user, oAuth2User.getAttributes());
  }
}
------[0m
[0m2025-06-16 21:22:56 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/FacebookOAuth2UserInfo.java[0m
[0m2025-06-16 21:22:56 [0;34m[DEBUG][0m   FILE_STATUS (FacebookOAuth2UserInfo.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:56 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/FacebookOAuth2UserInfo.java, FILE_NAME: FacebookOAuth2UserInfo.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:56 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:56 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:56 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/FacebookOAuth2UserInfo.java][0m
[0m2025-06-16 21:22:56 [0;34m[INFO][0m    - File:[0;37m[FacebookOAuth2UserInfo.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:56 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.security.oauth2;

import java.util.Map;

public class FacebookOAuth2UserInfo extends OAuth2UserInfo {

  public FacebookOAuth2UserInfo(Map<String, Object> attributes) {
    super(attributes);
  }

  @Override
  public String getId() {
    return (String) attributes.get("id");
  }

  @Override
  public String getFirstName() {
    return (String) attributes.get("first_name");
  }

  @Override
  public String getLastName() {
    return (String) attributes.get("last_name");
  }

  @Override
  public String getEmail() {
    return (String) attributes.get("email");
  }
}
------[0m
[0m2025-06-16 21:22:56 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.security.oauth2;

import java.util.Map;

public class FacebookOAuth2UserInfo extends OAuth2UserInfo {

  public FacebookOAuth2UserInfo(Map<String, Object> attributes) {
    super(attributes);
  }

  @Override
  public String getId() {
    return (String) attributes.get("id");
  }

  @Override
  public String getFirstName() {
    return (String) attributes.get("first_name");
  }

  @Override
  public String getLastName() {
    return (String) attributes.get("last_name");
  }

  @Override
  public String getEmail() {
    return (String) attributes.get("email");
  }
}
------[0m
[0m2025-06-16 21:22:56 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GithubOAuth2UserInfo.java[0m
[0m2025-06-16 21:22:56 [0;34m[DEBUG][0m   FILE_STATUS (GithubOAuth2UserInfo.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:56 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GithubOAuth2UserInfo.java, FILE_NAME: GithubOAuth2UserInfo.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:56 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:57 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:57 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GithubOAuth2UserInfo.java][0m
[0m2025-06-16 21:22:57 [0;34m[INFO][0m    - File:[0;37m[GithubOAuth2UserInfo.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:57 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.security.oauth2;

import java.util.Map;

public class GithubOAuth2UserInfo extends OAuth2UserInfo {

  public GithubOAuth2UserInfo(Map<String, Object> attributes) {
    super(attributes);
  }

  @Override
  public String getId() {
    return ((Integer) attributes.get("id")).toString();
  }

  @Override
  public String getFirstName() {
    return (String) attributes.get("name");
  }

  @Override
  public String getLastName() {
    return "";
  }

  @Override
  public String getEmail() {
    return (String) attributes.get("email");
  }
}
------[0m
[0m2025-06-16 21:22:57 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.security.oauth2;

import java.util.Map;

public class GithubOAuth2UserInfo extends OAuth2UserInfo {

  public GithubOAuth2UserInfo(Map<String, Object> attributes) {
    super(attributes);
  }

  @Override
  public String getId() {
    return ((Integer) attributes.get("id")).toString();
  }

  @Override
  public String getFirstName() {
    return (String) attributes.get("name");
  }

  @Override
  public String getLastName() {
    return "";
  }

  @Override
  public String getEmail() {
    return (String) attributes.get("email");
  }
}
------[0m
[0m2025-06-16 21:22:57 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GoogleOAuth2UserInfo.java[0m
[0m2025-06-16 21:22:57 [0;34m[DEBUG][0m   FILE_STATUS (GoogleOAuth2UserInfo.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:57 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GoogleOAuth2UserInfo.java, FILE_NAME: GoogleOAuth2UserInfo.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:57 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:57 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:57 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GoogleOAuth2UserInfo.java][0m
[0m2025-06-16 21:22:58 [0;34m[INFO][0m    - File:[0;37m[GoogleOAuth2UserInfo.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:58 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.security.oauth2;

import java.util.Map;

public class GoogleOAuth2UserInfo extends OAuth2UserInfo {

  public GoogleOAuth2UserInfo(Map<String, Object> attributes) {
    super(attributes);
  }

  @Override
  public String getId() {
    return (String) attributes.get("sub");
  }

  @Override
  public String getFirstName() {
    return (String) attributes.get("given_name");
  }

  @Override
  public String getLastName() {
    return (String) attributes.get("family_name");
  }

  @Override
  public String getEmail() {
    return (String) attributes.get("email");
  }
}
------[0m
[0m2025-06-16 21:22:58 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.security.oauth2;

import java.util.Map;

public class GoogleOAuth2UserInfo extends OAuth2UserInfo {

  public GoogleOAuth2UserInfo(Map<String, Object> attributes) {
    super(attributes);
  }

  @Override
  public String getId() {
    return (String) attributes.get("sub");
  }

  @Override
  public String getFirstName() {
    return (String) attributes.get("given_name");
  }

  @Override
  public String getLastName() {
    return (String) attributes.get("family_name");
  }

  @Override
  public String getEmail() {
    return (String) attributes.get("email");
  }
}
------[0m
[0m2025-06-16 21:22:58 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2SuccessHandler.java[0m
[0m2025-06-16 21:22:58 [0;34m[DEBUG][0m   FILE_STATUS (OAuth2SuccessHandler.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:58 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2SuccessHandler.java, FILE_NAME: OAuth2SuccessHandler.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:58 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:58 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:58 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2SuccessHandler.java][0m
[0m2025-06-16 21:22:58 [0;34m[INFO][0m    - File:[0;37m[OAuth2SuccessHandler.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:58 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.security.oauth2;

import com.gmail.merikbest2015.ecommerce.security.JwtProvider;
import jakarta.servlet.ServletException;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import java.io.IOException;
import lombok.RequiredArgsConstructor;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.security.core.Authentication;
import org.springframework.security.oauth2.core.user.OAuth2User;
import org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler;
import org.springframework.stereotype.Component;
import org.springframework.web.util.UriComponentsBuilder;

@Component
@RequiredArgsConstructor
public class OAuth2SuccessHandler extends SimpleUrlAuthenticationSuccessHandler {

  private final JwtProvider jwtProvider;

  @Value("${hostname}")
  private String hostname;

  @Override
  public void onAuthenticationSuccess(
      HttpServletRequest request, HttpServletResponse response, Authentication authentication)
      throws IOException, ServletException {
    OAuth2User oAuth2User = (OAuth2User) authentication.getPrincipal();
    String email = (String) oAuth2User.getAttributes().get("email");
    String token = jwtProvider.createToken(email, "USER");
    String uri =
        UriComponentsBuilder.fromUriString("http://" + hostname + "/oauth2/redirect")
            .queryParam("token", token)
            .build()
            .toUriString();
    getRedirectStrategy().sendRedirect(request, response, uri);
  }
}
------[0m
[0m2025-06-16 21:22:58 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.security.oauth2;

import com.gmail.merikbest2015.ecommerce.security.JwtProvider;
import jakarta.servlet.ServletException;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import java.io.IOException;
import lombok.RequiredArgsConstructor;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.security.core.Authentication;
import org.springframework.security.oauth2.core.user.OAuth2User;
import org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler;
import org.springframework.stereotype.Component;
import org.springframework.web.util.UriComponentsBuilder;

@Component
@RequiredArgsConstructor
public class OAuth2SuccessHandler extends SimpleUrlAuthenticationSuccessHandler {

  private final JwtProvider jwtProvider;

  @Value("${hostname}")
  private String hostname;

  @Override
  public void onAuthenticationSuccess(
      HttpServletRequest request, HttpServletResponse response, Authentication authentication)
      throws IOException, ServletException {
    OAuth2User oAuth2User = (OAuth2User) authentication.getPrincipal();
    String email = (String) oAuth2User.getAttributes().get("email");
    String token = jwtProvider.createToken(email, "USER");
    String uri =
        UriComponentsBuilder.fromUriString("http://" + hostname + "/oauth2/redirect")
            .queryParam("token", token)
            .build()
            .toUriString();
    getRedirectStrategy().sendRedirect(request, response, uri);
  }
}
------[0m
[0m2025-06-16 21:22:58 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserFactory.java[0m
[0m2025-06-16 21:22:58 [0;34m[DEBUG][0m   FILE_STATUS (OAuth2UserFactory.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:58 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserFactory.java, FILE_NAME: OAuth2UserFactory.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:58 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:58 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:58 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserFactory.java][0m
[0m2025-06-16 21:22:59 [0;34m[INFO][0m    - File:[0;37m[OAuth2UserFactory.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:59 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.security.oauth2;

import com.gmail.merikbest2015.ecommerce.enums.AuthProvider;
import java.util.Map;
import javax.naming.AuthenticationException;
import lombok.SneakyThrows;

public class OAuth2UserFactory {

  @SneakyThrows
  public static OAuth2UserInfo getOAuth2UserInfo(
      String registrationId, Map<String, Object> attributes) {
    if (registrationId.equalsIgnoreCase(AuthProvider.GOOGLE.toString())) {
      return new GoogleOAuth2UserInfo(attributes);
    } else if (registrationId.equalsIgnoreCase(AuthProvider.FACEBOOK.toString())) {
      return new FacebookOAuth2UserInfo(attributes);
    } else if (registrationId.equalsIgnoreCase(AuthProvider.GITHUB.toString())) {
      return new GithubOAuth2UserInfo(attributes);
    } else {
      throw new AuthenticationException();
    }
  }
}
------[0m
[0m2025-06-16 21:22:59 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.security.oauth2;

import com.gmail.merikbest2015.ecommerce.enums.AuthProvider;
import java.util.Map;
import javax.naming.AuthenticationException;
import lombok.SneakyThrows;

public class OAuth2UserFactory {

  @SneakyThrows
  public static OAuth2UserInfo getOAuth2UserInfo(
      String registrationId, Map<String, Object> attributes) {
    if (registrationId.equalsIgnoreCase(AuthProvider.GOOGLE.toString())) {
      return new GoogleOAuth2UserInfo(attributes);
    } else if (registrationId.equalsIgnoreCase(AuthProvider.FACEBOOK.toString())) {
      return new FacebookOAuth2UserInfo(attributes);
    } else if (registrationId.equalsIgnoreCase(AuthProvider.GITHUB.toString())) {
      return new GithubOAuth2UserInfo(attributes);
    } else {
      throw new AuthenticationException();
    }
  }
}
------[0m
[0m2025-06-16 21:22:59 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java[0m
[0m2025-06-16 21:22:59 [0;34m[DEBUG][0m   FILE_STATUS (OAuth2UserInfo.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:59 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java, FILE_NAME: OAuth2UserInfo.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:59 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:59 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:59 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java][0m
[0m2025-06-16 21:22:59 [0;34m[INFO][0m    - File:[0;37m[OAuth2UserInfo.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:22:59 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.security.oauth2;

import java.util.Map;

public abstract class OAuth2UserInfo {

  protected Map<String, Object> attributes;

  public OAuth2UserInfo(Map<String, Object> attributes) {
    this.attributes = attributes;
  }

  public Map<String, Object> getAttributes() {
    return attributes;
  }

  public abstract String getId();

  public abstract String getFirstName();

  public abstract String getLastName();

  public abstract String getEmail();
}
------[0m
[0m2025-06-16 21:22:59 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.security.oauth2;

import java.util.Map;

public abstract class OAuth2UserInfo {

  protected Map<String, Object> attributes;

  public OAuth2UserInfo(Map<String, Object> attributes) {
    this.attributes = attributes;
  }

  public Map<String, Object> getAttributes() {
    return attributes;
  }

  public abstract String getId();

  public abstract String getFirstName();

  public abstract String getLastName();

  public abstract String getEmail();
}
------[0m
[0m2025-06-16 21:22:59 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/AuthenticationService.java[0m
[0m2025-06-16 21:22:59 [0;34m[DEBUG][0m   FILE_STATUS (AuthenticationService.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:22:59 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/AuthenticationService.java, FILE_NAME: AuthenticationService.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:22:59 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:22:59 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:22:59 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/AuthenticationService.java][0m
[0m2025-06-16 21:23:00 [0;34m[INFO][0m    - File:[0;37m[AuthenticationService.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:23:00 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.service;

import com.gmail.merikbest2015.ecommerce.domain.User;
import com.gmail.merikbest2015.ecommerce.security.oauth2.OAuth2UserInfo;
import java.util.Map;

public interface AuthenticationService {

  Map<String, Object> login(String email, String password);

  String registerUser(User user, String captcha, String password2);

  User registerOauth2User(String provider, OAuth2UserInfo oAuth2UserInfo);

  User updateOauth2User(User user, String provider, OAuth2UserInfo oAuth2UserInfo);

  String activateUser(String code);

  String getEmailByPasswordResetCode(String code);

  String sendPasswordResetCode(String email);

  String passwordReset(String email, String password, String password2);
}
------[0m
[0m2025-06-16 21:23:00 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.service;

import com.gmail.merikbest2015.ecommerce.domain.User;
import com.gmail.merikbest2015.ecommerce.security.oauth2.OAuth2UserInfo;
import java.util.Map;

public interface AuthenticationService {

  Map<String, Object> login(String email, String password);

  String registerUser(User user, String captcha, String password2);

  User registerOauth2User(String provider, OAuth2UserInfo oAuth2UserInfo);

  User updateOauth2User(User user, String provider, OAuth2UserInfo oAuth2UserInfo);

  String activateUser(String code);

  String getEmailByPasswordResetCode(String code);

  String sendPasswordResetCode(String email);

  String passwordReset(String email, String password, String password2);
}
------[0m
[0m2025-06-16 21:23:00 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java[0m
[0m2025-06-16 21:23:00 [0;34m[DEBUG][0m   FILE_STATUS (AuthenticationServiceImpl.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:00 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java, FILE_NAME: AuthenticationServiceImpl.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:23:00 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:23:00 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:00 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java][0m
[0m2025-06-16 21:23:00 [0;34m[INFO][0m    - File:[0;37m[AuthenticationServiceImpl.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:23:00 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.service.Impl;

import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.*;

import com.gmail.merikbest2015.ecommerce.domain.User;
import com.gmail.merikbest2015.ecommerce.dto.CaptchaResponse;
import com.gmail.merikbest2015.ecommerce.enums.AuthProvider;
import com.gmail.merikbest2015.ecommerce.enums.Role;
import com.gmail.merikbest2015.ecommerce.exception.ApiRequestException;
import com.gmail.merikbest2015.ecommerce.exception.EmailException;
import com.gmail.merikbest2015.ecommerce.exception.PasswordConfirmationException;
import com.gmail.merikbest2015.ecommerce.exception.PasswordException;
import com.gmail.merikbest2015.ecommerce.repository.UserRepository;
import com.gmail.merikbest2015.ecommerce.security.JwtProvider;
import com.gmail.merikbest2015.ecommerce.security.oauth2.OAuth2UserInfo;
import com.gmail.merikbest2015.ecommerce.service.AuthenticationService;
import com.gmail.merikbest2015.ecommerce.service.email.MailSender;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;
import java.util.UUID;
import lombok.RequiredArgsConstructor;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.HttpStatus;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.AuthenticationException;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.util.StringUtils;
import org.springframework.web.client.RestTemplate;

@Service
@RequiredArgsConstructor
public class AuthenticationServiceImpl implements AuthenticationService {
  private static final Logger logger = LoggerFactory.getLogger(AuthenticationServiceImpl.class);

  private final AuthenticationManager authenticationManager;
  private final RestTemplate restTemplate;
  private final JwtProvider jwtProvider;
  private final MailSender mailSender;
  private final PasswordEncoder passwordEncoder;
  private final UserRepository userRepository;

  @Value("${hostname}")
  private String hostname;

  @Value("${recaptcha.secret}")
  private String secret;

  @Value("${recaptcha.url}")
  private String captchaUrl;

  @Override
  public Map<String, Object> login(String email, String password) {
    try {
      authenticationManager.authenticate(new UsernamePasswordAuthenticationToken(email, password));
      User user =
          userRepository
              .findByEmail(email)
              .orElseThrow(
                  () -> {
                    logger.warn("Login failed: email '{}' not found", email);
                    return new ApiRequestException(EMAIL_NOT_FOUND, HttpStatus.NOT_FOUND);
                  });
      String userRole = user.getRoles().iterator().next().name();
      String token = jwtProvider.createToken(email, userRole);
      logger.info("User '{}' logged in successfully", email);

      Map<String, Object> response = new HashMap<>();
      response.put("user", user);
      response.put("token", token);
      return response;
    } catch (AuthenticationException e) {
      logger.warn("Login failed: incorrect password for '{}'", email);
      throw new ApiRequestException(INCORRECT_PASSWORD, HttpStatus.FORBIDDEN);
    }
  }

  @Override
  @Transactional
  public String registerUser(User user, String captcha, String password2) {
    logger.info("Attempting to register user with email '{}'", user.getEmail());
    String url = String.format(captchaUrl, secret, captcha);
    restTemplate.postForObject(url, Collections.emptyList(), CaptchaResponse.class);

    String plainPassword1 = user.getPassword();
    if (plainPassword1 != null) {
      boolean passwordsMatch;
      if (password2 == null) {
        passwordsMatch = false; // Mimics behavior of "string".equals(null)
      } else {
        passwordsMatch =
            MessageDigest.isEqual(
                plainPassword1.getBytes(StandardCharsets.UTF_8),
                password2.getBytes(StandardCharsets.UTF_8));
      }
      if (!passwordsMatch) {
        logger.warn("Passwords do not match for registration attempt: '{}'", user.getEmail());
        throw new PasswordException(PASSWORDS_DO_NOT_MATCH);
      }
    }
    // If plainPassword1 is null, no exception is thrown, matching original behavior.

    if (userRepository.findByEmail(user.getEmail()).isPresent()) {
      logger.warn("Registration failed: email '{}' already in use", user.getEmail());
      throw new EmailException(EMAIL_IN_USE);
    }

    user.setActive(false);
    user.setRoles(Collections.singleton(Role.USER));
    user.setProvider(AuthProvider.LOCAL);
    user.setActivationCode(UUID.randomUUID().toString());
    user.setPassword(passwordEncoder.encode(user.getPassword()));
    userRepository.save(user);

    sendEmail(
        user,
        "Activation code",
        "registration-template",
        "registrationUrl",
        "/activate/" + user.getActivationCode());
    logger.info("User '{}' registered successfully", user.getEmail());
    return "User successfully registered.";
  }

  @Override
  @Transactional
  public User registerOauth2User(String provider, OAuth2UserInfo oAuth2UserInfo) {
    logger.info("Registering OAuth2 user from provider '{}'", provider);
    User user = new User();
    user.setEmail(oAuth2UserInfo.getEmail());
    user.setFirstName(oAuth2UserInfo.getFirstName());
    user.setLastName(oAuth2UserInfo.getLastName());
    user.setActive(true);
    user.setRoles(Collections.singleton(Role.USER));
    user.setProvider(AuthProvider.valueOf(provider.toUpperCase()));
    return userRepository.save(user);
  }

  @Override
  @Transactional
  public User updateOauth2User(User user, String provider, OAuth2UserInfo oAuth2UserInfo) {
    logger.info("Updating OAuth2 user '{}' from provider '{}'", user.getEmail(), provider);
    user.setFirstName(oAuth2UserInfo.getFirstName());
    user.setLastName(oAuth2UserInfo.getLastName());
    user.setProvider(AuthProvider.valueOf(provider.toUpperCase()));
    return userRepository.save(user);
  }

  @Override
  public String getEmailByPasswordResetCode(String code) {
    logger.info("Retrieving email by password reset code '{}'", code);
    return userRepository
        .getEmailByPasswordResetCode(code)
        .orElseThrow(
            () -> {
              logger.warn("Invalid password reset code '{}'", code);
              return new ApiRequestException(INVALID_PASSWORD_CODE, HttpStatus.BAD_REQUEST);
            });
  }

  @Override
  @Transactional
  public String sendPasswordResetCode(String email) {
    logger.info("Sending password reset code to '{}'", email);
    User user =
        userRepository
            .findByEmail(email)
            .orElseThrow(
                () -> {
                  logger.warn("Password reset failed: email '{}' not found", email);
                  return new ApiRequestException(EMAIL_NOT_FOUND, HttpStatus.NOT_FOUND);
                });
    user.setPasswordResetCode(UUID.randomUUID().toString());
    userRepository.save(user);

    sendEmail(
        user,
        "Password reset",
        "password-reset-template",
        "resetUrl",
        "/reset/" + user.getPasswordResetCode());
    logger.info("Password reset code sent to '{}'", email);
    return "Reset password code is send to your E-mail";
  }

  @Override
  @Transactional
  public String passwordReset(String email, String password, String password2) {
    if (StringUtils.isEmpty(password2)) {
      logger.warn("Password confirmation is empty for '{}'", email);
      throw new PasswordConfirmationException(EMPTY_PASSWORD_CONFIRMATION);
    }
    if (password != null && !password.equals(password2)) {
      logger.warn("Password mismatch during reset for '{}'", email);
      throw new PasswordException(PASSWORDS_DO_NOT_MATCH);
    }
    User user =
        userRepository
            .findByEmail(email)
            .orElseThrow(
                () -> {
                  logger.warn("Password reset failed: email '{}' not found", email);
                  return new ApiRequestException(EMAIL_NOT_FOUND, HttpStatus.NOT_FOUND);
                });
    user.setPassword(passwordEncoder.encode(password));
    user.setPasswordResetCode(null);
    userRepository.save(user);
    logger.info("Password successfully reset for '{}'", email);
    return "Password successfully changed!";
  }

  @Override
  @Transactional
  public String activateUser(String code) {
    logger.info("Activating user with code '{}'", code);
    User user =
        userRepository
            .findByActivationCode(code)
            .orElseThrow(
                () -> {
                  logger.warn("Activation failed: invalid code '{}'", code);
                  return new ApiRequestException(ACTIVATION_CODE_NOT_FOUND, HttpStatus.NOT_FOUND);
                });
    user.setActivationCode(null);
    user.setActive(true);
    userRepository.save(user);
    logger.info("User '{}' activated successfully", user.getEmail());
    return "User successfully activated.";
  }

  private void sendEmail(
      User user, String subject, String template, String urlAttribute, String urlPath) {
    Map<String, Object> attributes = new HashMap<>();
    attributes.put("firstName", user.getFirstName());
    attributes.put(urlAttribute, "http://" + hostname + urlPath);
    mailSender.sendMessageHtml(user.getEmail(), subject, template, attributes);
    logger.info("Email sent to '{}' with subject '{}'", user.getEmail(), subject);
  }
}
------[0m
[0m2025-06-16 21:23:00 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.service.Impl;

import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.*;

import com.gmail.merikbest2015.ecommerce.domain.User;
import com.gmail.merikbest2015.ecommerce.dto.CaptchaResponse;
import com.gmail.merikbest2015.ecommerce.enums.AuthProvider;
import com.gmail.merikbest2015.ecommerce.enums.Role;
import com.gmail.merikbest2015.ecommerce.exception.ApiRequestException;
import com.gmail.merikbest2015.ecommerce.exception.EmailException;
import com.gmail.merikbest2015.ecommerce.exception.PasswordConfirmationException;
import com.gmail.merikbest2015.ecommerce.exception.PasswordException;
import com.gmail.merikbest2015.ecommerce.repository.UserRepository;
import com.gmail.merikbest2015.ecommerce.security.JwtProvider;
import com.gmail.merikbest2015.ecommerce.security.oauth2.OAuth2UserInfo;
import com.gmail.merikbest2015.ecommerce.service.AuthenticationService;
import com.gmail.merikbest2015.ecommerce.service.email.MailSender;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;
import java.util.UUID;
import lombok.RequiredArgsConstructor;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.HttpStatus;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.AuthenticationException;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.util.StringUtils;
import org.springframework.web.client.RestTemplate;

@Service
@RequiredArgsConstructor
public class AuthenticationServiceImpl implements AuthenticationService {
  private static final Logger logger = LoggerFactory.getLogger(AuthenticationServiceImpl.class);

  private final AuthenticationManager authenticationManager;
  private final RestTemplate restTemplate;
  private final JwtProvider jwtProvider;
  private final MailSender mailSender;
  private final PasswordEncoder passwordEncoder;
  private final UserRepository userRepository;

  @Value("${hostname}")
  private String hostname;

  @Value("${recaptcha.secret}")
  private String secret;

  @Value("${recaptcha.url}")
  private String captchaUrl;

  @Override
  public Map<String, Object> login(String email, String password) {
    try {
      authenticationManager.authenticate(new UsernamePasswordAuthenticationToken(email, password));
      User user =
          userRepository
              .findByEmail(email)
              .orElseThrow(
                  () -> {
                    logger.warn("Login failed: email '{}' not found", email);
                    return new ApiRequestException(EMAIL_NOT_FOUND, HttpStatus.NOT_FOUND);
                  });
      String userRole = user.getRoles().iterator().next().name();
      String token = jwtProvider.createToken(email, userRole);
      logger.info("User '{}' logged in successfully", email);

      Map<String, Object> response = new HashMap<>();
      response.put("user", user);
      response.put("token", token);
      return response;
    } catch (AuthenticationException e) {
      logger.warn("Login failed: incorrect password for '{}'", email);
      throw new ApiRequestException(INCORRECT_PASSWORD, HttpStatus.FORBIDDEN);
    }
  }

  @Override
  @Transactional
  public String registerUser(User user, String captcha, String password2) {
    logger.info("Attempting to register user with email '{}'", user.getEmail());
    String url = String.format(captchaUrl, secret, captcha);
    restTemplate.postForObject(url, Collections.emptyList(), CaptchaResponse.class);

    String plainPassword1 = user.getPassword();
    if (plainPassword1 != null) {
      boolean passwordsMatch;
      if (password2 == null) {
        passwordsMatch = false; // Mimics behavior of "string".equals(null)
      } else {
        passwordsMatch =
            MessageDigest.isEqual(
                plainPassword1.getBytes(StandardCharsets.UTF_8),
                password2.getBytes(StandardCharsets.UTF_8));
      }
      if (!passwordsMatch) {
        logger.warn("Passwords do not match for registration attempt: '{}'", user.getEmail());
        throw new PasswordException(PASSWORDS_DO_NOT_MATCH);
      }
    }
    // If plainPassword1 is null, no exception is thrown, matching original behavior.

    if (userRepository.findByEmail(user.getEmail()).isPresent()) {
      logger.warn("Registration failed: email '{}' already in use", user.getEmail());
      throw new EmailException(EMAIL_IN_USE);
    }

    user.setActive(false);
    user.setRoles(Collections.singleton(Role.USER));
    user.setProvider(AuthProvider.LOCAL);
    user.setActivationCode(UUID.randomUUID().toString());
    user.setPassword(passwordEncoder.encode(user.getPassword()));
    userRepository.save(user);

    sendEmail(
        user,
        "Activation code",
        "registration-template",
        "registrationUrl",
        "/activate/" + user.getActivationCode());
    logger.info("User '{}' registered successfully", user.getEmail());
    return "User successfully registered.";
  }

  @Override
  @Transactional
  public User registerOauth2User(String provider, OAuth2UserInfo oAuth2UserInfo) {
    logger.info("Registering OAuth2 user from provider '{}'", provider);
    User user = new User();
    user.setEmail(oAuth2UserInfo.getEmail());
    user.setFirstName(oAuth2UserInfo.getFirstName());
    user.setLastName(oAuth2UserInfo.getLastName());
    user.setActive(true);
    user.setRoles(Collections.singleton(Role.USER));
    user.setProvider(AuthProvider.valueOf(provider.toUpperCase()));
    return userRepository.save(user);
  }

  @Override
  @Transactional
  public User updateOauth2User(User user, String provider, OAuth2UserInfo oAuth2UserInfo) {
    logger.info("Updating OAuth2 user '{}' from provider '{}'", user.getEmail(), provider);
    user.setFirstName(oAuth2UserInfo.getFirstName());
    user.setLastName(oAuth2UserInfo.getLastName());
    user.setProvider(AuthProvider.valueOf(provider.toUpperCase()));
    return userRepository.save(user);
  }

  @Override
  public String getEmailByPasswordResetCode(String code) {
    logger.info("Retrieving email by password reset code '{}'", code);
    return userRepository
        .getEmailByPasswordResetCode(code)
        .orElseThrow(
            () -> {
              logger.warn("Invalid password reset code '{}'", code);
              return new ApiRequestException(INVALID_PASSWORD_CODE, HttpStatus.BAD_REQUEST);
            });
  }

  @Override
  @Transactional
  public String sendPasswordResetCode(String email) {
    logger.info("Sending password reset code to '{}'", email);
    User user =
        userRepository
            .findByEmail(email)
            .orElseThrow(
                () -> {
                  logger.warn("Password reset failed: email '{}' not found", email);
                  return new ApiRequestException(EMAIL_NOT_FOUND, HttpStatus.NOT_FOUND);
                });
    user.setPasswordResetCode(UUID.randomUUID().toString());
    userRepository.save(user);

    sendEmail(
        user,
        "Password reset",
        "password-reset-template",
        "resetUrl",
        "/reset/" + user.getPasswordResetCode());
    logger.info("Password reset code sent to '{}'", email);
    return "Reset password code is send to your E-mail";
  }

  @Override
  @Transactional
  public String passwordReset(String email, String password, String password2) {
    if (StringUtils.isEmpty(password2)) {
      logger.warn("Password confirmation is empty for '{}'", email);
      throw new PasswordConfirmationException(EMPTY_PASSWORD_CONFIRMATION);
    }
    if (password != null && !password.equals(password2)) {
      logger.warn("Password mismatch during reset for '{}'", email);
      throw new PasswordException(PASSWORDS_DO_NOT_MATCH);
    }
    User user =
        userRepository
            .findByEmail(email)
            .orElseThrow(
                () -> {
                  logger.warn("Password reset failed: email '{}' not found", email);
                  return new ApiRequestException(EMAIL_NOT_FOUND, HttpStatus.NOT_FOUND);
                });
    user.setPassword(passwordEncoder.encode(password));
    user.setPasswordResetCode(null);
    userRepository.save(user);
    logger.info("Password successfully reset for '{}'", email);
    return "Password successfully changed!";
  }

  @Override
  @Transactional
  public String activateUser(String code) {
    logger.info("Activating user with code '{}'", code);
    User user =
        userRepository
            .findByActivationCode(code)
            .orElseThrow(
                () -> {
                  logger.warn("Activation failed: invalid code '{}'", code);
                  return new ApiRequestException(ACTIVATION_CODE_NOT_FOUND, HttpStatus.NOT_FOUND);
                });
    user.setActivationCode(null);
    user.setActive(true);
    userRepository.save(user);
    logger.info("User '{}' activated successfully", user.getEmail());
    return "User successfully activated.";
  }

  private void sendEmail(
      User user, String subject, String template, String urlAttribute, String urlPath) {
    Map<String, Object> attributes = new HashMap<>();
    attributes.put("firstName", user.getFirstName());
    attributes.put(urlAttribute, "http://" + hostname + urlPath);
    mailSender.sendMessageHtml(user.getEmail(), subject, template, attributes);
    logger.info("Email sent to '{}' with subject '{}'", user.getEmail(), subject);
  }
}
------[0m
[0m2025-06-16 21:23:00 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java[0m
[0m2025-06-16 21:23:01 [0;34m[DEBUG][0m   FILE_STATUS (OrderServiceImpl.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:01 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java, FILE_NAME: OrderServiceImpl.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:23:01 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:23:01 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:01 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java][0m
[0m2025-06-16 21:23:01 [0;34m[INFO][0m    - File:[0;37m[OrderServiceImpl.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:23:01 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.service.Impl;

import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.ORDER_NOT_FOUND;

import com.gmail.merikbest2015.ecommerce.domain.Order;
import com.gmail.merikbest2015.ecommerce.domain.OrderItem;
import com.gmail.merikbest2015.ecommerce.domain.Perfume;
import com.gmail.merikbest2015.ecommerce.exception.ApiRequestException;
import com.gmail.merikbest2015.ecommerce.repository.OrderItemRepository;
import com.gmail.merikbest2015.ecommerce.repository.OrderRepository;
import com.gmail.merikbest2015.ecommerce.repository.PerfumeRepository;
import com.gmail.merikbest2015.ecommerce.service.OrderService;
import com.gmail.merikbest2015.ecommerce.service.email.MailSender;
import graphql.schema.DataFetcher;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import lombok.RequiredArgsConstructor;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.http.HttpStatus;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

@Service
@RequiredArgsConstructor
public class OrderServiceImpl implements OrderService {

  private static final Logger logger = LoggerFactory.getLogger(OrderServiceImpl.class);

  private final OrderRepository orderRepository;
  private final OrderItemRepository orderItemRepository;
  private final PerfumeRepository perfumeRepository;
  private final MailSender mailSender;

  @Override
  public Order getOrderById(Long orderId) {
    logger.info("Fetching order with id {}", orderId);
    return orderRepository
        .findById(orderId)
        .orElseThrow(
            () -> {
              logger.warn("Order not found with id {}", orderId);
              return new ApiRequestException(ORDER_NOT_FOUND, HttpStatus.NOT_FOUND);
            });
  }

  @Override
  public List<OrderItem> getOrderItemsByOrderId(Long orderId) {
    logger.info("Getting order items for order id {}", orderId);
    Order order = getOrderById(orderId);
    return order.getOrderItems();
  }

  @Override
  public Page<Order> getAllOrders(Pageable pageable) {
    logger.info(
        "Fetching all orders with pagination: page {}, size {}",
        pageable.getPageNumber(),
        pageable.getPageSize());
    return orderRepository.findAllByOrderByIdAsc(pageable);
  }

  @Override
  public Page<Order> getUserOrders(String email, Pageable pageable) {
    logger.info("Fetching orders for user {}", email);
    return orderRepository.findOrderByEmail(email, pageable);
  }

  @Override
  @Transactional
  public Order postOrder(Order order, Map<Long, Long> perfumesId) {
    logger.info("Creating new order for user {}", order.getEmail());

    List<OrderItem> orderItemList = new ArrayList<>();
    for (Map.Entry<Long, Long> entry : perfumesId.entrySet()) {
      Long perfumeId = entry.getKey();
      Long quantity = entry.getValue();

      Perfume perfume =
          perfumeRepository
              .findById(perfumeId)
              .orElseThrow(
                  () -> {
                    logger.warn("Perfume not found with id {}", perfumeId);
                    return new ApiRequestException("Perfume not found", HttpStatus.NOT_FOUND);
                  });

      OrderItem orderItem = new OrderItem();
      orderItem.setPerfume(perfume);
      orderItem.setQuantity(quantity);
      orderItem.setAmount(perfume.getPrice() * quantity);

      orderItemList.add(orderItem);
      orderItemRepository.save(orderItem);
    }

    order.getOrderItems().addAll(orderItemList);
    orderRepository.save(order);

    // Send confirmation email
    String subject = "Order #" + order.getId();
    String template = "order-template";
    Map<String, Object> attributes = new HashMap<>();
    attributes.put("order", order);

    mailSender.sendMessageHtml(order.getEmail(), subject, template, attributes);

    logger.info("Order {} created successfully for user {}", order.getId(), order.getEmail());
    return order;
  }

  @Override
  @Transactional
  public String deleteOrder(Long orderId) {
    logger.info("Deleting order with id {}", orderId);
    Order order =
        orderRepository
            .findById(orderId)
            .orElseThrow(
                () -> {
                  logger.warn("Order not found with id {}", orderId);
                  return new ApiRequestException(ORDER_NOT_FOUND, HttpStatus.NOT_FOUND);
                });
    orderRepository.delete(order);
    logger.info("Order with id {} deleted successfully", orderId);
    return "Order deleted successfully";
  }

  @Override
  public DataFetcher<List<Order>> getAllOrdersByQuery() {
    return dataFetchingEnvironment -> {
      logger.info("Fetching all orders via GraphQL query");
      return orderRepository.findAllByOrderByIdAsc();
    };
  }

  @Override
  public DataFetcher<List<Order>> getUserOrdersByEmailQuery() {
    return dataFetchingEnvironment -> {
      String email = dataFetchingEnvironment.getArgument("email").toString();
      logger.info("Fetching orders for user {} via GraphQL query", email);
      return orderRepository.findOrderByEmail(email);
    };
  }
}
------[0m
[0m2025-06-16 21:23:01 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.service.Impl;

import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.ORDER_NOT_FOUND;

import com.gmail.merikbest2015.ecommerce.domain.Order;
import com.gmail.merikbest2015.ecommerce.domain.OrderItem;
import com.gmail.merikbest2015.ecommerce.domain.Perfume;
import com.gmail.merikbest2015.ecommerce.exception.ApiRequestException;
import com.gmail.merikbest2015.ecommerce.repository.OrderItemRepository;
import com.gmail.merikbest2015.ecommerce.repository.OrderRepository;
import com.gmail.merikbest2015.ecommerce.repository.PerfumeRepository;
import com.gmail.merikbest2015.ecommerce.service.OrderService;
import com.gmail.merikbest2015.ecommerce.service.email.MailSender;
import graphql.schema.DataFetcher;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import lombok.RequiredArgsConstructor;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.http.HttpStatus;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

@Service
@RequiredArgsConstructor
public class OrderServiceImpl implements OrderService {

  private static final Logger logger = LoggerFactory.getLogger(OrderServiceImpl.class);

  private final OrderRepository orderRepository;
  private final OrderItemRepository orderItemRepository;
  private final PerfumeRepository perfumeRepository;
  private final MailSender mailSender;

  @Override
  public Order getOrderById(Long orderId) {
    logger.info("Fetching order with id {}", orderId);
    return orderRepository
        .findById(orderId)
        .orElseThrow(
            () -> {
              logger.warn("Order not found with id {}", orderId);
              return new ApiRequestException(ORDER_NOT_FOUND, HttpStatus.NOT_FOUND);
            });
  }

  @Override
  public List<OrderItem> getOrderItemsByOrderId(Long orderId) {
    logger.info("Getting order items for order id {}", orderId);
    Order order = getOrderById(orderId);
    return order.getOrderItems();
  }

  @Override
  public Page<Order> getAllOrders(Pageable pageable) {
    logger.info(
        "Fetching all orders with pagination: page {}, size {}",
        pageable.getPageNumber(),
        pageable.getPageSize());
    return orderRepository.findAllByOrderByIdAsc(pageable);
  }

  @Override
  public Page<Order> getUserOrders(String email, Pageable pageable) {
    logger.info("Fetching orders for user {}", email);
    return orderRepository.findOrderByEmail(email, pageable);
  }

  @Override
  @Transactional
  public Order postOrder(Order order, Map<Long, Long> perfumesId) {
    logger.info("Creating new order for user {}", order.getEmail());

    List<OrderItem> orderItemList = new ArrayList<>();
    for (Map.Entry<Long, Long> entry : perfumesId.entrySet()) {
      Long perfumeId = entry.getKey();
      Long quantity = entry.getValue();

      Perfume perfume =
          perfumeRepository
              .findById(perfumeId)
              .orElseThrow(
                  () -> {
                    logger.warn("Perfume not found with id {}", perfumeId);
                    return new ApiRequestException("Perfume not found", HttpStatus.NOT_FOUND);
                  });

      OrderItem orderItem = new OrderItem();
      orderItem.setPerfume(perfume);
      orderItem.setQuantity(quantity);
      orderItem.setAmount(perfume.getPrice() * quantity);

      orderItemList.add(orderItem);
      orderItemRepository.save(orderItem);
    }

    order.getOrderItems().addAll(orderItemList);
    orderRepository.save(order);

    // Send confirmation email
    String subject = "Order #" + order.getId();
    String template = "order-template";
    Map<String, Object> attributes = new HashMap<>();
    attributes.put("order", order);

    mailSender.sendMessageHtml(order.getEmail(), subject, template, attributes);

    logger.info("Order {} created successfully for user {}", order.getId(), order.getEmail());
    return order;
  }

  @Override
  @Transactional
  public String deleteOrder(Long orderId) {
    logger.info("Deleting order with id {}", orderId);
    Order order =
        orderRepository
            .findById(orderId)
            .orElseThrow(
                () -> {
                  logger.warn("Order not found with id {}", orderId);
                  return new ApiRequestException(ORDER_NOT_FOUND, HttpStatus.NOT_FOUND);
                });
    orderRepository.delete(order);
    logger.info("Order with id {} deleted successfully", orderId);
    return "Order deleted successfully";
  }

  @Override
  public DataFetcher<List<Order>> getAllOrdersByQuery() {
    return dataFetchingEnvironment -> {
      logger.info("Fetching all orders via GraphQL query");
      return orderRepository.findAllByOrderByIdAsc();
    };
  }

  @Override
  public DataFetcher<List<Order>> getUserOrdersByEmailQuery() {
    return dataFetchingEnvironment -> {
      String email = dataFetchingEnvironment.getArgument("email").toString();
      logger.info("Fetching orders for user {} via GraphQL query", email);
      return orderRepository.findOrderByEmail(email);
    };
  }
}
------[0m
[0m2025-06-16 21:23:01 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java[0m
[0m2025-06-16 21:23:01 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeServiceImpl.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:01 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java, FILE_NAME: PerfumeServiceImpl.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:23:01 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:23:01 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:01 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java][0m
[0m2025-06-16 21:23:02 [0;34m[INFO][0m    - File:[0;37m[PerfumeServiceImpl.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:23:02 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.service.Impl;

import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.PERFUME_NOT_FOUND;

import com.gmail.merikbest2015.ecommerce.domain.Perfume;
import com.gmail.merikbest2015.ecommerce.dto.perfume.PerfumeSearchRequest;
import com.gmail.merikbest2015.ecommerce.enums.SearchPerfume;
import com.gmail.merikbest2015.ecommerce.exception.ApiRequestException;
import com.gmail.merikbest2015.ecommerce.repository.PerfumeRepository;
import com.gmail.merikbest2015.ecommerce.repository.projection.PerfumeProjection;
import com.gmail.merikbest2015.ecommerce.service.PerfumeService;
import graphql.schema.DataFetcher;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import java.util.List;
import java.util.UUID;
import java.util.stream.Collectors;
import lombok.RequiredArgsConstructor;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.http.HttpStatus;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.multipart.MultipartFile;
import software.amazon.awssdk.core.sync.RequestBody;
import software.amazon.awssdk.services.s3.S3Client;
import software.amazon.awssdk.services.s3.model.GetUrlRequest;
import software.amazon.awssdk.services.s3.model.PutObjectRequest;

@Service
@RequiredArgsConstructor
public class PerfumeServiceImpl implements PerfumeService {

  private static final Logger logger = LoggerFactory.getLogger(PerfumeServiceImpl.class);

  private final PerfumeRepository perfumeRepository;
  private final S3Client s3Client;

  @Value("${amazon.s3.bucket.name}")
  private String bucketName;

  @Override
  public Perfume getPerfumeById(Long perfumeId) {
    logger.info("Fetching perfume with id {}", perfumeId);
    return perfumeRepository
        .findById(perfumeId)
        .orElseThrow(
            () -> {
              logger.warn("Perfume not found with id (perfume by id) {}", perfumeId);
              return new ApiRequestException(PERFUME_NOT_FOUND, HttpStatus.NOT_FOUND);
            });
  }

  @Override
  public Page<PerfumeProjection> getAllPerfumes(Pageable pageable) {
    logger.info(
        "Fetching all perfumes with pagination: page {}, size {}",
        pageable.getPageNumber(),
        pageable.getPageSize());
    return perfumeRepository.findAllByOrderByIdAsc(pageable);
  }

  @Override
  public List<PerfumeProjection> getPerfumesByIds(List<Long> perfumesId) {
    logger.info("Fetching perfumes by ids {}", perfumesId);
    return perfumeRepository.getPerfumesByIds(perfumesId);
  }

  @Override
  public Page<PerfumeProjection> findPerfumesByFilterParams(
      PerfumeSearchRequest filter, Pageable pageable) {
    logger.info(
        "Finding perfumes by filter params: perfumers={}, genders={}, price range=({}, {}),"
            + " sortByPrice={}",
        filter.getPerfumers(),
        filter.getGenders(),
        filter.getPrices().get(0),
        filter.getPrices().get(1),
        filter.getSortByPrice());
    return perfumeRepository.findPerfumesByFilterParams(
        filter.getPerfumers(),
        filter.getGenders(),
        filter.getPrices().get(0),
        filter.getPrices().get(1),
        filter.getSortByPrice(),
        pageable);
  }

  @Override
  public List<Perfume> findByPerfumer(String perfumer) {
    logger.info("Finding perfumes by perfumer: {}", perfumer);
    return perfumeRepository.findByPerfumerOrderByPriceDesc(perfumer);
  }

  @Override
  public List<Perfume> findByPerfumeGender(String perfumeGender) {
    logger.info("Finding perfumes by gender: {}", perfumeGender);
    return perfumeRepository.findByPerfumeGenderOrderByPriceDesc(perfumeGender);
  }

  @Override
  public Page<PerfumeProjection> findByInputText(
      SearchPerfume searchType, String text, Pageable pageable) {
    logger.info("Finding perfumes by input text: type={}, text={}", searchType, text);
    if (searchType.equals(SearchPerfume.BRAND)) {
      return perfumeRepository.findByPerfumer(text, pageable);
    } else if (searchType.equals(SearchPerfume.PERFUME_TITLE)) {
      return perfumeRepository.findByPerfumeTitle(text, pageable);
    } else {
      return perfumeRepository.findByManufacturerCountry(text, pageable);
    }
  }

  @Override
  @Transactional
  public Perfume savePerfume(Perfume perfume, MultipartFile multipartFile) {
    logger.info("Saving perfume: {}", perfume.getPerfumeTitle());

    if (multipartFile == null || multipartFile.isEmpty()) {
      logger.info("No file uploaded or file is empty, setting default image");
      GetUrlRequest getUrlRequest =
          GetUrlRequest.builder().bucket(bucketName).key("empty.jpg").build();
      perfume.setFilename(s3Client.utilities().getUrl(getUrlRequest).toString());
    } else {
      String originalFilename = multipartFile.getOriginalFilename();
      String sanitizedFilename =
          (originalFilename == null) ? "unknown_file" : new File(originalFilename).getName();

      File tempFile = null;
      try {
        tempFile = File.createTempFile("upload-", "-" + sanitizedFilename);
        Files.copy(
            multipartFile.getInputStream(), tempFile.toPath(), StandardCopyOption.REPLACE_EXISTING);

        String fileName = UUID.randomUUID() + "." + sanitizedFilename;
        PutObjectRequest putObjectRequest =
            PutObjectRequest.builder().bucket(bucketName).key(fileName).build();
        s3Client.putObject(putObjectRequest, RequestBody.fromFile(tempFile));

        GetUrlRequest getUrlRequest =
            GetUrlRequest.builder().bucket(bucketName).key(fileName).build();
        perfume.setFilename(s3Client.utilities().getUrl(getUrlRequest).toString());
        logger.info("Uploaded file saved to S3 with filename {}", fileName);

      } catch (IOException e) {
        logger.error("Error saving multipart file", e);
        throw new RuntimeException("Error processing uploaded file", e);
      } finally {
        if (tempFile != null && tempFile.exists()) {
          if (!tempFile.delete()) {
            logger.warn("Failed to delete temporary file: {}", tempFile.getAbsolutePath());
          }
        }
      }
    }

    Perfume savedPerfume = perfumeRepository.save(perfume);
    logger.info("Perfume saved with id {}", savedPerfume.getId());
    return savedPerfume;
  }

  @Override
  @Transactional
  public String deletePerfume(Long perfumeId) {
    logger.info("Deleting perfume with id {}", perfumeId);
    Perfume perfume =
        perfumeRepository
            .findById(perfumeId)
            .orElseThrow(
                () -> {
                  logger.warn("Perfume not found with id (delete perfume) {}", perfumeId);
                  return new ApiRequestException(PERFUME_NOT_FOUND, HttpStatus.NOT_FOUND);
                });
    perfumeRepository.delete(perfume);
    logger.info("Perfume with id {} deleted successfully", perfumeId);
    return "Perfume deleted successfully";
  }

  @Override
  public DataFetcher<Perfume> getPerfumeByQuery() {
    return dataFetchingEnvironment -> {
      String perfumeIdStr = dataFetchingEnvironment.getArgument("id");
      if (perfumeIdStr == null) {
        logger.warn("GraphQL query: perfume id is null");
        return null; // Or throw an appropriate GraphQL exception
      }
      Long perfumeId = Long.parseLong(perfumeIdStr);
      logger.info("GraphQL query: fetching perfume by id {}", perfumeId);
      return perfumeRepository
          .findById(perfumeId)
          .orElse(null); // Or throw an appropriate GraphQL exception if not found
    };
  }

  @Override
  public DataFetcher<List<PerfumeProjection>> getAllPerfumesByQuery() {
    return dataFetchingEnvironment -> {
      logger.info("GraphQL query: fetching all perfumes");
      return perfumeRepository.findAllByOrderByIdAsc();
    };
  }

  @Override
  public DataFetcher<List<Perfume>> getAllPerfumesByIdsQuery() {
    return dataFetchingEnvironment -> {
      List<String> objects = dataFetchingEnvironment.getArgument("ids");
      if (objects == null) {
        logger.warn("GraphQL query: perfume ids list is null");
        return List.of(); // Or throw an appropriate GraphQL exception
      }
      List<Long> perfumesId = objects.stream().map(Long::parseLong).collect(Collectors.toList());
      logger.info("GraphQL query: fetching perfumes by ids {}", perfumesId);
      return perfumeRepository.findByIdIn(perfumesId);
    };
  }
}
------[0m
[0m2025-06-16 21:23:02 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.service.Impl;

import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.PERFUME_NOT_FOUND;

import com.gmail.merikbest2015.ecommerce.domain.Perfume;
import com.gmail.merikbest2015.ecommerce.dto.perfume.PerfumeSearchRequest;
import com.gmail.merikbest2015.ecommerce.enums.SearchPerfume;
import com.gmail.merikbest2015.ecommerce.exception.ApiRequestException;
import com.gmail.merikbest2015.ecommerce.repository.PerfumeRepository;
import com.gmail.merikbest2015.ecommerce.repository.projection.PerfumeProjection;
import com.gmail.merikbest2015.ecommerce.service.PerfumeService;
import graphql.schema.DataFetcher;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import java.util.List;
import java.util.UUID;
import java.util.stream.Collectors;
import lombok.RequiredArgsConstructor;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.http.HttpStatus;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.multipart.MultipartFile;
import software.amazon.awssdk.core.sync.RequestBody;
import software.amazon.awssdk.services.s3.S3Client;
import software.amazon.awssdk.services.s3.model.GetUrlRequest;
import software.amazon.awssdk.services.s3.model.PutObjectRequest;

@Service
@RequiredArgsConstructor
public class PerfumeServiceImpl implements PerfumeService {

  private static final Logger logger = LoggerFactory.getLogger(PerfumeServiceImpl.class);

  private final PerfumeRepository perfumeRepository;
  private final S3Client s3Client;

  @Value("${amazon.s3.bucket.name}")
  private String bucketName;

  @Override
  public Perfume getPerfumeById(Long perfumeId) {
    logger.info("Fetching perfume with id {}", perfumeId);
    return perfumeRepository
        .findById(perfumeId)
        .orElseThrow(
            () -> {
              logger.warn("Perfume not found with id (perfume by id) {}", perfumeId);
              return new ApiRequestException(PERFUME_NOT_FOUND, HttpStatus.NOT_FOUND);
            });
  }

  @Override
  public Page<PerfumeProjection> getAllPerfumes(Pageable pageable) {
    logger.info(
        "Fetching all perfumes with pagination: page {}, size {}",
        pageable.getPageNumber(),
        pageable.getPageSize());
    return perfumeRepository.findAllByOrderByIdAsc(pageable);
  }

  @Override
  public List<PerfumeProjection> getPerfumesByIds(List<Long> perfumesId) {
    logger.info("Fetching perfumes by ids {}", perfumesId);
    return perfumeRepository.getPerfumesByIds(perfumesId);
  }

  @Override
  public Page<PerfumeProjection> findPerfumesByFilterParams(
      PerfumeSearchRequest filter, Pageable pageable) {
    logger.info(
        "Finding perfumes by filter params: perfumers={}, genders={}, price range=({}, {}),"
            + " sortByPrice={}",
        filter.getPerfumers(),
        filter.getGenders(),
        filter.getPrices().get(0),
        filter.getPrices().get(1),
        filter.getSortByPrice());
    return perfumeRepository.findPerfumesByFilterParams(
        filter.getPerfumers(),
        filter.getGenders(),
        filter.getPrices().get(0),
        filter.getPrices().get(1),
        filter.getSortByPrice(),
        pageable);
  }

  @Override
  public List<Perfume> findByPerfumer(String perfumer) {
    logger.info("Finding perfumes by perfumer: {}", perfumer);
    return perfumeRepository.findByPerfumerOrderByPriceDesc(perfumer);
  }

  @Override
  public List<Perfume> findByPerfumeGender(String perfumeGender) {
    logger.info("Finding perfumes by gender: {}", perfumeGender);
    return perfumeRepository.findByPerfumeGenderOrderByPriceDesc(perfumeGender);
  }

  @Override
  public Page<PerfumeProjection> findByInputText(
      SearchPerfume searchType, String text, Pageable pageable) {
    logger.info("Finding perfumes by input text: type={}, text={}", searchType, text);
    if (searchType.equals(SearchPerfume.BRAND)) {
      return perfumeRepository.findByPerfumer(text, pageable);
    } else if (searchType.equals(SearchPerfume.PERFUME_TITLE)) {
      return perfumeRepository.findByPerfumeTitle(text, pageable);
    } else {
      return perfumeRepository.findByManufacturerCountry(text, pageable);
    }
  }

  @Override
  @Transactional
  public Perfume savePerfume(Perfume perfume, MultipartFile multipartFile) {
    logger.info("Saving perfume: {}", perfume.getPerfumeTitle());

    if (multipartFile == null || multipartFile.isEmpty()) {
      logger.info("No file uploaded or file is empty, setting default image");
      GetUrlRequest getUrlRequest =
          GetUrlRequest.builder().bucket(bucketName).key("empty.jpg").build();
      perfume.setFilename(s3Client.utilities().getUrl(getUrlRequest).toString());
    } else {
      String originalFilename = multipartFile.getOriginalFilename();
      String sanitizedFilename =
          (originalFilename == null) ? "unknown_file" : new File(originalFilename).getName();

      File tempFile = null;
      try {
        tempFile = File.createTempFile("upload-", "-" + sanitizedFilename);
        Files.copy(
            multipartFile.getInputStream(), tempFile.toPath(), StandardCopyOption.REPLACE_EXISTING);

        String fileName = UUID.randomUUID() + "." + sanitizedFilename;
        PutObjectRequest putObjectRequest =
            PutObjectRequest.builder().bucket(bucketName).key(fileName).build();
        s3Client.putObject(putObjectRequest, RequestBody.fromFile(tempFile));

        GetUrlRequest getUrlRequest =
            GetUrlRequest.builder().bucket(bucketName).key(fileName).build();
        perfume.setFilename(s3Client.utilities().getUrl(getUrlRequest).toString());
        logger.info("Uploaded file saved to S3 with filename {}", fileName);

      } catch (IOException e) {
        logger.error("Error saving multipart file", e);
        throw new RuntimeException("Error processing uploaded file", e);
      } finally {
        if (tempFile != null && tempFile.exists()) {
          if (!tempFile.delete()) {
            logger.warn("Failed to delete temporary file: {}", tempFile.getAbsolutePath());
          }
        }
      }
    }

    Perfume savedPerfume = perfumeRepository.save(perfume);
    logger.info("Perfume saved with id {}", savedPerfume.getId());
    return savedPerfume;
  }

  @Override
  @Transactional
  public String deletePerfume(Long perfumeId) {
    logger.info("Deleting perfume with id {}", perfumeId);
    Perfume perfume =
        perfumeRepository
            .findById(perfumeId)
            .orElseThrow(
                () -> {
                  logger.warn("Perfume not found with id (delete perfume) {}", perfumeId);
                  return new ApiRequestException(PERFUME_NOT_FOUND, HttpStatus.NOT_FOUND);
                });
    perfumeRepository.delete(perfume);
    logger.info("Perfume with id {} deleted successfully", perfumeId);
    return "Perfume deleted successfully";
  }

  @Override
  public DataFetcher<Perfume> getPerfumeByQuery() {
    return dataFetchingEnvironment -> {
      String perfumeIdStr = dataFetchingEnvironment.getArgument("id");
      if (perfumeIdStr == null) {
        logger.warn("GraphQL query: perfume id is null");
        return null; // Or throw an appropriate GraphQL exception
      }
      Long perfumeId = Long.parseLong(perfumeIdStr);
      logger.info("GraphQL query: fetching perfume by id {}", perfumeId);
      return perfumeRepository
          .findById(perfumeId)
          .orElse(null); // Or throw an appropriate GraphQL exception if not found
    };
  }

  @Override
  public DataFetcher<List<PerfumeProjection>> getAllPerfumesByQuery() {
    return dataFetchingEnvironment -> {
      logger.info("GraphQL query: fetching all perfumes");
      return perfumeRepository.findAllByOrderByIdAsc();
    };
  }

  @Override
  public DataFetcher<List<Perfume>> getAllPerfumesByIdsQuery() {
    return dataFetchingEnvironment -> {
      List<String> objects = dataFetchingEnvironment.getArgument("ids");
      if (objects == null) {
        logger.warn("GraphQL query: perfume ids list is null");
        return List.of(); // Or throw an appropriate GraphQL exception
      }
      List<Long> perfumesId = objects.stream().map(Long::parseLong).collect(Collectors.toList());
      logger.info("GraphQL query: fetching perfumes by ids {}", perfumesId);
      return perfumeRepository.findByIdIn(perfumesId);
    };
  }
}
------[0m
[0m2025-06-16 21:23:02 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java[0m
[0m2025-06-16 21:23:02 [0;34m[DEBUG][0m   FILE_STATUS (ReviewServiceImpl.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:02 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java, FILE_NAME: ReviewServiceImpl.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:23:02 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:23:02 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:02 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java][0m
[0m2025-06-16 21:23:03 [0;34m[INFO][0m    - File:[0;37m[ReviewServiceImpl.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:23:03 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.service.Impl;

import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.PERFUME_NOT_FOUND;

import com.gmail.merikbest2015.ecommerce.domain.Perfume;
import com.gmail.merikbest2015.ecommerce.domain.Review;
import com.gmail.merikbest2015.ecommerce.exception.ApiRequestException;
import com.gmail.merikbest2015.ecommerce.repository.PerfumeRepository;
import com.gmail.merikbest2015.ecommerce.repository.ReviewRepository;
import com.gmail.merikbest2015.ecommerce.service.ReviewService;
import java.util.List;
import lombok.RequiredArgsConstructor;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

@Service
@RequiredArgsConstructor
public class ReviewServiceImpl implements ReviewService {

  private static final Logger logger = LoggerFactory.getLogger(ReviewServiceImpl.class);

  private final PerfumeRepository perfumeRepository;
  private final ReviewRepository reviewRepository;

  @Override
  public List<Review> getReviewsByPerfumeId(Long perfumeId) {
    logger.info("Fetching reviews for perfume with id {}", perfumeId);
    Perfume perfume =
        perfumeRepository
            .findById(perfumeId)
            .orElseThrow(
                () -> {
                  logger.warn("Perfume not found with id {}", perfumeId);
                  return new ApiRequestException(PERFUME_NOT_FOUND, HttpStatus.NOT_FOUND);
                });
    return perfume.getReviews();
  }

  @Override
  @Transactional
  public Review addReviewToPerfume(Review review, Long perfumeId) {
    logger.info("Adding review for perfume id {}, rating {}", perfumeId, review.getRating());
    Perfume perfume =
        perfumeRepository
            .findById(perfumeId)
            .orElseThrow(
                () -> {
                  logger.warn("Perfume not found with id {}", perfumeId);
                  return new ApiRequestException(PERFUME_NOT_FOUND, HttpStatus.NOT_FOUND);
                });

    List<Review> reviews = perfume.getReviews();
    reviews.add(review);
    double totalReviews = reviews.size();
    double sumRating = reviews.stream().mapToInt(Review::getRating).sum();
    double averageRating = sumRating / totalReviews;
    perfume.setPerfumeRating(averageRating);

    logger.info("Updated perfume rating to {}", averageRating);
    return reviewRepository.save(review);
  }
}
------[0m
[0m2025-06-16 21:23:03 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.service.Impl;

import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.PERFUME_NOT_FOUND;

import com.gmail.merikbest2015.ecommerce.domain.Perfume;
import com.gmail.merikbest2015.ecommerce.domain.Review;
import com.gmail.merikbest2015.ecommerce.exception.ApiRequestException;
import com.gmail.merikbest2015.ecommerce.repository.PerfumeRepository;
import com.gmail.merikbest2015.ecommerce.repository.ReviewRepository;
import com.gmail.merikbest2015.ecommerce.service.ReviewService;
import java.util.List;
import lombok.RequiredArgsConstructor;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

@Service
@RequiredArgsConstructor
public class ReviewServiceImpl implements ReviewService {

  private static final Logger logger = LoggerFactory.getLogger(ReviewServiceImpl.class);

  private final PerfumeRepository perfumeRepository;
  private final ReviewRepository reviewRepository;

  @Override
  public List<Review> getReviewsByPerfumeId(Long perfumeId) {
    logger.info("Fetching reviews for perfume with id {}", perfumeId);
    Perfume perfume =
        perfumeRepository
            .findById(perfumeId)
            .orElseThrow(
                () -> {
                  logger.warn("Perfume not found with id {}", perfumeId);
                  return new ApiRequestException(PERFUME_NOT_FOUND, HttpStatus.NOT_FOUND);
                });
    return perfume.getReviews();
  }

  @Override
  @Transactional
  public Review addReviewToPerfume(Review review, Long perfumeId) {
    logger.info("Adding review for perfume id {}, rating {}", perfumeId, review.getRating());
    Perfume perfume =
        perfumeRepository
            .findById(perfumeId)
            .orElseThrow(
                () -> {
                  logger.warn("Perfume not found with id {}", perfumeId);
                  return new ApiRequestException(PERFUME_NOT_FOUND, HttpStatus.NOT_FOUND);
                });

    List<Review> reviews = perfume.getReviews();
    reviews.add(review);
    double totalReviews = reviews.size();
    double sumRating = reviews.stream().mapToInt(Review::getRating).sum();
    double averageRating = sumRating / totalReviews;
    perfume.setPerfumeRating(averageRating);

    logger.info("Updated perfume rating to {}", averageRating);
    return reviewRepository.save(review);
  }
}
------[0m
[0m2025-06-16 21:23:03 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java[0m
[0m2025-06-16 21:23:03 [0;34m[DEBUG][0m   FILE_STATUS (UserServiceImpl.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:03 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java, FILE_NAME: UserServiceImpl.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:23:03 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:23:03 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:03 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java][0m
[0m2025-06-16 21:23:03 [0;34m[INFO][0m    - File:[0;37m[UserServiceImpl.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:23:03 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.service.Impl;

import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.EMAIL_NOT_FOUND;
import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.USER_NOT_FOUND;

import com.gmail.merikbest2015.ecommerce.domain.Perfume;
import com.gmail.merikbest2015.ecommerce.domain.User;
import com.gmail.merikbest2015.ecommerce.exception.ApiRequestException;
import com.gmail.merikbest2015.ecommerce.repository.PerfumeRepository;
import com.gmail.merikbest2015.ecommerce.repository.UserRepository;
import com.gmail.merikbest2015.ecommerce.service.UserService;
import graphql.schema.DataFetcher;
import java.util.List;
import lombok.RequiredArgsConstructor;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.http.HttpStatus;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

@Service
@RequiredArgsConstructor
public class UserServiceImpl implements UserService {

  private static final Logger logger = LoggerFactory.getLogger(UserServiceImpl.class);

  private final UserRepository userRepository;
  private final PerfumeRepository perfumeRepository;

  @Override
  public User getUserById(Long userId) {
    logger.info("Fetching user by id: {}", userId);
    return userRepository
        .findById(userId)
        .orElseThrow(
            () -> {
              logger.warn("User not found with id: {}", userId);
              return new ApiRequestException(USER_NOT_FOUND, HttpStatus.NOT_FOUND);
            });
  }

  @Override
  public User getUserInfo(String email) {
    logger.info("Fetching user info by email: {}", email);
    return userRepository
        .findByEmail(email)
        .orElseThrow(
            () -> {
              logger.warn("Email not found: {}", email);
              return new ApiRequestException(EMAIL_NOT_FOUND, HttpStatus.NOT_FOUND);
            });
  }

  @Override
  public Page<User> getAllUsers(Pageable pageable) {
    logger.info("Fetching all users with pagination: {}", pageable);
    return userRepository.findAllByOrderByIdAsc(pageable);
  }

  @Override
  public List<Perfume> getCart(List<Long> perfumeIds) {
    logger.info("Fetching perfumes for cart with ids: {}", perfumeIds);
    return perfumeRepository.findByIdIn(perfumeIds);
  }

  @Override
  @Transactional
  public User updateUserInfo(String email, User user) {
    logger.info("Updating user info for email: {}", email);
    User userFromDb =
        userRepository
            .findByEmail(email)
            .orElseThrow(
                () -> {
                  logger.warn("Email not found while updating: {}", email);
                  return new ApiRequestException(EMAIL_NOT_FOUND, HttpStatus.NOT_FOUND);
                });
    userFromDb.setFirstName(user.getFirstName());
    userFromDb.setLastName(user.getLastName());
    userFromDb.setCity(user.getCity());
    userFromDb.setAddress(user.getAddress());
    userFromDb.setPhoneNumber(user.getPhoneNumber());
    userFromDb.setPostIndex(user.getPostIndex());
    logger.info("User info updated for email: {}", email);
    return userFromDb;
  }

  @Override
  public DataFetcher<User> getUserByQuery() {
    return dataFetchingEnvironment -> {
      Long userId = Long.parseLong(dataFetchingEnvironment.getArgument("id"));
      logger.info("GraphQL query: getUserById with id {}", userId);
      return userRepository.findById(userId).get();
    };
  }

  @Override
  public DataFetcher<List<User>> getAllUsersByQuery() {
    return dataFetchingEnvironment -> {
      logger.info("GraphQL query: getAllUsers");
      return userRepository.findAllByOrderByIdAsc();
    };
  }
}
------[0m
[0m2025-06-16 21:23:03 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.service.Impl;

import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.EMAIL_NOT_FOUND;
import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.USER_NOT_FOUND;

import com.gmail.merikbest2015.ecommerce.domain.Perfume;
import com.gmail.merikbest2015.ecommerce.domain.User;
import com.gmail.merikbest2015.ecommerce.exception.ApiRequestException;
import com.gmail.merikbest2015.ecommerce.repository.PerfumeRepository;
import com.gmail.merikbest2015.ecommerce.repository.UserRepository;
import com.gmail.merikbest2015.ecommerce.service.UserService;
import graphql.schema.DataFetcher;
import java.util.List;
import lombok.RequiredArgsConstructor;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.http.HttpStatus;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

@Service
@RequiredArgsConstructor
public class UserServiceImpl implements UserService {

  private static final Logger logger = LoggerFactory.getLogger(UserServiceImpl.class);

  private final UserRepository userRepository;
  private final PerfumeRepository perfumeRepository;

  @Override
  public User getUserById(Long userId) {
    logger.info("Fetching user by id: {}", userId);
    return userRepository
        .findById(userId)
        .orElseThrow(
            () -> {
              logger.warn("User not found with id: {}", userId);
              return new ApiRequestException(USER_NOT_FOUND, HttpStatus.NOT_FOUND);
            });
  }

  @Override
  public User getUserInfo(String email) {
    logger.info("Fetching user info by email: {}", email);
    return userRepository
        .findByEmail(email)
        .orElseThrow(
            () -> {
              logger.warn("Email not found: {}", email);
              return new ApiRequestException(EMAIL_NOT_FOUND, HttpStatus.NOT_FOUND);
            });
  }

  @Override
  public Page<User> getAllUsers(Pageable pageable) {
    logger.info("Fetching all users with pagination: {}", pageable);
    return userRepository.findAllByOrderByIdAsc(pageable);
  }

  @Override
  public List<Perfume> getCart(List<Long> perfumeIds) {
    logger.info("Fetching perfumes for cart with ids: {}", perfumeIds);
    return perfumeRepository.findByIdIn(perfumeIds);
  }

  @Override
  @Transactional
  public User updateUserInfo(String email, User user) {
    logger.info("Updating user info for email: {}", email);
    User userFromDb =
        userRepository
            .findByEmail(email)
            .orElseThrow(
                () -> {
                  logger.warn("Email not found while updating: {}", email);
                  return new ApiRequestException(EMAIL_NOT_FOUND, HttpStatus.NOT_FOUND);
                });
    userFromDb.setFirstName(user.getFirstName());
    userFromDb.setLastName(user.getLastName());
    userFromDb.setCity(user.getCity());
    userFromDb.setAddress(user.getAddress());
    userFromDb.setPhoneNumber(user.getPhoneNumber());
    userFromDb.setPostIndex(user.getPostIndex());
    logger.info("User info updated for email: {}", email);
    return userFromDb;
  }

  @Override
  public DataFetcher<User> getUserByQuery() {
    return dataFetchingEnvironment -> {
      Long userId = Long.parseLong(dataFetchingEnvironment.getArgument("id"));
      logger.info("GraphQL query: getUserById with id {}", userId);
      return userRepository.findById(userId).get();
    };
  }

  @Override
  public DataFetcher<List<User>> getAllUsersByQuery() {
    return dataFetchingEnvironment -> {
      logger.info("GraphQL query: getAllUsers");
      return userRepository.findAllByOrderByIdAsc();
    };
  }
}
------[0m
[0m2025-06-16 21:23:03 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/OrderService.java[0m
[0m2025-06-16 21:23:03 [0;34m[DEBUG][0m   FILE_STATUS (OrderService.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:03 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/OrderService.java, FILE_NAME: OrderService.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:23:03 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:23:03 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:03 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/OrderService.java][0m
[0m2025-06-16 21:23:04 [0;34m[INFO][0m    - File:[0;37m[OrderService.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:23:04 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.service;

import com.gmail.merikbest2015.ecommerce.domain.Order;
import com.gmail.merikbest2015.ecommerce.domain.OrderItem;
import graphql.schema.DataFetcher;
import java.util.List;
import java.util.Map;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

public interface OrderService {

  Order getOrderById(Long orderId);

  List<OrderItem> getOrderItemsByOrderId(Long orderId);

  Page<Order> getAllOrders(Pageable pageable);

  Page<Order> getUserOrders(String email, Pageable pageable);

  Order postOrder(Order validOrder, Map<Long, Long> perfumesId);

  String deleteOrder(Long orderId);

  DataFetcher<List<Order>> getAllOrdersByQuery();

  DataFetcher<List<Order>> getUserOrdersByEmailQuery();
}
------[0m
[0m2025-06-16 21:23:04 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.service;

import com.gmail.merikbest2015.ecommerce.domain.Order;
import com.gmail.merikbest2015.ecommerce.domain.OrderItem;
import graphql.schema.DataFetcher;
import java.util.List;
import java.util.Map;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

public interface OrderService {

  Order getOrderById(Long orderId);

  List<OrderItem> getOrderItemsByOrderId(Long orderId);

  Page<Order> getAllOrders(Pageable pageable);

  Page<Order> getUserOrders(String email, Pageable pageable);

  Order postOrder(Order validOrder, Map<Long, Long> perfumesId);

  String deleteOrder(Long orderId);

  DataFetcher<List<Order>> getAllOrdersByQuery();

  DataFetcher<List<Order>> getUserOrdersByEmailQuery();
}
------[0m
[0m2025-06-16 21:23:04 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java[0m
[0m2025-06-16 21:23:04 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeService.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:04 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java, FILE_NAME: PerfumeService.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:23:04 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:23:04 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:04 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java][0m
[0m2025-06-16 21:23:04 [0;34m[INFO][0m    - File:[0;37m[PerfumeService.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:23:04 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.service;

import com.gmail.merikbest2015.ecommerce.domain.Perfume;
import com.gmail.merikbest2015.ecommerce.dto.perfume.PerfumeSearchRequest;
import com.gmail.merikbest2015.ecommerce.enums.SearchPerfume;
import com.gmail.merikbest2015.ecommerce.repository.projection.PerfumeProjection;
import graphql.schema.DataFetcher;
import java.util.List;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.web.multipart.MultipartFile;

public interface PerfumeService {

  Perfume getPerfumeById(Long perfumeId);

  Page<PerfumeProjection> getAllPerfumes(Pageable pageable);

  List<PerfumeProjection> getPerfumesByIds(List<Long> perfumesId);

  Page<PerfumeProjection> findPerfumesByFilterParams(
      PerfumeSearchRequest filter, Pageable pageable);

  List<Perfume> findByPerfumer(String perfumer);

  List<Perfume> findByPerfumeGender(String perfumeGender);

  Page<PerfumeProjection> findByInputText(SearchPerfume searchType, String text, Pageable pageable);

  Perfume savePerfume(Perfume perfume, MultipartFile file);

  String deletePerfume(Long perfumeId);

  DataFetcher<Perfume> getPerfumeByQuery();

  DataFetcher<List<PerfumeProjection>> getAllPerfumesByQuery();

  DataFetcher<List<Perfume>> getAllPerfumesByIdsQuery();
}
------[0m
[0m2025-06-16 21:23:04 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.service;

import com.gmail.merikbest2015.ecommerce.domain.Perfume;
import com.gmail.merikbest2015.ecommerce.dto.perfume.PerfumeSearchRequest;
import com.gmail.merikbest2015.ecommerce.enums.SearchPerfume;
import com.gmail.merikbest2015.ecommerce.repository.projection.PerfumeProjection;
import graphql.schema.DataFetcher;
import java.util.List;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.web.multipart.MultipartFile;

public interface PerfumeService {

  Perfume getPerfumeById(Long perfumeId);

  Page<PerfumeProjection> getAllPerfumes(Pageable pageable);

  List<PerfumeProjection> getPerfumesByIds(List<Long> perfumesId);

  Page<PerfumeProjection> findPerfumesByFilterParams(
      PerfumeSearchRequest filter, Pageable pageable);

  List<Perfume> findByPerfumer(String perfumer);

  List<Perfume> findByPerfumeGender(String perfumeGender);

  Page<PerfumeProjection> findByInputText(SearchPerfume searchType, String text, Pageable pageable);

  Perfume savePerfume(Perfume perfume, MultipartFile file);

  String deletePerfume(Long perfumeId);

  DataFetcher<Perfume> getPerfumeByQuery();

  DataFetcher<List<PerfumeProjection>> getAllPerfumesByQuery();

  DataFetcher<List<Perfume>> getAllPerfumesByIdsQuery();
}
------[0m
[0m2025-06-16 21:23:04 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/ReviewService.java[0m
[0m2025-06-16 21:23:04 [0;34m[DEBUG][0m   FILE_STATUS (ReviewService.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:04 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/ReviewService.java, FILE_NAME: ReviewService.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:23:04 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:23:04 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:04 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/ReviewService.java][0m
[0m2025-06-16 21:23:05 [0;34m[INFO][0m    - File:[0;37m[ReviewService.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:23:05 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.service;

import com.gmail.merikbest2015.ecommerce.domain.Review;
import java.util.List;

public interface ReviewService {

  List<Review> getReviewsByPerfumeId(Long perfumeId);

  Review addReviewToPerfume(Review review, Long perfumeId);
}
------[0m
[0m2025-06-16 21:23:05 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.service;

import com.gmail.merikbest2015.ecommerce.domain.Review;
import java.util.List;

public interface ReviewService {

  List<Review> getReviewsByPerfumeId(Long perfumeId);

  Review addReviewToPerfume(Review review, Long perfumeId);
}
------[0m
[0m2025-06-16 21:23:05 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/UserService.java[0m
[0m2025-06-16 21:23:05 [0;34m[DEBUG][0m   FILE_STATUS (UserService.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:05 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/UserService.java, FILE_NAME: UserService.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:23:05 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:23:05 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:05 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/UserService.java][0m
[0m2025-06-16 21:23:05 [0;34m[INFO][0m    - File:[0;37m[UserService.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:23:05 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.service;

import com.gmail.merikbest2015.ecommerce.domain.Perfume;
import com.gmail.merikbest2015.ecommerce.domain.User;
import graphql.schema.DataFetcher;
import java.util.List;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

public interface UserService {

  User getUserById(Long userId);

  User getUserInfo(String email);

  Page<User> getAllUsers(Pageable pageable);

  List<Perfume> getCart(List<Long> perfumeIds);

  User updateUserInfo(String email, User user);

  DataFetcher<List<User>> getAllUsersByQuery();

  DataFetcher<User> getUserByQuery();
}
------[0m
[0m2025-06-16 21:23:05 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.service;

import com.gmail.merikbest2015.ecommerce.domain.Perfume;
import com.gmail.merikbest2015.ecommerce.domain.User;
import graphql.schema.DataFetcher;
import java.util.List;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

public interface UserService {

  User getUserById(Long userId);

  User getUserInfo(String email);

  Page<User> getAllUsers(Pageable pageable);

  List<Perfume> getCart(List<Long> perfumeIds);

  User updateUserInfo(String email, User user);

  DataFetcher<List<User>> getAllUsersByQuery();

  DataFetcher<User> getUserByQuery();
}
------[0m
[0m2025-06-16 21:23:05 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java[0m
[0m2025-06-16 21:23:05 [0;34m[DEBUG][0m   FILE_STATUS (MailSender.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:05 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java, FILE_NAME: MailSender.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:23:05 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:23:05 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:05 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java][0m
[0m2025-06-16 21:23:06 [0;34m[INFO][0m    - File:[0;37m[MailSender.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:23:06 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.service.email;

import jakarta.mail.internet.MimeMessage;
import java.util.Map;
import lombok.RequiredArgsConstructor;
import lombok.SneakyThrows;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.mail.javamail.MimeMessageHelper;
import org.springframework.messaging.MessagingException;
import org.springframework.stereotype.Service;
import org.thymeleaf.context.Context;
import org.thymeleaf.spring6.SpringTemplateEngine;

@Service
@RequiredArgsConstructor
public class MailSender {

  private final JavaMailSender mailSender;
  private final SpringTemplateEngine thymeleafTemplateEngine;

  @Value("${spring.mail.username}")
  private String username;

  @SneakyThrows
  public void sendMessageHtml(
      String to, String subject, String template, Map<String, Object> attributes)
      throws MessagingException {
    Context thymeleafContext = new Context();
    thymeleafContext.setVariables(attributes);
    String htmlBody = thymeleafTemplateEngine.process(template, thymeleafContext);
    MimeMessage message = mailSender.createMimeMessage();
    MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");
    helper.setFrom(username);
    helper.setTo(to);
    helper.setSubject(subject);
    helper.setText(htmlBody, true);
    mailSender.send(message);
  }
}
------[0m
[0m2025-06-16 21:23:06 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.service.email;

import jakarta.mail.internet.MimeMessage;
import java.util.Map;
import lombok.RequiredArgsConstructor;
import lombok.SneakyThrows;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.mail.javamail.MimeMessageHelper;
import org.springframework.messaging.MessagingException;
import org.springframework.stereotype.Service;
import org.thymeleaf.context.Context;
import org.thymeleaf.spring6.SpringTemplateEngine;

@Service
@RequiredArgsConstructor
public class MailSender {

  private final JavaMailSender mailSender;
  private final SpringTemplateEngine thymeleafTemplateEngine;

  @Value("${spring.mail.username}")
  private String username;

  @SneakyThrows
  public void sendMessageHtml(
      String to, String subject, String template, Map<String, Object> attributes)
      throws MessagingException {
    Context thymeleafContext = new Context();
    thymeleafContext.setVariables(attributes);
    String htmlBody = thymeleafTemplateEngine.process(template, thymeleafContext);
    MimeMessage message = mailSender.createMimeMessage();
    MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");
    helper.setFrom(username);
    helper.setTo(to);
    helper.setSubject(subject);
    helper.setText(htmlBody, true);
    mailSender.send(message);
  }
}
------[0m
[0m2025-06-16 21:23:06 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java[0m
[0m2025-06-16 21:23:06 [0;34m[DEBUG][0m   FILE_STATUS (GraphQLProvider.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:06 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java, FILE_NAME: GraphQLProvider.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:23:06 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:23:06 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:06 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java][0m
[0m2025-06-16 21:23:06 [0;34m[INFO][0m    - File:[0;37m[GraphQLProvider.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:23:06 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.service.graphql;

import com.gmail.merikbest2015.ecommerce.service.OrderService;
import com.gmail.merikbest2015.ecommerce.service.PerfumeService;
import com.gmail.merikbest2015.ecommerce.service.UserService;
import graphql.GraphQL;
import graphql.schema.GraphQLSchema;
import graphql.schema.idl.RuntimeWiring;
import graphql.schema.idl.SchemaGenerator;
import graphql.schema.idl.SchemaParser;
import graphql.schema.idl.TypeDefinitionRegistry;
import jakarta.annotation.PostConstruct;
import java.io.IOException;
import java.io.InputStream;
import java.nio.charset.StandardCharsets;
import lombok.Getter;
import lombok.RequiredArgsConstructor;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.core.io.Resource;
import org.springframework.stereotype.Component;

@Component
@RequiredArgsConstructor
public class GraphQLProvider {

  private final PerfumeService perfumeService;
  private final OrderService orderService;
  private final UserService userService;

  @Value("classpath:graphql/schemas.graphql")
  private Resource resource;

  @Getter private GraphQL graphQL;

  @PostConstruct
  public void loadSchema() throws IOException {
    // Use InputStream instead of File
    try (InputStream inputStream = resource.getInputStream()) {
      // Read the InputStream into a String manually
      StringBuilder schemaStringBuilder = new StringBuilder();
      byte[] buffer = new byte[1024];
      int bytesRead;

      // Read bytes from the InputStream into the buffer
      while ((bytesRead = inputStream.read(buffer)) != -1) {
        schemaStringBuilder.append(new String(buffer, 0, bytesRead, StandardCharsets.UTF_8));
      }

      // Convert StringBuilder to String
      String schemaString = schemaStringBuilder.toString();

      // Parse the schema string
      TypeDefinitionRegistry typeRegistry = new SchemaParser().parse(schemaString);
      RuntimeWiring wiring = buildRuntimeWiring();
      GraphQLSchema schema = new SchemaGenerator().makeExecutableSchema(typeRegistry, wiring);
      graphQL = GraphQL.newGraphQL(schema).build();
    }
  }

  private RuntimeWiring buildRuntimeWiring() {
    return RuntimeWiring.newRuntimeWiring()
        .type(
            "Query",
            typeWiring ->
                typeWiring
                    .dataFetcher("perfumes", perfumeService.getAllPerfumesByQuery())
                    .dataFetcher("perfumesIds", perfumeService.getAllPerfumesByIdsQuery())
                    .dataFetcher("perfume", perfumeService.getPerfumeByQuery())
                    .dataFetcher("orders", orderService.getAllOrdersByQuery())
                    .dataFetcher("ordersByEmail", orderService.getUserOrdersByEmailQuery())
                    .dataFetcher("users", userService.getAllUsersByQuery())
                    .dataFetcher("user", userService.getUserByQuery()))
        .build();
  }
}
------[0m
[0m2025-06-16 21:23:06 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.service.graphql;

import com.gmail.merikbest2015.ecommerce.service.OrderService;
import com.gmail.merikbest2015.ecommerce.service.PerfumeService;
import com.gmail.merikbest2015.ecommerce.service.UserService;
import graphql.GraphQL;
import graphql.schema.GraphQLSchema;
import graphql.schema.idl.RuntimeWiring;
import graphql.schema.idl.SchemaGenerator;
import graphql.schema.idl.SchemaParser;
import graphql.schema.idl.TypeDefinitionRegistry;
import jakarta.annotation.PostConstruct;
import java.io.IOException;
import java.io.InputStream;
import java.nio.charset.StandardCharsets;
import lombok.Getter;
import lombok.RequiredArgsConstructor;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.core.io.Resource;
import org.springframework.stereotype.Component;

@Component
@RequiredArgsConstructor
public class GraphQLProvider {

  private final PerfumeService perfumeService;
  private final OrderService orderService;
  private final UserService userService;

  @Value("classpath:graphql/schemas.graphql")
  private Resource resource;

  @Getter private GraphQL graphQL;

  @PostConstruct
  public void loadSchema() throws IOException {
    // Use InputStream instead of File
    try (InputStream inputStream = resource.getInputStream()) {
      // Read the InputStream into a String manually
      StringBuilder schemaStringBuilder = new StringBuilder();
      byte[] buffer = new byte[1024];
      int bytesRead;

      // Read bytes from the InputStream into the buffer
      while ((bytesRead = inputStream.read(buffer)) != -1) {
        schemaStringBuilder.append(new String(buffer, 0, bytesRead, StandardCharsets.UTF_8));
      }

      // Convert StringBuilder to String
      String schemaString = schemaStringBuilder.toString();

      // Parse the schema string
      TypeDefinitionRegistry typeRegistry = new SchemaParser().parse(schemaString);
      RuntimeWiring wiring = buildRuntimeWiring();
      GraphQLSchema schema = new SchemaGenerator().makeExecutableSchema(typeRegistry, wiring);
      graphQL = GraphQL.newGraphQL(schema).build();
    }
  }

  private RuntimeWiring buildRuntimeWiring() {
    return RuntimeWiring.newRuntimeWiring()
        .type(
            "Query",
            typeWiring ->
                typeWiring
                    .dataFetcher("perfumes", perfumeService.getAllPerfumesByQuery())
                    .dataFetcher("perfumesIds", perfumeService.getAllPerfumesByIdsQuery())
                    .dataFetcher("perfume", perfumeService.getPerfumeByQuery())
                    .dataFetcher("orders", orderService.getAllOrdersByQuery())
                    .dataFetcher("ordersByEmail", orderService.getUserOrdersByEmailQuery())
                    .dataFetcher("users", userService.getAllUsersByQuery())
                    .dataFetcher("user", userService.getUserByQuery()))
        .build();
  }
}
------[0m
[0m2025-06-16 21:23:06 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/EcommerceApplicationTests.java[0m
[0m2025-06-16 21:23:06 [0;34m[DEBUG][0m   FILE_STATUS (EcommerceApplicationTests.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:06 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/EcommerceApplicationTests.java, FILE_NAME: EcommerceApplicationTests.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:23:06 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:23:06 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:06 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/EcommerceApplicationTests.java][0m
[0m2025-06-16 21:23:07 [0;34m[INFO][0m    - File:[0;37m[EcommerceApplicationTests.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:23:07 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce;

import org.junit.jupiter.api.Test;
import org.springframework.boot.test.context.SpringBootTest;

@SpringBootTest
class EcommerceApplicationTests {

  @Test
  void contextLoads() {}

  @Test
  public void main() {
    EcommerceApplication.main(new String[] {});
  }
}
------[0m
[0m2025-06-16 21:23:07 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce;

import org.junit.jupiter.api.Test;
import org.springframework.boot.test.context.SpringBootTest;

@SpringBootTest
class EcommerceApplicationTests {

  @Test
  void contextLoads() {}

  @Test
  public void main() {
    EcommerceApplication.main(new String[] {});
  }
}
------[0m
[0m2025-06-16 21:23:07 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java[0m
[0m2025-06-16 21:23:07 [0;34m[DEBUG][0m   FILE_STATUS (AdminControllerTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:07 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java, FILE_NAME: AdminControllerTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:23:07 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:23:07 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:07 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java][0m
[0m2025-06-16 21:23:08 [0;34m[INFO][0m    - File:[0;37m[AdminControllerTest.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:23:08 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.controller;

import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.*;
import static com.gmail.merikbest2015.ecommerce.constants.PathConstants.*;
import static com.gmail.merikbest2015.ecommerce.util.TestConstants.*;
import static org.hamcrest.Matchers.*;
import static org.mockito.Mockito.when;
import static org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestPostProcessors.csrf;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.gmail.merikbest2015.ecommerce.dto.GraphQLRequest;
import com.gmail.merikbest2015.ecommerce.dto.perfume.PerfumeRequest;
import java.io.FileInputStream;
import java.net.MalformedURLException;
import java.net.URL;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mockito; // Adicionado
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.http.MediaType;
import org.springframework.mock.web.MockMultipartFile;
import org.springframework.security.test.context.support.WithMockUser;
import org.springframework.test.context.TestPropertySource;
import org.springframework.test.context.bean.override.mockito.MockitoBean;
import org.springframework.test.context.jdbc.Sql;
import org.springframework.test.context.junit.jupiter.SpringExtension;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.web.context.WebApplicationContext;
import software.amazon.awssdk.services.s3.S3Client;
import software.amazon.awssdk.services.s3.S3Utilities; // Adicionado
import software.amazon.awssdk.services.s3.model.GetUrlRequest;

@SpringBootTest
@ExtendWith(SpringExtension.class)
@AutoConfigureMockMvc
// @WithUserDetails(ADMIN_EMAIL)
@WithMockUser(username = ADMIN_EMAIL, authorities = "ADMIN")
@TestPropertySource("/application-test.properties")
@Sql(
    value = {
      "/sql/create-user-before.sql",
      "/sql/create-perfumes-before.sql",
      "/sql/create-orders-before.sql"
    },
    executionPhase = Sql.ExecutionPhase.BEFORE_TEST_METHOD)
@Sql(
    value = {
      "/sql/create-orders-after.sql",
      "/sql/create-perfumes-after.sql",
      "/sql/create-user-after.sql"
    },
    executionPhase = Sql.ExecutionPhase.AFTER_TEST_METHOD)
public class AdminControllerTest {
  @MockitoBean private S3Client s3Client; // Changed from AmazonS3 to S3Client
  @Autowired private MockMvc mockMvc;

  @Autowired private ObjectMapper mapper;

  @Autowired private WebApplicationContext webApplicationContext;

  private GraphQLRequest graphQLRequest;
  private PerfumeRequest perfumeRequest;

  @BeforeEach
  public void init() throws MalformedURLException {
    URL fakeUrl = new URL("https://fake-s3-url.com/fake-image.jpg");
    // Updated to mock S3Client\'s utilities().getUrl() method using fully qualified name for any()
    S3Utilities mockS3Utilities = Mockito.mock(S3Utilities.class);
    when(s3Client.utilities()).thenReturn(mockS3Utilities);
    when(mockS3Utilities.getUrl(org.mockito.ArgumentMatchers.any(GetUrlRequest.class)))
        .thenReturn(fakeUrl);
    graphQLRequest = new GraphQLRequest();
    perfumeRequest = new PerfumeRequest();
    perfumeRequest.setPerfumer(PERFUMER_CHANEL);
    perfumeRequest.setPerfumeTitle(PERFUME_TITLE);
    perfumeRequest.setYear(YEAR);
    perfumeRequest.setCountry(COUNTRY);
    perfumeRequest.setPerfumeGender(PERFUME_GENDER);
    perfumeRequest.setFragranceTopNotes(FRAGRANCE_TOP_NOTES);
    perfumeRequest.setFragranceMiddleNotes(FRAGRANCE_MIDDLE_NOTES);
    perfumeRequest.setFragranceBaseNotes(FRAGRANCE_BASE_NOTES);
    perfumeRequest.setPrice(PRICE);
    perfumeRequest.setVolume(VOLUME);
    perfumeRequest.setType(TYPE);
  }

  @Test
  @DisplayName("[200] POST /api/v1/admin/add - Add Perfume")
  public void addPerfume() throws Exception {
    FileInputStream inputFile = new FileInputStream(FILE_PATH);
    MockMultipartFile multipartFile =
        new MockMultipartFile("file", FILE_NAME, MediaType.MULTIPART_FORM_DATA_VALUE, inputFile);
    MockMultipartFile jsonFile =
        new MockMultipartFile(
            "perfume",
            "",
            MediaType.APPLICATION_JSON_VALUE,
            mapper.writeValueAsString(perfumeRequest).getBytes());

    this.mockMvc
        .perform(
            multipart(API_V1_ADMIN + ADD)
                .file(multipartFile)
                .file(jsonFile)
                .with(csrf())) // Adicionando token CSRF
        .andExpect(status().isOk());
  }

  @Test
  @DisplayName("[400] POST /api/v1/admin/add - Should Input Fields Are Empty Add Perfume")
  public void addPerfume_ShouldInputFieldsAreEmpty() throws Exception {
    PerfumeRequest perfumeRequest = new PerfumeRequest();
    MockMultipartFile jsonFile =
        new MockMultipartFile(
            "perfume",
            "",
            MediaType.APPLICATION_JSON_VALUE,
            mapper.writeValueAsString(perfumeRequest).getBytes());

    this.mockMvc
        .perform(
            multipart(API_V1_ADMIN + ADD)
                .file(jsonFile)
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf())) // Adicionando token CSRF
        .andExpect(status().isBadRequest())
        .andExpect(jsonPath("$.perfumeTitleError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.perfumerError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.yearError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.countryError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.perfumeGenderError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.fragranceTopNotesError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.fragranceMiddleNotesError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.fragranceBaseNotesError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.priceError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.volumeError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.typeError", is(FILL_IN_THE_INPUT_FIELD)));
  }

  @Test
  @DisplayName("[200] POST /api/v1/admin/edit - Edit Perfume")
  public void editPerfume() throws Exception {
    FileInputStream inputFile = new FileInputStream(FILE_PATH);
    MockMultipartFile multipartFile =
        new MockMultipartFile("file", FILE_NAME, MediaType.MULTIPART_FORM_DATA_VALUE, inputFile);
    MockMultipartFile jsonFileEdit =
        new MockMultipartFile(
            "perfume",
            "",
            MediaType.APPLICATION_JSON_VALUE,
            mapper.writeValueAsString(perfumeRequest).getBytes());
    perfumeRequest.setType("test");
    this.mockMvc
        .perform(
            multipart(API_V1_ADMIN + EDIT)
                .file(multipartFile)
                .file(jsonFileEdit)
                .with(csrf())) // Adicionando token CSRF
        .andExpect(status().isOk());
  }

  @Test
  @DisplayName("[400] POST /api/v1/admin/edit - Should Input Fields Are Empty Edit Perfume")
  public void editPerfume_ShouldInputFieldsAreEmpty() throws Exception {
    PerfumeRequest perfumeRequest = new PerfumeRequest();
    MockMultipartFile jsonFile =
        new MockMultipartFile(
            "perfume",
            "",
            MediaType.APPLICATION_JSON_VALUE,
            mapper.writeValueAsString(perfumeRequest).getBytes());

    this.mockMvc
        .perform(
            multipart(API_V1_ADMIN + EDIT)
                .file(jsonFile)
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf())) // Adicionando token CSRF
        .andExpect(status().isBadRequest())
        .andExpect(jsonPath("$.perfumeTitleError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.perfumerError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.yearError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.countryError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.perfumeGenderError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.fragranceTopNotesError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.fragranceMiddleNotesError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.fragranceBaseNotesError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.priceError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.volumeError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.typeError", is(FILL_IN_THE_INPUT_FIELD)));
  }

  @Test
  @DisplayName("[200] DELETE /api/v1/admin/delete/46 - Delete Perfume")
  public void deletePerfume() throws Exception {
    mockMvc
        .perform(
            delete(API_V1_ADMIN + DELETE_BY_PERFUME_ID, 46)
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf())) // Adicionando token CSRF
        .andExpect(status().isOk())
        .andExpect(jsonPath("$", is("Perfume deleted successfully")));
  }

  @Test
  @DisplayName("[404] DELETE /api/v1/admin/delete/99 - Delete Perfume Should Not Found")
  public void deletePerfume_ShouldNotFound() throws Exception {
    mockMvc
        .perform(
            delete(API_V1_ADMIN + DELETE_BY_PERFUME_ID, 99)
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf())) // Adicionando token CSRF
        .andExpect(status().isNotFound())
        .andExpect(jsonPath("$", is(PERFUME_NOT_FOUND)));
  }

  @Test
  @DisplayName("[200] GET /api/v1/admin/orders - Get All Orders")
  public void getAllOrders() throws Exception {
    mockMvc
        .perform(get(API_V1_ADMIN + ORDERS).contentType(MediaType.APPLICATION_JSON_VALUE))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$[*].id").isNotEmpty())
        .andExpect(jsonPath("$[*].totalPrice", hasItem(TOTAL_PRICE)))
        .andExpect(jsonPath("$[*].date").isNotEmpty())
        .andExpect(jsonPath("$[*].firstName", hasItem(FIRST_NAME)))
        .andExpect(jsonPath("$[*].lastName", hasItem(LAST_NAME)))
        .andExpect(jsonPath("$[*].city", hasItem(CITY)))
        .andExpect(jsonPath("$[*].address", hasItem(ADDRESS)))
        .andExpect(jsonPath("$[*].email", hasItem(USER_EMAIL)))
        .andExpect(jsonPath("$[*].phoneNumber", hasItem(PHONE_NUMBER)))
        .andExpect(jsonPath("$[*].postIndex", hasItem(POST_INDEX)));
  }

  @Test
  @DisplayName("[200] GET /api/v1/admin/order/test123@test.com - Get User Orders By Email")
  public void getUserOrdersByEmail() throws Exception {
    mockMvc
        .perform(
            get(API_V1_ADMIN + ORDER_BY_EMAIL, USER_EMAIL)
                .contentType(MediaType.APPLICATION_JSON_VALUE))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$[*].id").isNotEmpty())
        .andExpect(jsonPath("$[*].totalPrice", hasItem(TOTAL_PRICE)))
        .andExpect(jsonPath("$[*].date").isNotEmpty())
        .andExpect(jsonPath("$[*].firstName", hasItem(FIRST_NAME)))
        .andExpect(jsonPath("$[*].lastName", hasItem(LAST_NAME)))
        .andExpect(jsonPath("$[*].city", hasItem(CITY)))
        .andExpect(jsonPath("$[*].address", hasItem(ADDRESS)))
        .andExpect(jsonPath("$[*].email", hasItem(USER_EMAIL)))
        .andExpect(jsonPath("$[*].phoneNumber", hasItem(PHONE_NUMBER)))
        .andExpect(jsonPath("$[*].postIndex", hasItem(POST_INDEX)));
  }

  @Test
  @DisplayName("[200] DELETE /api/v1/admin/order/delete/111 - Delete Order")
  public void deleteOrder() throws Exception {
    mockMvc
        .perform(
            delete(API_V1_ADMIN + ORDER_DELETE, 111)
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf())) // Adicionando token CSRF
        .andExpect(status().isOk())
        .andExpect(jsonPath("$", is("Order deleted successfully")));
  }

  @Test
  @DisplayName("[404] DELETE /api/v1/admin/order/delete/222 - Delete Order Should Not Found")
  public void deleteOrder_ShouldNotFound() throws Exception {
    mockMvc
        .perform(
            delete(API_V1_ADMIN + ORDER_DELETE, 222)
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf())) // Adicionando token CSRF
        .andExpect(status().isNotFound())
        .andExpect(jsonPath("$", is(ORDER_NOT_FOUND)));
  }

  @Test
  @DisplayName("[200] GET /api/v1/admin/user/122 - Get User by Id")
  public void getUserById() throws Exception {
    mockMvc
        .perform(
            get(API_V1_ADMIN + USER_BY_ID, USER_ID).contentType(MediaType.APPLICATION_JSON_VALUE))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$.id").value(USER_ID))
        .andExpect(jsonPath("$.firstName").value(FIRST_NAME))
        .andExpect(jsonPath("$.email").value(USER_EMAIL));
  }

  @Test
  @DisplayName("[404] GET /api/v1/admin/user/1222 - Should Not Found Get User by Id")
  public void getUserById_ShouldNotFound() throws Exception {
    mockMvc
        .perform(get(API_V1_ADMIN + USER_BY_ID, 1222).contentType(MediaType.APPLICATION_JSON_VALUE))
        .andExpect(status().isNotFound())
        .andExpect(jsonPath("$").value(USER_NOT_FOUND));
  }

  @Test
  @DisplayName("[200] GET /api/v1/admin/user/all - Get All Users")
  public void getAllUsers() throws Exception {
    mockMvc
        .perform(get(API_V1_ADMIN + USER_ALL))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$[*].id", hasItem(USER_ID)))
        .andExpect(jsonPath("$[*].firstName", hasItem(FIRST_NAME)))
        .andExpect(jsonPath("$[*].email", hasItem(USER_EMAIL)));
  }

  @Test
  @DisplayName("[200] POST /api/v1/admin/graphql/user - Get User By Query")
  public void getUserByQuery() throws Exception {
    graphQLRequest.setQuery(GRAPHQL_QUERY_USER);

    mockMvc
        .perform(
            post(API_V1_ADMIN + GRAPHQL_USER)
                .content(mapper.writeValueAsString(graphQLRequest))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf())) // Adicionando token CSRF
        .andExpect(status().isOk())
        .andExpect(jsonPath("$.data.user.id", equalTo(USER_ID)))
        .andExpect(jsonPath("$.data.user.email", equalTo(USER_EMAIL)))
        .andExpect(jsonPath("$.data.user.firstName", equalTo(FIRST_NAME)))
        .andExpect(jsonPath("$.data.user.lastName", equalTo(LAST_NAME)))
        .andExpect(jsonPath("$.data.user.city", equalTo(CITY)))
        .andExpect(jsonPath("$.data.user.address", equalTo(ADDRESS)))
        .andExpect(jsonPath("$.data.user.phoneNumber", equalTo(PHONE_NUMBER)))
        .andExpect(jsonPath("$.data.user.postIndex", equalTo("1234567890")))
        .andExpect(jsonPath("$.data.user.activationCode", equalTo(null)))
        .andExpect(jsonPath("$.data.user.passwordResetCode", equalTo(null)))
        .andExpect(jsonPath("$.data.user.active", equalTo(true)))
        .andExpect(jsonPath("$.data.user.roles[0]", equalTo(ROLE_USER)));
  }

  @Test
  @DisplayName("[200] POST /api/v1/admin/graphql/user/all - Get Users By Query")
  public void getUsersByQuery() throws Exception {
    graphQLRequest.setQuery(GRAPHQL_QUERY_USERS);

    mockMvc
        .perform(
            post(API_V1_ADMIN + GRAPHQL_USER_ALL)
                .content(mapper.writeValueAsString(graphQLRequest))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf())) // Adicionando token CSRF
        .andExpect(status().isOk())
        .andExpect(jsonPath("$.data.users[*].id").isNotEmpty())
        .andExpect(jsonPath("$.data.users[*].email").isNotEmpty())
        .andExpect(jsonPath("$.data.users[*].firstName").isNotEmpty())
        .andExpect(jsonPath("$.data.users[*].lastName").isNotEmpty())
        .andExpect(jsonPath("$.data.users[*].city").isNotEmpty())
        .andExpect(jsonPath("$.data.users[*].address").isNotEmpty())
        .andExpect(jsonPath("$.data.users[*].phoneNumber").isNotEmpty())
        .andExpect(jsonPath("$.data.users[*].postIndex").isNotEmpty())
        .andExpect(jsonPath("$.data.users[*].activationCode").isNotEmpty())
        .andExpect(jsonPath("$.data.users[*].passwordResetCode").isNotEmpty())
        .andExpect(jsonPath("$.data.users[*].active").isNotEmpty())
        .andExpect(jsonPath("$.data.users[*].roles").isNotEmpty());
  }

  @Test
  @DisplayName("[200] POST /api/v1/admin/graphql/orders - Get Orders By Query")
  public void getOrdersByQuery() throws Exception {
    graphQLRequest.setQuery(GRAPHQL_QUERY_ORDERS);

    mockMvc
        .perform(
            post(API_V1_ADMIN + GRAPHQL_ORDERS)
                .content(mapper.writeValueAsString(graphQLRequest))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf())) // Adicionando token CSRF
        .andExpect(status().isOk())
        .andExpect(jsonPath("$.data.orders[*].id").isNotEmpty())
        .andExpect(jsonPath("$.data.orders[*].totalPrice").isNotEmpty())
        .andExpect(jsonPath("$.data.orders[*].date").isNotEmpty())
        .andExpect(jsonPath("$.data.orders[*].firstName").isNotEmpty())
        .andExpect(jsonPath("$.data.orders[*].lastName").isNotEmpty())
        .andExpect(jsonPath("$.data.orders[*].city").isNotEmpty())
        .andExpect(jsonPath("$.data.orders[*].address").isNotEmpty())
        .andExpect(jsonPath("$.data.orders[*].email").isNotEmpty())
        .andExpect(jsonPath("$.data.orders[*].phoneNumber").isNotEmpty())
        .andExpect(jsonPath("$.data.orders[*].postIndex").isNotEmpty())
        .andExpect(jsonPath("$.data.orders[*].orderItems[*].perfume").isNotEmpty());
  }

  @Test
  @DisplayName("[200] POST /api/v1/admin/graphql/order - Get User Orders By Email Query")
  public void getUserOrdersByEmailQuery() throws Exception {
    graphQLRequest.setQuery(GRAPHQL_QUERY_ORDERS_BY_EMAIL);

    mockMvc
        .perform(
            post(API_V1_ADMIN + GRAPHQL_ORDER)
                .content(mapper.writeValueAsString(graphQLRequest))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf())) // Adicionando token CSRF
        .andExpect(status().isOk())
        .andExpect(jsonPath("$.data.ordersByEmail[*].id").isNotEmpty())
        .andExpect(jsonPath("$.data.ordersByEmail[*].totalPrice").isNotEmpty())
        .andExpect(jsonPath("$.data.ordersByEmail[*].date").isNotEmpty())
        .andExpect(jsonPath("$.data.ordersByEmail[*].firstName").isNotEmpty())
        .andExpect(jsonPath("$.data.ordersByEmail[*].lastName").isNotEmpty())
        .andExpect(jsonPath("$.data.ordersByEmail[*].city").isNotEmpty())
        .andExpect(jsonPath("$.data.ordersByEmail[*].address").isNotEmpty())
        .andExpect(jsonPath("$.data.ordersByEmail[*].email").isNotEmpty())
        .andExpect(jsonPath("$.data.ordersByEmail[*].phoneNumber").isNotEmpty())
        .andExpect(jsonPath("$.data.ordersByEmail[*].postIndex").isNotEmpty())
        .andExpect(jsonPath("$.data.ordersByEmail[*].orderItems[*].perfume").isNotEmpty());
  }
}
------[0m
[0m2025-06-16 21:23:08 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.controller;

import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.*;
import static com.gmail.merikbest2015.ecommerce.constants.PathConstants.*;
import static com.gmail.merikbest2015.ecommerce.util.TestConstants.*;
import static org.hamcrest.Matchers.*;
import static org.mockito.Mockito.when;
import static org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestPostProcessors.csrf;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.gmail.merikbest2015.ecommerce.dto.GraphQLRequest;
import com.gmail.merikbest2015.ecommerce.dto.perfume.PerfumeRequest;
import java.io.FileInputStream;
import java.net.MalformedURLException;
import java.net.URL;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mockito; // Adicionado
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.http.MediaType;
import org.springframework.mock.web.MockMultipartFile;
import org.springframework.security.test.context.support.WithMockUser;
import org.springframework.test.context.TestPropertySource;
import org.springframework.test.context.bean.override.mockito.MockitoBean;
import org.springframework.test.context.jdbc.Sql;
import org.springframework.test.context.junit.jupiter.SpringExtension;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.web.context.WebApplicationContext;
import software.amazon.awssdk.services.s3.S3Client;
import software.amazon.awssdk.services.s3.S3Utilities; // Adicionado
import software.amazon.awssdk.services.s3.model.GetUrlRequest;

@SpringBootTest
@ExtendWith(SpringExtension.class)
@AutoConfigureMockMvc
// @WithUserDetails(ADMIN_EMAIL)
@WithMockUser(username = ADMIN_EMAIL, authorities = "ADMIN")
@TestPropertySource("/application-test.properties")
@Sql(
    value = {
      "/sql/create-user-before.sql",
      "/sql/create-perfumes-before.sql",
      "/sql/create-orders-before.sql"
    },
    executionPhase = Sql.ExecutionPhase.BEFORE_TEST_METHOD)
@Sql(
    value = {
      "/sql/create-orders-after.sql",
      "/sql/create-perfumes-after.sql",
      "/sql/create-user-after.sql"
    },
    executionPhase = Sql.ExecutionPhase.AFTER_TEST_METHOD)
public class AdminControllerTest {
  @MockitoBean private S3Client s3Client; // Changed from AmazonS3 to S3Client
  @Autowired private MockMvc mockMvc;

  @Autowired private ObjectMapper mapper;

  @Autowired private WebApplicationContext webApplicationContext;

  private GraphQLRequest graphQLRequest;
  private PerfumeRequest perfumeRequest;

  @BeforeEach
  public void init() throws MalformedURLException {
    URL fakeUrl = new URL("https://fake-s3-url.com/fake-image.jpg");
    // Updated to mock S3Client\'s utilities().getUrl() method using fully qualified name for any()
    S3Utilities mockS3Utilities = Mockito.mock(S3Utilities.class);
    when(s3Client.utilities()).thenReturn(mockS3Utilities);
    when(mockS3Utilities.getUrl(org.mockito.ArgumentMatchers.any(GetUrlRequest.class)))
        .thenReturn(fakeUrl);
    graphQLRequest = new GraphQLRequest();
    perfumeRequest = new PerfumeRequest();
    perfumeRequest.setPerfumer(PERFUMER_CHANEL);
    perfumeRequest.setPerfumeTitle(PERFUME_TITLE);
    perfumeRequest.setYear(YEAR);
    perfumeRequest.setCountry(COUNTRY);
    perfumeRequest.setPerfumeGender(PERFUME_GENDER);
    perfumeRequest.setFragranceTopNotes(FRAGRANCE_TOP_NOTES);
    perfumeRequest.setFragranceMiddleNotes(FRAGRANCE_MIDDLE_NOTES);
    perfumeRequest.setFragranceBaseNotes(FRAGRANCE_BASE_NOTES);
    perfumeRequest.setPrice(PRICE);
    perfumeRequest.setVolume(VOLUME);
    perfumeRequest.setType(TYPE);
  }

  @Test
  @DisplayName("[200] POST /api/v1/admin/add - Add Perfume")
  public void addPerfume() throws Exception {
    FileInputStream inputFile = new FileInputStream(FILE_PATH);
    MockMultipartFile multipartFile =
        new MockMultipartFile("file", FILE_NAME, MediaType.MULTIPART_FORM_DATA_VALUE, inputFile);
    MockMultipartFile jsonFile =
        new MockMultipartFile(
            "perfume",
            "",
            MediaType.APPLICATION_JSON_VALUE,
            mapper.writeValueAsString(perfumeRequest).getBytes());

    this.mockMvc
        .perform(
            multipart(API_V1_ADMIN + ADD)
                .file(multipartFile)
                .file(jsonFile)
                .with(csrf())) // Adicionando token CSRF
        .andExpect(status().isOk());
  }

  @Test
  @DisplayName("[400] POST /api/v1/admin/add - Should Input Fields Are Empty Add Perfume")
  public void addPerfume_ShouldInputFieldsAreEmpty() throws Exception {
    PerfumeRequest perfumeRequest = new PerfumeRequest();
    MockMultipartFile jsonFile =
        new MockMultipartFile(
            "perfume",
            "",
            MediaType.APPLICATION_JSON_VALUE,
            mapper.writeValueAsString(perfumeRequest).getBytes());

    this.mockMvc
        .perform(
            multipart(API_V1_ADMIN + ADD)
                .file(jsonFile)
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf())) // Adicionando token CSRF
        .andExpect(status().isBadRequest())
        .andExpect(jsonPath("$.perfumeTitleError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.perfumerError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.yearError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.countryError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.perfumeGenderError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.fragranceTopNotesError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.fragranceMiddleNotesError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.fragranceBaseNotesError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.priceError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.volumeError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.typeError", is(FILL_IN_THE_INPUT_FIELD)));
  }

  @Test
  @DisplayName("[200] POST /api/v1/admin/edit - Edit Perfume")
  public void editPerfume() throws Exception {
    FileInputStream inputFile = new FileInputStream(FILE_PATH);
    MockMultipartFile multipartFile =
        new MockMultipartFile("file", FILE_NAME, MediaType.MULTIPART_FORM_DATA_VALUE, inputFile);
    MockMultipartFile jsonFileEdit =
        new MockMultipartFile(
            "perfume",
            "",
            MediaType.APPLICATION_JSON_VALUE,
            mapper.writeValueAsString(perfumeRequest).getBytes());
    perfumeRequest.setType("test");
    this.mockMvc
        .perform(
            multipart(API_V1_ADMIN + EDIT)
                .file(multipartFile)
                .file(jsonFileEdit)
                .with(csrf())) // Adicionando token CSRF
        .andExpect(status().isOk());
  }

  @Test
  @DisplayName("[400] POST /api/v1/admin/edit - Should Input Fields Are Empty Edit Perfume")
  public void editPerfume_ShouldInputFieldsAreEmpty() throws Exception {
    PerfumeRequest perfumeRequest = new PerfumeRequest();
    MockMultipartFile jsonFile =
        new MockMultipartFile(
            "perfume",
            "",
            MediaType.APPLICATION_JSON_VALUE,
            mapper.writeValueAsString(perfumeRequest).getBytes());

    this.mockMvc
        .perform(
            multipart(API_V1_ADMIN + EDIT)
                .file(jsonFile)
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf())) // Adicionando token CSRF
        .andExpect(status().isBadRequest())
        .andExpect(jsonPath("$.perfumeTitleError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.perfumerError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.yearError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.countryError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.perfumeGenderError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.fragranceTopNotesError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.fragranceMiddleNotesError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.fragranceBaseNotesError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.priceError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.volumeError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.typeError", is(FILL_IN_THE_INPUT_FIELD)));
  }

  @Test
  @DisplayName("[200] DELETE /api/v1/admin/delete/46 - Delete Perfume")
  public void deletePerfume() throws Exception {
    mockMvc
        .perform(
            delete(API_V1_ADMIN + DELETE_BY_PERFUME_ID, 46)
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf())) // Adicionando token CSRF
        .andExpect(status().isOk())
        .andExpect(jsonPath("$", is("Perfume deleted successfully")));
  }

  @Test
  @DisplayName("[404] DELETE /api/v1/admin/delete/99 - Delete Perfume Should Not Found")
  public void deletePerfume_ShouldNotFound() throws Exception {
    mockMvc
        .perform(
            delete(API_V1_ADMIN + DELETE_BY_PERFUME_ID, 99)
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf())) // Adicionando token CSRF
        .andExpect(status().isNotFound())
        .andExpect(jsonPath("$", is(PERFUME_NOT_FOUND)));
  }

  @Test
  @DisplayName("[200] GET /api/v1/admin/orders - Get All Orders")
  public void getAllOrders() throws Exception {
    mockMvc
        .perform(get(API_V1_ADMIN + ORDERS).contentType(MediaType.APPLICATION_JSON_VALUE))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$[*].id").isNotEmpty())
        .andExpect(jsonPath("$[*].totalPrice", hasItem(TOTAL_PRICE)))
        .andExpect(jsonPath("$[*].date").isNotEmpty())
        .andExpect(jsonPath("$[*].firstName", hasItem(FIRST_NAME)))
        .andExpect(jsonPath("$[*].lastName", hasItem(LAST_NAME)))
        .andExpect(jsonPath("$[*].city", hasItem(CITY)))
        .andExpect(jsonPath("$[*].address", hasItem(ADDRESS)))
        .andExpect(jsonPath("$[*].email", hasItem(USER_EMAIL)))
        .andExpect(jsonPath("$[*].phoneNumber", hasItem(PHONE_NUMBER)))
        .andExpect(jsonPath("$[*].postIndex", hasItem(POST_INDEX)));
  }

  @Test
  @DisplayName("[200] GET /api/v1/admin/order/test123@test.com - Get User Orders By Email")
  public void getUserOrdersByEmail() throws Exception {
    mockMvc
        .perform(
            get(API_V1_ADMIN + ORDER_BY_EMAIL, USER_EMAIL)
                .contentType(MediaType.APPLICATION_JSON_VALUE))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$[*].id").isNotEmpty())
        .andExpect(jsonPath("$[*].totalPrice", hasItem(TOTAL_PRICE)))
        .andExpect(jsonPath("$[*].date").isNotEmpty())
        .andExpect(jsonPath("$[*].firstName", hasItem(FIRST_NAME)))
        .andExpect(jsonPath("$[*].lastName", hasItem(LAST_NAME)))
        .andExpect(jsonPath("$[*].city", hasItem(CITY)))
        .andExpect(jsonPath("$[*].address", hasItem(ADDRESS)))
        .andExpect(jsonPath("$[*].email", hasItem(USER_EMAIL)))
        .andExpect(jsonPath("$[*].phoneNumber", hasItem(PHONE_NUMBER)))
        .andExpect(jsonPath("$[*].postIndex", hasItem(POST_INDEX)));
  }

  @Test
  @DisplayName("[200] DELETE /api/v1/admin/order/delete/111 - Delete Order")
  public void deleteOrder() throws Exception {
    mockMvc
        .perform(
            delete(API_V1_ADMIN + ORDER_DELETE, 111)
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf())) // Adicionando token CSRF
        .andExpect(status().isOk())
        .andExpect(jsonPath("$", is("Order deleted successfully")));
  }

  @Test
  @DisplayName("[404] DELETE /api/v1/admin/order/delete/222 - Delete Order Should Not Found")
  public void deleteOrder_ShouldNotFound() throws Exception {
    mockMvc
        .perform(
            delete(API_V1_ADMIN + ORDER_DELETE, 222)
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf())) // Adicionando token CSRF
        .andExpect(status().isNotFound())
        .andExpect(jsonPath("$", is(ORDER_NOT_FOUND)));
  }

  @Test
  @DisplayName("[200] GET /api/v1/admin/user/122 - Get User by Id")
  public void getUserById() throws Exception {
    mockMvc
        .perform(
            get(API_V1_ADMIN + USER_BY_ID, USER_ID).contentType(MediaType.APPLICATION_JSON_VALUE))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$.id").value(USER_ID))
        .andExpect(jsonPath("$.firstName").value(FIRST_NAME))
        .andExpect(jsonPath("$.email").value(USER_EMAIL));
  }

  @Test
  @DisplayName("[404] GET /api/v1/admin/user/1222 - Should Not Found Get User by Id")
  public void getUserById_ShouldNotFound() throws Exception {
    mockMvc
        .perform(get(API_V1_ADMIN + USER_BY_ID, 1222).contentType(MediaType.APPLICATION_JSON_VALUE))
        .andExpect(status().isNotFound())
        .andExpect(jsonPath("$").value(USER_NOT_FOUND));
  }

  @Test
  @DisplayName("[200] GET /api/v1/admin/user/all - Get All Users")
  public void getAllUsers() throws Exception {
    mockMvc
        .perform(get(API_V1_ADMIN + USER_ALL))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$[*].id", hasItem(USER_ID)))
        .andExpect(jsonPath("$[*].firstName", hasItem(FIRST_NAME)))
        .andExpect(jsonPath("$[*].email", hasItem(USER_EMAIL)));
  }

  @Test
  @DisplayName("[200] POST /api/v1/admin/graphql/user - Get User By Query")
  public void getUserByQuery() throws Exception {
    graphQLRequest.setQuery(GRAPHQL_QUERY_USER);

    mockMvc
        .perform(
            post(API_V1_ADMIN + GRAPHQL_USER)
                .content(mapper.writeValueAsString(graphQLRequest))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf())) // Adicionando token CSRF
        .andExpect(status().isOk())
        .andExpect(jsonPath("$.data.user.id", equalTo(USER_ID)))
        .andExpect(jsonPath("$.data.user.email", equalTo(USER_EMAIL)))
        .andExpect(jsonPath("$.data.user.firstName", equalTo(FIRST_NAME)))
        .andExpect(jsonPath("$.data.user.lastName", equalTo(LAST_NAME)))
        .andExpect(jsonPath("$.data.user.city", equalTo(CITY)))
        .andExpect(jsonPath("$.data.user.address", equalTo(ADDRESS)))
        .andExpect(jsonPath("$.data.user.phoneNumber", equalTo(PHONE_NUMBER)))
        .andExpect(jsonPath("$.data.user.postIndex", equalTo("1234567890")))
        .andExpect(jsonPath("$.data.user.activationCode", equalTo(null)))
        .andExpect(jsonPath("$.data.user.passwordResetCode", equalTo(null)))
        .andExpect(jsonPath("$.data.user.active", equalTo(true)))
        .andExpect(jsonPath("$.data.user.roles[0]", equalTo(ROLE_USER)));
  }

  @Test
  @DisplayName("[200] POST /api/v1/admin/graphql/user/all - Get Users By Query")
  public void getUsersByQuery() throws Exception {
    graphQLRequest.setQuery(GRAPHQL_QUERY_USERS);

    mockMvc
        .perform(
            post(API_V1_ADMIN + GRAPHQL_USER_ALL)
                .content(mapper.writeValueAsString(graphQLRequest))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf())) // Adicionando token CSRF
        .andExpect(status().isOk())
        .andExpect(jsonPath("$.data.users[*].id").isNotEmpty())
        .andExpect(jsonPath("$.data.users[*].email").isNotEmpty())
        .andExpect(jsonPath("$.data.users[*].firstName").isNotEmpty())
        .andExpect(jsonPath("$.data.users[*].lastName").isNotEmpty())
        .andExpect(jsonPath("$.data.users[*].city").isNotEmpty())
        .andExpect(jsonPath("$.data.users[*].address").isNotEmpty())
        .andExpect(jsonPath("$.data.users[*].phoneNumber").isNotEmpty())
        .andExpect(jsonPath("$.data.users[*].postIndex").isNotEmpty())
        .andExpect(jsonPath("$.data.users[*].activationCode").isNotEmpty())
        .andExpect(jsonPath("$.data.users[*].passwordResetCode").isNotEmpty())
        .andExpect(jsonPath("$.data.users[*].active").isNotEmpty())
        .andExpect(jsonPath("$.data.users[*].roles").isNotEmpty());
  }

  @Test
  @DisplayName("[200] POST /api/v1/admin/graphql/orders - Get Orders By Query")
  public void getOrdersByQuery() throws Exception {
    graphQLRequest.setQuery(GRAPHQL_QUERY_ORDERS);

    mockMvc
        .perform(
            post(API_V1_ADMIN + GRAPHQL_ORDERS)
                .content(mapper.writeValueAsString(graphQLRequest))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf())) // Adicionando token CSRF
        .andExpect(status().isOk())
        .andExpect(jsonPath("$.data.orders[*].id").isNotEmpty())
        .andExpect(jsonPath("$.data.orders[*].totalPrice").isNotEmpty())
        .andExpect(jsonPath("$.data.orders[*].date").isNotEmpty())
        .andExpect(jsonPath("$.data.orders[*].firstName").isNotEmpty())
        .andExpect(jsonPath("$.data.orders[*].lastName").isNotEmpty())
        .andExpect(jsonPath("$.data.orders[*].city").isNotEmpty())
        .andExpect(jsonPath("$.data.orders[*].address").isNotEmpty())
        .andExpect(jsonPath("$.data.orders[*].email").isNotEmpty())
        .andExpect(jsonPath("$.data.orders[*].phoneNumber").isNotEmpty())
        .andExpect(jsonPath("$.data.orders[*].postIndex").isNotEmpty())
        .andExpect(jsonPath("$.data.orders[*].orderItems[*].perfume").isNotEmpty());
  }

  @Test
  @DisplayName("[200] POST /api/v1/admin/graphql/order - Get User Orders By Email Query")
  public void getUserOrdersByEmailQuery() throws Exception {
    graphQLRequest.setQuery(GRAPHQL_QUERY_ORDERS_BY_EMAIL);

    mockMvc
        .perform(
            post(API_V1_ADMIN + GRAPHQL_ORDER)
                .content(mapper.writeValueAsString(graphQLRequest))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf())) // Adicionando token CSRF
        .andExpect(status().isOk())
        .andExpect(jsonPath("$.data.ordersByEmail[*].id").isNotEmpty())
        .andExpect(jsonPath("$.data.ordersByEmail[*].totalPrice").isNotEmpty())
        .andExpect(jsonPath("$.data.ordersByEmail[*].date").isNotEmpty())
        .andExpect(jsonPath("$.data.ordersByEmail[*].firstName").isNotEmpty())
        .andExpect(jsonPath("$.data.ordersByEmail[*].lastName").isNotEmpty())
        .andExpect(jsonPath("$.data.ordersByEmail[*].city").isNotEmpty())
        .andExpect(jsonPath("$.data.ordersByEmail[*].address").isNotEmpty())
        .andExpect(jsonPath("$.data.ordersByEmail[*].email").isNotEmpty())
        .andExpect(jsonPath("$.data.ordersByEmail[*].phoneNumber").isNotEmpty())
        .andExpect(jsonPath("$.data.ordersByEmail[*].postIndex").isNotEmpty())
        .andExpect(jsonPath("$.data.ordersByEmail[*].orderItems[*].perfume").isNotEmpty());
  }
}
------[0m
[0m2025-06-16 21:23:08 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java[0m
[0m2025-06-16 21:23:08 [0;34m[DEBUG][0m   FILE_STATUS (AuthenticationControllerTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:08 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java, FILE_NAME: AuthenticationControllerTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:23:08 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:23:08 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:08 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java][0m
[0m2025-06-16 21:23:08 [0;34m[INFO][0m    - File:[0;37m[AuthenticationControllerTest.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:23:08 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.controller;

import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.*;
import static com.gmail.merikbest2015.ecommerce.constants.PathConstants.*;
import static com.gmail.merikbest2015.ecommerce.util.TestConstants.*;
import static org.hamcrest.Matchers.equalTo;
import static org.hamcrest.Matchers.is;
import static org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestPostProcessors.csrf;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.gmail.merikbest2015.ecommerce.dto.PasswordResetRequest;
import com.gmail.merikbest2015.ecommerce.dto.auth.AuthenticationRequest;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.http.MediaType;
import org.springframework.security.test.context.support.WithUserDetails;
import org.springframework.test.context.TestPropertySource;
import org.springframework.test.context.jdbc.Sql;
import org.springframework.test.context.junit.jupiter.SpringExtension;
import org.springframework.test.web.servlet.MockMvc;

@SpringBootTest
@ExtendWith(SpringExtension.class)
@AutoConfigureMockMvc
@TestPropertySource("/application-test.properties")
@Sql(
    value = {"/sql/create-user-before.sql"},
    executionPhase = Sql.ExecutionPhase.BEFORE_TEST_METHOD)
@Sql(
    value = {"/sql/create-user-after.sql"},
    executionPhase = Sql.ExecutionPhase.AFTER_TEST_METHOD)
public class AuthenticationControllerTest {
  @Autowired private MockMvc mockMvc;

  @Autowired private ObjectMapper mapper;

  private AuthenticationRequest authenticationRequest;
  private PasswordResetRequest passwordResetRequest;

  @BeforeEach
  public void init() {
    authenticationRequest = new AuthenticationRequest();
    authenticationRequest.setEmail(USER_EMAIL);

    passwordResetRequest = new PasswordResetRequest();
    passwordResetRequest.setEmail(USER_EMAIL);
    passwordResetRequest.setPassword(USER_PASSWORD);
    passwordResetRequest.setPassword2(USER_PASSWORD);
  }

  /*  @Test
  public void login() throws Exception {
      authenticationRequest.setPassword(USER_PASSWORD);

      mockMvc.perform(post(API_V1_AUTH + LOGIN)
                      .content(mapper.writeValueAsString(authenticationRequest))
                      .contentType(MediaType.APPLICATION_JSON_VALUE))
              .andExpect(status().isOk());
  }*/

  @Test
  public void login_ShouldEmailOrPasswordBeNotValid() throws Exception {
    authenticationRequest.setPassword("123");

    mockMvc
        .perform(
            post(API_V1_AUTH + LOGIN)
                .content(mapper.writeValueAsString(authenticationRequest))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isForbidden())
        .andExpect(jsonPath("$", is(INCORRECT_PASSWORD)));
  }

  @Test
  public void forgotPassword_ShouldEmailBeNotValid() throws Exception {
    mockMvc
        .perform(
            get(API_V1_AUTH + FORGOT_EMAIL, EMAIL_FAILURE)
                .contentType(MediaType.APPLICATION_JSON_VALUE))
        .andExpect(status().isNotFound())
        .andExpect(jsonPath("$", is(EMAIL_NOT_FOUND)));
  }

  @Test
  public void getPasswordResetCode() throws Exception {
    mockMvc
        .perform(
            get(API_V1_AUTH + RESET_CODE, USER_PASSWORD_RESET_CODE)
                .contentType(MediaType.APPLICATION_JSON_VALUE))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$").value(USER2_EMAIL));
  }

  @Test
  public void passwordReset() throws Exception {
    mockMvc
        .perform(
            post(API_V1_AUTH + RESET)
                .content(mapper.writeValueAsString(passwordResetRequest))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isOk())
        .andExpect(content().string(equalTo("Password successfully changed!")));
  }

  @Test
  public void passwordReset_ShouldPasswordsNotMatch() throws Exception {
    passwordResetRequest.setPassword2("12345");

    mockMvc
        .perform(
            post(API_V1_AUTH + RESET)
                .content(mapper.writeValueAsString(passwordResetRequest))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isBadRequest())
        .andExpect(jsonPath("$.passwordError", is(PASSWORDS_DO_NOT_MATCH)));
  }

  @Test
  public void passwordReset_ShouldPassword2BeEmpty() throws Exception {
    passwordResetRequest.setPassword2("");

    mockMvc
        .perform(
            post(API_V1_AUTH + RESET)
                .content(mapper.writeValueAsString(passwordResetRequest))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isBadRequest())
        .andExpect(jsonPath("$.password2Error", is(EMPTY_PASSWORD_CONFIRMATION)));
  }

  @Test
  @WithUserDetails(USER_EMAIL)
  public void updateUserPassword() throws Exception {
    PasswordResetRequest requestDto = new PasswordResetRequest();
    requestDto.setPassword(USER_PASSWORD);
    requestDto.setPassword2(USER_PASSWORD);

    mockMvc
        .perform(
            put(API_V1_AUTH + EDIT_PASSWORD)
                .content(mapper.writeValueAsString(requestDto))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isOk())
        .andExpect(content().string(equalTo("Password successfully changed!")));
  }

  @Test
  @WithUserDetails(USER_EMAIL)
  public void updateUserPassword_ShouldPasswordsNotMatch() throws Exception {
    PasswordResetRequest requestDto = new PasswordResetRequest();
    requestDto.setPassword(USER_PASSWORD);
    requestDto.setPassword2("testpassword");

    mockMvc
        .perform(
            put(API_V1_AUTH + EDIT_PASSWORD)
                .content(mapper.writeValueAsString(requestDto))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isBadRequest())
        .andExpect(jsonPath("$.passwordError", is(PASSWORDS_DO_NOT_MATCH)));
  }

  @Test
  @WithUserDetails(USER_EMAIL)
  public void updateUserPassword_ShouldInputFieldsAreEmpty() throws Exception {
    PasswordResetRequest requestDto = new PasswordResetRequest();
    requestDto.setPassword("");
    requestDto.setPassword2("");

    mockMvc
        .perform(
            put(API_V1_AUTH + EDIT_PASSWORD)
                .content(mapper.writeValueAsString(requestDto))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isBadRequest())
        .andExpect(jsonPath("$.passwordError", is(PASSWORD_CHARACTER_LENGTH)))
        .andExpect(jsonPath("$.password2Error", is(PASSWORD2_CHARACTER_LENGTH)));
  }
}
------[0m
[0m2025-06-16 21:23:08 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.controller;

import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.*;
import static com.gmail.merikbest2015.ecommerce.constants.PathConstants.*;
import static com.gmail.merikbest2015.ecommerce.util.TestConstants.*;
import static org.hamcrest.Matchers.equalTo;
import static org.hamcrest.Matchers.is;
import static org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestPostProcessors.csrf;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.gmail.merikbest2015.ecommerce.dto.PasswordResetRequest;
import com.gmail.merikbest2015.ecommerce.dto.auth.AuthenticationRequest;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.http.MediaType;
import org.springframework.security.test.context.support.WithUserDetails;
import org.springframework.test.context.TestPropertySource;
import org.springframework.test.context.jdbc.Sql;
import org.springframework.test.context.junit.jupiter.SpringExtension;
import org.springframework.test.web.servlet.MockMvc;

@SpringBootTest
@ExtendWith(SpringExtension.class)
@AutoConfigureMockMvc
@TestPropertySource("/application-test.properties")
@Sql(
    value = {"/sql/create-user-before.sql"},
    executionPhase = Sql.ExecutionPhase.BEFORE_TEST_METHOD)
@Sql(
    value = {"/sql/create-user-after.sql"},
    executionPhase = Sql.ExecutionPhase.AFTER_TEST_METHOD)
public class AuthenticationControllerTest {
  @Autowired private MockMvc mockMvc;

  @Autowired private ObjectMapper mapper;

  private AuthenticationRequest authenticationRequest;
  private PasswordResetRequest passwordResetRequest;

  @BeforeEach
  public void init() {
    authenticationRequest = new AuthenticationRequest();
    authenticationRequest.setEmail(USER_EMAIL);

    passwordResetRequest = new PasswordResetRequest();
    passwordResetRequest.setEmail(USER_EMAIL);
    passwordResetRequest.setPassword(USER_PASSWORD);
    passwordResetRequest.setPassword2(USER_PASSWORD);
  }

  /*  @Test
  public void login() throws Exception {
      authenticationRequest.setPassword(USER_PASSWORD);

      mockMvc.perform(post(API_V1_AUTH + LOGIN)
                      .content(mapper.writeValueAsString(authenticationRequest))
                      .contentType(MediaType.APPLICATION_JSON_VALUE))
              .andExpect(status().isOk());
  }*/

  @Test
  public void login_ShouldEmailOrPasswordBeNotValid() throws Exception {
    authenticationRequest.setPassword("123");

    mockMvc
        .perform(
            post(API_V1_AUTH + LOGIN)
                .content(mapper.writeValueAsString(authenticationRequest))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isForbidden())
        .andExpect(jsonPath("$", is(INCORRECT_PASSWORD)));
  }

  @Test
  public void forgotPassword_ShouldEmailBeNotValid() throws Exception {
    mockMvc
        .perform(
            get(API_V1_AUTH + FORGOT_EMAIL, EMAIL_FAILURE)
                .contentType(MediaType.APPLICATION_JSON_VALUE))
        .andExpect(status().isNotFound())
        .andExpect(jsonPath("$", is(EMAIL_NOT_FOUND)));
  }

  @Test
  public void getPasswordResetCode() throws Exception {
    mockMvc
        .perform(
            get(API_V1_AUTH + RESET_CODE, USER_PASSWORD_RESET_CODE)
                .contentType(MediaType.APPLICATION_JSON_VALUE))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$").value(USER2_EMAIL));
  }

  @Test
  public void passwordReset() throws Exception {
    mockMvc
        .perform(
            post(API_V1_AUTH + RESET)
                .content(mapper.writeValueAsString(passwordResetRequest))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isOk())
        .andExpect(content().string(equalTo("Password successfully changed!")));
  }

  @Test
  public void passwordReset_ShouldPasswordsNotMatch() throws Exception {
    passwordResetRequest.setPassword2("12345");

    mockMvc
        .perform(
            post(API_V1_AUTH + RESET)
                .content(mapper.writeValueAsString(passwordResetRequest))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isBadRequest())
        .andExpect(jsonPath("$.passwordError", is(PASSWORDS_DO_NOT_MATCH)));
  }

  @Test
  public void passwordReset_ShouldPassword2BeEmpty() throws Exception {
    passwordResetRequest.setPassword2("");

    mockMvc
        .perform(
            post(API_V1_AUTH + RESET)
                .content(mapper.writeValueAsString(passwordResetRequest))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isBadRequest())
        .andExpect(jsonPath("$.password2Error", is(EMPTY_PASSWORD_CONFIRMATION)));
  }

  @Test
  @WithUserDetails(USER_EMAIL)
  public void updateUserPassword() throws Exception {
    PasswordResetRequest requestDto = new PasswordResetRequest();
    requestDto.setPassword(USER_PASSWORD);
    requestDto.setPassword2(USER_PASSWORD);

    mockMvc
        .perform(
            put(API_V1_AUTH + EDIT_PASSWORD)
                .content(mapper.writeValueAsString(requestDto))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isOk())
        .andExpect(content().string(equalTo("Password successfully changed!")));
  }

  @Test
  @WithUserDetails(USER_EMAIL)
  public void updateUserPassword_ShouldPasswordsNotMatch() throws Exception {
    PasswordResetRequest requestDto = new PasswordResetRequest();
    requestDto.setPassword(USER_PASSWORD);
    requestDto.setPassword2("testpassword");

    mockMvc
        .perform(
            put(API_V1_AUTH + EDIT_PASSWORD)
                .content(mapper.writeValueAsString(requestDto))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isBadRequest())
        .andExpect(jsonPath("$.passwordError", is(PASSWORDS_DO_NOT_MATCH)));
  }

  @Test
  @WithUserDetails(USER_EMAIL)
  public void updateUserPassword_ShouldInputFieldsAreEmpty() throws Exception {
    PasswordResetRequest requestDto = new PasswordResetRequest();
    requestDto.setPassword("");
    requestDto.setPassword2("");

    mockMvc
        .perform(
            put(API_V1_AUTH + EDIT_PASSWORD)
                .content(mapper.writeValueAsString(requestDto))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isBadRequest())
        .andExpect(jsonPath("$.passwordError", is(PASSWORD_CHARACTER_LENGTH)))
        .andExpect(jsonPath("$.password2Error", is(PASSWORD2_CHARACTER_LENGTH)));
  }
}
------[0m
[0m2025-06-16 21:23:08 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java[0m
[0m2025-06-16 21:23:08 [0;34m[DEBUG][0m   FILE_STATUS (OrderControllerTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:08 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java, FILE_NAME: OrderControllerTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:23:08 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:23:08 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:09 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java][0m
[0m2025-06-16 21:23:09 [0;34m[INFO][0m    - File:[0;37m[OrderControllerTest.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:23:09 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.controller;

import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.*;
import static com.gmail.merikbest2015.ecommerce.constants.PathConstants.*;
import static com.gmail.merikbest2015.ecommerce.util.TestConstants.*;
import static org.hamcrest.Matchers.*;
import static org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestPostProcessors.csrf;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.gmail.merikbest2015.ecommerce.dto.GraphQLRequest;
import com.gmail.merikbest2015.ecommerce.dto.order.OrderRequest;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.http.MediaType;
import org.springframework.security.test.context.support.WithUserDetails;
import org.springframework.test.context.TestPropertySource;
import org.springframework.test.context.jdbc.Sql;
import org.springframework.test.context.junit.jupiter.SpringExtension;
import org.springframework.test.web.servlet.MockMvc;

@SpringBootTest
@ExtendWith(SpringExtension.class)
@AutoConfigureMockMvc
@TestPropertySource("/application-test.properties")
@Sql(
    value = {
      "/sql/create-user-before.sql",
      "/sql/create-perfumes-before.sql",
      "/sql/create-orders-before.sql"
    },
    executionPhase = Sql.ExecutionPhase.BEFORE_TEST_METHOD)
@Sql(
    value = {
      "/sql/create-orders-after.sql",
      "/sql/create-perfumes-after.sql",
      "/sql/create-user-after.sql"
    },
    executionPhase = Sql.ExecutionPhase.AFTER_TEST_METHOD)
public class OrderControllerTest {
  @Autowired private MockMvc mockMvc;

  @Autowired private ObjectMapper mapper;

  @Test
  public void getOrderById() throws Exception {
    mockMvc
        .perform(get(API_V1_ORDER + ORDER_ID, 111).contentType(MediaType.APPLICATION_JSON_VALUE))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$.id").value(111))
        .andExpect(jsonPath("$.totalPrice").value(TOTAL_PRICE))
        .andExpect(jsonPath("$.date").value("2021-02-06"))
        .andExpect(jsonPath("$.firstName").value(FIRST_NAME))
        .andExpect(jsonPath("$.lastName").value(LAST_NAME))
        .andExpect(jsonPath("$.city").value(CITY))
        .andExpect(jsonPath("$.address").value(ADDRESS))
        .andExpect(jsonPath("$.email").value(USER_EMAIL))
        .andExpect(jsonPath("$.phoneNumber").value(PHONE_NUMBER))
        .andExpect(jsonPath("$.postIndex").value(POST_INDEX));
  }

  @Test
  public void getOrderById_ShouldNotFound() throws Exception {
    mockMvc
        .perform(get(API_V1_ORDER + ORDER_ID, 1111).contentType(MediaType.APPLICATION_JSON_VALUE))
        .andExpect(status().isNotFound())
        .andExpect(jsonPath("$").value(ORDER_NOT_FOUND));
  }

  @Test
  public void getOrderItemsByOrderId() throws Exception {
    mockMvc
        .perform(
            get(API_V1_ORDER + ORDER_ID_ITEMS, 111).contentType(MediaType.APPLICATION_JSON_VALUE))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$[*]", hasSize(2)))
        .andExpect(jsonPath("$[*].id").isNotEmpty())
        .andExpect(jsonPath("$[*].amount").isNotEmpty())
        .andExpect(jsonPath("$[*].quantity").isNotEmpty());
  }

  @Test
  @WithUserDetails(USER_EMAIL)
  public void getUserOrders() throws Exception {
    mockMvc
        .perform(get(API_V1_ORDER).contentType(MediaType.APPLICATION_JSON_VALUE))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$[*].id").isNotEmpty())
        .andExpect(jsonPath("$[*].totalPrice", hasItem(TOTAL_PRICE)))
        .andExpect(jsonPath("$[*].date").isNotEmpty())
        .andExpect(jsonPath("$[*].firstName", hasItem(FIRST_NAME)))
        .andExpect(jsonPath("$[*].lastName", hasItem(LAST_NAME)))
        .andExpect(jsonPath("$[*].city", hasItem(CITY)))
        .andExpect(jsonPath("$[*].address", hasItem(ADDRESS)))
        .andExpect(jsonPath("$[*].email", hasItem(USER_EMAIL)))
        .andExpect(jsonPath("$[*].phoneNumber", hasItem(PHONE_NUMBER)))
        .andExpect(jsonPath("$[*].postIndex", hasItem(POST_INDEX)));
  }

  /* @Test
  public void postOrder() throws Exception {

      Map<Long, Long> perfumesId = new HashMap<>();
      perfumesId.put(2L, 1L);
      perfumesId.put(4L, 1L);

      OrderRequest orderRequest = new OrderRequest();
      orderRequest.setFirstName(FIRST_NAME);
      orderRequest.setLastName(LAST_NAME);
      orderRequest.setCity(CITY);
      orderRequest.setAddress(ADDRESS);
      orderRequest.setEmail(ORDER_EMAIL);
      orderRequest.setPostIndex(POST_INDEX);
      orderRequest.setPhoneNumber(PHONE_NUMBER);
      orderRequest.setTotalPrice(TOTAL_PRICE);
      orderRequest.setPerfumesId(perfumesId);

      mockMvc.perform(post(API_V1_ORDER)
                      .content(mapper.writeValueAsString(orderRequest))
                      .contentType(MediaType.APPLICATION_JSON_VALUE))
              .andExpect(status().isOk())
              .andExpect(jsonPath("$.firstName").value(FIRST_NAME))
              .andExpect(jsonPath("$.lastName").value(LAST_NAME))
              .andExpect(jsonPath("$.city").value(CITY))
              .andExpect(jsonPath("$.address").value(ADDRESS))
              .andExpect(jsonPath("$.email").value(ORDER_EMAIL))
              .andExpect(jsonPath("$.phoneNumber").value(PHONE_NUMBER))
              .andExpect(jsonPath("$.postIndex").value(POST_INDEX))
              .andExpect(jsonPath("$.totalPrice").value(TOTAL_PRICE));
  }*/

  @Test
  public void postOrder_ShouldInputFieldsAreEmpty() throws Exception {
    OrderRequest OrderRequest = new OrderRequest();

    mockMvc
        .perform(
            post(API_V1_ORDER)
                .content(mapper.writeValueAsString(OrderRequest))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isBadRequest())
        .andExpect(jsonPath("$.firstNameError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.lastNameError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.cityError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.addressError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.emailError", is(EMAIL_CANNOT_BE_EMPTY)))
        .andExpect(jsonPath("$.phoneNumberError", is(EMPTY_PHONE_NUMBER)))
        .andExpect(jsonPath("$.postIndexError", is(EMPTY_POST_INDEX)));
  }

  @Test
  @WithUserDetails(USER_EMAIL)
  public void getUserOrdersByQuery() throws Exception {
    GraphQLRequest graphQLRequest = new GraphQLRequest();
    graphQLRequest.setQuery(GRAPHQL_QUERY_ORDERS);

    mockMvc
        .perform(
            post(API_V1_ORDER + GRAPHQL)
                .content(mapper.writeValueAsString(graphQLRequest))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$.data.orders[*].id").isNotEmpty())
        .andExpect(jsonPath("$.data.orders[*].totalPrice", hasItem(TOTAL_PRICE)))
        .andExpect(jsonPath("$.data.orders[*].date").isNotEmpty())
        .andExpect(jsonPath("$.data.orders[*].firstName", hasItem(FIRST_NAME)))
        .andExpect(jsonPath("$.data.orders[*].lastName", hasItem(LAST_NAME)))
        .andExpect(jsonPath("$.data.orders[*].city", hasItem(CITY)))
        .andExpect(jsonPath("$.data.orders[*].address", hasItem(ADDRESS)))
        .andExpect(jsonPath("$.data.orders[*].email", hasItem(USER_EMAIL)))
        .andExpect(jsonPath("$.data.orders[*].phoneNumber", hasItem(PHONE_NUMBER)))
        .andExpect(jsonPath("$.data.orders[*].postIndex", hasItem(POST_INDEX)))
        .andExpect(jsonPath("$.data.orders[*].orderItems").isNotEmpty());
  }
}
------[0m
[0m2025-06-16 21:23:09 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.controller;

import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.*;
import static com.gmail.merikbest2015.ecommerce.constants.PathConstants.*;
import static com.gmail.merikbest2015.ecommerce.util.TestConstants.*;
import static org.hamcrest.Matchers.*;
import static org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestPostProcessors.csrf;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.gmail.merikbest2015.ecommerce.dto.GraphQLRequest;
import com.gmail.merikbest2015.ecommerce.dto.order.OrderRequest;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.http.MediaType;
import org.springframework.security.test.context.support.WithUserDetails;
import org.springframework.test.context.TestPropertySource;
import org.springframework.test.context.jdbc.Sql;
import org.springframework.test.context.junit.jupiter.SpringExtension;
import org.springframework.test.web.servlet.MockMvc;

@SpringBootTest
@ExtendWith(SpringExtension.class)
@AutoConfigureMockMvc
@TestPropertySource("/application-test.properties")
@Sql(
    value = {
      "/sql/create-user-before.sql",
      "/sql/create-perfumes-before.sql",
      "/sql/create-orders-before.sql"
    },
    executionPhase = Sql.ExecutionPhase.BEFORE_TEST_METHOD)
@Sql(
    value = {
      "/sql/create-orders-after.sql",
      "/sql/create-perfumes-after.sql",
      "/sql/create-user-after.sql"
    },
    executionPhase = Sql.ExecutionPhase.AFTER_TEST_METHOD)
public class OrderControllerTest {
  @Autowired private MockMvc mockMvc;

  @Autowired private ObjectMapper mapper;

  @Test
  public void getOrderById() throws Exception {
    mockMvc
        .perform(get(API_V1_ORDER + ORDER_ID, 111).contentType(MediaType.APPLICATION_JSON_VALUE))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$.id").value(111))
        .andExpect(jsonPath("$.totalPrice").value(TOTAL_PRICE))
        .andExpect(jsonPath("$.date").value("2021-02-06"))
        .andExpect(jsonPath("$.firstName").value(FIRST_NAME))
        .andExpect(jsonPath("$.lastName").value(LAST_NAME))
        .andExpect(jsonPath("$.city").value(CITY))
        .andExpect(jsonPath("$.address").value(ADDRESS))
        .andExpect(jsonPath("$.email").value(USER_EMAIL))
        .andExpect(jsonPath("$.phoneNumber").value(PHONE_NUMBER))
        .andExpect(jsonPath("$.postIndex").value(POST_INDEX));
  }

  @Test
  public void getOrderById_ShouldNotFound() throws Exception {
    mockMvc
        .perform(get(API_V1_ORDER + ORDER_ID, 1111).contentType(MediaType.APPLICATION_JSON_VALUE))
        .andExpect(status().isNotFound())
        .andExpect(jsonPath("$").value(ORDER_NOT_FOUND));
  }

  @Test
  public void getOrderItemsByOrderId() throws Exception {
    mockMvc
        .perform(
            get(API_V1_ORDER + ORDER_ID_ITEMS, 111).contentType(MediaType.APPLICATION_JSON_VALUE))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$[*]", hasSize(2)))
        .andExpect(jsonPath("$[*].id").isNotEmpty())
        .andExpect(jsonPath("$[*].amount").isNotEmpty())
        .andExpect(jsonPath("$[*].quantity").isNotEmpty());
  }

  @Test
  @WithUserDetails(USER_EMAIL)
  public void getUserOrders() throws Exception {
    mockMvc
        .perform(get(API_V1_ORDER).contentType(MediaType.APPLICATION_JSON_VALUE))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$[*].id").isNotEmpty())
        .andExpect(jsonPath("$[*].totalPrice", hasItem(TOTAL_PRICE)))
        .andExpect(jsonPath("$[*].date").isNotEmpty())
        .andExpect(jsonPath("$[*].firstName", hasItem(FIRST_NAME)))
        .andExpect(jsonPath("$[*].lastName", hasItem(LAST_NAME)))
        .andExpect(jsonPath("$[*].city", hasItem(CITY)))
        .andExpect(jsonPath("$[*].address", hasItem(ADDRESS)))
        .andExpect(jsonPath("$[*].email", hasItem(USER_EMAIL)))
        .andExpect(jsonPath("$[*].phoneNumber", hasItem(PHONE_NUMBER)))
        .andExpect(jsonPath("$[*].postIndex", hasItem(POST_INDEX)));
  }

  /* @Test
  public void postOrder() throws Exception {

      Map<Long, Long> perfumesId = new HashMap<>();
      perfumesId.put(2L, 1L);
      perfumesId.put(4L, 1L);

      OrderRequest orderRequest = new OrderRequest();
      orderRequest.setFirstName(FIRST_NAME);
      orderRequest.setLastName(LAST_NAME);
      orderRequest.setCity(CITY);
      orderRequest.setAddress(ADDRESS);
      orderRequest.setEmail(ORDER_EMAIL);
      orderRequest.setPostIndex(POST_INDEX);
      orderRequest.setPhoneNumber(PHONE_NUMBER);
      orderRequest.setTotalPrice(TOTAL_PRICE);
      orderRequest.setPerfumesId(perfumesId);

      mockMvc.perform(post(API_V1_ORDER)
                      .content(mapper.writeValueAsString(orderRequest))
                      .contentType(MediaType.APPLICATION_JSON_VALUE))
              .andExpect(status().isOk())
              .andExpect(jsonPath("$.firstName").value(FIRST_NAME))
              .andExpect(jsonPath("$.lastName").value(LAST_NAME))
              .andExpect(jsonPath("$.city").value(CITY))
              .andExpect(jsonPath("$.address").value(ADDRESS))
              .andExpect(jsonPath("$.email").value(ORDER_EMAIL))
              .andExpect(jsonPath("$.phoneNumber").value(PHONE_NUMBER))
              .andExpect(jsonPath("$.postIndex").value(POST_INDEX))
              .andExpect(jsonPath("$.totalPrice").value(TOTAL_PRICE));
  }*/

  @Test
  public void postOrder_ShouldInputFieldsAreEmpty() throws Exception {
    OrderRequest OrderRequest = new OrderRequest();

    mockMvc
        .perform(
            post(API_V1_ORDER)
                .content(mapper.writeValueAsString(OrderRequest))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isBadRequest())
        .andExpect(jsonPath("$.firstNameError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.lastNameError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.cityError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.addressError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.emailError", is(EMAIL_CANNOT_BE_EMPTY)))
        .andExpect(jsonPath("$.phoneNumberError", is(EMPTY_PHONE_NUMBER)))
        .andExpect(jsonPath("$.postIndexError", is(EMPTY_POST_INDEX)));
  }

  @Test
  @WithUserDetails(USER_EMAIL)
  public void getUserOrdersByQuery() throws Exception {
    GraphQLRequest graphQLRequest = new GraphQLRequest();
    graphQLRequest.setQuery(GRAPHQL_QUERY_ORDERS);

    mockMvc
        .perform(
            post(API_V1_ORDER + GRAPHQL)
                .content(mapper.writeValueAsString(graphQLRequest))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$.data.orders[*].id").isNotEmpty())
        .andExpect(jsonPath("$.data.orders[*].totalPrice", hasItem(TOTAL_PRICE)))
        .andExpect(jsonPath("$.data.orders[*].date").isNotEmpty())
        .andExpect(jsonPath("$.data.orders[*].firstName", hasItem(FIRST_NAME)))
        .andExpect(jsonPath("$.data.orders[*].lastName", hasItem(LAST_NAME)))
        .andExpect(jsonPath("$.data.orders[*].city", hasItem(CITY)))
        .andExpect(jsonPath("$.data.orders[*].address", hasItem(ADDRESS)))
        .andExpect(jsonPath("$.data.orders[*].email", hasItem(USER_EMAIL)))
        .andExpect(jsonPath("$.data.orders[*].phoneNumber", hasItem(PHONE_NUMBER)))
        .andExpect(jsonPath("$.data.orders[*].postIndex", hasItem(POST_INDEX)))
        .andExpect(jsonPath("$.data.orders[*].orderItems").isNotEmpty());
  }
}
------[0m
[0m2025-06-16 21:23:09 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java[0m
[0m2025-06-16 21:23:09 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeControllerTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:09 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java, FILE_NAME: PerfumeControllerTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:23:09 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:23:09 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:09 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java][0m
[0m2025-06-16 21:23:10 [0;34m[INFO][0m    - File:[0;37m[PerfumeControllerTest.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:23:10 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.controller;

import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.PERFUME_NOT_FOUND;
import static com.gmail.merikbest2015.ecommerce.constants.PathConstants.*;
import static com.gmail.merikbest2015.ecommerce.util.TestConstants.*;
import static org.hamcrest.Matchers.equalTo;
import static org.hamcrest.Matchers.hasSize;
import static org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestPostProcessors.csrf;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.gmail.merikbest2015.ecommerce.dto.GraphQLRequest;
import com.gmail.merikbest2015.ecommerce.dto.perfume.PerfumeSearchRequest;
import com.gmail.merikbest2015.ecommerce.dto.perfume.SearchTypeRequest;
import com.gmail.merikbest2015.ecommerce.enums.SearchPerfume;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.http.MediaType;
import org.springframework.test.context.TestPropertySource;
import org.springframework.test.context.jdbc.Sql;
import org.springframework.test.context.junit.jupiter.SpringExtension;
import org.springframework.test.web.servlet.MockMvc;

@SpringBootTest
@ExtendWith(SpringExtension.class)
@AutoConfigureMockMvc
@TestPropertySource("/application-test.properties")
@Sql(
    value = {"/sql/create-perfumes-before.sql"},
    executionPhase = Sql.ExecutionPhase.BEFORE_TEST_METHOD)
@Sql(
    value = {"/sql/create-perfumes-after.sql"},
    executionPhase = Sql.ExecutionPhase.AFTER_TEST_METHOD)
public class PerfumeControllerTest {

  @Autowired private MockMvc mockMvc;

  @Autowired private ObjectMapper mapper;

  private PerfumeSearchRequest filter;
  private GraphQLRequest graphQLRequest;

  @BeforeEach
  public void init() {
    List<Integer> prices = new ArrayList<>();
    List<String> perfumers = new ArrayList<>();
    List<String> genders = new ArrayList<>();
    perfumers.add(PERFUMER_CHANEL);
    genders.add(PERFUME_GENDER);
    prices.add(1);
    prices.add(1000);

    filter = new PerfumeSearchRequest();
    filter.setPerfumers(perfumers);
    filter.setGenders(genders);
    filter.setPrices(prices);
    filter.setSortByPrice(true);

    graphQLRequest = new GraphQLRequest();
  }

  @Test
  public void getAllPerfumes() throws Exception {
    mockMvc
        .perform(get(API_V1_PERFUMES).contentType(MediaType.APPLICATION_JSON_VALUE))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$[*].id").isNotEmpty())
        .andExpect(jsonPath("$[*].perfumeTitle").isNotEmpty())
        .andExpect(jsonPath("$[*].perfumer").isNotEmpty())
        .andExpect(jsonPath("$[*].filename").isNotEmpty())
        .andExpect(jsonPath("$[*].price").isNotEmpty());
  }

  @Test
  public void getPerfumeById() throws Exception {
    mockMvc
        .perform(get(API_V1_PERFUMES + PERFUME_ID, 1).contentType(MediaType.APPLICATION_JSON_VALUE))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$.id", equalTo(1)))
        .andExpect(jsonPath("$.perfumeTitle", equalTo("Boss Bottled Night")))
        .andExpect(jsonPath("$.perfumer", equalTo("Hugo Boss")))
        .andExpect(jsonPath("$.country", equalTo("Germany")));
  }

  @Test
  public void getPerfumeById_ShouldNotFound() throws Exception {
    mockMvc
        .perform(
            get(API_V1_PERFUMES + PERFUME_ID, 1111).contentType(MediaType.APPLICATION_JSON_VALUE))
        .andExpect(status().isNotFound())
        .andExpect(jsonPath("$", equalTo(PERFUME_NOT_FOUND)));
  }

  @Test
  public void getPerfumesByIds() throws Exception {
    mockMvc
        .perform(
            post(API_V1_PERFUMES + IDS)
                .content(mapper.writeValueAsString(Arrays.asList(3L, 4L, 5L)))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$[*].id").isNotEmpty())
        .andExpect(jsonPath("$[*].perfumeTitle").isNotEmpty())
        .andExpect(jsonPath("$[*].perfumer").isNotEmpty())
        .andExpect(jsonPath("$[*].filename").isNotEmpty())
        .andExpect(jsonPath("$[*].price").isNotEmpty());
  }

  @Test
  public void findPerfumesByFilterParams() throws Exception {
    mockMvc
        .perform(
            post(API_V1_PERFUMES + SEARCH)
                .content(mapper.writeValueAsString(filter))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$[*].id").isNotEmpty())
        .andExpect(jsonPath("$[*].perfumeTitle").isNotEmpty())
        .andExpect(jsonPath("$[*].perfumer").isNotEmpty())
        .andExpect(jsonPath("$[*].filename").isNotEmpty())
        .andExpect(jsonPath("$[*].price").isNotEmpty());
  }

  @Test
  public void findPerfumesByFilterParamsPerfumers() throws Exception {
    PerfumeSearchRequest filter = new PerfumeSearchRequest();
    List<String> perfumers = new ArrayList<>();
    perfumers.add(PERFUMER_CHANEL);
    List<Integer> prices = new ArrayList<>();
    prices.add(150);
    prices.add(250);

    filter.setPerfumers(perfumers);
    // Modificado para incluir um gênero específico para garantir que resultados sejam retornados
    // com base nos dados de teste existentes. O ideal é que o backend trate uma lista vazia
    // de gêneros como "sem filtro de gênero" ou "todos os gêneros".
    filter.setGenders(List.of("female"));
    filter.setPrices(prices);
    filter.setSortByPrice(true);

    mockMvc
        .perform(
            post(API_V1_PERFUMES + SEARCH)
                .content(mapper.writeValueAsString(filter))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$[*].id").isNotEmpty())
        .andExpect(jsonPath("$[*].perfumeTitle").isNotEmpty())
        .andExpect(jsonPath("$[*].perfumer").isNotEmpty())
        .andExpect(jsonPath("$[*].filename").isNotEmpty())
        .andExpect(jsonPath("$[*].price").isNotEmpty());
  }

  @Test
  public void findByPerfumeGender() throws Exception {
    PerfumeSearchRequest filter = new PerfumeSearchRequest();
    filter.setPerfumeGender(PERFUME_GENDER);

    mockMvc
        .perform(
            post(API_V1_PERFUMES + SEARCH_GENDER)
                .content(mapper.writeValueAsString(filter))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$[*].id").isNotEmpty())
        .andExpect(jsonPath("$[*].perfumeTitle").isNotEmpty())
        .andExpect(jsonPath("$[*].perfumer").isNotEmpty())
        .andExpect(jsonPath("$[*].filename").isNotEmpty())
        .andExpect(jsonPath("$[*].price").isNotEmpty());
  }

  @Test
  public void findByPerfumer() throws Exception {
    PerfumeSearchRequest filter = new PerfumeSearchRequest();
    filter.setPerfumer(PERFUMER_CHANEL);

    mockMvc
        .perform(
            post(API_V1_PERFUMES + SEARCH_PERFUMER)
                .content(mapper.writeValueAsString(filter))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$[*].id").isNotEmpty())
        .andExpect(jsonPath("$[*].perfumeTitle").isNotEmpty())
        .andExpect(jsonPath("$[*].perfumer").isNotEmpty())
        .andExpect(jsonPath("$[*].filename").isNotEmpty())
        .andExpect(jsonPath("$[*].price").isNotEmpty());
  }

  @Test
  public void findByInputText() throws Exception {
    SearchTypeRequest request = new SearchTypeRequest();
    request.setSearchType(SearchPerfume.COUNTRY);
    request.setText("France");

    mockMvc
        .perform(
            post(API_V1_PERFUMES + SEARCH_TEXT)
                .content(mapper.writeValueAsString(request))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$[*]", hasSize(15)))
        .andExpect(jsonPath("$[*].id").isNotEmpty())
        .andExpect(jsonPath("$[*].perfumeTitle").isNotEmpty())
        .andExpect(jsonPath("$[*].perfumer").isNotEmpty())
        .andExpect(jsonPath("$[*].filename").isNotEmpty())
        .andExpect(jsonPath("$[*].price").isNotEmpty());

    request.setSearchType(SearchPerfume.BRAND);
    request.setText("Creed");

    mockMvc
        .perform(
            post(API_V1_PERFUMES + SEARCH_TEXT)
                .content(mapper.writeValueAsString(request))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$[*]", hasSize(7)))
        .andExpect(jsonPath("$[*].id").isNotEmpty())
        .andExpect(jsonPath("$[*].perfumeTitle").isNotEmpty())
        .andExpect(jsonPath("$[*].perfumer").isNotEmpty())
        .andExpect(jsonPath("$[*].filename").isNotEmpty())
        .andExpect(jsonPath("$[*].price").isNotEmpty());

    request.setSearchType(SearchPerfume.PERFUME_TITLE);
    request.setText("Chanel N5");

    mockMvc
        .perform(
            post(API_V1_PERFUMES + SEARCH_TEXT)
                .content(mapper.writeValueAsString(request))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$[*]", hasSize(1)))
        .andExpect(jsonPath("$[*].id").isNotEmpty())
        .andExpect(jsonPath("$[*].perfumeTitle").isNotEmpty())
        .andExpect(jsonPath("$[*].perfumer").isNotEmpty())
        .andExpect(jsonPath("$[*].filename").isNotEmpty())
        .andExpect(jsonPath("$[*].price").isNotEmpty());
  }

  @Test
  public void getPerfumesByIdsQuery() throws Exception {
    graphQLRequest.setQuery(GRAPHQL_QUERY_PERFUMES_BY_IDS);

    mockMvc
        .perform(
            post(API_V1_PERFUMES + GRAPHQL_IDS)
                .content(mapper.writeValueAsString(graphQLRequest))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$.data.perfumesIds[*].id").isNotEmpty())
        .andExpect(jsonPath("$.data.perfumesIds[*].perfumeTitle").isNotEmpty())
        .andExpect(jsonPath("$.data.perfumesIds[*].perfumer").isNotEmpty())
        .andExpect(jsonPath("$.data.perfumesIds[*].price").isNotEmpty());
  }

  @Test
  public void getAllPerfumesByQuery() throws Exception {
    graphQLRequest.setQuery(GRAPHQL_QUERY_PERFUMES);

    mockMvc
        .perform(
            post(API_V1_PERFUMES + GRAPHQL_PERFUMES)
                .content(mapper.writeValueAsString(graphQLRequest))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$.data.perfumes[*].id").isNotEmpty())
        .andExpect(jsonPath("$.data.perfumes[*].perfumeTitle").isNotEmpty())
        .andExpect(jsonPath("$.data.perfumes[*].perfumer").isNotEmpty())
        .andExpect(jsonPath("$.data.perfumes[*].price").isNotEmpty())
        .andExpect(jsonPath("$.data.perfumes[*].filename").isNotEmpty());
  }

  @Test
  public void getPerfumeByQuery() throws Exception {
    graphQLRequest.setQuery(GRAPHQL_QUERY_PERFUME);

    mockMvc
        .perform(
            post(API_V1_PERFUMES + GRAPHQL_PERFUME)
                .content(mapper.writeValueAsString(graphQLRequest))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$.data.perfume.id", equalTo(1)))
        .andExpect(jsonPath("$.data.perfume.perfumeTitle", equalTo("Boss Bottled Night")))
        .andExpect(jsonPath("$.data.perfume.perfumer", equalTo("Hugo Boss")))
        .andExpect(jsonPath("$.data.perfume.price", equalTo(35)));
  }
}
------[0m
[0m2025-06-16 21:23:10 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.controller;

import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.PERFUME_NOT_FOUND;
import static com.gmail.merikbest2015.ecommerce.constants.PathConstants.*;
import static com.gmail.merikbest2015.ecommerce.util.TestConstants.*;
import static org.hamcrest.Matchers.equalTo;
import static org.hamcrest.Matchers.hasSize;
import static org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestPostProcessors.csrf;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.gmail.merikbest2015.ecommerce.dto.GraphQLRequest;
import com.gmail.merikbest2015.ecommerce.dto.perfume.PerfumeSearchRequest;
import com.gmail.merikbest2015.ecommerce.dto.perfume.SearchTypeRequest;
import com.gmail.merikbest2015.ecommerce.enums.SearchPerfume;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.http.MediaType;
import org.springframework.test.context.TestPropertySource;
import org.springframework.test.context.jdbc.Sql;
import org.springframework.test.context.junit.jupiter.SpringExtension;
import org.springframework.test.web.servlet.MockMvc;

@SpringBootTest
@ExtendWith(SpringExtension.class)
@AutoConfigureMockMvc
@TestPropertySource("/application-test.properties")
@Sql(
    value = {"/sql/create-perfumes-before.sql"},
    executionPhase = Sql.ExecutionPhase.BEFORE_TEST_METHOD)
@Sql(
    value = {"/sql/create-perfumes-after.sql"},
    executionPhase = Sql.ExecutionPhase.AFTER_TEST_METHOD)
public class PerfumeControllerTest {

  @Autowired private MockMvc mockMvc;

  @Autowired private ObjectMapper mapper;

  private PerfumeSearchRequest filter;
  private GraphQLRequest graphQLRequest;

  @BeforeEach
  public void init() {
    List<Integer> prices = new ArrayList<>();
    List<String> perfumers = new ArrayList<>();
    List<String> genders = new ArrayList<>();
    perfumers.add(PERFUMER_CHANEL);
    genders.add(PERFUME_GENDER);
    prices.add(1);
    prices.add(1000);

    filter = new PerfumeSearchRequest();
    filter.setPerfumers(perfumers);
    filter.setGenders(genders);
    filter.setPrices(prices);
    filter.setSortByPrice(true);

    graphQLRequest = new GraphQLRequest();
  }

  @Test
  public void getAllPerfumes() throws Exception {
    mockMvc
        .perform(get(API_V1_PERFUMES).contentType(MediaType.APPLICATION_JSON_VALUE))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$[*].id").isNotEmpty())
        .andExpect(jsonPath("$[*].perfumeTitle").isNotEmpty())
        .andExpect(jsonPath("$[*].perfumer").isNotEmpty())
        .andExpect(jsonPath("$[*].filename").isNotEmpty())
        .andExpect(jsonPath("$[*].price").isNotEmpty());
  }

  @Test
  public void getPerfumeById() throws Exception {
    mockMvc
        .perform(get(API_V1_PERFUMES + PERFUME_ID, 1).contentType(MediaType.APPLICATION_JSON_VALUE))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$.id", equalTo(1)))
        .andExpect(jsonPath("$.perfumeTitle", equalTo("Boss Bottled Night")))
        .andExpect(jsonPath("$.perfumer", equalTo("Hugo Boss")))
        .andExpect(jsonPath("$.country", equalTo("Germany")));
  }

  @Test
  public void getPerfumeById_ShouldNotFound() throws Exception {
    mockMvc
        .perform(
            get(API_V1_PERFUMES + PERFUME_ID, 1111).contentType(MediaType.APPLICATION_JSON_VALUE))
        .andExpect(status().isNotFound())
        .andExpect(jsonPath("$", equalTo(PERFUME_NOT_FOUND)));
  }

  @Test
  public void getPerfumesByIds() throws Exception {
    mockMvc
        .perform(
            post(API_V1_PERFUMES + IDS)
                .content(mapper.writeValueAsString(Arrays.asList(3L, 4L, 5L)))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$[*].id").isNotEmpty())
        .andExpect(jsonPath("$[*].perfumeTitle").isNotEmpty())
        .andExpect(jsonPath("$[*].perfumer").isNotEmpty())
        .andExpect(jsonPath("$[*].filename").isNotEmpty())
        .andExpect(jsonPath("$[*].price").isNotEmpty());
  }

  @Test
  public void findPerfumesByFilterParams() throws Exception {
    mockMvc
        .perform(
            post(API_V1_PERFUMES + SEARCH)
                .content(mapper.writeValueAsString(filter))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$[*].id").isNotEmpty())
        .andExpect(jsonPath("$[*].perfumeTitle").isNotEmpty())
        .andExpect(jsonPath("$[*].perfumer").isNotEmpty())
        .andExpect(jsonPath("$[*].filename").isNotEmpty())
        .andExpect(jsonPath("$[*].price").isNotEmpty());
  }

  @Test
  public void findPerfumesByFilterParamsPerfumers() throws Exception {
    PerfumeSearchRequest filter = new PerfumeSearchRequest();
    List<String> perfumers = new ArrayList<>();
    perfumers.add(PERFUMER_CHANEL);
    List<Integer> prices = new ArrayList<>();
    prices.add(150);
    prices.add(250);

    filter.setPerfumers(perfumers);
    // Modificado para incluir um gênero específico para garantir que resultados sejam retornados
    // com base nos dados de teste existentes. O ideal é que o backend trate uma lista vazia
    // de gêneros como "sem filtro de gênero" ou "todos os gêneros".
    filter.setGenders(List.of("female"));
    filter.setPrices(prices);
    filter.setSortByPrice(true);

    mockMvc
        .perform(
            post(API_V1_PERFUMES + SEARCH)
                .content(mapper.writeValueAsString(filter))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$[*].id").isNotEmpty())
        .andExpect(jsonPath("$[*].perfumeTitle").isNotEmpty())
        .andExpect(jsonPath("$[*].perfumer").isNotEmpty())
        .andExpect(jsonPath("$[*].filename").isNotEmpty())
        .andExpect(jsonPath("$[*].price").isNotEmpty());
  }

  @Test
  public void findByPerfumeGender() throws Exception {
    PerfumeSearchRequest filter = new PerfumeSearchRequest();
    filter.setPerfumeGender(PERFUME_GENDER);

    mockMvc
        .perform(
            post(API_V1_PERFUMES + SEARCH_GENDER)
                .content(mapper.writeValueAsString(filter))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$[*].id").isNotEmpty())
        .andExpect(jsonPath("$[*].perfumeTitle").isNotEmpty())
        .andExpect(jsonPath("$[*].perfumer").isNotEmpty())
        .andExpect(jsonPath("$[*].filename").isNotEmpty())
        .andExpect(jsonPath("$[*].price").isNotEmpty());
  }

  @Test
  public void findByPerfumer() throws Exception {
    PerfumeSearchRequest filter = new PerfumeSearchRequest();
    filter.setPerfumer(PERFUMER_CHANEL);

    mockMvc
        .perform(
            post(API_V1_PERFUMES + SEARCH_PERFUMER)
                .content(mapper.writeValueAsString(filter))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$[*].id").isNotEmpty())
        .andExpect(jsonPath("$[*].perfumeTitle").isNotEmpty())
        .andExpect(jsonPath("$[*].perfumer").isNotEmpty())
        .andExpect(jsonPath("$[*].filename").isNotEmpty())
        .andExpect(jsonPath("$[*].price").isNotEmpty());
  }

  @Test
  public void findByInputText() throws Exception {
    SearchTypeRequest request = new SearchTypeRequest();
    request.setSearchType(SearchPerfume.COUNTRY);
    request.setText("France");

    mockMvc
        .perform(
            post(API_V1_PERFUMES + SEARCH_TEXT)
                .content(mapper.writeValueAsString(request))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$[*]", hasSize(15)))
        .andExpect(jsonPath("$[*].id").isNotEmpty())
        .andExpect(jsonPath("$[*].perfumeTitle").isNotEmpty())
        .andExpect(jsonPath("$[*].perfumer").isNotEmpty())
        .andExpect(jsonPath("$[*].filename").isNotEmpty())
        .andExpect(jsonPath("$[*].price").isNotEmpty());

    request.setSearchType(SearchPerfume.BRAND);
    request.setText("Creed");

    mockMvc
        .perform(
            post(API_V1_PERFUMES + SEARCH_TEXT)
                .content(mapper.writeValueAsString(request))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$[*]", hasSize(7)))
        .andExpect(jsonPath("$[*].id").isNotEmpty())
        .andExpect(jsonPath("$[*].perfumeTitle").isNotEmpty())
        .andExpect(jsonPath("$[*].perfumer").isNotEmpty())
        .andExpect(jsonPath("$[*].filename").isNotEmpty())
        .andExpect(jsonPath("$[*].price").isNotEmpty());

    request.setSearchType(SearchPerfume.PERFUME_TITLE);
    request.setText("Chanel N5");

    mockMvc
        .perform(
            post(API_V1_PERFUMES + SEARCH_TEXT)
                .content(mapper.writeValueAsString(request))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$[*]", hasSize(1)))
        .andExpect(jsonPath("$[*].id").isNotEmpty())
        .andExpect(jsonPath("$[*].perfumeTitle").isNotEmpty())
        .andExpect(jsonPath("$[*].perfumer").isNotEmpty())
        .andExpect(jsonPath("$[*].filename").isNotEmpty())
        .andExpect(jsonPath("$[*].price").isNotEmpty());
  }

  @Test
  public void getPerfumesByIdsQuery() throws Exception {
    graphQLRequest.setQuery(GRAPHQL_QUERY_PERFUMES_BY_IDS);

    mockMvc
        .perform(
            post(API_V1_PERFUMES + GRAPHQL_IDS)
                .content(mapper.writeValueAsString(graphQLRequest))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$.data.perfumesIds[*].id").isNotEmpty())
        .andExpect(jsonPath("$.data.perfumesIds[*].perfumeTitle").isNotEmpty())
        .andExpect(jsonPath("$.data.perfumesIds[*].perfumer").isNotEmpty())
        .andExpect(jsonPath("$.data.perfumesIds[*].price").isNotEmpty());
  }

  @Test
  public void getAllPerfumesByQuery() throws Exception {
    graphQLRequest.setQuery(GRAPHQL_QUERY_PERFUMES);

    mockMvc
        .perform(
            post(API_V1_PERFUMES + GRAPHQL_PERFUMES)
                .content(mapper.writeValueAsString(graphQLRequest))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$.data.perfumes[*].id").isNotEmpty())
        .andExpect(jsonPath("$.data.perfumes[*].perfumeTitle").isNotEmpty())
        .andExpect(jsonPath("$.data.perfumes[*].perfumer").isNotEmpty())
        .andExpect(jsonPath("$.data.perfumes[*].price").isNotEmpty())
        .andExpect(jsonPath("$.data.perfumes[*].filename").isNotEmpty());
  }

  @Test
  public void getPerfumeByQuery() throws Exception {
    graphQLRequest.setQuery(GRAPHQL_QUERY_PERFUME);

    mockMvc
        .perform(
            post(API_V1_PERFUMES + GRAPHQL_PERFUME)
                .content(mapper.writeValueAsString(graphQLRequest))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$.data.perfume.id", equalTo(1)))
        .andExpect(jsonPath("$.data.perfume.perfumeTitle", equalTo("Boss Bottled Night")))
        .andExpect(jsonPath("$.data.perfume.perfumer", equalTo("Hugo Boss")))
        .andExpect(jsonPath("$.data.perfume.price", equalTo(35)));
  }
}
------[0m
[0m2025-06-16 21:23:10 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java[0m
[0m2025-06-16 21:23:10 [0;34m[DEBUG][0m   FILE_STATUS (RegistrationControllerTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:10 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java, FILE_NAME: RegistrationControllerTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:23:10 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:23:10 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:10 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java][0m
[0m2025-06-16 21:23:11 [0;34m[INFO][0m    - File:[0;37m[RegistrationControllerTest.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:23:11 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.controller;

import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.*;
import static com.gmail.merikbest2015.ecommerce.constants.PathConstants.ACTIVATE_CODE;
import static com.gmail.merikbest2015.ecommerce.constants.PathConstants.API_V1_REGISTRATION;
import static com.gmail.merikbest2015.ecommerce.util.TestConstants.*;
import static org.hamcrest.Matchers.equalTo;
import static org.hamcrest.Matchers.is;
import static org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestPostProcessors.csrf;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.gmail.merikbest2015.ecommerce.dto.RegistrationRequest;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.http.MediaType;
import org.springframework.test.context.TestPropertySource;
import org.springframework.test.context.jdbc.Sql;
import org.springframework.test.context.junit.jupiter.SpringExtension;
import org.springframework.test.web.servlet.MockMvc;

@SpringBootTest
@ExtendWith(SpringExtension.class)
@AutoConfigureMockMvc
@TestPropertySource("/application-test.properties")
@Sql(
    value = {"/sql/create-user-before.sql"},
    executionPhase = Sql.ExecutionPhase.BEFORE_TEST_METHOD)
@Sql(
    value = {"/sql/create-user-after.sql"},
    executionPhase = Sql.ExecutionPhase.AFTER_TEST_METHOD)
public class RegistrationControllerTest {

  @Autowired private MockMvc mockMvc;

  @Autowired private ObjectMapper mapper;

  private RegistrationRequest registrationRequest;

  @BeforeEach
  public void init() {
    registrationRequest = new RegistrationRequest();
    registrationRequest.setEmail("testtest@test.com");
    registrationRequest.setPassword(USER_PASSWORD);
    registrationRequest.setPassword2(USER_PASSWORD);
    registrationRequest.setFirstName(FIRST_NAME);
    registrationRequest.setLastName(LAST_NAME);
    registrationRequest.setCaptcha("12345");
  }

  @Test
  public void registration_ShouldPassword2BeEmpty() throws Exception {
    registrationRequest.setPassword("");
    registrationRequest.setPassword2("");

    mockMvc
        .perform(
            post(API_V1_REGISTRATION)
                .content(mapper.writeValueAsString(registrationRequest))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isBadRequest())
        .andExpect(jsonPath("$.password2Error", is(PASSWORD2_CHARACTER_LENGTH)));
  }

  @Test
  public void registration_ShouldPasswordsNotMatch() throws Exception {
    registrationRequest.setPassword2("12345678");

    mockMvc
        .perform(
            post(API_V1_REGISTRATION)
                .content(mapper.writeValueAsString(registrationRequest))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isBadRequest())
        .andExpect(jsonPath("$.passwordError", is(PASSWORDS_DO_NOT_MATCH)));
  }

  @Test
  public void registration_ShouldUserEmailIsExist() throws Exception {
    RegistrationRequest registrationRequest = new RegistrationRequest();
    registrationRequest.setEmail(USER_EMAIL);
    registrationRequest.setPassword(USER_PASSWORD);
    registrationRequest.setPassword2(USER_PASSWORD);
    registrationRequest.setFirstName(FIRST_NAME);
    registrationRequest.setLastName(LAST_NAME);
    registrationRequest.setCaptcha("12345");

    mockMvc
        .perform(
            post(API_V1_REGISTRATION)
                .content(mapper.writeValueAsString(registrationRequest))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isBadRequest())
        .andExpect(jsonPath("$.emailError").value(EMAIL_IN_USE));
  }

  @Test
  public void registration_ShouldCaptchaNotFilled() throws Exception {
    registrationRequest.setCaptcha(null);

    mockMvc
        .perform(
            post(API_V1_REGISTRATION)
                .content(mapper.writeValueAsString(registrationRequest))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isBadRequest())
        .andExpect(jsonPath("$.captchaError").value("Fill captcha."));
  }

  @Test
  public void registration_ShouldInputFieldsAreEmpty() throws Exception {
    mockMvc
        .perform(
            post(API_V1_REGISTRATION)
                .param("password2", "")
                .param("g-recaptcha-response", "")
                .content(mapper.writeValueAsString(new RegistrationRequest()))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isBadRequest());
  }

  @Test
  public void activateEmailCode() throws Exception {
    mockMvc
        .perform(
            get(API_V1_REGISTRATION + ACTIVATE_CODE, USER_ACTIVATION_CODE)
                .contentType(MediaType.APPLICATION_JSON_VALUE))
        .andExpect(status().isOk())
        .andExpect(content().string(equalTo("User successfully activated.")));
  }

  @Test
  public void activateEmailCode_ShouldNotFoundActivationCode() throws Exception {
    mockMvc
        .perform(
            get(API_V1_REGISTRATION + ACTIVATE_CODE, "123")
                .contentType(MediaType.APPLICATION_JSON_VALUE))
        .andExpect(status().isNotFound())
        .andExpect(jsonPath("$", is(ACTIVATION_CODE_NOT_FOUND)));
  }
}
------[0m
[0m2025-06-16 21:23:11 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.controller;

import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.*;
import static com.gmail.merikbest2015.ecommerce.constants.PathConstants.ACTIVATE_CODE;
import static com.gmail.merikbest2015.ecommerce.constants.PathConstants.API_V1_REGISTRATION;
import static com.gmail.merikbest2015.ecommerce.util.TestConstants.*;
import static org.hamcrest.Matchers.equalTo;
import static org.hamcrest.Matchers.is;
import static org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestPostProcessors.csrf;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.gmail.merikbest2015.ecommerce.dto.RegistrationRequest;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.http.MediaType;
import org.springframework.test.context.TestPropertySource;
import org.springframework.test.context.jdbc.Sql;
import org.springframework.test.context.junit.jupiter.SpringExtension;
import org.springframework.test.web.servlet.MockMvc;

@SpringBootTest
@ExtendWith(SpringExtension.class)
@AutoConfigureMockMvc
@TestPropertySource("/application-test.properties")
@Sql(
    value = {"/sql/create-user-before.sql"},
    executionPhase = Sql.ExecutionPhase.BEFORE_TEST_METHOD)
@Sql(
    value = {"/sql/create-user-after.sql"},
    executionPhase = Sql.ExecutionPhase.AFTER_TEST_METHOD)
public class RegistrationControllerTest {

  @Autowired private MockMvc mockMvc;

  @Autowired private ObjectMapper mapper;

  private RegistrationRequest registrationRequest;

  @BeforeEach
  public void init() {
    registrationRequest = new RegistrationRequest();
    registrationRequest.setEmail("testtest@test.com");
    registrationRequest.setPassword(USER_PASSWORD);
    registrationRequest.setPassword2(USER_PASSWORD);
    registrationRequest.setFirstName(FIRST_NAME);
    registrationRequest.setLastName(LAST_NAME);
    registrationRequest.setCaptcha("12345");
  }

  @Test
  public void registration_ShouldPassword2BeEmpty() throws Exception {
    registrationRequest.setPassword("");
    registrationRequest.setPassword2("");

    mockMvc
        .perform(
            post(API_V1_REGISTRATION)
                .content(mapper.writeValueAsString(registrationRequest))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isBadRequest())
        .andExpect(jsonPath("$.password2Error", is(PASSWORD2_CHARACTER_LENGTH)));
  }

  @Test
  public void registration_ShouldPasswordsNotMatch() throws Exception {
    registrationRequest.setPassword2("12345678");

    mockMvc
        .perform(
            post(API_V1_REGISTRATION)
                .content(mapper.writeValueAsString(registrationRequest))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isBadRequest())
        .andExpect(jsonPath("$.passwordError", is(PASSWORDS_DO_NOT_MATCH)));
  }

  @Test
  public void registration_ShouldUserEmailIsExist() throws Exception {
    RegistrationRequest registrationRequest = new RegistrationRequest();
    registrationRequest.setEmail(USER_EMAIL);
    registrationRequest.setPassword(USER_PASSWORD);
    registrationRequest.setPassword2(USER_PASSWORD);
    registrationRequest.setFirstName(FIRST_NAME);
    registrationRequest.setLastName(LAST_NAME);
    registrationRequest.setCaptcha("12345");

    mockMvc
        .perform(
            post(API_V1_REGISTRATION)
                .content(mapper.writeValueAsString(registrationRequest))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isBadRequest())
        .andExpect(jsonPath("$.emailError").value(EMAIL_IN_USE));
  }

  @Test
  public void registration_ShouldCaptchaNotFilled() throws Exception {
    registrationRequest.setCaptcha(null);

    mockMvc
        .perform(
            post(API_V1_REGISTRATION)
                .content(mapper.writeValueAsString(registrationRequest))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isBadRequest())
        .andExpect(jsonPath("$.captchaError").value("Fill captcha."));
  }

  @Test
  public void registration_ShouldInputFieldsAreEmpty() throws Exception {
    mockMvc
        .perform(
            post(API_V1_REGISTRATION)
                .param("password2", "")
                .param("g-recaptcha-response", "")
                .content(mapper.writeValueAsString(new RegistrationRequest()))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isBadRequest());
  }

  @Test
  public void activateEmailCode() throws Exception {
    mockMvc
        .perform(
            get(API_V1_REGISTRATION + ACTIVATE_CODE, USER_ACTIVATION_CODE)
                .contentType(MediaType.APPLICATION_JSON_VALUE))
        .andExpect(status().isOk())
        .andExpect(content().string(equalTo("User successfully activated.")));
  }

  @Test
  public void activateEmailCode_ShouldNotFoundActivationCode() throws Exception {
    mockMvc
        .perform(
            get(API_V1_REGISTRATION + ACTIVATE_CODE, "123")
                .contentType(MediaType.APPLICATION_JSON_VALUE))
        .andExpect(status().isNotFound())
        .andExpect(jsonPath("$", is(ACTIVATION_CODE_NOT_FOUND)));
  }
}
------[0m
[0m2025-06-16 21:23:11 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java[0m
[0m2025-06-16 21:23:11 [0;34m[DEBUG][0m   FILE_STATUS (ReviewControllerTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:11 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java, FILE_NAME: ReviewControllerTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:23:11 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:23:11 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:11 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java][0m
[0m2025-06-16 21:23:11 [0;34m[INFO][0m    - File:[0;37m[ReviewControllerTest.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:23:11 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.controller;

import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.FILL_IN_THE_INPUT_FIELD;
import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.PERFUME_NOT_FOUND;
import static com.gmail.merikbest2015.ecommerce.constants.PathConstants.API_V1_REVIEW;
import static com.gmail.merikbest2015.ecommerce.constants.PathConstants.PERFUME_ID;
import static com.gmail.merikbest2015.ecommerce.util.TestConstants.FIRST_NAME;
import static org.hamcrest.Matchers.*;
import static org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestPostProcessors.csrf;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.gmail.merikbest2015.ecommerce.dto.review.ReviewRequest;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.http.MediaType;
import org.springframework.test.context.TestPropertySource;
import org.springframework.test.context.jdbc.Sql;
import org.springframework.test.context.junit.jupiter.SpringExtension;
import org.springframework.test.web.servlet.MockMvc;

@SpringBootTest
@ExtendWith(SpringExtension.class)
@AutoConfigureMockMvc
@TestPropertySource("/application-test.properties")
@Sql(
    value = {"/sql/create-perfumes-before.sql"},
    executionPhase = Sql.ExecutionPhase.BEFORE_TEST_METHOD)
@Sql(
    value = {"/sql/create-perfumes-after.sql"},
    executionPhase = Sql.ExecutionPhase.AFTER_TEST_METHOD)
public class ReviewControllerTest {

  @Autowired private MockMvc mockMvc;

  @Autowired private ObjectMapper mapper;

  @Test
  public void getReviewsByPerfumeId() throws Exception {
    mockMvc
        .perform(get(API_V1_REVIEW + PERFUME_ID, 2).contentType(MediaType.APPLICATION_JSON_VALUE))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$[*]", hasSize(2)))
        .andExpect(jsonPath("$[*].id").isNotEmpty())
        .andExpect(jsonPath("$[*].author").isNotEmpty())
        .andExpect(jsonPath("$[*].message").isNotEmpty())
        .andExpect(jsonPath("$[*].rating").isNotEmpty())
        .andExpect(jsonPath("$[*].date").isNotEmpty());
  }

  @Test
  public void addReviewToPerfume() throws Exception {
    ReviewRequest reviewRequest = new ReviewRequest();
    reviewRequest.setPerfumeId(1L);
    reviewRequest.setAuthor(FIRST_NAME);
    reviewRequest.setMessage("Hello world");
    reviewRequest.setRating(5);

    mockMvc
        .perform(
            post(API_V1_REVIEW)
                .content(mapper.writeValueAsString(reviewRequest))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$.id", equalTo(1)))
        .andExpect(jsonPath("$.author", equalTo(FIRST_NAME)))
        .andExpect(jsonPath("$.rating", equalTo(5)))
        .andExpect(jsonPath("$.message", equalTo("Hello world")));
  }

  @Test
  public void addReviewToPerfume_ShouldNotFound() throws Exception {
    ReviewRequest reviewRequest = new ReviewRequest();
    reviewRequest.setPerfumeId(111L);
    reviewRequest.setAuthor(FIRST_NAME);
    reviewRequest.setMessage("Hello world");
    reviewRequest.setRating(5);

    mockMvc
        .perform(
            post(API_V1_REVIEW)
                .content(mapper.writeValueAsString(reviewRequest))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isNotFound())
        .andExpect(jsonPath("$", equalTo(PERFUME_NOT_FOUND)));
  }

  @Test
  public void addReviewToPerfume_ShouldInputFieldsAreEmpty() throws Exception {
    ReviewRequest reviewRequest = new ReviewRequest();

    mockMvc
        .perform(
            post(API_V1_REVIEW)
                .content(mapper.writeValueAsString(reviewRequest))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isBadRequest())
        .andExpect(jsonPath("$.authorError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.messageError", is(FILL_IN_THE_INPUT_FIELD)));
  }
}
------[0m
[0m2025-06-16 21:23:11 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.controller;

import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.FILL_IN_THE_INPUT_FIELD;
import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.PERFUME_NOT_FOUND;
import static com.gmail.merikbest2015.ecommerce.constants.PathConstants.API_V1_REVIEW;
import static com.gmail.merikbest2015.ecommerce.constants.PathConstants.PERFUME_ID;
import static com.gmail.merikbest2015.ecommerce.util.TestConstants.FIRST_NAME;
import static org.hamcrest.Matchers.*;
import static org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestPostProcessors.csrf;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.gmail.merikbest2015.ecommerce.dto.review.ReviewRequest;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.http.MediaType;
import org.springframework.test.context.TestPropertySource;
import org.springframework.test.context.jdbc.Sql;
import org.springframework.test.context.junit.jupiter.SpringExtension;
import org.springframework.test.web.servlet.MockMvc;

@SpringBootTest
@ExtendWith(SpringExtension.class)
@AutoConfigureMockMvc
@TestPropertySource("/application-test.properties")
@Sql(
    value = {"/sql/create-perfumes-before.sql"},
    executionPhase = Sql.ExecutionPhase.BEFORE_TEST_METHOD)
@Sql(
    value = {"/sql/create-perfumes-after.sql"},
    executionPhase = Sql.ExecutionPhase.AFTER_TEST_METHOD)
public class ReviewControllerTest {

  @Autowired private MockMvc mockMvc;

  @Autowired private ObjectMapper mapper;

  @Test
  public void getReviewsByPerfumeId() throws Exception {
    mockMvc
        .perform(get(API_V1_REVIEW + PERFUME_ID, 2).contentType(MediaType.APPLICATION_JSON_VALUE))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$[*]", hasSize(2)))
        .andExpect(jsonPath("$[*].id").isNotEmpty())
        .andExpect(jsonPath("$[*].author").isNotEmpty())
        .andExpect(jsonPath("$[*].message").isNotEmpty())
        .andExpect(jsonPath("$[*].rating").isNotEmpty())
        .andExpect(jsonPath("$[*].date").isNotEmpty());
  }

  @Test
  public void addReviewToPerfume() throws Exception {
    ReviewRequest reviewRequest = new ReviewRequest();
    reviewRequest.setPerfumeId(1L);
    reviewRequest.setAuthor(FIRST_NAME);
    reviewRequest.setMessage("Hello world");
    reviewRequest.setRating(5);

    mockMvc
        .perform(
            post(API_V1_REVIEW)
                .content(mapper.writeValueAsString(reviewRequest))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$.id", equalTo(1)))
        .andExpect(jsonPath("$.author", equalTo(FIRST_NAME)))
        .andExpect(jsonPath("$.rating", equalTo(5)))
        .andExpect(jsonPath("$.message", equalTo("Hello world")));
  }

  @Test
  public void addReviewToPerfume_ShouldNotFound() throws Exception {
    ReviewRequest reviewRequest = new ReviewRequest();
    reviewRequest.setPerfumeId(111L);
    reviewRequest.setAuthor(FIRST_NAME);
    reviewRequest.setMessage("Hello world");
    reviewRequest.setRating(5);

    mockMvc
        .perform(
            post(API_V1_REVIEW)
                .content(mapper.writeValueAsString(reviewRequest))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isNotFound())
        .andExpect(jsonPath("$", equalTo(PERFUME_NOT_FOUND)));
  }

  @Test
  public void addReviewToPerfume_ShouldInputFieldsAreEmpty() throws Exception {
    ReviewRequest reviewRequest = new ReviewRequest();

    mockMvc
        .perform(
            post(API_V1_REVIEW)
                .content(mapper.writeValueAsString(reviewRequest))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isBadRequest())
        .andExpect(jsonPath("$.authorError", is(FILL_IN_THE_INPUT_FIELD)))
        .andExpect(jsonPath("$.messageError", is(FILL_IN_THE_INPUT_FIELD)));
  }
}
------[0m
[0m2025-06-16 21:23:11 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java[0m
[0m2025-06-16 21:23:11 [0;34m[DEBUG][0m   FILE_STATUS (UserControllerTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:11 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java, FILE_NAME: UserControllerTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:23:11 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:23:11 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:11 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java][0m
[0m2025-06-16 21:23:12 [0;34m[INFO][0m    - File:[0;37m[UserControllerTest.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:23:12 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.controller;

import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.EMPTY_FIRST_NAME;
import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.EMPTY_LAST_NAME;
import static com.gmail.merikbest2015.ecommerce.constants.PathConstants.*;
import static com.gmail.merikbest2015.ecommerce.util.TestConstants.*;
import static org.hamcrest.Matchers.equalTo;
import static org.hamcrest.Matchers.is;
import static org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestPostProcessors.csrf;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.gmail.merikbest2015.ecommerce.dto.GraphQLRequest;
import com.gmail.merikbest2015.ecommerce.dto.user.UpdateUserRequest;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.http.MediaType;
import org.springframework.security.test.context.support.WithUserDetails;
import org.springframework.test.context.TestPropertySource;
import org.springframework.test.context.jdbc.Sql;
import org.springframework.test.context.junit.jupiter.SpringExtension;
import org.springframework.test.web.servlet.MockMvc;

@SpringBootTest
@ExtendWith(SpringExtension.class)
@AutoConfigureMockMvc
@TestPropertySource("/application-test.properties")
@Sql(
    value = {"/sql/create-user-before.sql", "/sql/create-perfumes-before.sql"},
    executionPhase = Sql.ExecutionPhase.BEFORE_TEST_METHOD)
@Sql(
    value = {"/sql/create-user-after.sql", "/sql/create-perfumes-after.sql"},
    executionPhase = Sql.ExecutionPhase.AFTER_TEST_METHOD)
public class UserControllerTest {

  @Autowired private MockMvc mockMvc;

  @Autowired private ObjectMapper mapper;

  @Test
  @WithUserDetails(USER_EMAIL)
  public void getUserInfo() throws Exception {
    mockMvc
        .perform(get(API_V1_USERS).contentType(MediaType.APPLICATION_JSON_VALUE))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$.id").isNotEmpty())
        .andExpect(jsonPath("$.firstName").value(FIRST_NAME))
        .andExpect(jsonPath("$.email").value(USER_EMAIL))
        .andExpect(jsonPath("$.roles").value(ROLE_USER));
  }

  /* @Test
  public void getUserInfoByJwt() throws Exception {
      mockMvc.perform(get(API_V1_USERS)
                      .header("Authorization", JWT_TOKEN)
                      .contentType(MediaType.APPLICATION_JSON_VALUE))
              .andExpect(status().isOk())
              .andExpect(jsonPath("$.id").isNotEmpty())
              .andExpect(jsonPath("$.email").value(ADMIN_EMAIL))
              .andExpect(jsonPath("$.roles").value(ROLE_ADMIN));
  }*/

  //    @Test
  //    public void getUserInfoByJwtExpired() throws Exception {
  //        mockMvc.perform(get(API_V1_USERS)
  //                        .header("Authorization", "jwt")
  //                        .contentType(MediaType.APPLICATION_JSON_VALUE))
  //                .andExpect(status().isUnauthorized());
  //    }

  @Test
  @WithUserDetails(USER_EMAIL)
  public void updateUserInfo() throws Exception {
    UpdateUserRequest userRequest = new UpdateUserRequest();
    userRequest.setFirstName(USER2_NAME);
    userRequest.setLastName(USER2_NAME);

    mockMvc
        .perform(
            put(API_V1_USERS)
                .content(mapper.writeValueAsString(userRequest))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$.id").isNotEmpty())
        .andExpect(jsonPath("$.email").value(USER_EMAIL))
        .andExpect(jsonPath("$.firstName").value(USER2_NAME))
        .andExpect(jsonPath("$.lastName").value(USER2_NAME));
  }

  @Test
  @WithUserDetails(USER_EMAIL)
  public void updateUserInfo_ShouldInputFieldsAreEmpty() throws Exception {
    UpdateUserRequest userRequest = new UpdateUserRequest();

    mockMvc
        .perform(
            put(API_V1_USERS)
                .content(mapper.writeValueAsString(userRequest))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isBadRequest())
        .andExpect(jsonPath("$.firstNameError", is(EMPTY_FIRST_NAME)))
        .andExpect(jsonPath("$.lastNameError", is(EMPTY_LAST_NAME)));
  }

  @Test
  public void getCart() throws Exception {
    List<Long> perfumesIds = new ArrayList<>();
    perfumesIds.add(2L);
    perfumesIds.add(4L);

    mockMvc
        .perform(
            post(API_V1_USERS + CART)
                .content(mapper.writeValueAsString(perfumesIds))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$[*].id").isNotEmpty())
        .andExpect(jsonPath("$[*].perfumeTitle").isNotEmpty())
        .andExpect(jsonPath("$[*].perfumer").isNotEmpty())
        .andExpect(jsonPath("$[*].filename").isNotEmpty())
        .andExpect(jsonPath("$[*].price").isNotEmpty())
        .andExpect(jsonPath("$[*].volume").isNotEmpty())
        .andExpect(jsonPath("$[*].perfumeRating").isNotEmpty())
        .andExpect(jsonPath("$[*].reviewsCount").isNotEmpty());
  }

  @Test
  @WithUserDetails(USER_EMAIL)
  public void getUserInfoByQuery() throws Exception {
    GraphQLRequest graphQLRequest = new GraphQLRequest();
    graphQLRequest.setQuery(GRAPHQL_QUERY_USER);

    mockMvc
        .perform(
            post(API_V1_USERS + GRAPHQL)
                .content(mapper.writeValueAsString(graphQLRequest))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$.data.user.id", equalTo(USER_ID)))
        .andExpect(jsonPath("$.data.user.email", equalTo(USER_EMAIL)))
        .andExpect(jsonPath("$.data.user.firstName", equalTo(FIRST_NAME)))
        .andExpect(jsonPath("$.data.user.lastName", equalTo(LAST_NAME)))
        .andExpect(jsonPath("$.data.user.city", equalTo(CITY)))
        .andExpect(jsonPath("$.data.user.address", equalTo(ADDRESS)))
        .andExpect(jsonPath("$.data.user.phoneNumber", equalTo(PHONE_NUMBER)))
        .andExpect(jsonPath("$.data.user.postIndex", equalTo("1234567890")))
        .andExpect(jsonPath("$.data.user.activationCode", equalTo(null)))
        .andExpect(jsonPath("$.data.user.passwordResetCode", equalTo(null)))
        .andExpect(jsonPath("$.data.user.active", equalTo(true)))
        .andExpect(jsonPath("$.data.user.roles[0]", equalTo(ROLE_USER)));
  }
}
------[0m
[0m2025-06-16 21:23:12 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.controller;

import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.EMPTY_FIRST_NAME;
import static com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.EMPTY_LAST_NAME;
import static com.gmail.merikbest2015.ecommerce.constants.PathConstants.*;
import static com.gmail.merikbest2015.ecommerce.util.TestConstants.*;
import static org.hamcrest.Matchers.equalTo;
import static org.hamcrest.Matchers.is;
import static org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestPostProcessors.csrf;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.gmail.merikbest2015.ecommerce.dto.GraphQLRequest;
import com.gmail.merikbest2015.ecommerce.dto.user.UpdateUserRequest;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.http.MediaType;
import org.springframework.security.test.context.support.WithUserDetails;
import org.springframework.test.context.TestPropertySource;
import org.springframework.test.context.jdbc.Sql;
import org.springframework.test.context.junit.jupiter.SpringExtension;
import org.springframework.test.web.servlet.MockMvc;

@SpringBootTest
@ExtendWith(SpringExtension.class)
@AutoConfigureMockMvc
@TestPropertySource("/application-test.properties")
@Sql(
    value = {"/sql/create-user-before.sql", "/sql/create-perfumes-before.sql"},
    executionPhase = Sql.ExecutionPhase.BEFORE_TEST_METHOD)
@Sql(
    value = {"/sql/create-user-after.sql", "/sql/create-perfumes-after.sql"},
    executionPhase = Sql.ExecutionPhase.AFTER_TEST_METHOD)
public class UserControllerTest {

  @Autowired private MockMvc mockMvc;

  @Autowired private ObjectMapper mapper;

  @Test
  @WithUserDetails(USER_EMAIL)
  public void getUserInfo() throws Exception {
    mockMvc
        .perform(get(API_V1_USERS).contentType(MediaType.APPLICATION_JSON_VALUE))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$.id").isNotEmpty())
        .andExpect(jsonPath("$.firstName").value(FIRST_NAME))
        .andExpect(jsonPath("$.email").value(USER_EMAIL))
        .andExpect(jsonPath("$.roles").value(ROLE_USER));
  }

  /* @Test
  public void getUserInfoByJwt() throws Exception {
      mockMvc.perform(get(API_V1_USERS)
                      .header("Authorization", JWT_TOKEN)
                      .contentType(MediaType.APPLICATION_JSON_VALUE))
              .andExpect(status().isOk())
              .andExpect(jsonPath("$.id").isNotEmpty())
              .andExpect(jsonPath("$.email").value(ADMIN_EMAIL))
              .andExpect(jsonPath("$.roles").value(ROLE_ADMIN));
  }*/

  //    @Test
  //    public void getUserInfoByJwtExpired() throws Exception {
  //        mockMvc.perform(get(API_V1_USERS)
  //                        .header("Authorization", "jwt")
  //                        .contentType(MediaType.APPLICATION_JSON_VALUE))
  //                .andExpect(status().isUnauthorized());
  //    }

  @Test
  @WithUserDetails(USER_EMAIL)
  public void updateUserInfo() throws Exception {
    UpdateUserRequest userRequest = new UpdateUserRequest();
    userRequest.setFirstName(USER2_NAME);
    userRequest.setLastName(USER2_NAME);

    mockMvc
        .perform(
            put(API_V1_USERS)
                .content(mapper.writeValueAsString(userRequest))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$.id").isNotEmpty())
        .andExpect(jsonPath("$.email").value(USER_EMAIL))
        .andExpect(jsonPath("$.firstName").value(USER2_NAME))
        .andExpect(jsonPath("$.lastName").value(USER2_NAME));
  }

  @Test
  @WithUserDetails(USER_EMAIL)
  public void updateUserInfo_ShouldInputFieldsAreEmpty() throws Exception {
    UpdateUserRequest userRequest = new UpdateUserRequest();

    mockMvc
        .perform(
            put(API_V1_USERS)
                .content(mapper.writeValueAsString(userRequest))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isBadRequest())
        .andExpect(jsonPath("$.firstNameError", is(EMPTY_FIRST_NAME)))
        .andExpect(jsonPath("$.lastNameError", is(EMPTY_LAST_NAME)));
  }

  @Test
  public void getCart() throws Exception {
    List<Long> perfumesIds = new ArrayList<>();
    perfumesIds.add(2L);
    perfumesIds.add(4L);

    mockMvc
        .perform(
            post(API_V1_USERS + CART)
                .content(mapper.writeValueAsString(perfumesIds))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$[*].id").isNotEmpty())
        .andExpect(jsonPath("$[*].perfumeTitle").isNotEmpty())
        .andExpect(jsonPath("$[*].perfumer").isNotEmpty())
        .andExpect(jsonPath("$[*].filename").isNotEmpty())
        .andExpect(jsonPath("$[*].price").isNotEmpty())
        .andExpect(jsonPath("$[*].volume").isNotEmpty())
        .andExpect(jsonPath("$[*].perfumeRating").isNotEmpty())
        .andExpect(jsonPath("$[*].reviewsCount").isNotEmpty());
  }

  @Test
  @WithUserDetails(USER_EMAIL)
  public void getUserInfoByQuery() throws Exception {
    GraphQLRequest graphQLRequest = new GraphQLRequest();
    graphQLRequest.setQuery(GRAPHQL_QUERY_USER);

    mockMvc
        .perform(
            post(API_V1_USERS + GRAPHQL)
                .content(mapper.writeValueAsString(graphQLRequest))
                .contentType(MediaType.APPLICATION_JSON_VALUE)
                .with(csrf()))
        .andExpect(status().isOk())
        .andExpect(jsonPath("$.data.user.id", equalTo(USER_ID)))
        .andExpect(jsonPath("$.data.user.email", equalTo(USER_EMAIL)))
        .andExpect(jsonPath("$.data.user.firstName", equalTo(FIRST_NAME)))
        .andExpect(jsonPath("$.data.user.lastName", equalTo(LAST_NAME)))
        .andExpect(jsonPath("$.data.user.city", equalTo(CITY)))
        .andExpect(jsonPath("$.data.user.address", equalTo(ADDRESS)))
        .andExpect(jsonPath("$.data.user.phoneNumber", equalTo(PHONE_NUMBER)))
        .andExpect(jsonPath("$.data.user.postIndex", equalTo("1234567890")))
        .andExpect(jsonPath("$.data.user.activationCode", equalTo(null)))
        .andExpect(jsonPath("$.data.user.passwordResetCode", equalTo(null)))
        .andExpect(jsonPath("$.data.user.active", equalTo(true)))
        .andExpect(jsonPath("$.data.user.roles[0]", equalTo(ROLE_USER)));
  }
}
------[0m
[0m2025-06-16 21:23:12 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java[0m
[0m2025-06-16 21:23:12 [0;34m[DEBUG][0m   FILE_STATUS (OrderItemTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:12 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java, FILE_NAME: OrderItemTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:23:12 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:23:12 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:12 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java][0m
[0m2025-06-16 21:23:12 [0;34m[INFO][0m    - File:[0;37m[OrderItemTest.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:23:12 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.domain;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.mock;

import org.junit.jupiter.api.Test;

public class OrderItemTest {

  @Test
  void constructor_shouldCreateOrderItem_whenValidInputs() {
    Perfume mockPerfume = mock(Perfume.class);
    Long amount = 100L;
    Long quantity = 2L;

    OrderItem item = new OrderItem(amount, quantity, mockPerfume);

    assertEquals(amount, item.getAmount());
    assertEquals(quantity, item.getQuantity());
    assertEquals(mockPerfume, item.getPerfume());
  }

  @Test
  void constructor_shouldThrowException_whenAmountIsNull() {
    Perfume mockPerfume = mock(Perfume.class);

    IllegalArgumentException exception =
        assertThrows(IllegalArgumentException.class, () -> new OrderItem(null, 1L, mockPerfume));
    assertEquals("Amount must be non-null and non-negative.", exception.getMessage());
  }

  @Test
  void constructor_shouldThrowException_whenAmountIsNegative() {
    Perfume mockPerfume = mock(Perfume.class);

    IllegalArgumentException exception =
        assertThrows(IllegalArgumentException.class, () -> new OrderItem(-1L, 1L, mockPerfume));
    assertEquals("Amount must be non-null and non-negative.", exception.getMessage());
  }

  @Test
  void constructor_shouldThrowException_whenQuantityIsNull() {
    Perfume mockPerfume = mock(Perfume.class);

    IllegalArgumentException exception =
        assertThrows(IllegalArgumentException.class, () -> new OrderItem(10L, null, mockPerfume));
    assertEquals("Quantity must be non-null and positive.", exception.getMessage());
  }

  @Test
  void constructor_shouldThrowException_whenQuantityIsZeroOrNegative() {
    Perfume mockPerfume = mock(Perfume.class);

    IllegalArgumentException exceptionZero =
        assertThrows(IllegalArgumentException.class, () -> new OrderItem(10L, 0L, mockPerfume));
    assertEquals("Quantity must be non-null and positive.", exceptionZero.getMessage());

    IllegalArgumentException exceptionNegative =
        assertThrows(IllegalArgumentException.class, () -> new OrderItem(10L, -5L, mockPerfume));
    assertEquals("Quantity must be non-null and positive.", exceptionNegative.getMessage());
  }

  @Test
  void constructor_shouldThrowException_whenPerfumeIsNull() {
    IllegalArgumentException exception =
        assertThrows(IllegalArgumentException.class, () -> new OrderItem(10L, 1L, null));
    assertEquals("Perfume must not be null.", exception.getMessage());
  }
}
------[0m
[0m2025-06-16 21:23:12 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.domain;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.mock;

import org.junit.jupiter.api.Test;

public class OrderItemTest {

  @Test
  void constructor_shouldCreateOrderItem_whenValidInputs() {
    Perfume mockPerfume = mock(Perfume.class);
    Long amount = 100L;
    Long quantity = 2L;

    OrderItem item = new OrderItem(amount, quantity, mockPerfume);

    assertEquals(amount, item.getAmount());
    assertEquals(quantity, item.getQuantity());
    assertEquals(mockPerfume, item.getPerfume());
  }

  @Test
  void constructor_shouldThrowException_whenAmountIsNull() {
    Perfume mockPerfume = mock(Perfume.class);

    IllegalArgumentException exception =
        assertThrows(IllegalArgumentException.class, () -> new OrderItem(null, 1L, mockPerfume));
    assertEquals("Amount must be non-null and non-negative.", exception.getMessage());
  }

  @Test
  void constructor_shouldThrowException_whenAmountIsNegative() {
    Perfume mockPerfume = mock(Perfume.class);

    IllegalArgumentException exception =
        assertThrows(IllegalArgumentException.class, () -> new OrderItem(-1L, 1L, mockPerfume));
    assertEquals("Amount must be non-null and non-negative.", exception.getMessage());
  }

  @Test
  void constructor_shouldThrowException_whenQuantityIsNull() {
    Perfume mockPerfume = mock(Perfume.class);

    IllegalArgumentException exception =
        assertThrows(IllegalArgumentException.class, () -> new OrderItem(10L, null, mockPerfume));
    assertEquals("Quantity must be non-null and positive.", exception.getMessage());
  }

  @Test
  void constructor_shouldThrowException_whenQuantityIsZeroOrNegative() {
    Perfume mockPerfume = mock(Perfume.class);

    IllegalArgumentException exceptionZero =
        assertThrows(IllegalArgumentException.class, () -> new OrderItem(10L, 0L, mockPerfume));
    assertEquals("Quantity must be non-null and positive.", exceptionZero.getMessage());

    IllegalArgumentException exceptionNegative =
        assertThrows(IllegalArgumentException.class, () -> new OrderItem(10L, -5L, mockPerfume));
    assertEquals("Quantity must be non-null and positive.", exceptionNegative.getMessage());
  }

  @Test
  void constructor_shouldThrowException_whenPerfumeIsNull() {
    IllegalArgumentException exception =
        assertThrows(IllegalArgumentException.class, () -> new OrderItem(10L, 1L, null));
    assertEquals("Perfume must not be null.", exception.getMessage());
  }
}
------[0m
[0m2025-06-16 21:23:12 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java[0m
[0m2025-06-16 21:23:12 [0;34m[DEBUG][0m   FILE_STATUS (OrderTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:12 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java, FILE_NAME: OrderTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:23:12 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:23:12 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:12 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java][0m
[0m2025-06-16 21:23:13 [0;34m[INFO][0m    - File:[0;37m[OrderTest.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:23:13 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.domain;

import static org.junit.jupiter.api.Assertions.*;

import java.time.LocalDate;
import org.junit.jupiter.api.Test;

public class OrderTest {

  @Test
  public void testValidOrderCreation() {
    LocalDate today = LocalDate.now();
    Order order =
        new Order(
            100.0,
            today,
            "John",
            "Doe",
            "New York",
            "123 Main St",
            "john.doe@example.com",
            "+1234567890",
            12345);

    assertEquals(100.0, order.getTotalPrice());
    assertEquals(today, order.getDate());
    assertEquals("John", order.getFirstName());
    assertEquals("Doe", order.getLastName());
    assertEquals("New York", order.getCity());
    assertEquals("123 Main St", order.getAddress());
    assertEquals("john.doe@example.com", order.getEmail());
    assertEquals("+1234567890", order.getPhoneNumber());
    assertEquals(12345, order.getPostIndex());
    assertNotNull(order.getOrderItems());
    assertTrue(order.getOrderItems().isEmpty());
  }

  @Test
  public void testNullTotalPriceThrows() {
    IllegalArgumentException ex =
        assertThrows(
            IllegalArgumentException.class,
            () ->
                new Order(
                    null,
                    LocalDate.now(),
                    "John",
                    "Doe",
                    "City",
                    "Address",
                    "email@example.com",
                    "+1234567890",
                    123));
    assertEquals("Total price must be non-null and non-negative.", ex.getMessage());
  }

  @Test
  public void testNegativeTotalPriceThrows() {
    IllegalArgumentException ex =
        assertThrows(
            IllegalArgumentException.class,
            () ->
                new Order(
                    -10.0,
                    LocalDate.now(),
                    "John",
                    "Doe",
                    "City",
                    "Address",
                    "email@example.com",
                    "+1234567890",
                    123));
    assertEquals("Total price must be non-null and non-negative.", ex.getMessage());
  }

  @Test
  public void testNullDateThrows() {
    IllegalArgumentException ex =
        assertThrows(
            IllegalArgumentException.class,
            () ->
                new Order(
                    10.0,
                    null,
                    "John",
                    "Doe",
                    "City",
                    "Address",
                    "email@example.com",
                    "+1234567890",
                    123));
    assertEquals("Date must not be null.", ex.getMessage());
  }

  @Test
  public void testFutureDateThrows() {
    IllegalArgumentException ex =
        assertThrows(
            IllegalArgumentException.class,
            () ->
                new Order(
                    10.0,
                    LocalDate.now().plusDays(1),
                    "John",
                    "Doe",
                    "City",
                    "Address",
                    "email@example.com",
                    "+1234567890",
                    123));
    assertEquals("Date cannot be in the future.", ex.getMessage());
  }

  @Test
  public void testBlankFirstNameThrows() {
    IllegalArgumentException ex =
        assertThrows(
            IllegalArgumentException.class,
            () ->
                new Order(
                    10.0,
                    LocalDate.now(),
                    " ",
                    "Doe",
                    "City",
                    "Address",
                    "email@example.com",
                    "+1234567890",
                    123));
    assertEquals("First name must not be blank.", ex.getMessage());
  }

  @Test
  public void testBlankLastNameThrows() {
    IllegalArgumentException ex =
        assertThrows(
            IllegalArgumentException.class,
            () ->
                new Order(
                    10.0,
                    LocalDate.now(),
                    "John",
                    " ",
                    "City",
                    "Address",
                    "email@example.com",
                    "+1234567890",
                    123));
    assertEquals("Last name must not be blank.", ex.getMessage());
  }

  @Test
  public void testBlankCityThrows() {
    IllegalArgumentException ex =
        assertThrows(
            IllegalArgumentException.class,
            () ->
                new Order(
                    10.0,
                    LocalDate.now(),
                    "John",
                    "Doe",
                    "",
                    "Address",
                    "email@example.com",
                    "+1234567890",
                    123));
    assertEquals("City must not be blank.", ex.getMessage());
  }

  @Test
  public void testBlankAddressThrows() {
    IllegalArgumentException ex =
        assertThrows(
            IllegalArgumentException.class,
            () ->
                new Order(
                    10.0,
                    LocalDate.now(),
                    "John",
                    "Doe",
                    "City",
                    " ",
                    "email@example.com",
                    "+1234567890",
                    123));
    assertEquals("Address must not be blank.", ex.getMessage());
  }

  @Test
  public void testInvalidEmailThrows() {
    IllegalArgumentException ex =
        assertThrows(
            IllegalArgumentException.class,
            () ->
                new Order(
                    10.0,
                    LocalDate.now(),
                    "John",
                    "Doe",
                    "City",
                    "Address",
                    "invalid-email",
                    "+1234567890",
                    123));
    assertEquals("Email format is invalid.", ex.getMessage());
  }

  @Test
  public void testBlankEmailThrows() {
    IllegalArgumentException ex =
        assertThrows(
            IllegalArgumentException.class,
            () ->
                new Order(
                    10.0,
                    LocalDate.now(),
                    "John",
                    "Doe",
                    "City",
                    "Address",
                    " ",
                    "+1234567890",
                    123));
    assertEquals("Email must not be blank.", ex.getMessage());
  }

  @Test
  public void testInvalidPhoneNumberThrows() {
    IllegalArgumentException ex =
        assertThrows(
            IllegalArgumentException.class,
            () ->
                new Order(
                    10.0,
                    LocalDate.now(),
                    "John",
                    "Doe",
                    "City",
                    "Address",
                    "email@example.com",
                    "abc123",
                    123));
    assertEquals("Phone number format is invalid.", ex.getMessage());
  }

  @Test
  public void testBlankPhoneNumberThrows() {
    IllegalArgumentException ex =
        assertThrows(
            IllegalArgumentException.class,
            () ->
                new Order(
                    10.0,
                    LocalDate.now(),
                    "John",
                    "Doe",
                    "City",
                    "Address",
                    "email@example.com",
                    " ",
                    123));
    assertEquals("Phone number must not be blank.", ex.getMessage());
  }

  @Test
  public void testNullOrNegativePostIndexThrows() {
    IllegalArgumentException ex1 =
        assertThrows(
            IllegalArgumentException.class,
            () ->
                new Order(
                    10.0,
                    LocalDate.now(),
                    "John",
                    "Doe",
                    "City",
                    "Address",
                    "email@example.com",
                    "+1234567890",
                    null));
    assertEquals("Post index must be positive.", ex1.getMessage());

    IllegalArgumentException ex2 =
        assertThrows(
            IllegalArgumentException.class,
            () ->
                new Order(
                    10.0,
                    LocalDate.now(),
                    "John",
                    "Doe",
                    "City",
                    "Address",
                    "email@example.com",
                    "+1234567890",
                    -1));
    assertEquals("Post index must be positive.", ex2.getMessage());
  }
}
------[0m
[0m2025-06-16 21:23:13 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.domain;

import static org.junit.jupiter.api.Assertions.*;

import java.time.LocalDate;
import org.junit.jupiter.api.Test;

public class OrderTest {

  @Test
  public void testValidOrderCreation() {
    LocalDate today = LocalDate.now();
    Order order =
        new Order(
            100.0,
            today,
            "John",
            "Doe",
            "New York",
            "123 Main St",
            "john.doe@example.com",
            "+1234567890",
            12345);

    assertEquals(100.0, order.getTotalPrice());
    assertEquals(today, order.getDate());
    assertEquals("John", order.getFirstName());
    assertEquals("Doe", order.getLastName());
    assertEquals("New York", order.getCity());
    assertEquals("123 Main St", order.getAddress());
    assertEquals("john.doe@example.com", order.getEmail());
    assertEquals("+1234567890", order.getPhoneNumber());
    assertEquals(12345, order.getPostIndex());
    assertNotNull(order.getOrderItems());
    assertTrue(order.getOrderItems().isEmpty());
  }

  @Test
  public void testNullTotalPriceThrows() {
    IllegalArgumentException ex =
        assertThrows(
            IllegalArgumentException.class,
            () ->
                new Order(
                    null,
                    LocalDate.now(),
                    "John",
                    "Doe",
                    "City",
                    "Address",
                    "email@example.com",
                    "+1234567890",
                    123));
    assertEquals("Total price must be non-null and non-negative.", ex.getMessage());
  }

  @Test
  public void testNegativeTotalPriceThrows() {
    IllegalArgumentException ex =
        assertThrows(
            IllegalArgumentException.class,
            () ->
                new Order(
                    -10.0,
                    LocalDate.now(),
                    "John",
                    "Doe",
                    "City",
                    "Address",
                    "email@example.com",
                    "+1234567890",
                    123));
    assertEquals("Total price must be non-null and non-negative.", ex.getMessage());
  }

  @Test
  public void testNullDateThrows() {
    IllegalArgumentException ex =
        assertThrows(
            IllegalArgumentException.class,
            () ->
                new Order(
                    10.0,
                    null,
                    "John",
                    "Doe",
                    "City",
                    "Address",
                    "email@example.com",
                    "+1234567890",
                    123));
    assertEquals("Date must not be null.", ex.getMessage());
  }

  @Test
  public void testFutureDateThrows() {
    IllegalArgumentException ex =
        assertThrows(
            IllegalArgumentException.class,
            () ->
                new Order(
                    10.0,
                    LocalDate.now().plusDays(1),
                    "John",
                    "Doe",
                    "City",
                    "Address",
                    "email@example.com",
                    "+1234567890",
                    123));
    assertEquals("Date cannot be in the future.", ex.getMessage());
  }

  @Test
  public void testBlankFirstNameThrows() {
    IllegalArgumentException ex =
        assertThrows(
            IllegalArgumentException.class,
            () ->
                new Order(
                    10.0,
                    LocalDate.now(),
                    " ",
                    "Doe",
                    "City",
                    "Address",
                    "email@example.com",
                    "+1234567890",
                    123));
    assertEquals("First name must not be blank.", ex.getMessage());
  }

  @Test
  public void testBlankLastNameThrows() {
    IllegalArgumentException ex =
        assertThrows(
            IllegalArgumentException.class,
            () ->
                new Order(
                    10.0,
                    LocalDate.now(),
                    "John",
                    " ",
                    "City",
                    "Address",
                    "email@example.com",
                    "+1234567890",
                    123));
    assertEquals("Last name must not be blank.", ex.getMessage());
  }

  @Test
  public void testBlankCityThrows() {
    IllegalArgumentException ex =
        assertThrows(
            IllegalArgumentException.class,
            () ->
                new Order(
                    10.0,
                    LocalDate.now(),
                    "John",
                    "Doe",
                    "",
                    "Address",
                    "email@example.com",
                    "+1234567890",
                    123));
    assertEquals("City must not be blank.", ex.getMessage());
  }

  @Test
  public void testBlankAddressThrows() {
    IllegalArgumentException ex =
        assertThrows(
            IllegalArgumentException.class,
            () ->
                new Order(
                    10.0,
                    LocalDate.now(),
                    "John",
                    "Doe",
                    "City",
                    " ",
                    "email@example.com",
                    "+1234567890",
                    123));
    assertEquals("Address must not be blank.", ex.getMessage());
  }

  @Test
  public void testInvalidEmailThrows() {
    IllegalArgumentException ex =
        assertThrows(
            IllegalArgumentException.class,
            () ->
                new Order(
                    10.0,
                    LocalDate.now(),
                    "John",
                    "Doe",
                    "City",
                    "Address",
                    "invalid-email",
                    "+1234567890",
                    123));
    assertEquals("Email format is invalid.", ex.getMessage());
  }

  @Test
  public void testBlankEmailThrows() {
    IllegalArgumentException ex =
        assertThrows(
            IllegalArgumentException.class,
            () ->
                new Order(
                    10.0,
                    LocalDate.now(),
                    "John",
                    "Doe",
                    "City",
                    "Address",
                    " ",
                    "+1234567890",
                    123));
    assertEquals("Email must not be blank.", ex.getMessage());
  }

  @Test
  public void testInvalidPhoneNumberThrows() {
    IllegalArgumentException ex =
        assertThrows(
            IllegalArgumentException.class,
            () ->
                new Order(
                    10.0,
                    LocalDate.now(),
                    "John",
                    "Doe",
                    "City",
                    "Address",
                    "email@example.com",
                    "abc123",
                    123));
    assertEquals("Phone number format is invalid.", ex.getMessage());
  }

  @Test
  public void testBlankPhoneNumberThrows() {
    IllegalArgumentException ex =
        assertThrows(
            IllegalArgumentException.class,
            () ->
                new Order(
                    10.0,
                    LocalDate.now(),
                    "John",
                    "Doe",
                    "City",
                    "Address",
                    "email@example.com",
                    " ",
                    123));
    assertEquals("Phone number must not be blank.", ex.getMessage());
  }

  @Test
  public void testNullOrNegativePostIndexThrows() {
    IllegalArgumentException ex1 =
        assertThrows(
            IllegalArgumentException.class,
            () ->
                new Order(
                    10.0,
                    LocalDate.now(),
                    "John",
                    "Doe",
                    "City",
                    "Address",
                    "email@example.com",
                    "+1234567890",
                    null));
    assertEquals("Post index must be positive.", ex1.getMessage());

    IllegalArgumentException ex2 =
        assertThrows(
            IllegalArgumentException.class,
            () ->
                new Order(
                    10.0,
                    LocalDate.now(),
                    "John",
                    "Doe",
                    "City",
                    "Address",
                    "email@example.com",
                    "+1234567890",
                    -1));
    assertEquals("Post index must be positive.", ex2.getMessage());
  }
}
------[0m
[0m2025-06-16 21:23:13 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java[0m
[0m2025-06-16 21:23:13 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:13 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java, FILE_NAME: PerfumeTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:23:13 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:23:13 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:13 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java][0m
[0m2025-06-16 21:23:14 [0;34m[INFO][0m    - File:[0;37m[PerfumeTest.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:23:14 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.domain;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

import java.util.ArrayList;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

public class PerfumeTest {

  private Perfume perfume;

  @BeforeEach
  public void setUp() {
    perfume = new Perfume();
  }

  @Test
  public void testAddReviewAddsToList() {
    Review review = mock(Review.class);

    assertTrue(perfume.getReviews() == null || perfume.getReviews().isEmpty());

    perfume.addReview(review);

    assertNotNull(perfume.getReviews());
    assertEquals(1, perfume.getReviews().size());
    assertTrue(perfume.getReviews().contains(review));
  }

  @Test
  public void testReviewExistsReturnsTrueWhenReviewFound() {
    Review review = mock(Review.class);
    when(review.getId()).thenReturn(1L);

    perfume.addReview(review);

    assertTrue(perfume.reviewExists(1L));
  }

  @Test
  public void testReviewExistsReturnsFalseWhenNotFound() {
    Review review = mock(Review.class);
    when(review.getId()).thenReturn(2L);

    perfume.addReview(review);

    assertFalse(perfume.reviewExists(999L));
  }

  @Test
  public void testReviewExistsOnEmptyListReturnsFalse() {
    perfume.setReviews(new ArrayList<>());
    assertFalse(perfume.reviewExists(1L));
  }

  @Test
  public void testAddReviewInitializesListIfNull() {
    Review review = mock(Review.class);
    perfume.setReviews(null);

    perfume.addReview(review);

    assertNotNull(perfume.getReviews());
    assertEquals(1, perfume.getReviews().size());
  }

  @Test
  public void testValidPerfumeCreation() {
    assertDoesNotThrow(
        () ->
            new Perfume(
                "Sauvage",
                "Dior",
                2020,
                "FR",
                "Male",
                "Bergamot",
                "Lavender",
                "Ambroxan",
                "Fresh and spicy",
                "sauvage.jpg",
                120,
                "100ml",
                "Eau de Toilette",
                4.5));
  }

  @Test
  public void testNullTitleThrowsException() {
    Exception ex =
        assertThrows(
            IllegalArgumentException.class,
            () ->
                new Perfume(
                    null,
                    "Dior",
                    2020,
                    "FR",
                    "Male",
                    "Bergamot",
                    "Lavender",
                    "Ambroxan",
                    "Fresh",
                    "file.jpg",
                    100,
                    "100ml",
                    "EDT",
                    4.0));
    assertEquals("Perfume title must not be blank.", ex.getMessage());
  }

  @Test
  public void testBlankTitleThrowsException() {
    Exception ex =
        assertThrows(
            IllegalArgumentException.class,
            () ->
                new Perfume(
                    "  ",
                    "Dior",
                    2020,
                    "FR",
                    "Male",
                    "Top",
                    "Mid",
                    "Base",
                    "Desc",
                    "file.jpg",
                    100,
                    "100ml",
                    "EDT",
                    4.0));
    assertEquals("Perfume title must not be blank.", ex.getMessage());
  }

  @Test
  public void testInvalidYearThrowsException() {
    Exception ex =
        assertThrows(
            IllegalArgumentException.class,
            () ->
                new Perfume(
                    "Title",
                    "Dior",
                    1500,
                    "FR",
                    "Male",
                    "Top",
                    "Mid",
                    "Base",
                    "Desc",
                    "file.jpg",
                    100,
                    "100ml",
                    "EDT",
                    4.0));
    assertEquals("Year must be between 1800 and 2100.", ex.getMessage());
  }

  @Test
  public void testInvalidCountryThrowsException() {
    Exception ex =
        assertThrows(
            IllegalArgumentException.class,
            () ->
                new Perfume(
                    "Title",
                    "Dior",
                    2020,
                    "INVALID",
                    "Male",
                    "Top",
                    "Mid",
                    "Base",
                    "Desc",
                    "file.jpg",
                    100,
                    "100ml",
                    "EDT",
                    4.0));
    assertEquals("Country must be a valid ISO country code (e.g., 'US', 'FR').", ex.getMessage());
  }

  @Test
  public void testInvalidRatingThrowsException() {
    Exception ex =
        assertThrows(
            IllegalArgumentException.class,
            () ->
                new Perfume(
                    "Title",
                    "Dior",
                    2020,
                    "FR",
                    "Male",
                    "Top",
                    "Mid",
                    "Base",
                    "Desc",
                    "file.jpg",
                    100,
                    "100ml",
                    "EDT",
                    6.0));
    assertEquals("Rating must be between 0 and 5.", ex.getMessage());
  }

  @Test
  public void testNullRatingIsAllowed() {
    assertDoesNotThrow(
        () ->
            new Perfume(
                "Title",
                "Dior",
                2020,
                "FR",
                "Male",
                "Top",
                "Mid",
                "Base",
                "Desc",
                "file.jpg",
                100,
                "100ml",
                "EDT",
                null));
  }
}
------[0m
[0m2025-06-16 21:23:14 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.domain;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

import java.util.ArrayList;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

public class PerfumeTest {

  private Perfume perfume;

  @BeforeEach
  public void setUp() {
    perfume = new Perfume();
  }

  @Test
  public void testAddReviewAddsToList() {
    Review review = mock(Review.class);

    assertTrue(perfume.getReviews() == null || perfume.getReviews().isEmpty());

    perfume.addReview(review);

    assertNotNull(perfume.getReviews());
    assertEquals(1, perfume.getReviews().size());
    assertTrue(perfume.getReviews().contains(review));
  }

  @Test
  public void testReviewExistsReturnsTrueWhenReviewFound() {
    Review review = mock(Review.class);
    when(review.getId()).thenReturn(1L);

    perfume.addReview(review);

    assertTrue(perfume.reviewExists(1L));
  }

  @Test
  public void testReviewExistsReturnsFalseWhenNotFound() {
    Review review = mock(Review.class);
    when(review.getId()).thenReturn(2L);

    perfume.addReview(review);

    assertFalse(perfume.reviewExists(999L));
  }

  @Test
  public void testReviewExistsOnEmptyListReturnsFalse() {
    perfume.setReviews(new ArrayList<>());
    assertFalse(perfume.reviewExists(1L));
  }

  @Test
  public void testAddReviewInitializesListIfNull() {
    Review review = mock(Review.class);
    perfume.setReviews(null);

    perfume.addReview(review);

    assertNotNull(perfume.getReviews());
    assertEquals(1, perfume.getReviews().size());
  }

  @Test
  public void testValidPerfumeCreation() {
    assertDoesNotThrow(
        () ->
            new Perfume(
                "Sauvage",
                "Dior",
                2020,
                "FR",
                "Male",
                "Bergamot",
                "Lavender",
                "Ambroxan",
                "Fresh and spicy",
                "sauvage.jpg",
                120,
                "100ml",
                "Eau de Toilette",
                4.5));
  }

  @Test
  public void testNullTitleThrowsException() {
    Exception ex =
        assertThrows(
            IllegalArgumentException.class,
            () ->
                new Perfume(
                    null,
                    "Dior",
                    2020,
                    "FR",
                    "Male",
                    "Bergamot",
                    "Lavender",
                    "Ambroxan",
                    "Fresh",
                    "file.jpg",
                    100,
                    "100ml",
                    "EDT",
                    4.0));
    assertEquals("Perfume title must not be blank.", ex.getMessage());
  }

  @Test
  public void testBlankTitleThrowsException() {
    Exception ex =
        assertThrows(
            IllegalArgumentException.class,
            () ->
                new Perfume(
                    "  ",
                    "Dior",
                    2020,
                    "FR",
                    "Male",
                    "Top",
                    "Mid",
                    "Base",
                    "Desc",
                    "file.jpg",
                    100,
                    "100ml",
                    "EDT",
                    4.0));
    assertEquals("Perfume title must not be blank.", ex.getMessage());
  }

  @Test
  public void testInvalidYearThrowsException() {
    Exception ex =
        assertThrows(
            IllegalArgumentException.class,
            () ->
                new Perfume(
                    "Title",
                    "Dior",
                    1500,
                    "FR",
                    "Male",
                    "Top",
                    "Mid",
                    "Base",
                    "Desc",
                    "file.jpg",
                    100,
                    "100ml",
                    "EDT",
                    4.0));
    assertEquals("Year must be between 1800 and 2100.", ex.getMessage());
  }

  @Test
  public void testInvalidCountryThrowsException() {
    Exception ex =
        assertThrows(
            IllegalArgumentException.class,
            () ->
                new Perfume(
                    "Title",
                    "Dior",
                    2020,
                    "INVALID",
                    "Male",
                    "Top",
                    "Mid",
                    "Base",
                    "Desc",
                    "file.jpg",
                    100,
                    "100ml",
                    "EDT",
                    4.0));
    assertEquals("Country must be a valid ISO country code (e.g., 'US', 'FR').", ex.getMessage());
  }

  @Test
  public void testInvalidRatingThrowsException() {
    Exception ex =
        assertThrows(
            IllegalArgumentException.class,
            () ->
                new Perfume(
                    "Title",
                    "Dior",
                    2020,
                    "FR",
                    "Male",
                    "Top",
                    "Mid",
                    "Base",
                    "Desc",
                    "file.jpg",
                    100,
                    "100ml",
                    "EDT",
                    6.0));
    assertEquals("Rating must be between 0 and 5.", ex.getMessage());
  }

  @Test
  public void testNullRatingIsAllowed() {
    assertDoesNotThrow(
        () ->
            new Perfume(
                "Title",
                "Dior",
                2020,
                "FR",
                "Male",
                "Top",
                "Mid",
                "Base",
                "Desc",
                "file.jpg",
                100,
                "100ml",
                "EDT",
                null));
  }
}
------[0m
[0m2025-06-16 21:23:14 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java[0m
[0m2025-06-16 21:23:14 [0;34m[DEBUG][0m   FILE_STATUS (ReviewTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:14 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java, FILE_NAME: ReviewTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:23:14 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:23:14 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:14 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java][0m
[0m2025-06-16 21:23:14 [0;34m[INFO][0m    - File:[0;37m[ReviewTest.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:23:14 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.domain;

import static org.junit.jupiter.api.Assertions.*;

import java.time.LocalDate;
import org.junit.jupiter.api.Test;

public class ReviewTest {

  @Test
  public void testConstructor_validInputs_shouldCreateReview() {
    LocalDate date = LocalDate.of(2023, 5, 1);
    Review review = new Review("Alice", "Great scent", 4, date);

    assertEquals("Alice", review.getAuthor());
    assertEquals("Great scent", review.getMessage());
    assertEquals(4, review.getRating());
    assertEquals(date, review.getDate());
  }

  @Test
  public void testConstructor_nullDate_shouldSetToNow() {
    Review review = new Review("Bob", "Nice!", 3, null);
    assertEquals(LocalDate.now(), review.getDate());
  }

  @Test
  public void testConstructor_blankAuthor_shouldThrow() {
    IllegalArgumentException ex =
        assertThrows(
            IllegalArgumentException.class, () -> new Review(" ", "Good", 3, LocalDate.now()));
    assertEquals("Author must not be blank.", ex.getMessage());
  }

  @Test
  public void testConstructor_blankMessage_shouldThrow() {
    IllegalArgumentException ex =
        assertThrows(
            IllegalArgumentException.class, () -> new Review("Alice", "   ", 3, LocalDate.now()));
    assertEquals("Message must not be blank.", ex.getMessage());
  }

  @Test
  public void testConstructor_invalidRating_shouldThrow() {
    IllegalArgumentException ex1 =
        assertThrows(
            IllegalArgumentException.class, () -> new Review("Alice", "Good", 0, LocalDate.now()));
    assertEquals("Rating must be between 1 and 5.", ex1.getMessage());

    IllegalArgumentException ex2 =
        assertThrows(
            IllegalArgumentException.class, () -> new Review("Alice", "Good", 6, LocalDate.now()));
    assertEquals("Rating must be between 1 and 5.", ex2.getMessage());

    IllegalArgumentException ex3 =
        assertThrows(
            IllegalArgumentException.class,
            () -> new Review("Alice", "Good", null, LocalDate.now()));
    assertEquals("Rating must be between 1 and 5.", ex3.getMessage());
  }

  @Test
  public void testConstructor_futureDate_shouldThrow() {
    LocalDate futureDate = LocalDate.now().plusDays(1);
    IllegalArgumentException ex =
        assertThrows(
            IllegalArgumentException.class, () -> new Review("Alice", "Good", 4, futureDate));
    assertEquals("Date cannot be in the future.", ex.getMessage());
  }

  @Test
  public void testSetters_validValues_shouldSet() {
    Review review = new Review();

    review.setAuthor("John");
    assertEquals("John", review.getAuthor());

    review.setMessage("Excellent");
    assertEquals("Excellent", review.getMessage());

    review.setRating(5);
    assertEquals(5, review.getRating());

    LocalDate date = LocalDate.of(2020, 1, 1);
    review.setDate(date);
    assertEquals(date, review.getDate());
  }
}
------[0m
[0m2025-06-16 21:23:14 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.domain;

import static org.junit.jupiter.api.Assertions.*;

import java.time.LocalDate;
import org.junit.jupiter.api.Test;

public class ReviewTest {

  @Test
  public void testConstructor_validInputs_shouldCreateReview() {
    LocalDate date = LocalDate.of(2023, 5, 1);
    Review review = new Review("Alice", "Great scent", 4, date);

    assertEquals("Alice", review.getAuthor());
    assertEquals("Great scent", review.getMessage());
    assertEquals(4, review.getRating());
    assertEquals(date, review.getDate());
  }

  @Test
  public void testConstructor_nullDate_shouldSetToNow() {
    Review review = new Review("Bob", "Nice!", 3, null);
    assertEquals(LocalDate.now(), review.getDate());
  }

  @Test
  public void testConstructor_blankAuthor_shouldThrow() {
    IllegalArgumentException ex =
        assertThrows(
            IllegalArgumentException.class, () -> new Review(" ", "Good", 3, LocalDate.now()));
    assertEquals("Author must not be blank.", ex.getMessage());
  }

  @Test
  public void testConstructor_blankMessage_shouldThrow() {
    IllegalArgumentException ex =
        assertThrows(
            IllegalArgumentException.class, () -> new Review("Alice", "   ", 3, LocalDate.now()));
    assertEquals("Message must not be blank.", ex.getMessage());
  }

  @Test
  public void testConstructor_invalidRating_shouldThrow() {
    IllegalArgumentException ex1 =
        assertThrows(
            IllegalArgumentException.class, () -> new Review("Alice", "Good", 0, LocalDate.now()));
    assertEquals("Rating must be between 1 and 5.", ex1.getMessage());

    IllegalArgumentException ex2 =
        assertThrows(
            IllegalArgumentException.class, () -> new Review("Alice", "Good", 6, LocalDate.now()));
    assertEquals("Rating must be between 1 and 5.", ex2.getMessage());

    IllegalArgumentException ex3 =
        assertThrows(
            IllegalArgumentException.class,
            () -> new Review("Alice", "Good", null, LocalDate.now()));
    assertEquals("Rating must be between 1 and 5.", ex3.getMessage());
  }

  @Test
  public void testConstructor_futureDate_shouldThrow() {
    LocalDate futureDate = LocalDate.now().plusDays(1);
    IllegalArgumentException ex =
        assertThrows(
            IllegalArgumentException.class, () -> new Review("Alice", "Good", 4, futureDate));
    assertEquals("Date cannot be in the future.", ex.getMessage());
  }

  @Test
  public void testSetters_validValues_shouldSet() {
    Review review = new Review();

    review.setAuthor("John");
    assertEquals("John", review.getAuthor());

    review.setMessage("Excellent");
    assertEquals("Excellent", review.getMessage());

    review.setRating(5);
    assertEquals(5, review.getRating());

    LocalDate date = LocalDate.of(2020, 1, 1);
    review.setDate(date);
    assertEquals(date, review.getDate());
  }
}
------[0m
[0m2025-06-16 21:23:14 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java[0m
[0m2025-06-16 21:23:14 [0;34m[DEBUG][0m   FILE_STATUS (UserTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:14 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java, FILE_NAME: UserTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:23:14 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:23:14 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:14 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java][0m
[0m2025-06-16 21:23:15 [0;34m[INFO][0m    - File:[0;37m[UserTest.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:23:15 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.domain;

import static org.junit.jupiter.api.Assertions.*;

import com.gmail.merikbest2015.ecommerce.enums.AuthProvider;
import com.gmail.merikbest2015.ecommerce.enums.Role;
import java.util.HashSet;
import java.util.Set;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

public class UserTest {

  Set<Role> roles = new HashSet<>();

  @BeforeEach
  public void setUp() {
    roles.add(Role.USER);
    roles.add(Role.ADMIN);
  }

  @Test
  public void testValidUserCreation() {
    User user =
        new User(
            "test@example.com",
            "password123",
            "John",
            "Doe",
            "New York",
            "123 Main St",
            "+1 555-123-4567",
            "12345",
            "activation-code",
            "reset-code",
            true,
            AuthProvider.LOCAL,
            roles);

    assertEquals("test@example.com", user.getEmail());
    assertEquals("+1 555-123-4567", user.getPhoneNumber());
    assertEquals("12345", user.getPostIndex());
    assertTrue(user.isActive());
    assertNotNull(user.getRoles());
  }

  @Test
  public void testInvalidEmailNull_ThrowsException() {
    IllegalArgumentException ex =
        assertThrows(
            IllegalArgumentException.class,
            () ->
                new User(
                    null,
                    "password",
                    "John",
                    "Doe",
                    "City",
                    "Address",
                    "+15551234567",
                    "12345",
                    "activation",
                    "reset",
                    true,
                    AuthProvider.LOCAL,
                    roles));
    assertEquals("Email must not be blank.", ex.getMessage());
  }

  @Test
  public void testInvalidEmailFormat_ThrowsException() {
    IllegalArgumentException ex =
        assertThrows(
            IllegalArgumentException.class,
            () ->
                new User(
                    "bademail.com",
                    "password",
                    "John",
                    "Doe",
                    "City",
                    "Address",
                    "+15551234567",
                    "12345",
                    "activation",
                    "reset",
                    true,
                    AuthProvider.LOCAL,
                    roles));
    assertEquals("Email format is invalid.", ex.getMessage());
  }

  @Test
  public void testValidPhoneNumberNull_Allows() {
    User user =
        new User(
            "test@example.com",
            "password",
            "John",
            "Doe",
            "City",
            "Address",
            null,
            "12345",
            "activation",
            "reset",
            true,
            AuthProvider.LOCAL,
            roles);
    assertNull(user.getPhoneNumber());
  }

  @Test
  public void testInvalidPhoneNumber_ThrowsException() {
    IllegalArgumentException ex =
        assertThrows(
            IllegalArgumentException.class,
            () ->
                new User(
                    "test@example.com",
                    "password",
                    "John",
                    "Doe",
                    "City",
                    "Address",
                    "invalid-phone!",
                    "12345",
                    "activation",
                    "reset",
                    true,
                    AuthProvider.LOCAL,
                    roles));
    assertEquals("Phone number format is invalid.", ex.getMessage());
  }

  @Test
  public void testValidPostIndexNull_Allows() {
    User user =
        new User(
            "test@example.com",
            "password",
            "John",
            "Doe",
            "City",
            "Address",
            "+15551234567",
            null,
            "activation",
            "reset",
            true,
            AuthProvider.LOCAL,
            roles);
    assertNull(user.getPostIndex());
  }

  @Test
  public void testInvalidPostIndexTooLong_ThrowsException() {
    IllegalArgumentException ex =
        assertThrows(
            IllegalArgumentException.class,
            () ->
                new User(
                    "test@example.com",
                    "password",
                    "John",
                    "Doe",
                    "City",
                    "Address",
                    "+15551234567",
                    "12345678901",
                    "activation",
                    "reset",
                    true,
                    AuthProvider.LOCAL,
                    roles));
    assertEquals("Post index is too long.", ex.getMessage());
  }
}
------[0m
[0m2025-06-16 21:23:15 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.domain;

import static org.junit.jupiter.api.Assertions.*;

import com.gmail.merikbest2015.ecommerce.enums.AuthProvider;
import com.gmail.merikbest2015.ecommerce.enums.Role;
import java.util.HashSet;
import java.util.Set;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

public class UserTest {

  Set<Role> roles = new HashSet<>();

  @BeforeEach
  public void setUp() {
    roles.add(Role.USER);
    roles.add(Role.ADMIN);
  }

  @Test
  public void testValidUserCreation() {
    User user =
        new User(
            "test@example.com",
            "password123",
            "John",
            "Doe",
            "New York",
            "123 Main St",
            "+1 555-123-4567",
            "12345",
            "activation-code",
            "reset-code",
            true,
            AuthProvider.LOCAL,
            roles);

    assertEquals("test@example.com", user.getEmail());
    assertEquals("+1 555-123-4567", user.getPhoneNumber());
    assertEquals("12345", user.getPostIndex());
    assertTrue(user.isActive());
    assertNotNull(user.getRoles());
  }

  @Test
  public void testInvalidEmailNull_ThrowsException() {
    IllegalArgumentException ex =
        assertThrows(
            IllegalArgumentException.class,
            () ->
                new User(
                    null,
                    "password",
                    "John",
                    "Doe",
                    "City",
                    "Address",
                    "+15551234567",
                    "12345",
                    "activation",
                    "reset",
                    true,
                    AuthProvider.LOCAL,
                    roles));
    assertEquals("Email must not be blank.", ex.getMessage());
  }

  @Test
  public void testInvalidEmailFormat_ThrowsException() {
    IllegalArgumentException ex =
        assertThrows(
            IllegalArgumentException.class,
            () ->
                new User(
                    "bademail.com",
                    "password",
                    "John",
                    "Doe",
                    "City",
                    "Address",
                    "+15551234567",
                    "12345",
                    "activation",
                    "reset",
                    true,
                    AuthProvider.LOCAL,
                    roles));
    assertEquals("Email format is invalid.", ex.getMessage());
  }

  @Test
  public void testValidPhoneNumberNull_Allows() {
    User user =
        new User(
            "test@example.com",
            "password",
            "John",
            "Doe",
            "City",
            "Address",
            null,
            "12345",
            "activation",
            "reset",
            true,
            AuthProvider.LOCAL,
            roles);
    assertNull(user.getPhoneNumber());
  }

  @Test
  public void testInvalidPhoneNumber_ThrowsException() {
    IllegalArgumentException ex =
        assertThrows(
            IllegalArgumentException.class,
            () ->
                new User(
                    "test@example.com",
                    "password",
                    "John",
                    "Doe",
                    "City",
                    "Address",
                    "invalid-phone!",
                    "12345",
                    "activation",
                    "reset",
                    true,
                    AuthProvider.LOCAL,
                    roles));
    assertEquals("Phone number format is invalid.", ex.getMessage());
  }

  @Test
  public void testValidPostIndexNull_Allows() {
    User user =
        new User(
            "test@example.com",
            "password",
            "John",
            "Doe",
            "City",
            "Address",
            "+15551234567",
            null,
            "activation",
            "reset",
            true,
            AuthProvider.LOCAL,
            roles);
    assertNull(user.getPostIndex());
  }

  @Test
  public void testInvalidPostIndexTooLong_ThrowsException() {
    IllegalArgumentException ex =
        assertThrows(
            IllegalArgumentException.class,
            () ->
                new User(
                    "test@example.com",
                    "password",
                    "John",
                    "Doe",
                    "City",
                    "Address",
                    "+15551234567",
                    "12345678901",
                    "activation",
                    "reset",
                    true,
                    AuthProvider.LOCAL,
                    roles));
    assertEquals("Post index is too long.", ex.getMessage());
  }
}
------[0m
[0m2025-06-16 21:23:15 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapperTest.java[0m
[0m2025-06-16 21:23:15 [0;34m[DEBUG][0m   FILE_STATUS (OrderMapperTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:15 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapperTest.java, FILE_NAME: OrderMapperTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:23:15 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:23:15 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:15 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapperTest.java][0m
[0m2025-06-16 21:23:15 [0;34m[INFO][0m    - File:[0;37m[OrderMapperTest.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:23:15 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.mapper;

import static com.gmail.merikbest2015.ecommerce.util.TestConstants.*;
import static org.junit.jupiter.api.Assertions.assertEquals;

import com.gmail.merikbest2015.ecommerce.domain.Order;
import com.gmail.merikbest2015.ecommerce.dto.order.OrderRequest;
import com.gmail.merikbest2015.ecommerce.dto.order.OrderResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit.jupiter.SpringExtension;

@SpringBootTest
@ExtendWith(SpringExtension.class)
public class OrderMapperTest {

  @Autowired private ModelMapper modelMapper;

  @Test
  public void convertToEntity() {
    OrderRequest orderRequest = new OrderRequest();
    orderRequest.setFirstName(FIRST_NAME);
    orderRequest.setLastName(LAST_NAME);
    orderRequest.setCity(CITY);
    orderRequest.setAddress(ADDRESS);
    orderRequest.setEmail(ORDER_EMAIL);
    orderRequest.setPostIndex(POST_INDEX);
    orderRequest.setPhoneNumber(PHONE_NUMBER);
    orderRequest.setTotalPrice(TOTAL_PRICE);

    Order order = modelMapper.map(orderRequest, Order.class);
    assertEquals(orderRequest.getFirstName(), order.getFirstName());
    assertEquals(orderRequest.getLastName(), order.getLastName());
    assertEquals(orderRequest.getAddress(), order.getAddress());
    assertEquals(orderRequest.getCity(), order.getCity());
    assertEquals(orderRequest.getEmail(), order.getEmail());
    assertEquals(orderRequest.getPostIndex(), order.getPostIndex());
    assertEquals(orderRequest.getPhoneNumber(), order.getPhoneNumber());
    assertEquals(orderRequest.getTotalPrice(), order.getTotalPrice());
  }

  @Test
  public void convertToResponseDto() {
    Order order = new Order();
    order.setId(1L);
    order.setFirstName(FIRST_NAME);
    order.setLastName(LAST_NAME);
    order.setCity(CITY);
    order.setAddress(ADDRESS);
    order.setEmail(ORDER_EMAIL);
    order.setPostIndex(POST_INDEX);
    order.setPhoneNumber(PHONE_NUMBER);
    order.setTotalPrice(TOTAL_PRICE);

    OrderResponse orderResponse = modelMapper.map(order, OrderResponse.class);
    assertEquals(order.getId(), orderResponse.getId());
    assertEquals(order.getFirstName(), orderResponse.getFirstName());
    assertEquals(order.getLastName(), orderResponse.getLastName());
    assertEquals(order.getAddress(), orderResponse.getAddress());
    assertEquals(order.getCity(), orderResponse.getCity());
    assertEquals(order.getEmail(), orderResponse.getEmail());
    assertEquals(order.getPostIndex(), orderResponse.getPostIndex());
    assertEquals(order.getPhoneNumber(), orderResponse.getPhoneNumber());
    assertEquals(order.getTotalPrice(), orderResponse.getTotalPrice());
  }
}
------[0m
[0m2025-06-16 21:23:15 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.mapper;

import static com.gmail.merikbest2015.ecommerce.util.TestConstants.*;
import static org.junit.jupiter.api.Assertions.assertEquals;

import com.gmail.merikbest2015.ecommerce.domain.Order;
import com.gmail.merikbest2015.ecommerce.dto.order.OrderRequest;
import com.gmail.merikbest2015.ecommerce.dto.order.OrderResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit.jupiter.SpringExtension;

@SpringBootTest
@ExtendWith(SpringExtension.class)
public class OrderMapperTest {

  @Autowired private ModelMapper modelMapper;

  @Test
  public void convertToEntity() {
    OrderRequest orderRequest = new OrderRequest();
    orderRequest.setFirstName(FIRST_NAME);
    orderRequest.setLastName(LAST_NAME);
    orderRequest.setCity(CITY);
    orderRequest.setAddress(ADDRESS);
    orderRequest.setEmail(ORDER_EMAIL);
    orderRequest.setPostIndex(POST_INDEX);
    orderRequest.setPhoneNumber(PHONE_NUMBER);
    orderRequest.setTotalPrice(TOTAL_PRICE);

    Order order = modelMapper.map(orderRequest, Order.class);
    assertEquals(orderRequest.getFirstName(), order.getFirstName());
    assertEquals(orderRequest.getLastName(), order.getLastName());
    assertEquals(orderRequest.getAddress(), order.getAddress());
    assertEquals(orderRequest.getCity(), order.getCity());
    assertEquals(orderRequest.getEmail(), order.getEmail());
    assertEquals(orderRequest.getPostIndex(), order.getPostIndex());
    assertEquals(orderRequest.getPhoneNumber(), order.getPhoneNumber());
    assertEquals(orderRequest.getTotalPrice(), order.getTotalPrice());
  }

  @Test
  public void convertToResponseDto() {
    Order order = new Order();
    order.setId(1L);
    order.setFirstName(FIRST_NAME);
    order.setLastName(LAST_NAME);
    order.setCity(CITY);
    order.setAddress(ADDRESS);
    order.setEmail(ORDER_EMAIL);
    order.setPostIndex(POST_INDEX);
    order.setPhoneNumber(PHONE_NUMBER);
    order.setTotalPrice(TOTAL_PRICE);

    OrderResponse orderResponse = modelMapper.map(order, OrderResponse.class);
    assertEquals(order.getId(), orderResponse.getId());
    assertEquals(order.getFirstName(), orderResponse.getFirstName());
    assertEquals(order.getLastName(), orderResponse.getLastName());
    assertEquals(order.getAddress(), orderResponse.getAddress());
    assertEquals(order.getCity(), orderResponse.getCity());
    assertEquals(order.getEmail(), orderResponse.getEmail());
    assertEquals(order.getPostIndex(), orderResponse.getPostIndex());
    assertEquals(order.getPhoneNumber(), orderResponse.getPhoneNumber());
    assertEquals(order.getTotalPrice(), orderResponse.getTotalPrice());
  }
}
------[0m
[0m2025-06-16 21:23:15 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java[0m
[0m2025-06-16 21:23:15 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeMapperTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:15 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java, FILE_NAME: PerfumeMapperTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:23:15 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:23:15 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:15 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java][0m
[0m2025-06-16 21:23:16 [0;34m[INFO][0m    - File:[0;37m[PerfumeMapperTest.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:23:16 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.mapper;

import static com.gmail.merikbest2015.ecommerce.util.TestConstants.*;
import static org.junit.jupiter.api.Assertions.assertEquals;

import com.gmail.merikbest2015.ecommerce.domain.Perfume;
import com.gmail.merikbest2015.ecommerce.dto.perfume.FullPerfumeResponse;
import com.gmail.merikbest2015.ecommerce.dto.perfume.PerfumeRequest;
import jakarta.validation.constraints.NotNull;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit.jupiter.SpringExtension;

@SpringBootTest
@ExtendWith(SpringExtension.class)
public class PerfumeMapperTest {

  @Autowired private ModelMapper modelMapper;

  @Test
  public void convertToEntity() {
    PerfumeRequest perfumeRequest = getPerfumeRequest();

    Perfume perfume = modelMapper.map(perfumeRequest, Perfume.class);
    assertEquals(perfumeRequest.getPerfumer(), perfume.getPerfumer());
    assertEquals(perfumeRequest.getPerfumeTitle(), perfume.getPerfumeTitle());
    assertEquals(perfumeRequest.getYear(), perfume.getYear());
    assertEquals(perfumeRequest.getCountry(), perfume.getCountry());
    assertEquals(perfumeRequest.getPerfumeGender(), perfume.getPerfumeGender());
    assertEquals(perfumeRequest.getFragranceTopNotes(), perfume.getFragranceTopNotes());
    assertEquals(perfumeRequest.getFragranceMiddleNotes(), perfume.getFragranceMiddleNotes());
    assertEquals(perfumeRequest.getFragranceBaseNotes(), perfume.getFragranceBaseNotes());
    assertEquals(perfumeRequest.getPrice(), perfume.getPrice());
    assertEquals(perfumeRequest.getVolume(), perfume.getVolume());
    assertEquals(perfumeRequest.getType(), perfume.getType());
  }

  @NotNull
  private static PerfumeRequest getPerfumeRequest() {
    PerfumeRequest perfumeRequest = new PerfumeRequest();
    perfumeRequest.setPerfumer(PERFUMER_CHANEL);
    perfumeRequest.setPerfumeTitle(PERFUME_TITLE);
    perfumeRequest.setYear(YEAR);
    perfumeRequest.setCountry(COUNTRY);
    perfumeRequest.setPerfumeGender(PERFUME_GENDER);
    perfumeRequest.setFragranceTopNotes(FRAGRANCE_TOP_NOTES);
    perfumeRequest.setFragranceMiddleNotes(FRAGRANCE_MIDDLE_NOTES);
    perfumeRequest.setFragranceBaseNotes(FRAGRANCE_BASE_NOTES);
    perfumeRequest.setPrice(PRICE);
    perfumeRequest.setVolume(VOLUME);
    perfumeRequest.setType(TYPE);
    return perfumeRequest;
  }

  @Test
  public void convertToResponseDto() {
    Perfume perfume = getPerfume();

    FullPerfumeResponse fullPerfumeResponse = modelMapper.map(perfume, FullPerfumeResponse.class);
    assertEquals(perfume.getId(), fullPerfumeResponse.getId());
    assertEquals(perfume.getPerfumer(), fullPerfumeResponse.getPerfumer());
    assertEquals(perfume.getPerfumeTitle(), fullPerfumeResponse.getPerfumeTitle());
    assertEquals(perfume.getYear(), fullPerfumeResponse.getYear());
    assertEquals(perfume.getCountry(), fullPerfumeResponse.getCountry());
    assertEquals(perfume.getPerfumeGender(), fullPerfumeResponse.getPerfumeGender());
    assertEquals(perfume.getFragranceTopNotes(), fullPerfumeResponse.getFragranceTopNotes());
    assertEquals(perfume.getFragranceMiddleNotes(), fullPerfumeResponse.getFragranceMiddleNotes());
    assertEquals(perfume.getFragranceBaseNotes(), fullPerfumeResponse.getFragranceBaseNotes());
    assertEquals(perfume.getPrice(), fullPerfumeResponse.getPrice());
    assertEquals(perfume.getVolume(), fullPerfumeResponse.getVolume());
    assertEquals(perfume.getType(), fullPerfumeResponse.getType());
  }

  @NotNull
  private static Perfume getPerfume() {
    Perfume perfume = new Perfume();
    perfume.setId(1L);
    perfume.setPerfumer(PERFUMER_CHANEL);
    perfume.setPerfumeTitle(PERFUME_TITLE);
    perfume.setYear(YEAR);
    perfume.setCountry(COUNTRY);
    perfume.setPerfumeGender(PERFUME_GENDER);
    perfume.setFragranceTopNotes(FRAGRANCE_TOP_NOTES);
    perfume.setFragranceMiddleNotes(FRAGRANCE_MIDDLE_NOTES);
    perfume.setFragranceBaseNotes(FRAGRANCE_BASE_NOTES);
    perfume.setPrice(PRICE);
    perfume.setVolume(VOLUME);
    perfume.setType(TYPE);
    return perfume;
  }
}
------[0m
[0m2025-06-16 21:23:16 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.mapper;

import static com.gmail.merikbest2015.ecommerce.util.TestConstants.*;
import static org.junit.jupiter.api.Assertions.assertEquals;

import com.gmail.merikbest2015.ecommerce.domain.Perfume;
import com.gmail.merikbest2015.ecommerce.dto.perfume.FullPerfumeResponse;
import com.gmail.merikbest2015.ecommerce.dto.perfume.PerfumeRequest;
import jakarta.validation.constraints.NotNull;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit.jupiter.SpringExtension;

@SpringBootTest
@ExtendWith(SpringExtension.class)
public class PerfumeMapperTest {

  @Autowired private ModelMapper modelMapper;

  @Test
  public void convertToEntity() {
    PerfumeRequest perfumeRequest = getPerfumeRequest();

    Perfume perfume = modelMapper.map(perfumeRequest, Perfume.class);
    assertEquals(perfumeRequest.getPerfumer(), perfume.getPerfumer());
    assertEquals(perfumeRequest.getPerfumeTitle(), perfume.getPerfumeTitle());
    assertEquals(perfumeRequest.getYear(), perfume.getYear());
    assertEquals(perfumeRequest.getCountry(), perfume.getCountry());
    assertEquals(perfumeRequest.getPerfumeGender(), perfume.getPerfumeGender());
    assertEquals(perfumeRequest.getFragranceTopNotes(), perfume.getFragranceTopNotes());
    assertEquals(perfumeRequest.getFragranceMiddleNotes(), perfume.getFragranceMiddleNotes());
    assertEquals(perfumeRequest.getFragranceBaseNotes(), perfume.getFragranceBaseNotes());
    assertEquals(perfumeRequest.getPrice(), perfume.getPrice());
    assertEquals(perfumeRequest.getVolume(), perfume.getVolume());
    assertEquals(perfumeRequest.getType(), perfume.getType());
  }

  @NotNull
  private static PerfumeRequest getPerfumeRequest() {
    PerfumeRequest perfumeRequest = new PerfumeRequest();
    perfumeRequest.setPerfumer(PERFUMER_CHANEL);
    perfumeRequest.setPerfumeTitle(PERFUME_TITLE);
    perfumeRequest.setYear(YEAR);
    perfumeRequest.setCountry(COUNTRY);
    perfumeRequest.setPerfumeGender(PERFUME_GENDER);
    perfumeRequest.setFragranceTopNotes(FRAGRANCE_TOP_NOTES);
    perfumeRequest.setFragranceMiddleNotes(FRAGRANCE_MIDDLE_NOTES);
    perfumeRequest.setFragranceBaseNotes(FRAGRANCE_BASE_NOTES);
    perfumeRequest.setPrice(PRICE);
    perfumeRequest.setVolume(VOLUME);
    perfumeRequest.setType(TYPE);
    return perfumeRequest;
  }

  @Test
  public void convertToResponseDto() {
    Perfume perfume = getPerfume();

    FullPerfumeResponse fullPerfumeResponse = modelMapper.map(perfume, FullPerfumeResponse.class);
    assertEquals(perfume.getId(), fullPerfumeResponse.getId());
    assertEquals(perfume.getPerfumer(), fullPerfumeResponse.getPerfumer());
    assertEquals(perfume.getPerfumeTitle(), fullPerfumeResponse.getPerfumeTitle());
    assertEquals(perfume.getYear(), fullPerfumeResponse.getYear());
    assertEquals(perfume.getCountry(), fullPerfumeResponse.getCountry());
    assertEquals(perfume.getPerfumeGender(), fullPerfumeResponse.getPerfumeGender());
    assertEquals(perfume.getFragranceTopNotes(), fullPerfumeResponse.getFragranceTopNotes());
    assertEquals(perfume.getFragranceMiddleNotes(), fullPerfumeResponse.getFragranceMiddleNotes());
    assertEquals(perfume.getFragranceBaseNotes(), fullPerfumeResponse.getFragranceBaseNotes());
    assertEquals(perfume.getPrice(), fullPerfumeResponse.getPrice());
    assertEquals(perfume.getVolume(), fullPerfumeResponse.getVolume());
    assertEquals(perfume.getType(), fullPerfumeResponse.getType());
  }

  @NotNull
  private static Perfume getPerfume() {
    Perfume perfume = new Perfume();
    perfume.setId(1L);
    perfume.setPerfumer(PERFUMER_CHANEL);
    perfume.setPerfumeTitle(PERFUME_TITLE);
    perfume.setYear(YEAR);
    perfume.setCountry(COUNTRY);
    perfume.setPerfumeGender(PERFUME_GENDER);
    perfume.setFragranceTopNotes(FRAGRANCE_TOP_NOTES);
    perfume.setFragranceMiddleNotes(FRAGRANCE_MIDDLE_NOTES);
    perfume.setFragranceBaseNotes(FRAGRANCE_BASE_NOTES);
    perfume.setPrice(PRICE);
    perfume.setVolume(VOLUME);
    perfume.setType(TYPE);
    return perfume;
  }
}
------[0m
[0m2025-06-16 21:23:16 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapperTest.java[0m
[0m2025-06-16 21:23:16 [0;34m[DEBUG][0m   FILE_STATUS (UserMapperTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:16 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapperTest.java, FILE_NAME: UserMapperTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:23:16 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:23:16 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:16 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapperTest.java][0m
[0m2025-06-16 21:23:16 [0;34m[INFO][0m    - File:[0;37m[UserMapperTest.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:23:16 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.mapper;

import static com.gmail.merikbest2015.ecommerce.util.TestConstants.*;
import static org.junit.jupiter.api.Assertions.assertEquals;

import com.gmail.merikbest2015.ecommerce.domain.Review;
import com.gmail.merikbest2015.ecommerce.domain.User;
import com.gmail.merikbest2015.ecommerce.dto.RegistrationRequest;
import com.gmail.merikbest2015.ecommerce.dto.review.ReviewRequest;
import com.gmail.merikbest2015.ecommerce.dto.user.UpdateUserRequest;
import com.gmail.merikbest2015.ecommerce.dto.user.UserResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit.jupiter.SpringExtension;

@SpringBootTest
@ExtendWith(SpringExtension.class)
public class UserMapperTest {

  @Autowired private ModelMapper modelMapper;

  @Test
  public void convertUserRequestDtoToEntity() {
    UpdateUserRequest userRequest = new UpdateUserRequest();
    userRequest.setFirstName(FIRST_NAME);

    User user = modelMapper.map(userRequest, User.class);
    assertEquals(userRequest.getFirstName(), user.getFirstName());
  }

  @Test
  public void convertRegistrationRequestDtoToEntity() {
    RegistrationRequest registrationRequest = new RegistrationRequest();
    registrationRequest.setFirstName(FIRST_NAME);
    registrationRequest.setEmail(USER_EMAIL);
    registrationRequest.setPassword(USER_PASSWORD);

    User user = modelMapper.map(registrationRequest, User.class);
    assertEquals(registrationRequest.getFirstName(), user.getFirstName());
    assertEquals(registrationRequest.getEmail(), user.getEmail());
    assertEquals(registrationRequest.getPassword(), user.getPassword());
  }

  @Test
  public void convertReviewToEntity() {
    ReviewRequest reviewRequest = new ReviewRequest();
    reviewRequest.setAuthor(FIRST_NAME);
    reviewRequest.setMessage("Hello World!");

    Review review = modelMapper.map(reviewRequest, Review.class);
    assertEquals(reviewRequest.getAuthor(), review.getAuthor());
    assertEquals(reviewRequest.getMessage(), review.getMessage());
  }

  @Test
  public void convertToResponseDto() {
    User user = new User();
    user.setFirstName(FIRST_NAME);
    user.setEmail(USER_EMAIL);

    UserResponse userRequestDto = modelMapper.map(user, UserResponse.class);
    assertEquals(user.getFirstName(), userRequestDto.getFirstName());
    assertEquals(user.getEmail(), userRequestDto.getEmail());
  }
}
------[0m
[0m2025-06-16 21:23:16 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.mapper;

import static com.gmail.merikbest2015.ecommerce.util.TestConstants.*;
import static org.junit.jupiter.api.Assertions.assertEquals;

import com.gmail.merikbest2015.ecommerce.domain.Review;
import com.gmail.merikbest2015.ecommerce.domain.User;
import com.gmail.merikbest2015.ecommerce.dto.RegistrationRequest;
import com.gmail.merikbest2015.ecommerce.dto.review.ReviewRequest;
import com.gmail.merikbest2015.ecommerce.dto.user.UpdateUserRequest;
import com.gmail.merikbest2015.ecommerce.dto.user.UserResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit.jupiter.SpringExtension;

@SpringBootTest
@ExtendWith(SpringExtension.class)
public class UserMapperTest {

  @Autowired private ModelMapper modelMapper;

  @Test
  public void convertUserRequestDtoToEntity() {
    UpdateUserRequest userRequest = new UpdateUserRequest();
    userRequest.setFirstName(FIRST_NAME);

    User user = modelMapper.map(userRequest, User.class);
    assertEquals(userRequest.getFirstName(), user.getFirstName());
  }

  @Test
  public void convertRegistrationRequestDtoToEntity() {
    RegistrationRequest registrationRequest = new RegistrationRequest();
    registrationRequest.setFirstName(FIRST_NAME);
    registrationRequest.setEmail(USER_EMAIL);
    registrationRequest.setPassword(USER_PASSWORD);

    User user = modelMapper.map(registrationRequest, User.class);
    assertEquals(registrationRequest.getFirstName(), user.getFirstName());
    assertEquals(registrationRequest.getEmail(), user.getEmail());
    assertEquals(registrationRequest.getPassword(), user.getPassword());
  }

  @Test
  public void convertReviewToEntity() {
    ReviewRequest reviewRequest = new ReviewRequest();
    reviewRequest.setAuthor(FIRST_NAME);
    reviewRequest.setMessage("Hello World!");

    Review review = modelMapper.map(reviewRequest, Review.class);
    assertEquals(reviewRequest.getAuthor(), review.getAuthor());
    assertEquals(reviewRequest.getMessage(), review.getMessage());
  }

  @Test
  public void convertToResponseDto() {
    User user = new User();
    user.setFirstName(FIRST_NAME);
    user.setEmail(USER_EMAIL);

    UserResponse userRequestDto = modelMapper.map(user, UserResponse.class);
    assertEquals(user.getFirstName(), userRequestDto.getFirstName());
    assertEquals(user.getEmail(), userRequestDto.getEmail());
  }
}
------[0m
[0m2025-06-16 21:23:16 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java[0m
[0m2025-06-16 21:23:16 [0;34m[DEBUG][0m   FILE_STATUS (AuthenticationServiceImplTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:16 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java, FILE_NAME: AuthenticationServiceImplTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:23:16 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:23:16 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:16 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java][0m
[0m2025-06-16 21:23:17 [0;34m[INFO][0m    - File:[0;37m[AuthenticationServiceImplTest.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:23:17 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.service.Impl;

import static com.gmail.merikbest2015.ecommerce.util.TestConstants.*;
import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

import com.gmail.merikbest2015.ecommerce.domain.User;
import com.gmail.merikbest2015.ecommerce.enums.AuthProvider;
import com.gmail.merikbest2015.ecommerce.enums.Role;
import com.gmail.merikbest2015.ecommerce.repository.UserRepository;
import com.gmail.merikbest2015.ecommerce.security.JwtProvider;
import com.gmail.merikbest2015.ecommerce.security.oauth2.*;
import com.gmail.merikbest2015.ecommerce.service.email.MailSender;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;
import java.util.Optional;
import org.hamcrest.CoreMatchers;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.ArgumentMatchers;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.test.context.bean.override.mockito.MockitoBean;
import org.springframework.test.context.junit.jupiter.SpringExtension;

@SpringBootTest
@ExtendWith(SpringExtension.class)
public class AuthenticationServiceImplTest {

  @Autowired private AuthenticationServiceImpl authenticationService;

  @MockitoBean private UserRepository userRepository;

  @MockitoBean private JwtProvider jwtProvider;

  @MockitoBean private MailSender mailSender;

  @MockitoBean private PasswordEncoder passwordEncoder;

  @Value("${hostname}")
  private String hostname;

  @Test
  public void findByPasswordResetCode() {
    User user = new User();
    user.setPasswordResetCode(USER_PASSWORD_RESET_CODE);
    when(userRepository.getEmailByPasswordResetCode(USER_PASSWORD_RESET_CODE))
        .thenReturn(Optional.of(USER_EMAIL));
    authenticationService.getEmailByPasswordResetCode(USER_PASSWORD_RESET_CODE);

    assertEquals(USER_PASSWORD_RESET_CODE, user.getPasswordResetCode());
    verify(userRepository, times(1)).getEmailByPasswordResetCode(USER_PASSWORD_RESET_CODE);
  }

  @Test
  public void login() {
    User user = new User();
    user.setId(123L);
    user.setEmail(USER_EMAIL);
    user.setPassword(USER_PASSWORD); // This should be the encoded password
    user.setActive(true);
    user.setFirstName(FIRST_NAME);
    user.setRoles(Collections.singleton(Role.USER));

    when(userRepository.findByEmail(USER_EMAIL)).thenReturn(Optional.of(user));
    when(passwordEncoder.matches(USER_PASSWORD, user.getPassword())).thenReturn(true);
    assertEquals(123L, user.getId());
    assertEquals(USER_EMAIL, user.getEmail());
    assertEquals(FIRST_NAME, user.getFirstName());
    authenticationService.login(USER_EMAIL, USER_PASSWORD);
    // Expect 2 calls to findByEmail due to AuthenticationManager and direct call
    verify(userRepository, times(2)).findByEmail(user.getEmail());
    verify(jwtProvider, times(1))
        .createToken(user.getEmail(), user.getRoles().iterator().next().name());
  }

  @Test
  public void registerUser() {
    User user = new User();
    user.setFirstName(FIRST_NAME);
    user.setEmail(USER_EMAIL);
    String userCreated = authenticationService.registerUser(user, "", USER_PASSWORD);
    Map<String, Object> attributes = new HashMap<>();
    attributes.put("firstName", FIRST_NAME);
    attributes.put(
        "registrationUrl", "http://" + hostname + "/activate/" + user.getActivationCode());

    assertNotNull(userCreated);
    assertNotNull(user.getActivationCode());
    assertTrue(CoreMatchers.is(user.getRoles()).matches(Collections.singleton(Role.USER)));
    verify(userRepository, times(1)).save(user);
    verify(mailSender, times(1))
        .sendMessageHtml(
            ArgumentMatchers.eq(user.getEmail()),
            ArgumentMatchers.eq("Activation code"),
            ArgumentMatchers.eq("registration-template"),
            ArgumentMatchers.eq(attributes));
  }

  @Test
  public void registerGoogleOauthUser() {
    Map<String, Object> attributes = new HashMap<>();
    attributes.put("sub", 123456);
    attributes.put("given_name", FIRST_NAME);
    attributes.put("family_name", LAST_NAME);
    attributes.put("email", USER_EMAIL);
    GoogleOAuth2UserInfo userInfo = new GoogleOAuth2UserInfo(attributes);
    OAuth2UserInfo google = OAuth2UserFactory.getOAuth2UserInfo("google", attributes);

    User user = new User();
    user.setEmail(USER_EMAIL);
    user.setFirstName(FIRST_NAME);
    user.setLastName(LAST_NAME);
    user.setActive(true);
    user.setRoles(Collections.singleton(Role.USER));
    user.setProvider(AuthProvider.GOOGLE);

    when(userRepository.save(user)).thenReturn(user);
    authenticationService.registerOauth2User("google", userInfo);
    assertEquals(USER_EMAIL, user.getEmail());
    assertEquals(FIRST_NAME, user.getFirstName());
    assertEquals(LAST_NAME, user.getLastName());
    assertEquals(google.getAttributes(), userInfo.getAttributes());
    assertNull(user.getPassword());
    verify(userRepository, times(1)).save(user);
  }

  @Test
  public void registerFacebookOauthUser() {
    Map<String, Object> attributes = new HashMap<>();
    attributes.put("id", 123456);
    attributes.put("first_name", FIRST_NAME);
    attributes.put("last_name", LAST_NAME);
    attributes.put("email", USER_EMAIL);
    FacebookOAuth2UserInfo userInfo = new FacebookOAuth2UserInfo(attributes);
    OAuth2UserInfo facebook = OAuth2UserFactory.getOAuth2UserInfo("facebook", attributes);

    User user = new User();
    user.setEmail(USER_EMAIL);
    user.setFirstName(FIRST_NAME);
    user.setLastName(LAST_NAME);
    user.setActive(true);
    user.setRoles(Collections.singleton(Role.USER));
    user.setProvider(AuthProvider.FACEBOOK);

    when(userRepository.save(user)).thenReturn(user);
    authenticationService.registerOauth2User("facebook", userInfo);
    assertEquals(USER_EMAIL, user.getEmail());
    assertEquals(FIRST_NAME, user.getFirstName());
    assertEquals(LAST_NAME, user.getLastName());
    assertEquals(facebook.getAttributes(), userInfo.getAttributes());
    assertNull(user.getPassword());
    verify(userRepository, times(1)).save(user);
  }

  @Test
  public void registerGithubOauthUser() {
    Map<String, Object> attributes = new HashMap<>();
    attributes.put("id", 123456);
    attributes.put("name", FIRST_NAME);
    attributes.put("email", USER_EMAIL);
    GithubOAuth2UserInfo userInfo = new GithubOAuth2UserInfo(attributes);
    OAuth2UserInfo github = OAuth2UserFactory.getOAuth2UserInfo("github", attributes);

    User user = new User();
    user.setEmail(USER_EMAIL);
    user.setFirstName(FIRST_NAME);
    user.setLastName("");
    user.setActive(true);
    user.setRoles(Collections.singleton(Role.USER));
    user.setProvider(AuthProvider.GITHUB);

    when(userRepository.save(user)).thenReturn(user);
    authenticationService.registerOauth2User("github", userInfo);
    assertEquals(USER_EMAIL, user.getEmail());
    assertEquals(FIRST_NAME, user.getFirstName());
    assertEquals(github.getAttributes(), userInfo.getAttributes());
    assertNull(user.getPassword());
    verify(userRepository, times(1)).save(user);
  }

  @Test
  public void updateOauthUser() {
    Map<String, Object> attributes = new HashMap<>();
    attributes.put("sub", 123456);
    attributes.put("given_name", FIRST_NAME);
    attributes.put("family_name", LAST_NAME);
    attributes.put("email", USER_EMAIL);
    GoogleOAuth2UserInfo userInfo = new GoogleOAuth2UserInfo(attributes);

    User user = new User();
    user.setEmail(USER_EMAIL);
    user.setFirstName(FIRST_NAME);
    user.setLastName(LAST_NAME);
    user.setProvider(AuthProvider.GOOGLE);

    when(userRepository.save(user)).thenReturn(user);
    authenticationService.updateOauth2User(user, "google", userInfo);
    assertEquals(USER_EMAIL, user.getEmail());
    assertEquals(FIRST_NAME, user.getFirstName());
    assertEquals(LAST_NAME, user.getLastName());
    assertEquals(AuthProvider.GOOGLE, user.getProvider());
    assertNull(user.getPassword());
    verify(userRepository, times(1)).save(user);
  }

  @Test
  public void sendPasswordResetCode() {
    User user = new User();
    user.setEmail(USER_EMAIL);
    user.setPasswordResetCode(USER_PASSWORD_RESET_CODE);

    when(userRepository.save(user)).thenReturn(user);
    when(userRepository.findByEmail(USER_EMAIL)).thenReturn(Optional.of(user));
    authenticationService.sendPasswordResetCode(USER_EMAIL);
    Map<String, Object> attributes = new HashMap<>();
    attributes.put("firstName", null);
    attributes.put("resetUrl", "http://" + hostname + "/reset/" + user.getPasswordResetCode());

    assertEquals(USER_EMAIL, user.getEmail());
    assertNotNull(user.getPasswordResetCode());
    verify(userRepository, times(1)).save(user);
    verify(userRepository, times(1)).findByEmail(user.getEmail());
    verify(mailSender, times(1))
        .sendMessageHtml(
            ArgumentMatchers.eq(user.getEmail()),
            ArgumentMatchers.eq("Password reset"),
            ArgumentMatchers.eq("password-reset-template"),
            ArgumentMatchers.eq(attributes));
  }

  @Test
  public void passwordReset() {
    User user = new User();
    user.setEmail(USER_EMAIL);
    user.setPassword(USER_PASSWORD);

    when(userRepository.findByEmail(USER_EMAIL)).thenReturn(Optional.of(user));
    when(passwordEncoder.encode(USER_PASSWORD)).thenReturn(user.getPassword());
    when(userRepository.save(user)).thenReturn(user);
    authenticationService.passwordReset(user.getEmail(), user.getPassword(), user.getPassword());
    assertEquals(USER_EMAIL, user.getEmail());
    assertNotNull(user.getPassword());
    verify(userRepository, times(1)).findByEmail(user.getEmail());
    verify(passwordEncoder, times(1)).encode(user.getPassword());
    verify(userRepository, times(1)).save(user);
  }

  @Test
  public void activateUser() {
    User user = new User();
    user.setActivationCode(USER_ACTIVATION_CODE);

    when(userRepository.findByActivationCode(USER_ACTIVATION_CODE)).thenReturn(Optional.of(user));
    when(userRepository.save(user)).thenReturn(user);
    String activated = authenticationService.activateUser(user.getActivationCode());
    assertNotNull(activated);
    assertNull(user.getActivationCode());
    verify(userRepository, times(1)).save(user);
  }
}
------[0m
[0m2025-06-16 21:23:17 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.service.Impl;

import static com.gmail.merikbest2015.ecommerce.util.TestConstants.*;
import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

import com.gmail.merikbest2015.ecommerce.domain.User;
import com.gmail.merikbest2015.ecommerce.enums.AuthProvider;
import com.gmail.merikbest2015.ecommerce.enums.Role;
import com.gmail.merikbest2015.ecommerce.repository.UserRepository;
import com.gmail.merikbest2015.ecommerce.security.JwtProvider;
import com.gmail.merikbest2015.ecommerce.security.oauth2.*;
import com.gmail.merikbest2015.ecommerce.service.email.MailSender;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;
import java.util.Optional;
import org.hamcrest.CoreMatchers;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.ArgumentMatchers;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.test.context.bean.override.mockito.MockitoBean;
import org.springframework.test.context.junit.jupiter.SpringExtension;

@SpringBootTest
@ExtendWith(SpringExtension.class)
public class AuthenticationServiceImplTest {

  @Autowired private AuthenticationServiceImpl authenticationService;

  @MockitoBean private UserRepository userRepository;

  @MockitoBean private JwtProvider jwtProvider;

  @MockitoBean private MailSender mailSender;

  @MockitoBean private PasswordEncoder passwordEncoder;

  @Value("${hostname}")
  private String hostname;

  @Test
  public void findByPasswordResetCode() {
    User user = new User();
    user.setPasswordResetCode(USER_PASSWORD_RESET_CODE);
    when(userRepository.getEmailByPasswordResetCode(USER_PASSWORD_RESET_CODE))
        .thenReturn(Optional.of(USER_EMAIL));
    authenticationService.getEmailByPasswordResetCode(USER_PASSWORD_RESET_CODE);

    assertEquals(USER_PASSWORD_RESET_CODE, user.getPasswordResetCode());
    verify(userRepository, times(1)).getEmailByPasswordResetCode(USER_PASSWORD_RESET_CODE);
  }

  @Test
  public void login() {
    User user = new User();
    user.setId(123L);
    user.setEmail(USER_EMAIL);
    user.setPassword(USER_PASSWORD); // This should be the encoded password
    user.setActive(true);
    user.setFirstName(FIRST_NAME);
    user.setRoles(Collections.singleton(Role.USER));

    when(userRepository.findByEmail(USER_EMAIL)).thenReturn(Optional.of(user));
    when(passwordEncoder.matches(USER_PASSWORD, user.getPassword())).thenReturn(true);
    assertEquals(123L, user.getId());
    assertEquals(USER_EMAIL, user.getEmail());
    assertEquals(FIRST_NAME, user.getFirstName());
    authenticationService.login(USER_EMAIL, USER_PASSWORD);
    // Expect 2 calls to findByEmail due to AuthenticationManager and direct call
    verify(userRepository, times(2)).findByEmail(user.getEmail());
    verify(jwtProvider, times(1))
        .createToken(user.getEmail(), user.getRoles().iterator().next().name());
  }

  @Test
  public void registerUser() {
    User user = new User();
    user.setFirstName(FIRST_NAME);
    user.setEmail(USER_EMAIL);
    String userCreated = authenticationService.registerUser(user, "", USER_PASSWORD);
    Map<String, Object> attributes = new HashMap<>();
    attributes.put("firstName", FIRST_NAME);
    attributes.put(
        "registrationUrl", "http://" + hostname + "/activate/" + user.getActivationCode());

    assertNotNull(userCreated);
    assertNotNull(user.getActivationCode());
    assertTrue(CoreMatchers.is(user.getRoles()).matches(Collections.singleton(Role.USER)));
    verify(userRepository, times(1)).save(user);
    verify(mailSender, times(1))
        .sendMessageHtml(
            ArgumentMatchers.eq(user.getEmail()),
            ArgumentMatchers.eq("Activation code"),
            ArgumentMatchers.eq("registration-template"),
            ArgumentMatchers.eq(attributes));
  }

  @Test
  public void registerGoogleOauthUser() {
    Map<String, Object> attributes = new HashMap<>();
    attributes.put("sub", 123456);
    attributes.put("given_name", FIRST_NAME);
    attributes.put("family_name", LAST_NAME);
    attributes.put("email", USER_EMAIL);
    GoogleOAuth2UserInfo userInfo = new GoogleOAuth2UserInfo(attributes);
    OAuth2UserInfo google = OAuth2UserFactory.getOAuth2UserInfo("google", attributes);

    User user = new User();
    user.setEmail(USER_EMAIL);
    user.setFirstName(FIRST_NAME);
    user.setLastName(LAST_NAME);
    user.setActive(true);
    user.setRoles(Collections.singleton(Role.USER));
    user.setProvider(AuthProvider.GOOGLE);

    when(userRepository.save(user)).thenReturn(user);
    authenticationService.registerOauth2User("google", userInfo);
    assertEquals(USER_EMAIL, user.getEmail());
    assertEquals(FIRST_NAME, user.getFirstName());
    assertEquals(LAST_NAME, user.getLastName());
    assertEquals(google.getAttributes(), userInfo.getAttributes());
    assertNull(user.getPassword());
    verify(userRepository, times(1)).save(user);
  }

  @Test
  public void registerFacebookOauthUser() {
    Map<String, Object> attributes = new HashMap<>();
    attributes.put("id", 123456);
    attributes.put("first_name", FIRST_NAME);
    attributes.put("last_name", LAST_NAME);
    attributes.put("email", USER_EMAIL);
    FacebookOAuth2UserInfo userInfo = new FacebookOAuth2UserInfo(attributes);
    OAuth2UserInfo facebook = OAuth2UserFactory.getOAuth2UserInfo("facebook", attributes);

    User user = new User();
    user.setEmail(USER_EMAIL);
    user.setFirstName(FIRST_NAME);
    user.setLastName(LAST_NAME);
    user.setActive(true);
    user.setRoles(Collections.singleton(Role.USER));
    user.setProvider(AuthProvider.FACEBOOK);

    when(userRepository.save(user)).thenReturn(user);
    authenticationService.registerOauth2User("facebook", userInfo);
    assertEquals(USER_EMAIL, user.getEmail());
    assertEquals(FIRST_NAME, user.getFirstName());
    assertEquals(LAST_NAME, user.getLastName());
    assertEquals(facebook.getAttributes(), userInfo.getAttributes());
    assertNull(user.getPassword());
    verify(userRepository, times(1)).save(user);
  }

  @Test
  public void registerGithubOauthUser() {
    Map<String, Object> attributes = new HashMap<>();
    attributes.put("id", 123456);
    attributes.put("name", FIRST_NAME);
    attributes.put("email", USER_EMAIL);
    GithubOAuth2UserInfo userInfo = new GithubOAuth2UserInfo(attributes);
    OAuth2UserInfo github = OAuth2UserFactory.getOAuth2UserInfo("github", attributes);

    User user = new User();
    user.setEmail(USER_EMAIL);
    user.setFirstName(FIRST_NAME);
    user.setLastName("");
    user.setActive(true);
    user.setRoles(Collections.singleton(Role.USER));
    user.setProvider(AuthProvider.GITHUB);

    when(userRepository.save(user)).thenReturn(user);
    authenticationService.registerOauth2User("github", userInfo);
    assertEquals(USER_EMAIL, user.getEmail());
    assertEquals(FIRST_NAME, user.getFirstName());
    assertEquals(github.getAttributes(), userInfo.getAttributes());
    assertNull(user.getPassword());
    verify(userRepository, times(1)).save(user);
  }

  @Test
  public void updateOauthUser() {
    Map<String, Object> attributes = new HashMap<>();
    attributes.put("sub", 123456);
    attributes.put("given_name", FIRST_NAME);
    attributes.put("family_name", LAST_NAME);
    attributes.put("email", USER_EMAIL);
    GoogleOAuth2UserInfo userInfo = new GoogleOAuth2UserInfo(attributes);

    User user = new User();
    user.setEmail(USER_EMAIL);
    user.setFirstName(FIRST_NAME);
    user.setLastName(LAST_NAME);
    user.setProvider(AuthProvider.GOOGLE);

    when(userRepository.save(user)).thenReturn(user);
    authenticationService.updateOauth2User(user, "google", userInfo);
    assertEquals(USER_EMAIL, user.getEmail());
    assertEquals(FIRST_NAME, user.getFirstName());
    assertEquals(LAST_NAME, user.getLastName());
    assertEquals(AuthProvider.GOOGLE, user.getProvider());
    assertNull(user.getPassword());
    verify(userRepository, times(1)).save(user);
  }

  @Test
  public void sendPasswordResetCode() {
    User user = new User();
    user.setEmail(USER_EMAIL);
    user.setPasswordResetCode(USER_PASSWORD_RESET_CODE);

    when(userRepository.save(user)).thenReturn(user);
    when(userRepository.findByEmail(USER_EMAIL)).thenReturn(Optional.of(user));
    authenticationService.sendPasswordResetCode(USER_EMAIL);
    Map<String, Object> attributes = new HashMap<>();
    attributes.put("firstName", null);
    attributes.put("resetUrl", "http://" + hostname + "/reset/" + user.getPasswordResetCode());

    assertEquals(USER_EMAIL, user.getEmail());
    assertNotNull(user.getPasswordResetCode());
    verify(userRepository, times(1)).save(user);
    verify(userRepository, times(1)).findByEmail(user.getEmail());
    verify(mailSender, times(1))
        .sendMessageHtml(
            ArgumentMatchers.eq(user.getEmail()),
            ArgumentMatchers.eq("Password reset"),
            ArgumentMatchers.eq("password-reset-template"),
            ArgumentMatchers.eq(attributes));
  }

  @Test
  public void passwordReset() {
    User user = new User();
    user.setEmail(USER_EMAIL);
    user.setPassword(USER_PASSWORD);

    when(userRepository.findByEmail(USER_EMAIL)).thenReturn(Optional.of(user));
    when(passwordEncoder.encode(USER_PASSWORD)).thenReturn(user.getPassword());
    when(userRepository.save(user)).thenReturn(user);
    authenticationService.passwordReset(user.getEmail(), user.getPassword(), user.getPassword());
    assertEquals(USER_EMAIL, user.getEmail());
    assertNotNull(user.getPassword());
    verify(userRepository, times(1)).findByEmail(user.getEmail());
    verify(passwordEncoder, times(1)).encode(user.getPassword());
    verify(userRepository, times(1)).save(user);
  }

  @Test
  public void activateUser() {
    User user = new User();
    user.setActivationCode(USER_ACTIVATION_CODE);

    when(userRepository.findByActivationCode(USER_ACTIVATION_CODE)).thenReturn(Optional.of(user));
    when(userRepository.save(user)).thenReturn(user);
    String activated = authenticationService.activateUser(user.getActivationCode());
    assertNotNull(activated);
    assertNull(user.getActivationCode());
    verify(userRepository, times(1)).save(user);
  }
}
------[0m
[0m2025-06-16 21:23:17 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java[0m
[0m2025-06-16 21:23:17 [0;34m[DEBUG][0m   FILE_STATUS (OrderServiceImplTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:17 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java, FILE_NAME: OrderServiceImplTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:23:17 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:23:17 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:17 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java][0m
[0m2025-06-16 21:23:18 [0;34m[INFO][0m    - File:[0;37m[OrderServiceImplTest.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:23:18 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.service.Impl;

import static com.gmail.merikbest2015.ecommerce.util.TestConstants.*;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.mockito.Mockito.*;

import com.gmail.merikbest2015.ecommerce.domain.Order;
import com.gmail.merikbest2015.ecommerce.domain.OrderItem;
import com.gmail.merikbest2015.ecommerce.domain.Perfume;
import com.gmail.merikbest2015.ecommerce.repository.OrderItemRepository;
import com.gmail.merikbest2015.ecommerce.repository.OrderRepository;
import com.gmail.merikbest2015.ecommerce.repository.PerfumeRepository;
import com.gmail.merikbest2015.ecommerce.service.email.MailSender;
import java.util.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.ArgumentMatchers;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageImpl;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.test.context.bean.override.mockito.MockitoBean;
import org.springframework.test.context.junit.jupiter.SpringExtension;

@SpringBootTest
@ExtendWith(SpringExtension.class)
public class OrderServiceImplTest {

  @Autowired private OrderServiceImpl orderService;

  @MockitoBean private OrderRepository orderRepository;

  @MockitoBean private OrderItemRepository orderItemRepository;

  @MockitoBean private PerfumeRepository perfumeRepository;

  @MockitoBean private MailSender mailSender;

  @Test
  public void findAll() {
    Pageable pageable = PageRequest.of(0, 20);
    List<Order> orderList = new ArrayList<>();
    orderList.add(new Order());
    orderList.add(new Order());
    Page<Order> orders = new PageImpl<>(orderList, pageable, 20);

    when(orderRepository.findAllByOrderByIdAsc(pageable)).thenReturn(orders);
    orderService.getAllOrders(pageable);
    assertEquals(2, orderList.size());
    verify(orderRepository, times(1)).findAllByOrderByIdAsc(pageable);
  }

  @Test
  public void findOrderByEmail() {
    Pageable pageable = PageRequest.of(0, 20);
    Order order1 = new Order();
    order1.setEmail(ORDER_EMAIL);
    Order order2 = new Order();
    order2.setEmail(ORDER_EMAIL);
    List<Order> orderList = new ArrayList<>();
    orderList.add(order1);
    orderList.add(order2);
    Page<Order> orders = new PageImpl<>(orderList, pageable, 20);

    when(orderRepository.findOrderByEmail(ORDER_EMAIL, pageable)).thenReturn(orders);
    orderService.getUserOrders(ORDER_EMAIL, pageable);
    assertEquals(2, orderList.size());
    verify(orderRepository, times(1)).findOrderByEmail(ORDER_EMAIL, pageable);
  }

  @Test
  public void postOrder() {
    Map<Long, Long> perfumesId = new HashMap<>();
    perfumesId.put(1L, 1L);
    perfumesId.put(2L, 1L);

    Perfume perfume1 = new Perfume();
    perfume1.setId(1L);
    perfume1.setPrice(PRICE);
    Perfume perfume2 = new Perfume();
    perfume2.setPrice(PRICE);
    perfume2.setId(2L);

    OrderItem orderItem1 = new OrderItem();
    orderItem1.setPerfume(perfume1);
    orderItem1.setAmount(192L);
    orderItem1.setQuantity(1L);
    OrderItem orderItem2 = new OrderItem();
    orderItem2.setPerfume(perfume2);
    orderItem2.setAmount(192L);
    orderItem2.setQuantity(1L);

    Order order = new Order();
    order.setFirstName(FIRST_NAME);
    order.setLastName(LAST_NAME);
    order.setCity(CITY);
    order.setAddress(ADDRESS);
    order.setEmail(ORDER_EMAIL);
    order.setPostIndex(POST_INDEX);
    order.setPhoneNumber(PHONE_NUMBER);
    order.setTotalPrice(TOTAL_PRICE);
    Map<String, Object> attributes = new HashMap<>();
    attributes.put("order", order);

    when(perfumeRepository.findById(1L)).thenReturn(java.util.Optional.of(perfume1));
    when(perfumeRepository.findById(2L)).thenReturn(java.util.Optional.of(perfume2));
    when(orderItemRepository.save(orderItem1)).thenReturn(orderItem1);
    when(orderItemRepository.save(orderItem2)).thenReturn(orderItem2);
    when(orderRepository.save(order)).thenReturn(order);
    orderService.postOrder(order, perfumesId);
    assertNotNull(order);
    assertEquals(ORDER_EMAIL, order.getEmail());
    assertNotNull(orderItem1);
    assertNotNull(orderItem2);
    verify(mailSender, times(1))
        .sendMessageHtml(
            ArgumentMatchers.eq(order.getEmail()),
            ArgumentMatchers.eq("Order #" + order.getId()),
            ArgumentMatchers.eq("order-template"),
            ArgumentMatchers.eq(attributes));
  }
}
------[0m
[0m2025-06-16 21:23:18 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.service.Impl;

import static com.gmail.merikbest2015.ecommerce.util.TestConstants.*;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.mockito.Mockito.*;

import com.gmail.merikbest2015.ecommerce.domain.Order;
import com.gmail.merikbest2015.ecommerce.domain.OrderItem;
import com.gmail.merikbest2015.ecommerce.domain.Perfume;
import com.gmail.merikbest2015.ecommerce.repository.OrderItemRepository;
import com.gmail.merikbest2015.ecommerce.repository.OrderRepository;
import com.gmail.merikbest2015.ecommerce.repository.PerfumeRepository;
import com.gmail.merikbest2015.ecommerce.service.email.MailSender;
import java.util.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.ArgumentMatchers;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageImpl;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.test.context.bean.override.mockito.MockitoBean;
import org.springframework.test.context.junit.jupiter.SpringExtension;

@SpringBootTest
@ExtendWith(SpringExtension.class)
public class OrderServiceImplTest {

  @Autowired private OrderServiceImpl orderService;

  @MockitoBean private OrderRepository orderRepository;

  @MockitoBean private OrderItemRepository orderItemRepository;

  @MockitoBean private PerfumeRepository perfumeRepository;

  @MockitoBean private MailSender mailSender;

  @Test
  public void findAll() {
    Pageable pageable = PageRequest.of(0, 20);
    List<Order> orderList = new ArrayList<>();
    orderList.add(new Order());
    orderList.add(new Order());
    Page<Order> orders = new PageImpl<>(orderList, pageable, 20);

    when(orderRepository.findAllByOrderByIdAsc(pageable)).thenReturn(orders);
    orderService.getAllOrders(pageable);
    assertEquals(2, orderList.size());
    verify(orderRepository, times(1)).findAllByOrderByIdAsc(pageable);
  }

  @Test
  public void findOrderByEmail() {
    Pageable pageable = PageRequest.of(0, 20);
    Order order1 = new Order();
    order1.setEmail(ORDER_EMAIL);
    Order order2 = new Order();
    order2.setEmail(ORDER_EMAIL);
    List<Order> orderList = new ArrayList<>();
    orderList.add(order1);
    orderList.add(order2);
    Page<Order> orders = new PageImpl<>(orderList, pageable, 20);

    when(orderRepository.findOrderByEmail(ORDER_EMAIL, pageable)).thenReturn(orders);
    orderService.getUserOrders(ORDER_EMAIL, pageable);
    assertEquals(2, orderList.size());
    verify(orderRepository, times(1)).findOrderByEmail(ORDER_EMAIL, pageable);
  }

  @Test
  public void postOrder() {
    Map<Long, Long> perfumesId = new HashMap<>();
    perfumesId.put(1L, 1L);
    perfumesId.put(2L, 1L);

    Perfume perfume1 = new Perfume();
    perfume1.setId(1L);
    perfume1.setPrice(PRICE);
    Perfume perfume2 = new Perfume();
    perfume2.setPrice(PRICE);
    perfume2.setId(2L);

    OrderItem orderItem1 = new OrderItem();
    orderItem1.setPerfume(perfume1);
    orderItem1.setAmount(192L);
    orderItem1.setQuantity(1L);
    OrderItem orderItem2 = new OrderItem();
    orderItem2.setPerfume(perfume2);
    orderItem2.setAmount(192L);
    orderItem2.setQuantity(1L);

    Order order = new Order();
    order.setFirstName(FIRST_NAME);
    order.setLastName(LAST_NAME);
    order.setCity(CITY);
    order.setAddress(ADDRESS);
    order.setEmail(ORDER_EMAIL);
    order.setPostIndex(POST_INDEX);
    order.setPhoneNumber(PHONE_NUMBER);
    order.setTotalPrice(TOTAL_PRICE);
    Map<String, Object> attributes = new HashMap<>();
    attributes.put("order", order);

    when(perfumeRepository.findById(1L)).thenReturn(java.util.Optional.of(perfume1));
    when(perfumeRepository.findById(2L)).thenReturn(java.util.Optional.of(perfume2));
    when(orderItemRepository.save(orderItem1)).thenReturn(orderItem1);
    when(orderItemRepository.save(orderItem2)).thenReturn(orderItem2);
    when(orderRepository.save(order)).thenReturn(order);
    orderService.postOrder(order, perfumesId);
    assertNotNull(order);
    assertEquals(ORDER_EMAIL, order.getEmail());
    assertNotNull(orderItem1);
    assertNotNull(orderItem2);
    verify(mailSender, times(1))
        .sendMessageHtml(
            ArgumentMatchers.eq(order.getEmail()),
            ArgumentMatchers.eq("Order #" + order.getId()),
            ArgumentMatchers.eq("order-template"),
            ArgumentMatchers.eq(attributes));
  }
}
------[0m
[0m2025-06-16 21:23:18 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java[0m
[0m2025-06-16 21:23:18 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeServiceImplTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:18 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java, FILE_NAME: PerfumeServiceImplTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:23:18 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:23:18 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:18 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java][0m
[0m2025-06-16 21:23:18 [0;34m[INFO][0m    - File:[0;37m[PerfumeServiceImplTest.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:23:18 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.service.Impl;

import static com.gmail.merikbest2015.ecommerce.util.TestConstants.*;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotEquals;
import static org.mockito.Mockito.*;

import com.gmail.merikbest2015.ecommerce.domain.Perfume;
import com.gmail.merikbest2015.ecommerce.dto.perfume.PerfumeSearchRequest;
import com.gmail.merikbest2015.ecommerce.repository.PerfumeRepository;
import com.gmail.merikbest2015.ecommerce.repository.projection.PerfumeProjection;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageImpl;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.data.projection.SpelAwareProxyProjectionFactory;
import org.springframework.test.context.bean.override.mockito.MockitoBean;
import org.springframework.test.context.junit.jupiter.SpringExtension;

@SpringBootTest
@ExtendWith(SpringExtension.class)
public class PerfumeServiceImplTest {

  @Autowired private PerfumeServiceImpl perfumeService;

  @Autowired private SpelAwareProxyProjectionFactory factory;

  @MockitoBean private PerfumeRepository perfumeRepository;

  @Test
  public void findPerfumeById() {
    Perfume perfume = new Perfume();
    perfume.setId(123L);

    when(perfumeRepository.findById(123L)).thenReturn(java.util.Optional.of(perfume));
    perfumeService.getPerfumeById(123L);
    assertEquals(123L, perfume.getId());
    assertNotEquals(1L, perfume.getId());
    verify(perfumeRepository, times(1)).findById(123L);
  }

  @Test
  public void findAllPerfumes() {
    Pageable pageable = PageRequest.of(0, 20);
    List<PerfumeProjection> perfumeProjectionList = new ArrayList<>();
    perfumeProjectionList.add(factory.createProjection(PerfumeProjection.class));
    perfumeProjectionList.add(factory.createProjection(PerfumeProjection.class));
    Page<PerfumeProjection> perfumeList = new PageImpl<>(perfumeProjectionList);

    when(perfumeRepository.findAllByOrderByIdAsc(pageable)).thenReturn(perfumeList);
    perfumeService.getAllPerfumes(pageable);
    assertEquals(2, perfumeProjectionList.size());
    verify(perfumeRepository, times(1)).findAllByOrderByIdAsc(pageable);
  }

  @Test
  public void filter() {
    Pageable pageable = PageRequest.of(0, 20);

    PerfumeProjection perfumeChanel = factory.createProjection(PerfumeProjection.class);
    perfumeChanel.setPerfumer(PERFUMER_CHANEL);
    perfumeChanel.setPerfumeGender(PERFUME_GENDER);
    perfumeChanel.setPrice(101);
    PerfumeProjection perfumeCreed = factory.createProjection(PerfumeProjection.class);
    perfumeCreed.setPerfumer(PERFUMER_CREED);
    perfumeCreed.setPerfumeGender(PERFUME_GENDER);
    perfumeCreed.setPrice(102);
    Page<PerfumeProjection> perfumeList =
        new PageImpl<>(Arrays.asList(perfumeChanel, perfumeCreed));

    List<String> perfumers = new ArrayList<>();
    perfumers.add(PERFUMER_CHANEL);
    perfumers.add(PERFUMER_CREED);

    List<String> genders = new ArrayList<>();
    genders.add(PERFUME_GENDER);

    when(perfumeRepository.findPerfumesByFilterParams(perfumers, genders, 1, 1000, false, pageable))
        .thenReturn(perfumeList);
    PerfumeSearchRequest filter = new PerfumeSearchRequest();
    filter.setPerfumers(perfumers);
    filter.setGenders(genders);
    filter.setPrices(Arrays.asList(1, 1000));
    filter.setSortByPrice(false);
    perfumeService.findPerfumesByFilterParams(filter, pageable);
    assertEquals(2, perfumeList.getTotalElements());
    assertEquals(PERFUMER_CHANEL, perfumeList.getContent().get(0).getPerfumer());
    verify(perfumeRepository, times(1))
        .findPerfumesByFilterParams(perfumers, genders, 1, 1000, false, pageable);
  }

  @Test
  public void findByPerfumerOrderByPriceDesc() {
    Perfume perfumeChanel = new Perfume();
    perfumeChanel.setPerfumer(PERFUMER_CHANEL);
    Perfume perfumeCreed = new Perfume();
    perfumeCreed.setPerfumer(PERFUMER_CREED);
    List<Perfume> perfumeList = new ArrayList<>();
    perfumeList.add(perfumeChanel);
    perfumeList.add(perfumeCreed);

    when(perfumeRepository.findByPerfumerOrderByPriceDesc(PERFUMER_CHANEL)).thenReturn(perfumeList);
    perfumeService.findByPerfumer(PERFUMER_CHANEL);
    assertEquals(PERFUMER_CHANEL, perfumeList.get(0).getPerfumer());
    assertNotEquals(PERFUMER_CREED, perfumeList.get(0).getPerfumer());
    verify(perfumeRepository, times(1)).findByPerfumerOrderByPriceDesc(PERFUMER_CHANEL);
  }

  @Test
  public void findByPerfumeGenderOrderByPriceDesc() {
    Perfume perfumeChanel = new Perfume();
    perfumeChanel.setPerfumeGender(PERFUME_GENDER);
    List<Perfume> perfumeList = new ArrayList<>();
    perfumeList.add(perfumeChanel);

    when(perfumeRepository.findByPerfumeGenderOrderByPriceDesc(PERFUME_GENDER))
        .thenReturn(perfumeList);
    perfumeService.findByPerfumeGender(PERFUME_GENDER);
    assertEquals(PERFUME_GENDER, perfumeList.get(0).getPerfumeGender());
    assertNotEquals("male", perfumeList.get(0).getPerfumeGender());
    verify(perfumeRepository, times(1)).findByPerfumeGenderOrderByPriceDesc(PERFUME_GENDER);
  }

  /*
  @Test
  public void savePerfume() {
      MultipartFile multipartFile = new MockMultipartFile(FILE_NAME, FILE_NAME, "multipart/form-data", FILE_PATH.getBytes());
      Perfume perfume = new Perfume();
      perfume.setId(1L);
      perfume.setPerfumer(PERFUMER_CHANEL);
      perfume.setFilename(multipartFile.getOriginalFilename());

      when(perfumeRepository.save(perfume)).thenReturn(perfume);
      perfumeService.savePerfume(perfume, multipartFile);
      verify(perfumeRepository, times(1)).save(perfume);
  }*/
}
------[0m
[0m2025-06-16 21:23:18 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.service.Impl;

import static com.gmail.merikbest2015.ecommerce.util.TestConstants.*;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotEquals;
import static org.mockito.Mockito.*;

import com.gmail.merikbest2015.ecommerce.domain.Perfume;
import com.gmail.merikbest2015.ecommerce.dto.perfume.PerfumeSearchRequest;
import com.gmail.merikbest2015.ecommerce.repository.PerfumeRepository;
import com.gmail.merikbest2015.ecommerce.repository.projection.PerfumeProjection;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageImpl;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.data.projection.SpelAwareProxyProjectionFactory;
import org.springframework.test.context.bean.override.mockito.MockitoBean;
import org.springframework.test.context.junit.jupiter.SpringExtension;

@SpringBootTest
@ExtendWith(SpringExtension.class)
public class PerfumeServiceImplTest {

  @Autowired private PerfumeServiceImpl perfumeService;

  @Autowired private SpelAwareProxyProjectionFactory factory;

  @MockitoBean private PerfumeRepository perfumeRepository;

  @Test
  public void findPerfumeById() {
    Perfume perfume = new Perfume();
    perfume.setId(123L);

    when(perfumeRepository.findById(123L)).thenReturn(java.util.Optional.of(perfume));
    perfumeService.getPerfumeById(123L);
    assertEquals(123L, perfume.getId());
    assertNotEquals(1L, perfume.getId());
    verify(perfumeRepository, times(1)).findById(123L);
  }

  @Test
  public void findAllPerfumes() {
    Pageable pageable = PageRequest.of(0, 20);
    List<PerfumeProjection> perfumeProjectionList = new ArrayList<>();
    perfumeProjectionList.add(factory.createProjection(PerfumeProjection.class));
    perfumeProjectionList.add(factory.createProjection(PerfumeProjection.class));
    Page<PerfumeProjection> perfumeList = new PageImpl<>(perfumeProjectionList);

    when(perfumeRepository.findAllByOrderByIdAsc(pageable)).thenReturn(perfumeList);
    perfumeService.getAllPerfumes(pageable);
    assertEquals(2, perfumeProjectionList.size());
    verify(perfumeRepository, times(1)).findAllByOrderByIdAsc(pageable);
  }

  @Test
  public void filter() {
    Pageable pageable = PageRequest.of(0, 20);

    PerfumeProjection perfumeChanel = factory.createProjection(PerfumeProjection.class);
    perfumeChanel.setPerfumer(PERFUMER_CHANEL);
    perfumeChanel.setPerfumeGender(PERFUME_GENDER);
    perfumeChanel.setPrice(101);
    PerfumeProjection perfumeCreed = factory.createProjection(PerfumeProjection.class);
    perfumeCreed.setPerfumer(PERFUMER_CREED);
    perfumeCreed.setPerfumeGender(PERFUME_GENDER);
    perfumeCreed.setPrice(102);
    Page<PerfumeProjection> perfumeList =
        new PageImpl<>(Arrays.asList(perfumeChanel, perfumeCreed));

    List<String> perfumers = new ArrayList<>();
    perfumers.add(PERFUMER_CHANEL);
    perfumers.add(PERFUMER_CREED);

    List<String> genders = new ArrayList<>();
    genders.add(PERFUME_GENDER);

    when(perfumeRepository.findPerfumesByFilterParams(perfumers, genders, 1, 1000, false, pageable))
        .thenReturn(perfumeList);
    PerfumeSearchRequest filter = new PerfumeSearchRequest();
    filter.setPerfumers(perfumers);
    filter.setGenders(genders);
    filter.setPrices(Arrays.asList(1, 1000));
    filter.setSortByPrice(false);
    perfumeService.findPerfumesByFilterParams(filter, pageable);
    assertEquals(2, perfumeList.getTotalElements());
    assertEquals(PERFUMER_CHANEL, perfumeList.getContent().get(0).getPerfumer());
    verify(perfumeRepository, times(1))
        .findPerfumesByFilterParams(perfumers, genders, 1, 1000, false, pageable);
  }

  @Test
  public void findByPerfumerOrderByPriceDesc() {
    Perfume perfumeChanel = new Perfume();
    perfumeChanel.setPerfumer(PERFUMER_CHANEL);
    Perfume perfumeCreed = new Perfume();
    perfumeCreed.setPerfumer(PERFUMER_CREED);
    List<Perfume> perfumeList = new ArrayList<>();
    perfumeList.add(perfumeChanel);
    perfumeList.add(perfumeCreed);

    when(perfumeRepository.findByPerfumerOrderByPriceDesc(PERFUMER_CHANEL)).thenReturn(perfumeList);
    perfumeService.findByPerfumer(PERFUMER_CHANEL);
    assertEquals(PERFUMER_CHANEL, perfumeList.get(0).getPerfumer());
    assertNotEquals(PERFUMER_CREED, perfumeList.get(0).getPerfumer());
    verify(perfumeRepository, times(1)).findByPerfumerOrderByPriceDesc(PERFUMER_CHANEL);
  }

  @Test
  public void findByPerfumeGenderOrderByPriceDesc() {
    Perfume perfumeChanel = new Perfume();
    perfumeChanel.setPerfumeGender(PERFUME_GENDER);
    List<Perfume> perfumeList = new ArrayList<>();
    perfumeList.add(perfumeChanel);

    when(perfumeRepository.findByPerfumeGenderOrderByPriceDesc(PERFUME_GENDER))
        .thenReturn(perfumeList);
    perfumeService.findByPerfumeGender(PERFUME_GENDER);
    assertEquals(PERFUME_GENDER, perfumeList.get(0).getPerfumeGender());
    assertNotEquals("male", perfumeList.get(0).getPerfumeGender());
    verify(perfumeRepository, times(1)).findByPerfumeGenderOrderByPriceDesc(PERFUME_GENDER);
  }

  /*
  @Test
  public void savePerfume() {
      MultipartFile multipartFile = new MockMultipartFile(FILE_NAME, FILE_NAME, "multipart/form-data", FILE_PATH.getBytes());
      Perfume perfume = new Perfume();
      perfume.setId(1L);
      perfume.setPerfumer(PERFUMER_CHANEL);
      perfume.setFilename(multipartFile.getOriginalFilename());

      when(perfumeRepository.save(perfume)).thenReturn(perfume);
      perfumeService.savePerfume(perfume, multipartFile);
      verify(perfumeRepository, times(1)).save(perfume);
  }*/
}
------[0m
[0m2025-06-16 21:23:18 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java[0m
[0m2025-06-16 21:23:18 [0;34m[DEBUG][0m   FILE_STATUS (ReviewServiceImplTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:18 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java, FILE_NAME: ReviewServiceImplTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:23:18 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:23:18 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:18 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java][0m
[0m2025-06-16 21:23:19 [0;34m[INFO][0m    - File:[0;37m[ReviewServiceImplTest.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:23:19 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.service.Impl;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.mockito.Mockito.*;

import com.gmail.merikbest2015.ecommerce.domain.Perfume;
import com.gmail.merikbest2015.ecommerce.domain.Review;
import com.gmail.merikbest2015.ecommerce.repository.PerfumeRepository;
import com.gmail.merikbest2015.ecommerce.repository.ReviewRepository;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.bean.override.mockito.MockitoBean;
import org.springframework.test.context.junit.jupiter.SpringExtension;

@SpringBootTest
@ExtendWith(SpringExtension.class)
public class ReviewServiceImplTest {

  @Autowired private ReviewServiceImpl reviewService;

  @MockitoBean private PerfumeRepository perfumeRepository;

  @MockitoBean private ReviewRepository reviewRepository;

  @Test
  public void addReviewToPerfume() {
    List<Review> reviewList = new ArrayList<>();
    Review review = new Review();
    review.setRating(5);
    reviewList.add(review);
    Perfume perfume = new Perfume();
    perfume.setId(123L);
    perfume.setReviews(reviewList);

    when(perfumeRepository.findById(123L)).thenReturn(Optional.of(perfume));
    when(reviewRepository.save(review)).thenReturn(review);
    reviewService.addReviewToPerfume(review, 123L);
    assertEquals(123L, perfume.getId());
    assertNotNull(perfume.getReviews());
    verify(perfumeRepository, times(1)).findById(123L);
    verify(reviewRepository, times(1)).save(review);
  }
}
------[0m
[0m2025-06-16 21:23:19 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.service.Impl;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.mockito.Mockito.*;

import com.gmail.merikbest2015.ecommerce.domain.Perfume;
import com.gmail.merikbest2015.ecommerce.domain.Review;
import com.gmail.merikbest2015.ecommerce.repository.PerfumeRepository;
import com.gmail.merikbest2015.ecommerce.repository.ReviewRepository;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.bean.override.mockito.MockitoBean;
import org.springframework.test.context.junit.jupiter.SpringExtension;

@SpringBootTest
@ExtendWith(SpringExtension.class)
public class ReviewServiceImplTest {

  @Autowired private ReviewServiceImpl reviewService;

  @MockitoBean private PerfumeRepository perfumeRepository;

  @MockitoBean private ReviewRepository reviewRepository;

  @Test
  public void addReviewToPerfume() {
    List<Review> reviewList = new ArrayList<>();
    Review review = new Review();
    review.setRating(5);
    reviewList.add(review);
    Perfume perfume = new Perfume();
    perfume.setId(123L);
    perfume.setReviews(reviewList);

    when(perfumeRepository.findById(123L)).thenReturn(Optional.of(perfume));
    when(reviewRepository.save(review)).thenReturn(review);
    reviewService.addReviewToPerfume(review, 123L);
    assertEquals(123L, perfume.getId());
    assertNotNull(perfume.getReviews());
    verify(perfumeRepository, times(1)).findById(123L);
    verify(reviewRepository, times(1)).save(review);
  }
}
------[0m
[0m2025-06-16 21:23:19 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java[0m
[0m2025-06-16 21:23:19 [0;34m[DEBUG][0m   FILE_STATUS (UserServiceImlTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:19 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java, FILE_NAME: UserServiceImlTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:23:19 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:23:19 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:19 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java][0m
[0m2025-06-16 21:23:20 [0;34m[INFO][0m    - File:[0;37m[UserServiceImlTest.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:23:20 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.service.Impl;

import static com.gmail.merikbest2015.ecommerce.util.TestConstants.FIRST_NAME;
import static com.gmail.merikbest2015.ecommerce.util.TestConstants.USER_EMAIL;
import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

import com.gmail.merikbest2015.ecommerce.domain.Perfume;
import com.gmail.merikbest2015.ecommerce.domain.User;
import com.gmail.merikbest2015.ecommerce.enums.Role;
import com.gmail.merikbest2015.ecommerce.repository.PerfumeRepository;
import com.gmail.merikbest2015.ecommerce.repository.UserRepository;
import java.util.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageImpl;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.test.context.bean.override.mockito.MockitoBean;
import org.springframework.test.context.junit.jupiter.SpringExtension;

@SpringBootTest
@ExtendWith(SpringExtension.class)
public class UserServiceImlTest {

  @Autowired private UserServiceImpl userService;

  @MockitoBean private UserRepository userRepository;

  @MockitoBean private PerfumeRepository perfumeRepository;

  @Test
  public void findUserById() {
    User user = new User();
    user.setId(122L);

    when(userRepository.findById(122L)).thenReturn(java.util.Optional.of(user));
    userService.getUserById(122L);
    assertEquals(122L, user.getId());
    verify(userRepository, times(1)).findById(122L);
  }

  @Test
  public void getUserInfo() {
    User user = new User();
    user.setEmail(USER_EMAIL);

    when(userRepository.findByEmail(USER_EMAIL)).thenReturn(Optional.of(user));
    userService.getUserInfo(USER_EMAIL);
    assertEquals(USER_EMAIL, user.getEmail());
    verify(userRepository, times(1)).findByEmail(USER_EMAIL);
  }

  @Test
  public void findAllUsers() {
    Pageable pageable = PageRequest.of(0, 20);
    List<User> usersList = new ArrayList<>();
    usersList.add(new User());
    usersList.add(new User());
    userService.getAllUsers(pageable);
    Page<User> users = new PageImpl<>(usersList, pageable, 20);

    when(userRepository.findAllByOrderByIdAsc(pageable)).thenReturn(users);
    assertEquals(2, usersList.size());
    verify(userRepository, times(1)).findAllByOrderByIdAsc(pageable);
  }

  @Test
  public void getCart() {
    List<Long> perfumeIds = new ArrayList<>(Arrays.asList(2L, 4L));
    Perfume firstPerfume = new Perfume();
    firstPerfume.setId(2L);
    Perfume secondPerfume = new Perfume();
    secondPerfume.setId(4L);
    List<Perfume> perfumeList = new ArrayList<>(Arrays.asList(firstPerfume, secondPerfume));
    userService.getCart(perfumeIds);

    when(perfumeRepository.findByIdIn(perfumeIds)).thenReturn(perfumeList);
    assertEquals(2, perfumeList.size());
    assertEquals(2, perfumeIds.size());
    assertNotNull(perfumeList);
    verify(perfumeRepository, times(1)).findByIdIn(perfumeIds);
  }

  @Test
  public void loadUserByUsername() {
    User user = new User();
    user.setEmail(USER_EMAIL);
    user.setActive(true);
    user.setFirstName(FIRST_NAME);
    user.setRoles(Collections.singleton(Role.USER));

    when(userRepository.findByEmail(USER_EMAIL)).thenReturn(Optional.of(user));
    assertEquals(USER_EMAIL, user.getEmail());
    assertEquals(FIRST_NAME, user.getFirstName());
    assertTrue(user.isActive());
  }

  @Test
  public void updateUserInfo() {
    User user = new User();
    user.setEmail(USER_EMAIL);
    user.setFirstName(FIRST_NAME);

    when(userRepository.findByEmail(USER_EMAIL)).thenReturn(Optional.of(user));
    userService.updateUserInfo(USER_EMAIL, user);
    assertEquals(USER_EMAIL, user.getEmail());
    assertEquals(FIRST_NAME, user.getFirstName());
    verify(userRepository, times(1)).findByEmail(user.getEmail());
  }
}
------[0m
[0m2025-06-16 21:23:20 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.service.Impl;

import static com.gmail.merikbest2015.ecommerce.util.TestConstants.FIRST_NAME;
import static com.gmail.merikbest2015.ecommerce.util.TestConstants.USER_EMAIL;
import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

import com.gmail.merikbest2015.ecommerce.domain.Perfume;
import com.gmail.merikbest2015.ecommerce.domain.User;
import com.gmail.merikbest2015.ecommerce.enums.Role;
import com.gmail.merikbest2015.ecommerce.repository.PerfumeRepository;
import com.gmail.merikbest2015.ecommerce.repository.UserRepository;
import java.util.*;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageImpl;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.test.context.bean.override.mockito.MockitoBean;
import org.springframework.test.context.junit.jupiter.SpringExtension;

@SpringBootTest
@ExtendWith(SpringExtension.class)
public class UserServiceImlTest {

  @Autowired private UserServiceImpl userService;

  @MockitoBean private UserRepository userRepository;

  @MockitoBean private PerfumeRepository perfumeRepository;

  @Test
  public void findUserById() {
    User user = new User();
    user.setId(122L);

    when(userRepository.findById(122L)).thenReturn(java.util.Optional.of(user));
    userService.getUserById(122L);
    assertEquals(122L, user.getId());
    verify(userRepository, times(1)).findById(122L);
  }

  @Test
  public void getUserInfo() {
    User user = new User();
    user.setEmail(USER_EMAIL);

    when(userRepository.findByEmail(USER_EMAIL)).thenReturn(Optional.of(user));
    userService.getUserInfo(USER_EMAIL);
    assertEquals(USER_EMAIL, user.getEmail());
    verify(userRepository, times(1)).findByEmail(USER_EMAIL);
  }

  @Test
  public void findAllUsers() {
    Pageable pageable = PageRequest.of(0, 20);
    List<User> usersList = new ArrayList<>();
    usersList.add(new User());
    usersList.add(new User());
    userService.getAllUsers(pageable);
    Page<User> users = new PageImpl<>(usersList, pageable, 20);

    when(userRepository.findAllByOrderByIdAsc(pageable)).thenReturn(users);
    assertEquals(2, usersList.size());
    verify(userRepository, times(1)).findAllByOrderByIdAsc(pageable);
  }

  @Test
  public void getCart() {
    List<Long> perfumeIds = new ArrayList<>(Arrays.asList(2L, 4L));
    Perfume firstPerfume = new Perfume();
    firstPerfume.setId(2L);
    Perfume secondPerfume = new Perfume();
    secondPerfume.setId(4L);
    List<Perfume> perfumeList = new ArrayList<>(Arrays.asList(firstPerfume, secondPerfume));
    userService.getCart(perfumeIds);

    when(perfumeRepository.findByIdIn(perfumeIds)).thenReturn(perfumeList);
    assertEquals(2, perfumeList.size());
    assertEquals(2, perfumeIds.size());
    assertNotNull(perfumeList);
    verify(perfumeRepository, times(1)).findByIdIn(perfumeIds);
  }

  @Test
  public void loadUserByUsername() {
    User user = new User();
    user.setEmail(USER_EMAIL);
    user.setActive(true);
    user.setFirstName(FIRST_NAME);
    user.setRoles(Collections.singleton(Role.USER));

    when(userRepository.findByEmail(USER_EMAIL)).thenReturn(Optional.of(user));
    assertEquals(USER_EMAIL, user.getEmail());
    assertEquals(FIRST_NAME, user.getFirstName());
    assertTrue(user.isActive());
  }

  @Test
  public void updateUserInfo() {
    User user = new User();
    user.setEmail(USER_EMAIL);
    user.setFirstName(FIRST_NAME);

    when(userRepository.findByEmail(USER_EMAIL)).thenReturn(Optional.of(user));
    userService.updateUserInfo(USER_EMAIL, user);
    assertEquals(USER_EMAIL, user.getEmail());
    assertEquals(FIRST_NAME, user.getFirstName());
    verify(userRepository, times(1)).findByEmail(user.getEmail());
  }
}
------[0m
[0m2025-06-16 21:23:20 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java[0m
[0m2025-06-16 21:23:20 [0;34m[DEBUG][0m   FILE_STATUS (TestConstants.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:20 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java, FILE_NAME: TestConstants.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: google_java_format, TEST_CASE_DIRECTORY: .automation/test/google_java_format[0m
[0m2025-06-16 21:23:20 [0;34m[DEBUG][0m   GOOGLE_JAVA_FORMAT expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/google_java_format/[0m
[0m2025-06-16 21:23:20 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:20 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java][0m
[0m2025-06-16 21:23:20 [0;34m[INFO][0m    - File:[0;37m[TestConstants.java][0;34m was linted with [0;37m[google-java-format][0;34m successfully[0m
[0m2025-06-16 21:23:20 [0;34m[INFO][0m      - Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.util;

public class TestConstants {

  public static final Integer USER_ID = 122;
  public static final String USER_EMAIL = "test123@test.com";
  public static final String USER_PASSWORD = "admin123";
  public static final String ROLE_USER = "USER";

  public static final String USER_PASSWORD_RESET_CODE = "3f9bcdb0-2241-4c34-803e-598b497d571f";
  public static final String USER_ACTIVATION_CODE = "8e97dc37-2cf5-47e2-98e0";

  public static final String USER2_EMAIL = "helloworld@test.com";
  public static final String USER2_NAME = "John2";

  public static final String EMAIL_FAILURE = "1t2e3st123@test.com";
  public static final String ADMIN_EMAIL = "admin@gmail.com";

  public static final Double TOTAL_PRICE = 56.0;
  public static final String FIRST_NAME = "John";
  public static final String LAST_NAME = "Doe";
  public static final String CITY = "New York";
  public static final String ADDRESS = "Wall Street 1";
  public static final String ORDER_EMAIL = "test123@test.com";
  public static final String PHONE_NUMBER = "1234567890";
  public static final Integer POST_INDEX = 1234567890;

  public static final String PERFUMER_CREED = "Creed";
  public static final String PERFUMER_CHANEL = "Chanel";
  public static final String PERFUME_TITLE = "Chanel N5";
  public static final Integer YEAR = 1921;
  public static final String COUNTRY = "France";
  public static final String PERFUME_GENDER = "female";
  public static final String FRAGRANCE_TOP_NOTES = "Aldehydes, Bergamot, Neroli";
  public static final String FRAGRANCE_MIDDLE_NOTES = "Iris, Grasse jasmine";
  public static final String FRAGRANCE_BASE_NOTES = "Amber, Sandalwood, Vanilla";
  public static final Integer PRICE = 192;
  public static final String VOLUME = "200";
  public static final String TYPE = "Eau de parfum";

  public static final String FILE_NAME = "Chanel N5.jpg";
  public static final String FILE_PATH = "src/test/resources/empty.jpg";

  public static final String GRAPHQL_QUERY_USERS =
      "{ users { id email password firstName lastName city address phoneNumber postIndex"
          + " activationCode passwordResetCode active provider roles } }";
  public static final String GRAPHQL_QUERY_USER =
      "{ user(id: 122) { id email password firstName lastName city address phoneNumber postIndex"
          + " activationCode passwordResetCode active provider roles } }";
  public static final String GRAPHQL_QUERY_ORDERS =
      "{ orders { id totalPrice date firstName lastName city address email phoneNumber postIndex"
          + " orderItems { id amount quantity perfume { id perfumeTitle perfumer price filename } }"
          + " } }";
  public static final String GRAPHQL_QUERY_ORDERS_BY_EMAIL =
      "{ ordersByEmail(email: \"test123@test.com\") { id totalPrice date firstName lastName city"
          + " address email phoneNumber postIndex orderItems { id amount quantity perfume { id"
          + " perfumeTitle perfumer price filename } } } }";
  public static final String GRAPHQL_QUERY_PERFUMES_BY_IDS =
      "{ perfumesIds(ids: [3,4,5]) { id perfumeTitle perfumer price } }";
  public static final String GRAPHQL_QUERY_PERFUMES =
      "{ perfumes { id perfumeTitle perfumer price filename } }";
  public static final String GRAPHQL_QUERY_PERFUME =
      "{ perfume(id: 1) { id perfumeTitle perfumer price } }";
}
------[0m
[0m2025-06-16 21:23:20 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
package com.gmail.merikbest2015.ecommerce.util;

public class TestConstants {

  public static final Integer USER_ID = 122;
  public static final String USER_EMAIL = "test123@test.com";
  public static final String USER_PASSWORD = "admin123";
  public static final String ROLE_USER = "USER";

  public static final String USER_PASSWORD_RESET_CODE = "3f9bcdb0-2241-4c34-803e-598b497d571f";
  public static final String USER_ACTIVATION_CODE = "8e97dc37-2cf5-47e2-98e0";

  public static final String USER2_EMAIL = "helloworld@test.com";
  public static final String USER2_NAME = "John2";

  public static final String EMAIL_FAILURE = "1t2e3st123@test.com";
  public static final String ADMIN_EMAIL = "admin@gmail.com";

  public static final Double TOTAL_PRICE = 56.0;
  public static final String FIRST_NAME = "John";
  public static final String LAST_NAME = "Doe";
  public static final String CITY = "New York";
  public static final String ADDRESS = "Wall Street 1";
  public static final String ORDER_EMAIL = "test123@test.com";
  public static final String PHONE_NUMBER = "1234567890";
  public static final Integer POST_INDEX = 1234567890;

  public static final String PERFUMER_CREED = "Creed";
  public static final String PERFUMER_CHANEL = "Chanel";
  public static final String PERFUME_TITLE = "Chanel N5";
  public static final Integer YEAR = 1921;
  public static final String COUNTRY = "France";
  public static final String PERFUME_GENDER = "female";
  public static final String FRAGRANCE_TOP_NOTES = "Aldehydes, Bergamot, Neroli";
  public static final String FRAGRANCE_MIDDLE_NOTES = "Iris, Grasse jasmine";
  public static final String FRAGRANCE_BASE_NOTES = "Amber, Sandalwood, Vanilla";
  public static final Integer PRICE = 192;
  public static final String VOLUME = "200";
  public static final String TYPE = "Eau de parfum";

  public static final String FILE_NAME = "Chanel N5.jpg";
  public static final String FILE_PATH = "src/test/resources/empty.jpg";

  public static final String GRAPHQL_QUERY_USERS =
      "{ users { id email password firstName lastName city address phoneNumber postIndex"
          + " activationCode passwordResetCode active provider roles } }";
  public static final String GRAPHQL_QUERY_USER =
      "{ user(id: 122) { id email password firstName lastName city address phoneNumber postIndex"
          + " activationCode passwordResetCode active provider roles } }";
  public static final String GRAPHQL_QUERY_ORDERS =
      "{ orders { id totalPrice date firstName lastName city address email phoneNumber postIndex"
          + " orderItems { id amount quantity perfume { id perfumeTitle perfumer price filename } }"
          + " } }";
  public static final String GRAPHQL_QUERY_ORDERS_BY_EMAIL =
      "{ ordersByEmail(email: \"test123@test.com\") { id totalPrice date firstName lastName city"
          + " address email phoneNumber postIndex orderItems { id amount quantity perfume { id"
          + " perfumeTitle perfumer price filename } } } }";
  public static final String GRAPHQL_QUERY_PERFUMES_BY_IDS =
      "{ perfumesIds(ids: [3,4,5]) { id perfumeTitle perfumer price } }";
  public static final String GRAPHQL_QUERY_PERFUMES =
      "{ perfumes { id perfumeTitle perfumer price filename } }";
  public static final String GRAPHQL_QUERY_PERFUME =
      "{ perfume(id: 1) { id perfumeTitle perfumer price } }";
}
------[0m
[0m2025-06-16 21:23:20 [0;34m[DEBUG][0m   Running linter for the GROOVY language...[0m
[0m2025-06-16 21:23:20 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_GROOVY...[0m
[0m2025-06-16 21:23:20 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:23:20 [0;34m[DEBUG][0m   Setting LINTER_NAME to npm-groovy-lint...[0m
[0m2025-06-16 21:23:20 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to npm-groovy-lint -c /action/lib/.automation/.groovylintrc.json --failon warning --no-insight...[0m
[0m2025-06-16 21:23:20 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_GROOVY...[0m
[0m2025-06-16 21:23:20 [0;34m[DEBUG][0m   FILE_ARRAY_GROOVY file array contents: [0m
[0m2025-06-16 21:23:20 [0;34m[DEBUG][0m   Invoking npm-groovy-lint linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:23:20 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[GROOVY][0m
[0m2025-06-16 21:23:20 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:23:20 [0;34m[DEBUG][0m   Running linter for the HTML language...[0m
[0m2025-06-16 21:23:20 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_HTML...[0m
[0m2025-06-16 21:23:20 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:23:20 [0;34m[DEBUG][0m   Setting LINTER_NAME to htmlhint...[0m
[0m2025-06-16 21:23:20 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to htmlhint --config /action/lib/.automation/.htmlhintrc...[0m
[0m2025-06-16 21:23:20 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_HTML...[0m
[0m2025-06-16 21:23:20 [0;34m[DEBUG][0m   FILE_ARRAY_HTML file array contents: /github/workspace/src/main/resources/mail-templates/order-template.html /github/workspace/src/main/resources/mail-templates/password-reset-template.html /github/workspace/src/main/resources/mail-templates/registration-template.html[0m
[0m2025-06-16 21:23:20 [0;34m[DEBUG][0m   Invoking htmlhint linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:23:20 [0;34m[DEBUG][0m   SKIP_FLAG: 0, list of files to lint: /github/workspace/src/main/resources/mail-templates/order-template.html /github/workspace/src/main/resources/mail-templates/password-reset-template.html /github/workspace/src/main/resources/mail-templates/registration-template.html[0m
[0m2025-06-16 21:23:20 [0;34m[DEBUG][0m   Workspace path: /github/workspace[0m
[0m2025-06-16 21:23:20 [0;34m[INFO][0m   [0m
[0m2025-06-16 21:23:20 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:23:20 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:23:20 [0;34m[DEBUG][0m   Running LintCodebase. FILE_TYPE: HTML. Linter name: htmlhint, linter command: htmlhint --config /action/lib/.automation/.htmlhintrc, TEST_CASE_RUN: false, FILTER_REGEX_INCLUDE: , FILTER_REGEX_EXCLUDE: .*/securityReports/.* files to lint: /github/workspace/src/main/resources/mail-templates/order-template.html /github/workspace/src/main/resources/mail-templates/password-reset-template.html /github/workspace/src/main/resources/mail-templates/registration-template.html[0m
[0m2025-06-16 21:23:20 [0;34m[INFO][0m   Linting [HTML] files...[0m
[0m2025-06-16 21:23:20 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:23:20 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:23:20 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/resources/mail-templates/order-template.html[0m
[0m2025-06-16 21:23:20 [0;34m[DEBUG][0m   FILE_STATUS (order-template.html) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:20 [0;34m[DEBUG][0m   File: /github/workspace/src/main/resources/mail-templates/order-template.html, FILE_NAME: order-template.html, DIR_NAME:/github/workspace/src/main/resources/mail-templates, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: html, TEST_CASE_DIRECTORY: .automation/test/html[0m
[0m2025-06-16 21:23:20 [0;34m[DEBUG][0m   HTML expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/html/[0m
[0m2025-06-16 21:23:20 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:20 [0;34m[INFO][0m   File:[/github/workspace/src/main/resources/mail-templates/order-template.html][0m
[0m2025-06-16 21:23:20 [0;34m[DEBUG][0m   Found errors. Error code: 1, File type: HTML, Error on missing exec bit: false[0m
[0m2025-06-16 21:23:20 [0;31m[ERROR][0m   Found errors in [htmlhint] linter![0m
[0m2025-06-16 21:23:20 [0;31m[ERROR][0m   Error code: 1. Command output:[0m
------

   Config loaded: /action/lib/.automation/.htmlhintrc

   /github/workspace/src/main/resources/mail-templates/order-template.html
[37m      L29 |[90m</head>[39m
[37m           ^ [31m<title> must be present in <head> tag. (title-require)[39m
[37m      L40 |[90m                        <img src="https://i.ibb.co/6YNPHCd/LOGO3.jpg" style="width: 180px; border-rad...[39m
[37m                                       ^ [31mAn alt attribute must be present on <img> elements. (alt-require)[39m
[37m      L63 |[90m                            <img style="width: 100%; height: auto"[39m
[37m                                           ^ [31mAn alt attribute must be present on <img> elements. (alt-require)[39m

Scanned 1 files, found 3 errors in 1 files (18 ms)
------[0m
[0m2025-06-16 21:23:20 [0;34m[DEBUG][0m   Error code: 1. Command output:[0m
------

   Config loaded: /action/lib/.automation/.htmlhintrc

   /github/workspace/src/main/resources/mail-templates/order-template.html
[37m      L29 |[90m</head>[39m
[37m           ^ [31m<title> must be present in <head> tag. (title-require)[39m
[37m      L40 |[90m                        <img src="https://i.ibb.co/6YNPHCd/LOGO3.jpg" style="width: 180px; border-rad...[39m
[37m                                       ^ [31mAn alt attribute must be present on <img> elements. (alt-require)[39m
[37m      L63 |[90m                            <img style="width: 100%; height: auto"[39m
[37m                                           ^ [31mAn alt attribute must be present on <img> elements. (alt-require)[39m

Scanned 1 files, found 3 errors in 1 files (18 ms)
------[0m
[0m2025-06-16 21:23:20 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/resources/mail-templates/password-reset-template.html[0m
[0m2025-06-16 21:23:20 [0;34m[DEBUG][0m   FILE_STATUS (password-reset-template.html) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:20 [0;34m[DEBUG][0m   File: /github/workspace/src/main/resources/mail-templates/password-reset-template.html, FILE_NAME: password-reset-template.html, DIR_NAME:/github/workspace/src/main/resources/mail-templates, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: html, TEST_CASE_DIRECTORY: .automation/test/html[0m
[0m2025-06-16 21:23:20 [0;34m[DEBUG][0m   HTML expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/html/[0m
[0m2025-06-16 21:23:20 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:20 [0;34m[INFO][0m   File:[/github/workspace/src/main/resources/mail-templates/password-reset-template.html][0m
[0m2025-06-16 21:23:21 [0;34m[DEBUG][0m   Found errors. Error code: 1, File type: HTML, Error on missing exec bit: false[0m
[0m2025-06-16 21:23:21 [0;31m[ERROR][0m   Found errors in [htmlhint] linter![0m
[0m2025-06-16 21:23:21 [0;31m[ERROR][0m   Error code: 1. Command output:[0m
------

   Config loaded: /action/lib/.automation/.htmlhintrc

   /github/workspace/src/main/resources/mail-templates/password-reset-template.html
[37m      L14 |[90m</head>[39m
[37m           ^ [31m<title> must be present in <head> tag. (title-require)[39m

Scanned 1 files, found 1 errors in 1 files (15 ms)
------[0m
[0m2025-06-16 21:23:21 [0;34m[DEBUG][0m   Error code: 1. Command output:[0m
------

   Config loaded: /action/lib/.automation/.htmlhintrc

   /github/workspace/src/main/resources/mail-templates/password-reset-template.html
[37m      L14 |[90m</head>[39m
[37m           ^ [31m<title> must be present in <head> tag. (title-require)[39m

Scanned 1 files, found 1 errors in 1 files (15 ms)
------[0m
[0m2025-06-16 21:23:21 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/resources/mail-templates/registration-template.html[0m
[0m2025-06-16 21:23:21 [0;34m[DEBUG][0m   FILE_STATUS (registration-template.html) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:21 [0;34m[DEBUG][0m   File: /github/workspace/src/main/resources/mail-templates/registration-template.html, FILE_NAME: registration-template.html, DIR_NAME:/github/workspace/src/main/resources/mail-templates, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: html, TEST_CASE_DIRECTORY: .automation/test/html[0m
[0m2025-06-16 21:23:21 [0;34m[DEBUG][0m   HTML expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/html/[0m
[0m2025-06-16 21:23:21 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:21 [0;34m[INFO][0m   File:[/github/workspace/src/main/resources/mail-templates/registration-template.html][0m
[0m2025-06-16 21:23:21 [0;34m[DEBUG][0m   Found errors. Error code: 1, File type: HTML, Error on missing exec bit: false[0m
[0m2025-06-16 21:23:21 [0;31m[ERROR][0m   Found errors in [htmlhint] linter![0m
[0m2025-06-16 21:23:21 [0;31m[ERROR][0m   Error code: 1. Command output:[0m
------

   Config loaded: /action/lib/.automation/.htmlhintrc

   /github/workspace/src/main/resources/mail-templates/registration-template.html
[37m      L14 |[90m</head>[39m
[37m           ^ [31m<title> must be present in <head> tag. (title-require)[39m

Scanned 1 files, found 1 errors in 1 files (16 ms)
------[0m
[0m2025-06-16 21:23:21 [0;34m[DEBUG][0m   Error code: 1. Command output:[0m
------

   Config loaded: /action/lib/.automation/.htmlhintrc

   /github/workspace/src/main/resources/mail-templates/registration-template.html
[37m      L14 |[90m</head>[39m
[37m           ^ [31m<title> must be present in <head> tag. (title-require)[39m

Scanned 1 files, found 1 errors in 1 files (16 ms)
------[0m
[0m2025-06-16 21:23:21 [0;34m[DEBUG][0m   Running linter for the JAVA language...[0m
[0m2025-06-16 21:23:21 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_JAVA...[0m
[0m2025-06-16 21:23:21 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:23:21 [0;34m[DEBUG][0m   Setting LINTER_NAME to checkstyle...[0m
[0m2025-06-16 21:23:21 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to java -jar /usr/bin/checkstyle -c /action/lib/.automation/sun_checks.xml...[0m
[0m2025-06-16 21:23:21 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_JAVA...[0m
[0m2025-06-16 21:23:21 [0;34m[DEBUG][0m   FILE_ARRAY_JAVA file array contents: /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/EcommerceApplication.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect/ControllerAspect.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/MvcConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/SwaggerConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSocketConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/GraphQLRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/HeaderResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/PasswordResetRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderItemResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/FullPerfumeResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeSearchRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/SearchTypeRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/BaseUserResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UpdateUserRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UserResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/AuthProvider.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/Role.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/SearchPerfume.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiRequestException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/CaptchaException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/EmailException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/InputFieldException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordConfirmationException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderItemRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/ReviewRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/UserRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtAuthenticationException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtConfigurer.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserDetailsServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/CustomOAuth2UserService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/FacebookOAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GithubOAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GoogleOAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2SuccessHandler.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserFactory.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/AuthenticationService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/OrderService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/ReviewService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/UserService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/EcommerceApplicationTests.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapperTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapperTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java[0m
[0m2025-06-16 21:23:21 [0;34m[DEBUG][0m   Invoking checkstyle linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:23:21 [0;34m[DEBUG][0m   SKIP_FLAG: 0, list of files to lint: /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/EcommerceApplication.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect/ControllerAspect.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/MvcConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/SwaggerConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSocketConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/GraphQLRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/HeaderResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/PasswordResetRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderItemResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/FullPerfumeResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeSearchRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/SearchTypeRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/BaseUserResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UpdateUserRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UserResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/AuthProvider.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/Role.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/SearchPerfume.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiRequestException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/CaptchaException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/EmailException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/InputFieldException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordConfirmationException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderItemRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/ReviewRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/UserRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtAuthenticationException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtConfigurer.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserDetailsServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/CustomOAuth2UserService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/FacebookOAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GithubOAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GoogleOAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2SuccessHandler.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserFactory.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/AuthenticationService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/OrderService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/ReviewService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/UserService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/EcommerceApplicationTests.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapperTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapperTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java[0m
[0m2025-06-16 21:23:21 [0;34m[DEBUG][0m   Workspace path: /github/workspace[0m
[0m2025-06-16 21:23:21 [0;34m[INFO][0m   [0m
[0m2025-06-16 21:23:21 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:23:21 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:23:21 [0;34m[DEBUG][0m   Running LintCodebase. FILE_TYPE: JAVA. Linter name: checkstyle, linter command: java -jar /usr/bin/checkstyle -c /action/lib/.automation/sun_checks.xml, TEST_CASE_RUN: false, FILTER_REGEX_INCLUDE: , FILTER_REGEX_EXCLUDE: .*/securityReports/.* files to lint: /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/EcommerceApplication.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect/ControllerAspect.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/MvcConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/SwaggerConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSocketConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/GraphQLRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/HeaderResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/PasswordResetRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderItemResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/FullPerfumeResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeSearchRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/SearchTypeRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/BaseUserResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UpdateUserRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UserResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/AuthProvider.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/Role.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/SearchPerfume.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiRequestException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/CaptchaException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/EmailException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/InputFieldException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordConfirmationException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderItemRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/ReviewRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/UserRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtAuthenticationException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtConfigurer.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserDetailsServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/CustomOAuth2UserService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/FacebookOAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GithubOAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GoogleOAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2SuccessHandler.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserFactory.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/AuthenticationService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/OrderService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/ReviewService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/UserService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/EcommerceApplicationTests.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapperTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapperTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java[0m
[0m2025-06-16 21:23:21 [0;34m[INFO][0m   Linting [JAVA] files...[0m
[0m2025-06-16 21:23:21 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:23:21 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:23:21 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java[0m
[0m2025-06-16 21:23:21 [0;34m[DEBUG][0m   FILE_STATUS (MavenWrapperDownloader.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:21 [0;34m[DEBUG][0m   File: /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java, FILE_NAME: MavenWrapperDownloader.java, DIR_NAME:/github/workspace/.mvn/wrapper, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:23:21 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:23:21 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:21 [0;34m[INFO][0m   File:[/github/workspace/.mvn/wrapper/MavenWrapperDownloader.java][0m
[0m2025-06-16 21:23:22 [0;34m[DEBUG][0m   Found errors. Error code: 26, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:23:22 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:23:22 [0;31m[ERROR][0m   Error code: 26. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:17:16: Using the '.*' form of import should be avoided - java.net.*. [AvoidStarImport]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:18:15: Using the '.*' form of import should be avoided - java.io.*. [AvoidStarImport]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:19:25: Using the '.*' form of import should be avoided - java.nio.channels.*. [AvoidStarImport]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:22:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:24:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:26: Line is longer than 80 characters (found 91). [LineLength]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:28: Line is longer than 80 characters (found 118). [LineLength]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:32: Line is longer than 80 characters (found 95). [LineLength]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:45: Line is longer than 80 characters (found 102). [LineLength]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:49:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:49:29: Parameter args should be final. [FinalParameters]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:49:40: Array brackets at illegal position. [ArrayTypeStyle]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:52: Line is longer than 80 characters (found 89). [LineLength]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:54: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:56: Line is longer than 80 characters (found 95). [LineLength]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:61: Line is longer than 80 characters (found 100). [LineLength]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:63: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:64: Line is longer than 80 characters (found 89). [LineLength]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:66: Line is longer than 80 characters (found 94). [LineLength]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:79: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:83: Line is longer than 80 characters (found 116). [LineLength]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:98: Line is longer than 80 characters (found 98). [LineLength]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:98:45: Parameter urlString should be final. [FinalParameters]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:98:63: Parameter destination should be final. [FinalParameters]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:99: Line is longer than 80 characters (found 95). [LineLength]
Audit done.
Checkstyle ends with 26 errors.
------[0m
[0m2025-06-16 21:23:22 [0;34m[DEBUG][0m   Error code: 26. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:17:16: Using the '.*' form of import should be avoided - java.net.*. [AvoidStarImport]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:18:15: Using the '.*' form of import should be avoided - java.io.*. [AvoidStarImport]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:19:25: Using the '.*' form of import should be avoided - java.nio.channels.*. [AvoidStarImport]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:22:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:24:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:26: Line is longer than 80 characters (found 91). [LineLength]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:28: Line is longer than 80 characters (found 118). [LineLength]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:32: Line is longer than 80 characters (found 95). [LineLength]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:45: Line is longer than 80 characters (found 102). [LineLength]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:49:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:49:29: Parameter args should be final. [FinalParameters]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:49:40: Array brackets at illegal position. [ArrayTypeStyle]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:52: Line is longer than 80 characters (found 89). [LineLength]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:54: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:56: Line is longer than 80 characters (found 95). [LineLength]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:61: Line is longer than 80 characters (found 100). [LineLength]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:63: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:64: Line is longer than 80 characters (found 89). [LineLength]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:66: Line is longer than 80 characters (found 94). [LineLength]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:79: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:83: Line is longer than 80 characters (found 116). [LineLength]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:98: Line is longer than 80 characters (found 98). [LineLength]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:98:45: Parameter urlString should be final. [FinalParameters]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:98:63: Parameter destination should be final. [FinalParameters]
[ERROR] /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java:99: Line is longer than 80 characters (found 95). [LineLength]
Audit done.
Checkstyle ends with 26 errors.
------[0m
[0m2025-06-16 21:23:22 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/EcommerceApplication.java[0m
[0m2025-06-16 21:23:22 [0;34m[DEBUG][0m   FILE_STATUS (EcommerceApplication.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:22 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/EcommerceApplication.java, FILE_NAME: EcommerceApplication.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:23:22 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:23:22 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:22 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/EcommerceApplication.java][0m
[0m2025-06-16 21:23:23 [0;34m[DEBUG][0m   Found errors. Error code: 4, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:23:23 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:23:23 [0;31m[ERROR][0m   Error code: 4. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/EcommerceApplication.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/EcommerceApplication.java:6:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/EcommerceApplication.java:9:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/EcommerceApplication.java:9:29: Parameter args should be final. [FinalParameters]
Audit done.
Checkstyle ends with 4 errors.
------[0m
[0m2025-06-16 21:23:23 [0;34m[DEBUG][0m   Error code: 4. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/EcommerceApplication.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/EcommerceApplication.java:6:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/EcommerceApplication.java:9:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/EcommerceApplication.java:9:29: Parameter args should be final. [FinalParameters]
Audit done.
Checkstyle ends with 4 errors.
------[0m
[0m2025-06-16 21:23:23 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect/ControllerAspect.java[0m
[0m2025-06-16 21:23:23 [0;34m[DEBUG][0m   FILE_STATUS (ControllerAspect.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:23 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect/ControllerAspect.java, FILE_NAME: ControllerAspect.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:23:23 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:23:23 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:23 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect/ControllerAspect.java][0m
[0m2025-06-16 21:23:24 [0;34m[DEBUG][0m   Found errors. Error code: 10, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:23:24 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:23:24 [0;31m[ERROR][0m   Error code: 10. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect/ControllerAspect.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect/ControllerAspect.java:15: Line is longer than 80 characters (found 90). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect/ControllerAspect.java:15:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect/ControllerAspect.java:19:5: Class 'ControllerAspect' looks like designed for extension (can be subclassed), but the method 'loggingAround' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ControllerAspect' final or making the method 'loggingAround' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect/ControllerAspect.java:19:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect/ControllerAspect.java:20: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect/ControllerAspect.java:20:33: Parameter joinPoint should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect/ControllerAspect.java:22: Line is longer than 80 characters (found 96). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect/ControllerAspect.java:23: Line is longer than 80 characters (found 87). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect/ControllerAspect.java:30: Line is longer than 80 characters (found 88). [LineLength]
Audit done.
Checkstyle ends with 10 errors.
------[0m
[0m2025-06-16 21:23:24 [0;34m[DEBUG][0m   Error code: 10. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect/ControllerAspect.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect/ControllerAspect.java:15: Line is longer than 80 characters (found 90). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect/ControllerAspect.java:15:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect/ControllerAspect.java:19:5: Class 'ControllerAspect' looks like designed for extension (can be subclassed), but the method 'loggingAround' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ControllerAspect' final or making the method 'loggingAround' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect/ControllerAspect.java:19:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect/ControllerAspect.java:20: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect/ControllerAspect.java:20:33: Parameter joinPoint should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect/ControllerAspect.java:22: Line is longer than 80 characters (found 96). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect/ControllerAspect.java:23: Line is longer than 80 characters (found 87). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect/ControllerAspect.java:30: Line is longer than 80 characters (found 88). [LineLength]
Audit done.
Checkstyle ends with 10 errors.
------[0m
[0m2025-06-16 21:23:24 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java[0m
[0m2025-06-16 21:23:24 [0;34m[DEBUG][0m   FILE_STATUS (ApplicationConfiguration.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:24 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java, FILE_NAME: ApplicationConfiguration.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:23:24 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:23:24 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:24 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java][0m
[0m2025-06-16 21:23:25 [0;34m[DEBUG][0m   Found errors. Error code: 14, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:23:25 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:23:25 [0;31m[ERROR][0m   Error code: 14. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java:19:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java:22:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java:25:5: Class 'ApplicationConfiguration' looks like designed for extension (can be subclassed), but the method 'getPasswordEncoder' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ApplicationConfiguration' final or making the method 'getPasswordEncoder' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java:25:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java:27:42: '8' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java:30:5: Class 'ApplicationConfiguration' looks like designed for extension (can be subclassed), but the method 's3Client' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ApplicationConfiguration' final or making the method 's3Client' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java:30:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java:32: Line is longer than 80 characters (found 132). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java:34: Line is longer than 80 characters (found 115). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java:39:5: Class 'ApplicationConfiguration' looks like designed for extension (can be subclassed), but the method 'modelMapper' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ApplicationConfiguration' final or making the method 'modelMapper' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java:39:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java:47:5: Class 'ApplicationConfiguration' looks like designed for extension (can be subclassed), but the method 'projectionFactory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ApplicationConfiguration' final or making the method 'projectionFactory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java:47:5: Missing a Javadoc comment. [MissingJavadocMethod]
Audit done.
Checkstyle ends with 14 errors.
------[0m
[0m2025-06-16 21:23:25 [0;34m[DEBUG][0m   Error code: 14. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java:19:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java:22:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java:25:5: Class 'ApplicationConfiguration' looks like designed for extension (can be subclassed), but the method 'getPasswordEncoder' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ApplicationConfiguration' final or making the method 'getPasswordEncoder' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java:25:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java:27:42: '8' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java:30:5: Class 'ApplicationConfiguration' looks like designed for extension (can be subclassed), but the method 's3Client' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ApplicationConfiguration' final or making the method 's3Client' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java:30:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java:32: Line is longer than 80 characters (found 132). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java:34: Line is longer than 80 characters (found 115). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java:39:5: Class 'ApplicationConfiguration' looks like designed for extension (can be subclassed), but the method 'modelMapper' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ApplicationConfiguration' final or making the method 'modelMapper' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java:39:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java:47:5: Class 'ApplicationConfiguration' looks like designed for extension (can be subclassed), but the method 'projectionFactory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ApplicationConfiguration' final or making the method 'projectionFactory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java:47:5: Missing a Javadoc comment. [MissingJavadocMethod]
Audit done.
Checkstyle ends with 14 errors.
------[0m
[0m2025-06-16 21:23:25 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java[0m
[0m2025-06-16 21:23:25 [0;34m[DEBUG][0m   FILE_STATUS (EmailConfiguration.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:25 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java, FILE_NAME: EmailConfiguration.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:23:25 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:23:25 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:25 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java][0m
[0m2025-06-16 21:23:26 [0;34m[DEBUG][0m   Found errors. Error code: 16, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:23:26 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:23:26 [0;31m[ERROR][0m   Error code: 16. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java:17:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java:20:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java:23:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java:26:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java:29:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java:32:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java:35:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java:38:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java:41:5: Class 'EmailConfiguration' looks like designed for extension (can be subclassed), but the method 'getMailSender' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'EmailConfiguration' final or making the method 'getMailSender' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java:41:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java:56:5: Class 'EmailConfiguration' looks like designed for extension (can be subclassed), but the method 'thymeleafTemplateResolver' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'EmailConfiguration' final or making the method 'thymeleafTemplateResolver' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java:56:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java:58: Line is longer than 80 characters (found 89). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java:66:5: Class 'EmailConfiguration' looks like designed for extension (can be subclassed), but the method 'thymeleafTemplateEngine' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'EmailConfiguration' final or making the method 'thymeleafTemplateEngine' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java:66:5: Missing a Javadoc comment. [MissingJavadocMethod]
Audit done.
Checkstyle ends with 16 errors.
------[0m
[0m2025-06-16 21:23:26 [0;34m[DEBUG][0m   Error code: 16. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java:17:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java:20:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java:23:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java:26:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java:29:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java:32:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java:35:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java:38:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java:41:5: Class 'EmailConfiguration' looks like designed for extension (can be subclassed), but the method 'getMailSender' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'EmailConfiguration' final or making the method 'getMailSender' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java:41:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java:56:5: Class 'EmailConfiguration' looks like designed for extension (can be subclassed), but the method 'thymeleafTemplateResolver' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'EmailConfiguration' final or making the method 'thymeleafTemplateResolver' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java:56:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java:58: Line is longer than 80 characters (found 89). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java:66:5: Class 'EmailConfiguration' looks like designed for extension (can be subclassed), but the method 'thymeleafTemplateEngine' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'EmailConfiguration' final or making the method 'thymeleafTemplateEngine' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java:66:5: Missing a Javadoc comment. [MissingJavadocMethod]
Audit done.
Checkstyle ends with 16 errors.
------[0m
[0m2025-06-16 21:23:26 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/MvcConfiguration.java[0m
[0m2025-06-16 21:23:26 [0;34m[DEBUG][0m   FILE_STATUS (MvcConfiguration.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:26 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/MvcConfiguration.java, FILE_NAME: MvcConfiguration.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:23:26 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:23:26 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:26 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/MvcConfiguration.java][0m
[0m2025-06-16 21:23:27 [0;34m[DEBUG][0m   Found errors. Error code: 9, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:23:27 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:23:27 [0;31m[ERROR][0m   Error code: 9. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/MvcConfiguration.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/MvcConfiguration.java:14:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/MvcConfiguration.java:17:5: Class 'MvcConfiguration' looks like designed for extension (can be subclassed), but the method 'getRestTemplate' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MvcConfiguration' final or making the method 'getRestTemplate' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/MvcConfiguration.java:17:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/MvcConfiguration.java:22:5: Class 'MvcConfiguration' looks like designed for extension (can be subclassed), but the method 'addResourceHandlers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MvcConfiguration' final or making the method 'addResourceHandlers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/MvcConfiguration.java:23:37: Parameter registry should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/MvcConfiguration.java:28:5: Class 'MvcConfiguration' looks like designed for extension (can be subclassed), but the method 'addCorsMappings' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MvcConfiguration' final or making the method 'addCorsMappings' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/MvcConfiguration.java:29:33: Parameter registry should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/MvcConfiguration.java:32: Line is longer than 80 characters (found 91). [LineLength]
Audit done.
Checkstyle ends with 9 errors.
------[0m
[0m2025-06-16 21:23:27 [0;34m[DEBUG][0m   Error code: 9. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/MvcConfiguration.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/MvcConfiguration.java:14:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/MvcConfiguration.java:17:5: Class 'MvcConfiguration' looks like designed for extension (can be subclassed), but the method 'getRestTemplate' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MvcConfiguration' final or making the method 'getRestTemplate' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/MvcConfiguration.java:17:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/MvcConfiguration.java:22:5: Class 'MvcConfiguration' looks like designed for extension (can be subclassed), but the method 'addResourceHandlers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MvcConfiguration' final or making the method 'addResourceHandlers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/MvcConfiguration.java:23:37: Parameter registry should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/MvcConfiguration.java:28:5: Class 'MvcConfiguration' looks like designed for extension (can be subclassed), but the method 'addCorsMappings' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MvcConfiguration' final or making the method 'addCorsMappings' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/MvcConfiguration.java:29:33: Parameter registry should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/MvcConfiguration.java:32: Line is longer than 80 characters (found 91). [LineLength]
Audit done.
Checkstyle ends with 9 errors.
------[0m
[0m2025-06-16 21:23:27 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/SwaggerConfiguration.java[0m
[0m2025-06-16 21:23:27 [0;34m[DEBUG][0m   FILE_STATUS (SwaggerConfiguration.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:27 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/SwaggerConfiguration.java, FILE_NAME: SwaggerConfiguration.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:23:27 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:23:27 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:27 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/SwaggerConfiguration.java][0m
[0m2025-06-16 21:23:28 [0;34m[DEBUG][0m   Found errors. Error code: 6, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:23:28 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:23:28 [0;31m[ERROR][0m   Error code: 6. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/SwaggerConfiguration.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/SwaggerConfiguration.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/SwaggerConfiguration.java:16:5: Class 'SwaggerConfiguration' looks like designed for extension (can be subclassed), but the method 'customOpenAPI' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SwaggerConfiguration' final or making the method 'customOpenAPI' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/SwaggerConfiguration.java:16:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/SwaggerConfiguration.java:31: Line is longer than 80 characters (found 109). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/SwaggerConfiguration.java:32: Line is longer than 80 characters (found 103). [LineLength]
Audit done.
Checkstyle ends with 6 errors.
------[0m
[0m2025-06-16 21:23:28 [0;34m[DEBUG][0m   Error code: 6. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/SwaggerConfiguration.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/SwaggerConfiguration.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/SwaggerConfiguration.java:16:5: Class 'SwaggerConfiguration' looks like designed for extension (can be subclassed), but the method 'customOpenAPI' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SwaggerConfiguration' final or making the method 'customOpenAPI' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/SwaggerConfiguration.java:16:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/SwaggerConfiguration.java:31: Line is longer than 80 characters (found 109). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/SwaggerConfiguration.java:32: Line is longer than 80 characters (found 103). [LineLength]
Audit done.
Checkstyle ends with 6 errors.
------[0m
[0m2025-06-16 21:23:28 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java[0m
[0m2025-06-16 21:23:28 [0;34m[DEBUG][0m   FILE_STATUS (WebSecurityConfiguration.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:28 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java, FILE_NAME: WebSecurityConfiguration.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:23:28 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:23:28 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:28 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java][0m
[0m2025-06-16 21:23:29 [0;34m[DEBUG][0m   Found errors. Error code: 17, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:23:29 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:23:29 [0;31m[ERROR][0m   Error code: 17. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java:22: Line is longer than 80 characters (found 110). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java:25:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java:26:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java:27:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java:29:5: Class 'WebSecurityConfiguration' looks like designed for extension (can be subclassed), but the method 'filterChain' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'WebSecurityConfiguration' final or making the method 'filterChain' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java:29:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java:30:44: Parameter http should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java:34: Line is longer than 80 characters (found 91). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java:35: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java:36: Line is longer than 80 characters (found 109). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java:55: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java:67: Line is longer than 80 characters (found 105). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java:71:5: Class 'WebSecurityConfiguration' looks like designed for extension (can be subclassed), but the method 'authenticationManager' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'WebSecurityConfiguration' final or making the method 'authenticationManager' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java:71:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java:72: Line is longer than 80 characters (found 130). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java:72:56: Parameter authenticationConfiguration should be final. [FinalParameters]
Audit done.
Checkstyle ends with 17 errors.
------[0m
[0m2025-06-16 21:23:29 [0;34m[DEBUG][0m   Error code: 17. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java:22: Line is longer than 80 characters (found 110). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java:25:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java:26:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java:27:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java:29:5: Class 'WebSecurityConfiguration' looks like designed for extension (can be subclassed), but the method 'filterChain' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'WebSecurityConfiguration' final or making the method 'filterChain' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java:29:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java:30:44: Parameter http should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java:34: Line is longer than 80 characters (found 91). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java:35: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java:36: Line is longer than 80 characters (found 109). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java:55: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java:67: Line is longer than 80 characters (found 105). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java:71:5: Class 'WebSecurityConfiguration' looks like designed for extension (can be subclassed), but the method 'authenticationManager' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'WebSecurityConfiguration' final or making the method 'authenticationManager' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java:71:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java:72: Line is longer than 80 characters (found 130). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java:72:56: Parameter authenticationConfiguration should be final. [FinalParameters]
Audit done.
Checkstyle ends with 17 errors.
------[0m
[0m2025-06-16 21:23:29 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSocketConfiguration.java[0m
[0m2025-06-16 21:23:29 [0;34m[DEBUG][0m   FILE_STATUS (WebSocketConfiguration.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:29 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSocketConfiguration.java, FILE_NAME: WebSocketConfiguration.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:23:29 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:23:29 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:29 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSocketConfiguration.java][0m
[0m2025-06-16 21:23:30 [0;34m[DEBUG][0m   Found errors. Error code: 6, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:23:30 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:23:30 [0;31m[ERROR][0m   Error code: 6. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSocketConfiguration.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSocketConfiguration.java:11: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSocketConfiguration.java:13:5: Class 'WebSocketConfiguration' looks like designed for extension (can be subclassed), but the method 'configureMessageBroker' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'WebSocketConfiguration' final or making the method 'configureMessageBroker' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSocketConfiguration.java:14:40: Parameter config should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSocketConfiguration.java:19:5: Class 'WebSocketConfiguration' looks like designed for extension (can be subclassed), but the method 'registerStompEndpoints' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'WebSocketConfiguration' final or making the method 'registerStompEndpoints' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSocketConfiguration.java:20:40: Parameter registry should be final. [FinalParameters]
Audit done.
Checkstyle ends with 6 errors.
------[0m
[0m2025-06-16 21:23:30 [0;34m[DEBUG][0m   Error code: 6. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSocketConfiguration.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSocketConfiguration.java:11: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSocketConfiguration.java:13:5: Class 'WebSocketConfiguration' looks like designed for extension (can be subclassed), but the method 'configureMessageBroker' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'WebSocketConfiguration' final or making the method 'configureMessageBroker' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSocketConfiguration.java:14:40: Parameter config should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSocketConfiguration.java:19:5: Class 'WebSocketConfiguration' looks like designed for extension (can be subclassed), but the method 'registerStompEndpoints' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'WebSocketConfiguration' final or making the method 'registerStompEndpoints' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSocketConfiguration.java:20:40: Parameter registry should be final. [FinalParameters]
Audit done.
Checkstyle ends with 6 errors.
------[0m
[0m2025-06-16 21:23:30 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java[0m
[0m2025-06-16 21:23:30 [0;34m[DEBUG][0m   FILE_STATUS (ErrorMessage.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:30 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java, FILE_NAME: ErrorMessage.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:23:30 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:23:30 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:30 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java][0m
[0m2025-06-16 21:23:30 [0;34m[DEBUG][0m   Found errors. Error code: 32, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:23:30 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:23:30 [0;31m[ERROR][0m   Error code: 32. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:3:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:4: Line is longer than 80 characters (found 85). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:4:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:5:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:6: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:6:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:7: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:7:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:8:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:9: Line is longer than 80 characters (found 89). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:9:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:10: Line is longer than 80 characters (found 102). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:10:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:11: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:11:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:12:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:13:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:14:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:15:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:16:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:17: Line is longer than 80 characters (found 115). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:17:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:18: Line is longer than 80 characters (found 129). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:18:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:19:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:20:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:21: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:21:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:22: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:22:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:23:5: Missing a Javadoc comment. [JavadocVariable]
Audit done.
Checkstyle ends with 32 errors.
------[0m
[0m2025-06-16 21:23:30 [0;34m[DEBUG][0m   Error code: 32. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:3:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:4: Line is longer than 80 characters (found 85). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:4:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:5:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:6: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:6:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:7: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:7:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:8:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:9: Line is longer than 80 characters (found 89). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:9:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:10: Line is longer than 80 characters (found 102). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:10:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:11: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:11:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:12:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:13:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:14:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:15:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:16:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:17: Line is longer than 80 characters (found 115). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:17:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:18: Line is longer than 80 characters (found 129). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:18:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:19:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:20:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:21: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:21:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:22: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:22:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java:23:5: Missing a Javadoc comment. [JavadocVariable]
Audit done.
Checkstyle ends with 32 errors.
------[0m
[0m2025-06-16 21:23:30 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java[0m
[0m2025-06-16 21:23:30 [0;34m[DEBUG][0m   FILE_STATUS (PathConstants.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:30 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java, FILE_NAME: PathConstants.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:23:30 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:23:30 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:30 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java][0m
[0m2025-06-16 21:23:31 [0;34m[DEBUG][0m   Found errors. Error code: 45, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:23:31 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:23:31 [0;31m[ERROR][0m   Error code: 45. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:3:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:5:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:6:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:7:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:8:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:9:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:10:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:12:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:13:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:14:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:15:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:16:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:17:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:18:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:20:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:21:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:22:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:23:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:24:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:25:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:26:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:27:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:28:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:29:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:30:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:31:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:33:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:34:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:35:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:36:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:37:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:38:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:39:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:41:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:42:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:44:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:45:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:46:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:47:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:48:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:49:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:50:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:51:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:52:5: Missing a Javadoc comment. [JavadocVariable]
Audit done.
Checkstyle ends with 45 errors.
------[0m
[0m2025-06-16 21:23:31 [0;34m[DEBUG][0m   Error code: 45. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:3:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:5:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:6:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:7:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:8:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:9:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:10:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:12:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:13:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:14:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:15:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:16:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:17:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:18:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:20:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:21:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:22:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:23:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:24:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:25:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:26:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:27:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:28:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:29:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:30:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:31:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:33:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:34:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:35:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:36:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:37:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:38:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:39:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:41:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:42:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:44:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:45:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:46:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:47:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:48:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:49:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:50:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:51:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java:52:5: Missing a Javadoc comment. [JavadocVariable]
Audit done.
Checkstyle ends with 45 errors.
------[0m
[0m2025-06-16 21:23:31 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java[0m
[0m2025-06-16 21:23:31 [0;34m[DEBUG][0m   FILE_STATUS (AdminController.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:31 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java, FILE_NAME: AdminController.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:23:31 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:23:31 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:31 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java][0m
[0m2025-06-16 21:23:32 [0;34m[DEBUG][0m   Found errors. Error code: 84, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:23:32 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:23:32 [0;31m[ERROR][0m   Error code: 84. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:23:47: Using the '.*' form of import should be avoided - org.springframework.web.bind.annotation.*. [AvoidStarImport]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:28:72: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.constants.PathConstants.*. [AvoidStarImport]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:36: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:36:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:36:33: Name 'logger' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:38:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:39:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:40:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:41:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:43:5: Class 'AdminController' looks like designed for extension (can be subclassed), but the method 'addPerfume' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdminController' final or making the method 'addPerfume' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:43:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:44: Line is longer than 80 characters (found 123). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:44:59: Parameter file should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:45: Line is longer than 80 characters (found 112). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:45:59: Parameter perfume should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:46: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:46:59: Parameter bindingResult should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:47: Line is longer than 80 characters (found 91). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:48: Line is longer than 80 characters (found 90). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:51:5: Class 'AdminController' looks like designed for extension (can be subclassed), but the method 'updatePerfume' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdminController' final or making the method 'updatePerfume' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:51:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:52: Line is longer than 80 characters (found 126). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:52:62: Parameter file should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:53: Line is longer than 80 characters (found 115). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:53:62: Parameter perfume should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:54: Line is longer than 80 characters (found 91). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:54:62: Parameter bindingResult should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:55: Line is longer than 80 characters (found 118). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:56: Line is longer than 80 characters (found 90). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:59:5: Class 'AdminController' looks like designed for extension (can be subclassed), but the method 'deletePerfume' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdminController' final or making the method 'deletePerfume' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:59:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:60:49: Parameter perfumeId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:65:5: Class 'AdminController' looks like designed for extension (can be subclassed), but the method 'getAllOrders' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdminController' final or making the method 'getAllOrders' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:65:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:66: Line is longer than 80 characters (found 99). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:66:61: Parameter pageable should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:68: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:69: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:72:5: Class 'AdminController' looks like designed for extension (can be subclassed), but the method 'getUserOrdersByEmail' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdminController' final or making the method 'getUserOrdersByEmail' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:72:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:73: Line is longer than 80 characters (found 99). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:73:69: Parameter userEmail should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:74: Line is longer than 80 characters (found 107). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:74:69: Parameter pageable should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:75: Line is longer than 80 characters (found 106). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:76: Line is longer than 80 characters (found 96). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:77: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:80:5: Class 'AdminController' looks like designed for extension (can be subclassed), but the method 'deleteOrder' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdminController' final or making the method 'deleteOrder' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:80:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:81:47: Parameter orderId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:86:5: Class 'AdminController' looks like designed for extension (can be subclassed), but the method 'getUserById' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdminController' final or making the method 'getUserById' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:86:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:87:53: Parameter userId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:92:5: Class 'AdminController' looks like designed for extension (can be subclassed), but the method 'getAllUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdminController' final or making the method 'getAllUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:92:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:93: Line is longer than 80 characters (found 101). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:93:63: Parameter pageable should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:95: Line is longer than 80 characters (found 85). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:96: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:99:5: Class 'AdminController' looks like designed for extension (can be subclassed), but the method 'getUserByQuery' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdminController' final or making the method 'getUserByQuery' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:99:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:100: Line is longer than 80 characters (found 96). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:100:59: Parameter request should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:102: Line is longer than 80 characters (found 91). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:105:5: Class 'AdminController' looks like designed for extension (can be subclassed), but the method 'getAllUsersByQuery' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdminController' final or making the method 'getAllUsersByQuery' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:105:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:106: Line is longer than 80 characters (found 100). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:106:63: Parameter request should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:107: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:108: Line is longer than 80 characters (found 91). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:111:5: Class 'AdminController' looks like designed for extension (can be subclassed), but the method 'getAllOrdersQuery' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdminController' final or making the method 'getAllOrdersQuery' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:111:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:112: Line is longer than 80 characters (found 99). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:112:62: Parameter request should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:113: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:114: Line is longer than 80 characters (found 91). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:117:5: Class 'AdminController' looks like designed for extension (can be subclassed), but the method 'getUserOrdersByEmailQuery' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdminController' final or making the method 'getUserOrdersByEmailQuery' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:117:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:118: Line is longer than 80 characters (found 107). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:118:70: Parameter request should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:119: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:120: Line is longer than 80 characters (found 91). [LineLength]
Audit done.
Checkstyle ends with 84 errors.
------[0m
[0m2025-06-16 21:23:32 [0;34m[DEBUG][0m   Error code: 84. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:23:47: Using the '.*' form of import should be avoided - org.springframework.web.bind.annotation.*. [AvoidStarImport]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:28:72: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.constants.PathConstants.*. [AvoidStarImport]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:36: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:36:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:36:33: Name 'logger' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:38:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:39:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:40:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:41:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:43:5: Class 'AdminController' looks like designed for extension (can be subclassed), but the method 'addPerfume' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdminController' final or making the method 'addPerfume' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:43:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:44: Line is longer than 80 characters (found 123). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:44:59: Parameter file should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:45: Line is longer than 80 characters (found 112). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:45:59: Parameter perfume should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:46: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:46:59: Parameter bindingResult should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:47: Line is longer than 80 characters (found 91). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:48: Line is longer than 80 characters (found 90). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:51:5: Class 'AdminController' looks like designed for extension (can be subclassed), but the method 'updatePerfume' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdminController' final or making the method 'updatePerfume' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:51:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:52: Line is longer than 80 characters (found 126). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:52:62: Parameter file should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:53: Line is longer than 80 characters (found 115). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:53:62: Parameter perfume should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:54: Line is longer than 80 characters (found 91). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:54:62: Parameter bindingResult should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:55: Line is longer than 80 characters (found 118). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:56: Line is longer than 80 characters (found 90). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:59:5: Class 'AdminController' looks like designed for extension (can be subclassed), but the method 'deletePerfume' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdminController' final or making the method 'deletePerfume' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:59:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:60:49: Parameter perfumeId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:65:5: Class 'AdminController' looks like designed for extension (can be subclassed), but the method 'getAllOrders' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdminController' final or making the method 'getAllOrders' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:65:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:66: Line is longer than 80 characters (found 99). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:66:61: Parameter pageable should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:68: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:69: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:72:5: Class 'AdminController' looks like designed for extension (can be subclassed), but the method 'getUserOrdersByEmail' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdminController' final or making the method 'getUserOrdersByEmail' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:72:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:73: Line is longer than 80 characters (found 99). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:73:69: Parameter userEmail should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:74: Line is longer than 80 characters (found 107). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:74:69: Parameter pageable should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:75: Line is longer than 80 characters (found 106). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:76: Line is longer than 80 characters (found 96). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:77: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:80:5: Class 'AdminController' looks like designed for extension (can be subclassed), but the method 'deleteOrder' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdminController' final or making the method 'deleteOrder' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:80:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:81:47: Parameter orderId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:86:5: Class 'AdminController' looks like designed for extension (can be subclassed), but the method 'getUserById' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdminController' final or making the method 'getUserById' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:86:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:87:53: Parameter userId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:92:5: Class 'AdminController' looks like designed for extension (can be subclassed), but the method 'getAllUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdminController' final or making the method 'getAllUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:92:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:93: Line is longer than 80 characters (found 101). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:93:63: Parameter pageable should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:95: Line is longer than 80 characters (found 85). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:96: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:99:5: Class 'AdminController' looks like designed for extension (can be subclassed), but the method 'getUserByQuery' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdminController' final or making the method 'getUserByQuery' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:99:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:100: Line is longer than 80 characters (found 96). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:100:59: Parameter request should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:102: Line is longer than 80 characters (found 91). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:105:5: Class 'AdminController' looks like designed for extension (can be subclassed), but the method 'getAllUsersByQuery' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdminController' final or making the method 'getAllUsersByQuery' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:105:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:106: Line is longer than 80 characters (found 100). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:106:63: Parameter request should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:107: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:108: Line is longer than 80 characters (found 91). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:111:5: Class 'AdminController' looks like designed for extension (can be subclassed), but the method 'getAllOrdersQuery' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdminController' final or making the method 'getAllOrdersQuery' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:111:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:112: Line is longer than 80 characters (found 99). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:112:62: Parameter request should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:113: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:114: Line is longer than 80 characters (found 91). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:117:5: Class 'AdminController' looks like designed for extension (can be subclassed), but the method 'getUserOrdersByEmailQuery' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdminController' final or making the method 'getUserOrdersByEmailQuery' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:117:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:118: Line is longer than 80 characters (found 107). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:118:70: Parameter request should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:119: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java:120: Line is longer than 80 characters (found 91). [LineLength]
Audit done.
Checkstyle ends with 84 errors.
------[0m
[0m2025-06-16 21:23:32 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java[0m
[0m2025-06-16 21:23:32 [0;34m[DEBUG][0m   FILE_STATUS (AuthenticationController.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:32 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java, FILE_NAME: AuthenticationController.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:23:32 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:23:32 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:32 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java][0m
[0m2025-06-16 21:23:33 [0;34m[DEBUG][0m   Found errors. Error code: 37, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:23:33 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:23:33 [0;31m[ERROR][0m   Error code: 37. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:15:47: Using the '.*' form of import should be avoided - org.springframework.web.bind.annotation.*. [AvoidStarImport]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:19:72: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.constants.PathConstants.*. [AvoidStarImport]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:26: Line is longer than 80 characters (found 97). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:26:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:26:33: Name 'logger' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:28:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:30:5: Class 'AuthenticationController' looks like designed for extension (can be subclassed), but the method 'login' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AuthenticationController' final or making the method 'login' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:30:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:31: Line is longer than 80 characters (found 101). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:31:57: Parameter request should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:36:5: Class 'AuthenticationController' looks like designed for extension (can be subclassed), but the method 'forgotPassword' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AuthenticationController' final or making the method 'forgotPassword' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:36:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:37:50: Parameter email should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:39: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:42:5: Class 'AuthenticationController' looks like designed for extension (can be subclassed), but the method 'getEmailByPasswordResetCode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AuthenticationController' final or making the method 'getEmailByPasswordResetCode' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:42:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:43: Line is longer than 80 characters (found 90). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:43:63: Parameter code should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:45: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:46: Line is longer than 80 characters (found 103). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:50:5: Class 'AuthenticationController' looks like designed for extension (can be subclassed), but the method 'passwordReset' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AuthenticationController' final or making the method 'passwordReset' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:50:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:51: Line is longer than 80 characters (found 98). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:51:49: Parameter passwordReset should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:52: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:53: Line is longer than 80 characters (found 110). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:56:5: Class 'AuthenticationController' looks like designed for extension (can be subclassed), but the method 'updateUserPassword' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AuthenticationController' final or making the method 'updateUserPassword' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:56:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:57: Line is longer than 80 characters (found 97). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:57:54: Parameter user should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:58: Line is longer than 80 characters (found 108). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:58:54: Parameter passwordReset should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:59: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:59:54: Parameter bindingResult should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:61: Line is longer than 80 characters (found 116). [LineLength]
Audit done.
Checkstyle ends with 37 errors.
------[0m
[0m2025-06-16 21:23:33 [0;34m[DEBUG][0m   Error code: 37. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:15:47: Using the '.*' form of import should be avoided - org.springframework.web.bind.annotation.*. [AvoidStarImport]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:19:72: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.constants.PathConstants.*. [AvoidStarImport]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:26: Line is longer than 80 characters (found 97). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:26:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:26:33: Name 'logger' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:28:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:30:5: Class 'AuthenticationController' looks like designed for extension (can be subclassed), but the method 'login' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AuthenticationController' final or making the method 'login' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:30:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:31: Line is longer than 80 characters (found 101). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:31:57: Parameter request should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:36:5: Class 'AuthenticationController' looks like designed for extension (can be subclassed), but the method 'forgotPassword' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AuthenticationController' final or making the method 'forgotPassword' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:36:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:37:50: Parameter email should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:39: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:42:5: Class 'AuthenticationController' looks like designed for extension (can be subclassed), but the method 'getEmailByPasswordResetCode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AuthenticationController' final or making the method 'getEmailByPasswordResetCode' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:42:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:43: Line is longer than 80 characters (found 90). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:43:63: Parameter code should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:45: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:46: Line is longer than 80 characters (found 103). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:50:5: Class 'AuthenticationController' looks like designed for extension (can be subclassed), but the method 'passwordReset' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AuthenticationController' final or making the method 'passwordReset' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:50:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:51: Line is longer than 80 characters (found 98). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:51:49: Parameter passwordReset should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:52: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:53: Line is longer than 80 characters (found 110). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:56:5: Class 'AuthenticationController' looks like designed for extension (can be subclassed), but the method 'updateUserPassword' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AuthenticationController' final or making the method 'updateUserPassword' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:56:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:57: Line is longer than 80 characters (found 97). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:57:54: Parameter user should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:58: Line is longer than 80 characters (found 108). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:58:54: Parameter passwordReset should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:59: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:59:54: Parameter bindingResult should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java:61: Line is longer than 80 characters (found 116). [LineLength]
Audit done.
Checkstyle ends with 37 errors.
------[0m
[0m2025-06-16 21:23:33 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java[0m
[0m2025-06-16 21:23:33 [0;34m[DEBUG][0m   FILE_STATUS (OrderController.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:33 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java, FILE_NAME: OrderController.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:23:33 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:23:33 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:33 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java][0m
[0m2025-06-16 21:23:34 [0;34m[DEBUG][0m   Found errors. Error code: 35, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:23:34 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:23:34 [0;31m[ERROR][0m   Error code: 35. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:21:47: Using the '.*' form of import should be avoided - org.springframework.web.bind.annotation.*. [AvoidStarImport]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:25:72: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.constants.PathConstants.*. [AvoidStarImport]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:32: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:32:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:32:33: Name 'logger' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:34:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:35:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:37:5: Class 'OrderController' looks like designed for extension (can be subclassed), but the method 'getOrderById' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OrderController' final or making the method 'getOrderById' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:37:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:38: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:38:55: Parameter orderId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:43:5: Class 'OrderController' looks like designed for extension (can be subclassed), but the method 'getOrderItemsByOrderId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OrderController' final or making the method 'getOrderItemsByOrderId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:43:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:44: Line is longer than 80 characters (found 103). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:44:75: Parameter orderId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:49:5: Class 'OrderController' looks like designed for extension (can be subclassed), but the method 'getUserOrders' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OrderController' final or making the method 'getUserOrders' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:49:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:50: Line is longer than 80 characters (found 105). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:50:62: Parameter user should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:51: Line is longer than 80 characters (found 100). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:51:62: Parameter pageable should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:53: Line is longer than 80 characters (found 102). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:54: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:57:5: Class 'OrderController' looks like designed for extension (can be subclassed), but the method 'postOrder' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OrderController' final or making the method 'postOrder' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:57:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:58: Line is longer than 80 characters (found 121). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:58:52: Parameter order should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:58:92: Parameter bindingResult should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:63:5: Class 'OrderController' looks like designed for extension (can be subclassed), but the method 'getUserOrdersByQuery' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OrderController' final or making the method 'getUserOrdersByQuery' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:63:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:64: Line is longer than 80 characters (found 102). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:64:65: Parameter request should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:66: Line is longer than 80 characters (found 91). [LineLength]
Audit done.
Checkstyle ends with 35 errors.
------[0m
[0m2025-06-16 21:23:34 [0;34m[DEBUG][0m   Error code: 35. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:21:47: Using the '.*' form of import should be avoided - org.springframework.web.bind.annotation.*. [AvoidStarImport]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:25:72: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.constants.PathConstants.*. [AvoidStarImport]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:32: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:32:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:32:33: Name 'logger' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:34:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:35:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:37:5: Class 'OrderController' looks like designed for extension (can be subclassed), but the method 'getOrderById' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OrderController' final or making the method 'getOrderById' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:37:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:38: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:38:55: Parameter orderId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:43:5: Class 'OrderController' looks like designed for extension (can be subclassed), but the method 'getOrderItemsByOrderId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OrderController' final or making the method 'getOrderItemsByOrderId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:43:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:44: Line is longer than 80 characters (found 103). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:44:75: Parameter orderId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:49:5: Class 'OrderController' looks like designed for extension (can be subclassed), but the method 'getUserOrders' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OrderController' final or making the method 'getUserOrders' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:49:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:50: Line is longer than 80 characters (found 105). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:50:62: Parameter user should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:51: Line is longer than 80 characters (found 100). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:51:62: Parameter pageable should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:53: Line is longer than 80 characters (found 102). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:54: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:57:5: Class 'OrderController' looks like designed for extension (can be subclassed), but the method 'postOrder' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OrderController' final or making the method 'postOrder' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:57:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:58: Line is longer than 80 characters (found 121). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:58:52: Parameter order should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:58:92: Parameter bindingResult should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:63:5: Class 'OrderController' looks like designed for extension (can be subclassed), but the method 'getUserOrdersByQuery' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OrderController' final or making the method 'getUserOrdersByQuery' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:63:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:64: Line is longer than 80 characters (found 102). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:64:65: Parameter request should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java:66: Line is longer than 80 characters (found 91). [LineLength]
Audit done.
Checkstyle ends with 35 errors.
------[0m
[0m2025-06-16 21:23:34 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java[0m
[0m2025-06-16 21:23:34 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeController.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:34 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java, FILE_NAME: PerfumeController.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:23:34 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:23:34 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:34 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java][0m
[0m2025-06-16 21:23:35 [0;34m[DEBUG][0m   Found errors. Error code: 71, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:23:35 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:23:35 [0;31m[ERROR][0m   Error code: 71. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:8:47: Using the '.*' form of import should be avoided - org.springframework.web.bind.annotation.*. [AvoidStarImport]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:12:53: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.dto.perfume.*. [AvoidStarImport]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:19:72: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.constants.PathConstants.*. [AvoidStarImport]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:28: Line is longer than 80 characters (found 90). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:28:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:28:33: Name 'logger' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:30:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:31:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:33:5: Class 'PerfumeController' looks like designed for extension (can be subclassed), but the method 'getAllPerfumes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeController' final or making the method 'getAllPerfumes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:33:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:34: Line is longer than 80 characters (found 112). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:34:65: Parameter pageable should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:34:89: '15' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:36: Line is longer than 80 characters (found 90). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:37: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:40:5: Class 'PerfumeController' looks like designed for extension (can be subclassed), but the method 'getPerfumeById' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeController' final or making the method 'getPerfumeById' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:40:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:41: Line is longer than 80 characters (found 93). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:41:63: Parameter perfumeId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:46:5: Class 'PerfumeController' looks like designed for extension (can be subclassed), but the method 'getPerfumesByIds' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeController' final or making the method 'getPerfumesByIds' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:46:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:47: Line is longer than 80 characters (found 104). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:47:67: Parameter perfumesIds should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:52:5: Class 'PerfumeController' looks like designed for extension (can be subclassed), but the method 'findPerfumesByFilterParams' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeController' final or making the method 'findPerfumesByFilterParams' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:52:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:53: Line is longer than 80 characters (found 117). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:53:77: Parameter filter should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:54: Line is longer than 80 characters (found 124). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:54:77: Parameter pageable should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:54:101: '15' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:55: Line is longer than 80 characters (found 99). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:56: Line is longer than 80 characters (found 110). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:57: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:60:5: Class 'PerfumeController' looks like designed for extension (can be subclassed), but the method 'findByPerfumeGender' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeController' final or making the method 'findByPerfumeGender' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:60:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:61: Line is longer than 80 characters (found 112). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:61:70: Parameter filter should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:62: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:63: Line is longer than 80 characters (found 95). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:66:5: Class 'PerfumeController' looks like designed for extension (can be subclassed), but the method 'findByPerfumer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeController' final or making the method 'findByPerfumer' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:66:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:67: Line is longer than 80 characters (found 107). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:67:65: Parameter filter should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:69: Line is longer than 80 characters (found 85). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:72:5: Class 'PerfumeController' looks like designed for extension (can be subclassed), but the method 'findByInputText' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeController' final or making the method 'findByInputText' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:72:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:73: Line is longer than 80 characters (found 107). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:73:66: Parameter searchType should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:74: Line is longer than 80 characters (found 113). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:74:66: Parameter pageable should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:74:90: '15' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:75: Line is longer than 80 characters (found 95). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:77: Line is longer than 80 characters (found 141). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:78: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:81:5: Class 'PerfumeController' looks like designed for extension (can be subclassed), but the method 'getPerfumesByIdsQuery' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeController' final or making the method 'getPerfumesByIdsQuery' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:81:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:82: Line is longer than 80 characters (found 103). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:82:66: Parameter request should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:84: Line is longer than 80 characters (found 91). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:87:5: Class 'PerfumeController' looks like designed for extension (can be subclassed), but the method 'getAllPerfumesByQuery' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeController' final or making the method 'getAllPerfumesByQuery' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:87:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:88: Line is longer than 80 characters (found 103). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:88:66: Parameter request should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:90: Line is longer than 80 characters (found 91). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:93:5: Class 'PerfumeController' looks like designed for extension (can be subclassed), but the method 'getPerfumeByQuery' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeController' final or making the method 'getPerfumeByQuery' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:93:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:94: Line is longer than 80 characters (found 99). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:94:62: Parameter request should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:96: Line is longer than 80 characters (found 91). [LineLength]
Audit done.
Checkstyle ends with 71 errors.
------[0m
[0m2025-06-16 21:23:35 [0;34m[DEBUG][0m   Error code: 71. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:8:47: Using the '.*' form of import should be avoided - org.springframework.web.bind.annotation.*. [AvoidStarImport]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:12:53: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.dto.perfume.*. [AvoidStarImport]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:19:72: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.constants.PathConstants.*. [AvoidStarImport]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:28: Line is longer than 80 characters (found 90). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:28:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:28:33: Name 'logger' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:30:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:31:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:33:5: Class 'PerfumeController' looks like designed for extension (can be subclassed), but the method 'getAllPerfumes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeController' final or making the method 'getAllPerfumes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:33:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:34: Line is longer than 80 characters (found 112). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:34:65: Parameter pageable should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:34:89: '15' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:36: Line is longer than 80 characters (found 90). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:37: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:40:5: Class 'PerfumeController' looks like designed for extension (can be subclassed), but the method 'getPerfumeById' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeController' final or making the method 'getPerfumeById' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:40:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:41: Line is longer than 80 characters (found 93). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:41:63: Parameter perfumeId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:46:5: Class 'PerfumeController' looks like designed for extension (can be subclassed), but the method 'getPerfumesByIds' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeController' final or making the method 'getPerfumesByIds' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:46:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:47: Line is longer than 80 characters (found 104). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:47:67: Parameter perfumesIds should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:52:5: Class 'PerfumeController' looks like designed for extension (can be subclassed), but the method 'findPerfumesByFilterParams' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeController' final or making the method 'findPerfumesByFilterParams' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:52:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:53: Line is longer than 80 characters (found 117). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:53:77: Parameter filter should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:54: Line is longer than 80 characters (found 124). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:54:77: Parameter pageable should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:54:101: '15' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:55: Line is longer than 80 characters (found 99). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:56: Line is longer than 80 characters (found 110). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:57: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:60:5: Class 'PerfumeController' looks like designed for extension (can be subclassed), but the method 'findByPerfumeGender' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeController' final or making the method 'findByPerfumeGender' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:60:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:61: Line is longer than 80 characters (found 112). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:61:70: Parameter filter should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:62: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:63: Line is longer than 80 characters (found 95). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:66:5: Class 'PerfumeController' looks like designed for extension (can be subclassed), but the method 'findByPerfumer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeController' final or making the method 'findByPerfumer' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:66:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:67: Line is longer than 80 characters (found 107). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:67:65: Parameter filter should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:69: Line is longer than 80 characters (found 85). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:72:5: Class 'PerfumeController' looks like designed for extension (can be subclassed), but the method 'findByInputText' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeController' final or making the method 'findByInputText' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:72:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:73: Line is longer than 80 characters (found 107). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:73:66: Parameter searchType should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:74: Line is longer than 80 characters (found 113). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:74:66: Parameter pageable should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:74:90: '15' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:75: Line is longer than 80 characters (found 95). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:77: Line is longer than 80 characters (found 141). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:78: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:81:5: Class 'PerfumeController' looks like designed for extension (can be subclassed), but the method 'getPerfumesByIdsQuery' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeController' final or making the method 'getPerfumesByIdsQuery' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:81:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:82: Line is longer than 80 characters (found 103). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:82:66: Parameter request should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:84: Line is longer than 80 characters (found 91). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:87:5: Class 'PerfumeController' looks like designed for extension (can be subclassed), but the method 'getAllPerfumesByQuery' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeController' final or making the method 'getAllPerfumesByQuery' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:87:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:88: Line is longer than 80 characters (found 103). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:88:66: Parameter request should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:90: Line is longer than 80 characters (found 91). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:93:5: Class 'PerfumeController' looks like designed for extension (can be subclassed), but the method 'getPerfumeByQuery' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeController' final or making the method 'getPerfumeByQuery' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:93:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:94: Line is longer than 80 characters (found 99). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:94:62: Parameter request should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java:96: Line is longer than 80 characters (found 91). [LineLength]
Audit done.
Checkstyle ends with 71 errors.
------[0m
[0m2025-06-16 21:23:35 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java[0m
[0m2025-06-16 21:23:35 [0;34m[DEBUG][0m   FILE_STATUS (RegistrationController.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:35 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java, FILE_NAME: RegistrationController.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:23:35 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:23:35 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:35 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java][0m
[0m2025-06-16 21:23:36 [0;34m[DEBUG][0m   Found errors. Error code: 15, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:23:36 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:23:36 [0;31m[ERROR][0m   Error code: 15. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java:9:47: Using the '.*' form of import should be avoided - org.springframework.web.bind.annotation.*. [AvoidStarImport]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java:22: Line is longer than 80 characters (found 95). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java:22:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java:22:33: Name 'logger' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java:24:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java:26:5: Class 'RegistrationController' looks like designed for extension (can be subclassed), but the method 'registration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RegistrationController' final or making the method 'registration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java:26:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java:27: Line is longer than 80 characters (found 123). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java:27:48: Parameter user should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java:27:94: Parameter bindingResult should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java:29: Line is longer than 80 characters (found 100). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java:34:5: Class 'RegistrationController' looks like designed for extension (can be subclassed), but the method 'activateEmailCode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RegistrationController' final or making the method 'activateEmailCode' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java:34:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java:35:53: Parameter code should be final. [FinalParameters]
Audit done.
Checkstyle ends with 15 errors.
------[0m
[0m2025-06-16 21:23:36 [0;34m[DEBUG][0m   Error code: 15. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java:9:47: Using the '.*' form of import should be avoided - org.springframework.web.bind.annotation.*. [AvoidStarImport]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java:22: Line is longer than 80 characters (found 95). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java:22:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java:22:33: Name 'logger' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java:24:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java:26:5: Class 'RegistrationController' looks like designed for extension (can be subclassed), but the method 'registration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RegistrationController' final or making the method 'registration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java:26:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java:27: Line is longer than 80 characters (found 123). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java:27:48: Parameter user should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java:27:94: Parameter bindingResult should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java:29: Line is longer than 80 characters (found 100). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java:34:5: Class 'RegistrationController' looks like designed for extension (can be subclassed), but the method 'activateEmailCode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RegistrationController' final or making the method 'activateEmailCode' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java:34:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java:35:53: Parameter code should be final. [FinalParameters]
Audit done.
Checkstyle ends with 15 errors.
------[0m
[0m2025-06-16 21:23:36 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java[0m
[0m2025-06-16 21:23:36 [0;34m[DEBUG][0m   FILE_STATUS (ReviewController.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:36 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java, FILE_NAME: ReviewController.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:23:36 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:23:36 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:36 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java][0m
[0m2025-06-16 21:23:37 [0;34m[DEBUG][0m   Found errors. Error code: 23, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:23:37 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:23:37 [0;31m[ERROR][0m   Error code: 23. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java:11:47: Using the '.*' form of import should be avoided - org.springframework.web.bind.annotation.*. [AvoidStarImport]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java:24: Line is longer than 80 characters (found 89). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java:24:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java:24:33: Name 'logger' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java:26:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java:27:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java:29:5: Class 'ReviewController' looks like designed for extension (can be subclassed), but the method 'getReviewsByPerfumeId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ReviewController' final or making the method 'getReviewsByPerfumeId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java:29:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java:30: Line is longer than 80 characters (found 101). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java:30:71: Parameter perfumeId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java:32: Line is longer than 80 characters (found 85). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java:37:5: Class 'ReviewController' looks like designed for extension (can be subclassed), but the method 'addReviewToPerfume' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ReviewController' final or making the method 'addReviewToPerfume' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java:37:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java:38: Line is longer than 80 characters (found 109). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java:38:62: Parameter reviewRequest should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java:39: Line is longer than 80 characters (found 91). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java:39:62: Parameter bindingResult should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java:40: Line is longer than 80 characters (found 125). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java:41: Line is longer than 80 characters (found 124). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java:42: Line is longer than 80 characters (found 99). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java:43: Line is longer than 80 characters (found 111). [LineLength]
Audit done.
Checkstyle ends with 23 errors.
------[0m
[0m2025-06-16 21:23:37 [0;34m[DEBUG][0m   Error code: 23. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java:11:47: Using the '.*' form of import should be avoided - org.springframework.web.bind.annotation.*. [AvoidStarImport]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java:24: Line is longer than 80 characters (found 89). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java:24:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java:24:33: Name 'logger' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java:26:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java:27:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java:29:5: Class 'ReviewController' looks like designed for extension (can be subclassed), but the method 'getReviewsByPerfumeId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ReviewController' final or making the method 'getReviewsByPerfumeId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java:29:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java:30: Line is longer than 80 characters (found 101). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java:30:71: Parameter perfumeId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java:32: Line is longer than 80 characters (found 85). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java:37:5: Class 'ReviewController' looks like designed for extension (can be subclassed), but the method 'addReviewToPerfume' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ReviewController' final or making the method 'addReviewToPerfume' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java:37:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java:38: Line is longer than 80 characters (found 109). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java:38:62: Parameter reviewRequest should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java:39: Line is longer than 80 characters (found 91). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java:39:62: Parameter bindingResult should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java:40: Line is longer than 80 characters (found 125). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java:41: Line is longer than 80 characters (found 124). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java:42: Line is longer than 80 characters (found 99). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java:43: Line is longer than 80 characters (found 111). [LineLength]
Audit done.
Checkstyle ends with 23 errors.
------[0m
[0m2025-06-16 21:23:37 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java[0m
[0m2025-06-16 21:23:37 [0;34m[DEBUG][0m   FILE_STATUS (UserController.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:37 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java, FILE_NAME: UserController.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:23:37 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:23:37 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:37 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java][0m
[0m2025-06-16 21:23:38 [0;34m[DEBUG][0m   Found errors. Error code: 31, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:23:38 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:23:38 [0;31m[ERROR][0m   Error code: 31. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:16:47: Using the '.*' form of import should be avoided - org.springframework.web.bind.annotation.*. [AvoidStarImport]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:20:72: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.constants.PathConstants.*. [AvoidStarImport]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:29: Line is longer than 80 characters (found 87). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:29:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:29:33: Name 'logger' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:31:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:32:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:34:5: Class 'UserController' looks like designed for extension (can be subclassed), but the method 'getUserInfo' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserController' final or making the method 'getUserInfo' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:34:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:35: Line is longer than 80 characters (found 98). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:35:53: Parameter user should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:42:5: Class 'UserController' looks like designed for extension (can be subclassed), but the method 'updateUserInfo' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserController' final or making the method 'updateUserInfo' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:42:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:43: Line is longer than 80 characters (found 99). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:43:56: Parameter user should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:44: Line is longer than 80 characters (found 101). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:44:56: Parameter request should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:45: Line is longer than 80 characters (found 85). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:45:56: Parameter bindingResult should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:47: Line is longer than 80 characters (found 99). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:52:5: Class 'UserController' looks like designed for extension (can be subclassed), but the method 'getCart' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserController' final or making the method 'getCart' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:52:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:53: Line is longer than 80 characters (found 95). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:53:58: Parameter perfumesIds should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:60:5: Class 'UserController' looks like designed for extension (can be subclassed), but the method 'getUserInfoByQuery' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserController' final or making the method 'getUserInfoByQuery' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:60:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:61: Line is longer than 80 characters (found 100). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:61:63: Parameter request should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:63: Line is longer than 80 characters (found 90). [LineLength]
Audit done.
Checkstyle ends with 31 errors.
------[0m
[0m2025-06-16 21:23:38 [0;34m[DEBUG][0m   Error code: 31. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:16:47: Using the '.*' form of import should be avoided - org.springframework.web.bind.annotation.*. [AvoidStarImport]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:20:72: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.constants.PathConstants.*. [AvoidStarImport]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:29: Line is longer than 80 characters (found 87). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:29:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:29:33: Name 'logger' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:31:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:32:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:34:5: Class 'UserController' looks like designed for extension (can be subclassed), but the method 'getUserInfo' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserController' final or making the method 'getUserInfo' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:34:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:35: Line is longer than 80 characters (found 98). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:35:53: Parameter user should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:42:5: Class 'UserController' looks like designed for extension (can be subclassed), but the method 'updateUserInfo' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserController' final or making the method 'updateUserInfo' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:42:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:43: Line is longer than 80 characters (found 99). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:43:56: Parameter user should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:44: Line is longer than 80 characters (found 101). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:44:56: Parameter request should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:45: Line is longer than 80 characters (found 85). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:45:56: Parameter bindingResult should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:47: Line is longer than 80 characters (found 99). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:52:5: Class 'UserController' looks like designed for extension (can be subclassed), but the method 'getCart' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserController' final or making the method 'getCart' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:52:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:53: Line is longer than 80 characters (found 95). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:53:58: Parameter perfumesIds should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:60:5: Class 'UserController' looks like designed for extension (can be subclassed), but the method 'getUserInfoByQuery' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserController' final or making the method 'getUserInfoByQuery' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:60:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:61: Line is longer than 80 characters (found 100). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:61:63: Parameter request should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java:63: Line is longer than 80 characters (found 90). [LineLength]
Audit done.
Checkstyle ends with 31 errors.
------[0m
[0m2025-06-16 21:23:38 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java[0m
[0m2025-06-16 21:23:38 [0;34m[DEBUG][0m   FILE_STATUS (Order.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:38 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java, FILE_NAME: Order.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:23:38 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:23:38 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:38 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java][0m
[0m2025-06-16 21:23:40 [0;34m[DEBUG][0m   Found errors. Error code: 65, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:23:40 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:23:40 [0;31m[ERROR][0m   Error code: 65. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:3:27: Using the '.*' form of import should be avoided - jakarta.persistence.*. [AvoidStarImport]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:21:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:22: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:23: Line is longer than 80 characters (found 110). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:23:89: '6' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:27:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:30:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:33:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:36:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:39:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:42:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:45:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:47: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:48:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:51:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:54:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:57:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:62: Line is longer than 80 characters (found 86). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:62:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:62:12: More than 7 parameters (found 9). [ParameterNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:62:18: Parameter totalPrice should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:62:25: 'totalPrice' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:62:37: Parameter date should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:62:47: 'date' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:62:53: Parameter firstName should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:62:60: 'firstName' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:62:71: Parameter lastName should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:62:78: 'lastName' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:63: Line is longer than 80 characters (found 100). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:63:18: Parameter city should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:63:25: 'city' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:63:31: Parameter address should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:63:38: 'address' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:63:47: Parameter email should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:63:54: 'email' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:63:61: Parameter phoneNumber should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:63:68: 'phoneNumber' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:63:81: Parameter postIndex should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:63:89: 'postIndex' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:87:37: Parameter price should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:89: Line is longer than 80 characters (found 97). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:93:31: Parameter date should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:93:41: 'date' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:102:32: Parameter firstName should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:102:39: 'firstName' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:102:50: Parameter lastName should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:102:57: 'lastName' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:111:34: Parameter city should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:111:41: 'city' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:111:47: Parameter address should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:111:54: 'address' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:120:32: Parameter email should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:120:39: 'email' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:130:38: Parameter phoneNumber should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:130:45: 'phoneNumber' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:132: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:136: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:140:36: Parameter postIndex should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:140:44: 'postIndex' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:146:5: Class 'Order' looks like designed for extension (can be subclassed), but the method 'equals' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Order' final or making the method 'equals' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:147:27: Parameter o should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:148:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:149:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:154:5: Class 'Order' looks like designed for extension (can be subclassed), but the method 'hashCode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Order' final or making the method 'hashCode' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
Audit done.
Checkstyle ends with 65 errors.
------[0m
[0m2025-06-16 21:23:40 [0;34m[DEBUG][0m   Error code: 65. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:3:27: Using the '.*' form of import should be avoided - jakarta.persistence.*. [AvoidStarImport]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:21:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:22: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:23: Line is longer than 80 characters (found 110). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:23:89: '6' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:27:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:30:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:33:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:36:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:39:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:42:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:45:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:47: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:48:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:51:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:54:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:57:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:62: Line is longer than 80 characters (found 86). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:62:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:62:12: More than 7 parameters (found 9). [ParameterNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:62:18: Parameter totalPrice should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:62:25: 'totalPrice' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:62:37: Parameter date should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:62:47: 'date' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:62:53: Parameter firstName should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:62:60: 'firstName' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:62:71: Parameter lastName should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:62:78: 'lastName' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:63: Line is longer than 80 characters (found 100). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:63:18: Parameter city should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:63:25: 'city' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:63:31: Parameter address should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:63:38: 'address' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:63:47: Parameter email should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:63:54: 'email' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:63:61: Parameter phoneNumber should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:63:68: 'phoneNumber' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:63:81: Parameter postIndex should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:63:89: 'postIndex' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:87:37: Parameter price should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:89: Line is longer than 80 characters (found 97). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:93:31: Parameter date should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:93:41: 'date' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:102:32: Parameter firstName should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:102:39: 'firstName' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:102:50: Parameter lastName should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:102:57: 'lastName' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:111:34: Parameter city should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:111:41: 'city' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:111:47: Parameter address should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:111:54: 'address' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:120:32: Parameter email should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:120:39: 'email' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:130:38: Parameter phoneNumber should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:130:45: 'phoneNumber' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:132: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:136: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:140:36: Parameter postIndex should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:140:44: 'postIndex' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:146:5: Class 'Order' looks like designed for extension (can be subclassed), but the method 'equals' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Order' final or making the method 'equals' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:147:27: Parameter o should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:148:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:149:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java:154:5: Class 'Order' looks like designed for extension (can be subclassed), but the method 'hashCode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Order' final or making the method 'hashCode' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
Audit done.
Checkstyle ends with 65 errors.
------[0m
[0m2025-06-16 21:23:40 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java[0m
[0m2025-06-16 21:23:40 [0;34m[DEBUG][0m   FILE_STATUS (OrderItem.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:40 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java, FILE_NAME: OrderItem.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:23:40 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:23:40 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:40 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java][0m
[0m2025-06-16 21:23:41 [0;34m[DEBUG][0m   Found errors. Error code: 30, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:23:41 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:23:41 [0;31m[ERROR][0m   Error code: 30. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:3:27: Using the '.*' form of import should be avoided - jakarta.persistence.*. [AvoidStarImport]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:17:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:18: Line is longer than 80 characters (found 85). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:19: Line is longer than 80 characters (found 119). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:19:97: '12' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:23:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:26:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:29:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:33:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:37:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:37:22: Parameter amount should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:37:27: 'amount' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:37:35: Parameter quantity should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:37:40: 'quantity' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:37:50: Parameter perfume should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:37:58: 'perfume' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:51:33: Parameter amount should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:51:38: 'amount' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:53: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:57:35: Parameter quantity should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:57:40: 'quantity' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:59: Line is longer than 80 characters (found 90). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:63:34: Parameter perfume should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:63:42: 'perfume' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:68:5: Class 'OrderItem' looks like designed for extension (can be subclassed), but the method 'equals' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OrderItem' final or making the method 'equals' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:69:27: Parameter o should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:70:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:71:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:76:5: Class 'OrderItem' looks like designed for extension (can be subclassed), but the method 'hashCode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OrderItem' final or making the method 'hashCode' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
Audit done.
Checkstyle ends with 30 errors.
------[0m
[0m2025-06-16 21:23:41 [0;34m[DEBUG][0m   Error code: 30. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:3:27: Using the '.*' form of import should be avoided - jakarta.persistence.*. [AvoidStarImport]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:17:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:18: Line is longer than 80 characters (found 85). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:19: Line is longer than 80 characters (found 119). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:19:97: '12' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:23:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:26:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:29:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:33:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:37:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:37:22: Parameter amount should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:37:27: 'amount' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:37:35: Parameter quantity should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:37:40: 'quantity' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:37:50: Parameter perfume should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:37:58: 'perfume' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:51:33: Parameter amount should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:51:38: 'amount' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:53: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:57:35: Parameter quantity should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:57:40: 'quantity' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:59: Line is longer than 80 characters (found 90). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:63:34: Parameter perfume should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:63:42: 'perfume' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:68:5: Class 'OrderItem' looks like designed for extension (can be subclassed), but the method 'equals' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OrderItem' final or making the method 'equals' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:69:27: Parameter o should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:70:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:71:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java:76:5: Class 'OrderItem' looks like designed for extension (can be subclassed), but the method 'hashCode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OrderItem' final or making the method 'hashCode' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
Audit done.
Checkstyle ends with 30 errors.
------[0m
[0m2025-06-16 21:23:41 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java[0m
[0m2025-06-16 21:23:41 [0;34m[DEBUG][0m   FILE_STATUS (Perfume.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:41 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java, FILE_NAME: Perfume.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:23:41 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:23:41 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:41 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java][0m
[0m2025-06-16 21:23:42 [0;34m[DEBUG][0m   Found errors. Error code: 89, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:23:42 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:23:42 [0;31m[ERROR][0m   Error code: 89. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:3:27: Using the '.*' form of import should be avoided - jakarta.persistence.*. [AvoidStarImport]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:8:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:17:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:18: Line is longer than 80 characters (found 85). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:19: Line is longer than 80 characters (found 120). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:19:97: '109' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:23:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:26:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:29:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:31: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:32:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:35:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:38:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:41:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:43: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:44:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:47:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:49: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:50:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:52: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:53:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:55: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:56:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:58: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:59:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:61: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:62:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:65:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:69: Line is longer than 80 characters (found 86). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:69:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:69:12: More than 7 parameters (found 14). [ParameterNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:69:20: Parameter perfumeTitle should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:69:27: 'perfumeTitle' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:69:41: Parameter perfumer should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:69:48: 'perfumer' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:69:58: Parameter year should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:69:66: 'year' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:69:72: Parameter country should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:69:79: 'country' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:70: Line is longer than 80 characters (found 95). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:70:20: Parameter perfumeGender should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:70:27: 'perfumeGender' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:70:42: Parameter fragranceTopNotes should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:70:49: 'fragranceTopNotes' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:70:68: Parameter fragranceMiddleNotes should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:70:75: 'fragranceMiddleNotes' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:71: Line is longer than 80 characters (found 97). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:71:20: Parameter fragranceBaseNotes should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:71:27: 'fragranceBaseNotes' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:71:47: Parameter description should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:71:54: 'description' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:71:67: Parameter filename should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:71:74: 'filename' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:71:84: Parameter price should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:71:92: 'price' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:72:20: Parameter volume should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:72:27: 'volume' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:72:35: Parameter type should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:72:42: 'type' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:72:48: Parameter perfumeRating should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:72:55: 'perfumeRating' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:95:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:100:39: Parameter title should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:102: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:106:31: Parameter year should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:106:39: 'year' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:107:36: '1800' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:107:51: '2100' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:108: Line is longer than 80 characters (found 86). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:112:34: Parameter country should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:112:41: 'country' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:117: Line is longer than 80 characters (found 98). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:119: Line is longer than 80 characters (found 111). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:123:33: Parameter rating should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:124:57: '5.0' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:125: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:130:5: Class 'Perfume' looks like designed for extension (can be subclassed), but the method 'reviewExists' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Perfume' final or making the method 'reviewExists' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:130:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:130:33: Parameter reviewId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:131: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:134:5: Class 'Perfume' looks like designed for extension (can be subclassed), but the method 'addReview' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Perfume' final or making the method 'addReview' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:134:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:134:27: Parameter review should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:141:5: Class 'Perfume' looks like designed for extension (can be subclassed), but the method 'equals' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Perfume' final or making the method 'equals' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:142:27: Parameter o should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:143:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:144:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:149:5: Class 'Perfume' looks like designed for extension (can be subclassed), but the method 'hashCode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Perfume' final or making the method 'hashCode' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
Audit done.
Checkstyle ends with 89 errors.
------[0m
[0m2025-06-16 21:23:42 [0;34m[DEBUG][0m   Error code: 89. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:3:27: Using the '.*' form of import should be avoided - jakarta.persistence.*. [AvoidStarImport]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:8:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:17:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:18: Line is longer than 80 characters (found 85). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:19: Line is longer than 80 characters (found 120). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:19:97: '109' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:23:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:26:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:29:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:31: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:32:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:35:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:38:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:41:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:43: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:44:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:47:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:49: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:50:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:52: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:53:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:55: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:56:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:58: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:59:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:61: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:62:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:65:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:69: Line is longer than 80 characters (found 86). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:69:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:69:12: More than 7 parameters (found 14). [ParameterNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:69:20: Parameter perfumeTitle should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:69:27: 'perfumeTitle' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:69:41: Parameter perfumer should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:69:48: 'perfumer' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:69:58: Parameter year should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:69:66: 'year' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:69:72: Parameter country should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:69:79: 'country' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:70: Line is longer than 80 characters (found 95). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:70:20: Parameter perfumeGender should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:70:27: 'perfumeGender' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:70:42: Parameter fragranceTopNotes should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:70:49: 'fragranceTopNotes' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:70:68: Parameter fragranceMiddleNotes should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:70:75: 'fragranceMiddleNotes' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:71: Line is longer than 80 characters (found 97). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:71:20: Parameter fragranceBaseNotes should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:71:27: 'fragranceBaseNotes' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:71:47: Parameter description should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:71:54: 'description' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:71:67: Parameter filename should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:71:74: 'filename' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:71:84: Parameter price should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:71:92: 'price' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:72:20: Parameter volume should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:72:27: 'volume' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:72:35: Parameter type should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:72:42: 'type' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:72:48: Parameter perfumeRating should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:72:55: 'perfumeRating' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:95:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:100:39: Parameter title should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:102: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:106:31: Parameter year should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:106:39: 'year' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:107:36: '1800' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:107:51: '2100' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:108: Line is longer than 80 characters (found 86). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:112:34: Parameter country should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:112:41: 'country' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:117: Line is longer than 80 characters (found 98). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:119: Line is longer than 80 characters (found 111). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:123:33: Parameter rating should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:124:57: '5.0' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:125: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:130:5: Class 'Perfume' looks like designed for extension (can be subclassed), but the method 'reviewExists' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Perfume' final or making the method 'reviewExists' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:130:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:130:33: Parameter reviewId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:131: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:134:5: Class 'Perfume' looks like designed for extension (can be subclassed), but the method 'addReview' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Perfume' final or making the method 'addReview' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:134:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:134:27: Parameter review should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:141:5: Class 'Perfume' looks like designed for extension (can be subclassed), but the method 'equals' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Perfume' final or making the method 'equals' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:142:27: Parameter o should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:143:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:144:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java:149:5: Class 'Perfume' looks like designed for extension (can be subclassed), but the method 'hashCode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Perfume' final or making the method 'hashCode' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
Audit done.
Checkstyle ends with 89 errors.
------[0m
[0m2025-06-16 21:23:42 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java[0m
[0m2025-06-16 21:23:42 [0;34m[DEBUG][0m   FILE_STATUS (Review.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:42 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java, FILE_NAME: Review.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:23:42 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:23:42 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:42 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java][0m
[0m2025-06-16 21:23:43 [0;34m[DEBUG][0m   Found errors. Error code: 34, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:23:43 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:23:43 [0;31m[ERROR][0m   Error code: 34. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:3:27: Using the '.*' form of import should be avoided - jakarta.persistence.*. [AvoidStarImport]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:18:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:19:29: '=' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:23:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:26:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:29:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:32:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:35:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:39: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:39:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:39:19: Parameter author should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:39:26: 'author' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:39:34: Parameter message should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:39:41: 'message' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:39:50: Parameter rating should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:39:58: 'rating' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:39:66: Parameter date should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:39:76: 'date' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:53:33: Parameter author should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:53:40: 'author' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:59:34: Parameter message should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:59:41: 'message' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:65:33: Parameter rating should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:65:41: 'rating' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:66:54: '5' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:67: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:71:31: Parameter date should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:71:41: 'date' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:77:5: Class 'Review' looks like designed for extension (can be subclassed), but the method 'equals' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Review' final or making the method 'equals' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:78:27: Parameter o should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:79:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:80:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:85:5: Class 'Review' looks like designed for extension (can be subclassed), but the method 'hashCode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Review' final or making the method 'hashCode' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
Audit done.
Checkstyle ends with 34 errors.
------[0m
[0m2025-06-16 21:23:43 [0;34m[DEBUG][0m   Error code: 34. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:3:27: Using the '.*' form of import should be avoided - jakarta.persistence.*. [AvoidStarImport]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:18:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:19:29: '=' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:23:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:26:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:29:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:32:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:35:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:39: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:39:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:39:19: Parameter author should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:39:26: 'author' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:39:34: Parameter message should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:39:41: 'message' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:39:50: Parameter rating should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:39:58: 'rating' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:39:66: Parameter date should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:39:76: 'date' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:53:33: Parameter author should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:53:40: 'author' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:59:34: Parameter message should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:59:41: 'message' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:65:33: Parameter rating should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:65:41: 'rating' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:66:54: '5' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:67: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:71:31: Parameter date should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:71:41: 'date' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:77:5: Class 'Review' looks like designed for extension (can be subclassed), but the method 'equals' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Review' final or making the method 'equals' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:78:27: Parameter o should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:79:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:80:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java:85:5: Class 'Review' looks like designed for extension (can be subclassed), but the method 'hashCode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Review' final or making the method 'hashCode' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
Audit done.
Checkstyle ends with 34 errors.
------[0m
[0m2025-06-16 21:23:43 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java[0m
[0m2025-06-16 21:23:43 [0;34m[DEBUG][0m   FILE_STATUS (User.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:43 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java, FILE_NAME: User.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:23:43 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:23:43 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:43 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java][0m
[0m2025-06-16 21:23:44 [0;34m[DEBUG][0m   Found errors. Error code: 68, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:23:44 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:23:44 [0;31m[ERROR][0m   Error code: 68. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:5:27: Using the '.*' form of import should be avoided - jakarta.persistence.*. [AvoidStarImport]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:21:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:22: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:23: Line is longer than 80 characters (found 114). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:23:93: '4' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:26: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:27:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:29: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:30:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:32: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:33:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:36:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:39:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:42:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:45:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:48:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:51:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:54:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:57:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:60:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:64:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:65: Line is longer than 80 characters (found 85). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:70:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:74: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:74:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:74:12: More than 7 parameters (found 13). [ParameterNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:74:17: Parameter email should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:74:24: 'email' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:74:31: Parameter password should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:74:38: 'password' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:74:48: Parameter firstName should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:74:55: 'firstName' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:74:66: Parameter lastName should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:74:73: 'lastName' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:75: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:75:17: Parameter city should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:75:24: 'city' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:75:30: Parameter address should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:75:37: 'address' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:75:46: Parameter phoneNumber should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:75:53: 'phoneNumber' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:75:66: Parameter postIndex should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:75:73: 'postIndex' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:76:17: Parameter activationCode should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:76:24: 'activationCode' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:76:40: Parameter passwordResetCode should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:76:47: 'passwordResetCode' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:76:66: Parameter active should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:76:74: 'active' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:77:17: Parameter provider should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:77:30: 'provider' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:77:40: Parameter roles should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:77:50: 'roles' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:98:32: Parameter email should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:98:39: 'email' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:103: Line is longer than 80 characters (found 94). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:108:38: Parameter phoneNumber should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:108:45: 'phoneNumber' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:113: Line is longer than 80 characters (found 86). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:118:36: Parameter postIndex should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:118:43: 'postIndex' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:121:38: '10' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:130:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'equals' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'equals' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:131:27: Parameter o should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:132:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:133:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:138:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'hashCode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'hashCode' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
Audit done.
Checkstyle ends with 68 errors.
------[0m
[0m2025-06-16 21:23:44 [0;34m[DEBUG][0m   Error code: 68. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:5:27: Using the '.*' form of import should be avoided - jakarta.persistence.*. [AvoidStarImport]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:21:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:22: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:23: Line is longer than 80 characters (found 114). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:23:93: '4' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:26: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:27:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:29: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:30:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:32: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:33:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:36:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:39:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:42:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:45:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:48:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:51:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:54:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:57:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:60:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:64:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:65: Line is longer than 80 characters (found 85). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:70:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:74: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:74:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:74:12: More than 7 parameters (found 13). [ParameterNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:74:17: Parameter email should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:74:24: 'email' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:74:31: Parameter password should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:74:38: 'password' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:74:48: Parameter firstName should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:74:55: 'firstName' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:74:66: Parameter lastName should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:74:73: 'lastName' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:75: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:75:17: Parameter city should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:75:24: 'city' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:75:30: Parameter address should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:75:37: 'address' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:75:46: Parameter phoneNumber should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:75:53: 'phoneNumber' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:75:66: Parameter postIndex should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:75:73: 'postIndex' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:76:17: Parameter activationCode should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:76:24: 'activationCode' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:76:40: Parameter passwordResetCode should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:76:47: 'passwordResetCode' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:76:66: Parameter active should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:76:74: 'active' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:77:17: Parameter provider should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:77:30: 'provider' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:77:40: Parameter roles should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:77:50: 'roles' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:98:32: Parameter email should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:98:39: 'email' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:103: Line is longer than 80 characters (found 94). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:108:38: Parameter phoneNumber should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:108:45: 'phoneNumber' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:113: Line is longer than 80 characters (found 86). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:118:36: Parameter postIndex should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:118:43: 'postIndex' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:121:38: '10' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:130:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'equals' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'equals' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:131:27: Parameter o should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:132:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:133:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java:138:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'hashCode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'hashCode' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
Audit done.
Checkstyle ends with 68 errors.
------[0m
[0m2025-06-16 21:23:44 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java[0m
[0m2025-06-16 21:23:44 [0;34m[DEBUG][0m   FILE_STATUS (CaptchaResponse.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:44 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java, FILE_NAME: CaptchaResponse.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:23:44 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:23:44 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:44 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java][0m
[0m2025-06-16 21:23:45 [0;34m[DEBUG][0m   Found errors. Error code: 15, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:23:45 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:23:45 [0;31m[ERROR][0m   Error code: 15. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java:11:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java:13:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java:16:5: Class 'CaptchaResponse' looks like designed for extension (can be subclassed), but the method 'isSuccess' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CaptchaResponse' final or making the method 'isSuccess' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java:16:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java:20:5: Class 'CaptchaResponse' looks like designed for extension (can be subclassed), but the method 'setSuccess' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CaptchaResponse' final or making the method 'setSuccess' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java:20:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java:20:28: Parameter success should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java:20:36: 'success' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java:24:5: Class 'CaptchaResponse' looks like designed for extension (can be subclassed), but the method 'getErrorCodes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CaptchaResponse' final or making the method 'getErrorCodes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java:24:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java:28:5: Class 'CaptchaResponse' looks like designed for extension (can be subclassed), but the method 'setErrorCodes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CaptchaResponse' final or making the method 'setErrorCodes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java:28:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java:28:31: Parameter errorCodes should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java:28:43: 'errorCodes' hides a field. [HiddenField]
Audit done.
Checkstyle ends with 15 errors.
------[0m
[0m2025-06-16 21:23:45 [0;34m[DEBUG][0m   Error code: 15. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java:11:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java:13:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java:16:5: Class 'CaptchaResponse' looks like designed for extension (can be subclassed), but the method 'isSuccess' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CaptchaResponse' final or making the method 'isSuccess' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java:16:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java:20:5: Class 'CaptchaResponse' looks like designed for extension (can be subclassed), but the method 'setSuccess' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CaptchaResponse' final or making the method 'setSuccess' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java:20:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java:20:28: Parameter success should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java:20:36: 'success' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java:24:5: Class 'CaptchaResponse' looks like designed for extension (can be subclassed), but the method 'getErrorCodes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CaptchaResponse' final or making the method 'getErrorCodes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java:24:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java:28:5: Class 'CaptchaResponse' looks like designed for extension (can be subclassed), but the method 'setErrorCodes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CaptchaResponse' final or making the method 'setErrorCodes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java:28:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java:28:31: Parameter errorCodes should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java:28:43: 'errorCodes' hides a field. [HiddenField]
Audit done.
Checkstyle ends with 15 errors.
------[0m
[0m2025-06-16 21:23:45 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/GraphQLRequest.java[0m
[0m2025-06-16 21:23:45 [0;34m[DEBUG][0m   FILE_STATUS (GraphQLRequest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:45 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/GraphQLRequest.java, FILE_NAME: GraphQLRequest.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:23:45 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:23:45 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:45 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/GraphQLRequest.java][0m
[0m2025-06-16 21:23:46 [0;34m[DEBUG][0m   Found errors. Error code: 2, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:23:46 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:23:46 [0;31m[ERROR][0m   Error code: 2. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/GraphQLRequest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/GraphQLRequest.java:7:5: Missing a Javadoc comment. [JavadocVariable]
Audit done.
Checkstyle ends with 2 errors.
------[0m
[0m2025-06-16 21:23:46 [0;34m[DEBUG][0m   Error code: 2. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/GraphQLRequest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/GraphQLRequest.java:7:5: Missing a Javadoc comment. [JavadocVariable]
Audit done.
Checkstyle ends with 2 errors.
------[0m
[0m2025-06-16 21:23:46 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/HeaderResponse.java[0m
[0m2025-06-16 21:23:46 [0;34m[DEBUG][0m   FILE_STATUS (HeaderResponse.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:46 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/HeaderResponse.java, FILE_NAME: HeaderResponse.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:23:46 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:23:46 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:46 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/HeaderResponse.java][0m
[0m2025-06-16 21:23:46 [0;34m[DEBUG][0m   Found errors. Error code: 3, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:23:46 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:23:46 [0;31m[ERROR][0m   Error code: 3. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/HeaderResponse.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/HeaderResponse.java:13:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/HeaderResponse.java:14:5: Missing a Javadoc comment. [JavadocVariable]
Audit done.
Checkstyle ends with 3 errors.
------[0m
[0m2025-06-16 21:23:46 [0;34m[DEBUG][0m   Error code: 3. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/HeaderResponse.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/HeaderResponse.java:13:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/HeaderResponse.java:14:5: Missing a Javadoc comment. [JavadocVariable]
Audit done.
Checkstyle ends with 3 errors.
------[0m
[0m2025-06-16 21:23:46 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/PasswordResetRequest.java[0m
[0m2025-06-16 21:23:46 [0;34m[DEBUG][0m   FILE_STATUS (PasswordResetRequest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:46 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/PasswordResetRequest.java, FILE_NAME: PasswordResetRequest.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:23:46 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:23:47 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:47 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/PasswordResetRequest.java][0m
[0m2025-06-16 21:23:47 [0;34m[DEBUG][0m   Found errors. Error code: 8, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:23:47 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:23:47 [0;31m[ERROR][0m   Error code: 8. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/PasswordResetRequest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/PasswordResetRequest.java:13:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/PasswordResetRequest.java:15:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/PasswordResetRequest.java:15:17: '6' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/PasswordResetRequest.java:15:26: '16' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/PasswordResetRequest.java:18:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/PasswordResetRequest.java:18:17: '6' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/PasswordResetRequest.java:18:26: '16' is a magic number. [MagicNumber]
Audit done.
Checkstyle ends with 8 errors.
------[0m
[0m2025-06-16 21:23:47 [0;34m[DEBUG][0m   Error code: 8. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/PasswordResetRequest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/PasswordResetRequest.java:13:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/PasswordResetRequest.java:15:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/PasswordResetRequest.java:15:17: '6' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/PasswordResetRequest.java:15:26: '16' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/PasswordResetRequest.java:18:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/PasswordResetRequest.java:18:17: '6' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/PasswordResetRequest.java:18:26: '16' is a magic number. [MagicNumber]
Audit done.
Checkstyle ends with 8 errors.
------[0m
[0m2025-06-16 21:23:47 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java[0m
[0m2025-06-16 21:23:47 [0;34m[DEBUG][0m   FILE_STATUS (RegistrationRequest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:47 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java, FILE_NAME: RegistrationRequest.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:23:47 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:23:47 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:47 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java][0m
[0m2025-06-16 21:23:48 [0;34m[DEBUG][0m   Found errors. Error code: 12, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:23:48 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:23:48 [0;31m[ERROR][0m   Error code: 12. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java:9:71: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.*. [AvoidStarImport]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java:14:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java:17:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java:20:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java:23:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java:23:17: '6' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java:23:26: '16' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java:26:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java:26:17: '6' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java:26:26: '16' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java:29:5: Missing a Javadoc comment. [JavadocVariable]
Audit done.
Checkstyle ends with 12 errors.
------[0m
[0m2025-06-16 21:23:48 [0;34m[DEBUG][0m   Error code: 12. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java:9:71: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.*. [AvoidStarImport]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java:14:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java:17:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java:20:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java:23:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java:23:17: '6' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java:23:26: '16' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java:26:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java:26:17: '6' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java:26:26: '16' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java:29:5: Missing a Javadoc comment. [JavadocVariable]
Audit done.
Checkstyle ends with 12 errors.
------[0m
[0m2025-06-16 21:23:48 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationRequest.java[0m
[0m2025-06-16 21:23:48 [0;34m[DEBUG][0m   FILE_STATUS (AuthenticationRequest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:48 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationRequest.java, FILE_NAME: AuthenticationRequest.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:23:48 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:23:48 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:48 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationRequest.java][0m
[0m2025-06-16 21:23:49 [0;34m[DEBUG][0m   Found errors. Error code: 3, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:23:49 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:23:49 [0;31m[ERROR][0m   Error code: 3. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationRequest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationRequest.java:7:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationRequest.java:8:5: Missing a Javadoc comment. [JavadocVariable]
Audit done.
Checkstyle ends with 3 errors.
------[0m
[0m2025-06-16 21:23:49 [0;34m[DEBUG][0m   Error code: 3. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationRequest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationRequest.java:7:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationRequest.java:8:5: Missing a Javadoc comment. [JavadocVariable]
Audit done.
Checkstyle ends with 3 errors.
------[0m
[0m2025-06-16 21:23:49 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationResponse.java[0m
[0m2025-06-16 21:23:49 [0;34m[DEBUG][0m   FILE_STATUS (AuthenticationResponse.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:49 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationResponse.java, FILE_NAME: AuthenticationResponse.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:23:49 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:23:49 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:49 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationResponse.java][0m
[0m2025-06-16 21:23:50 [0;34m[DEBUG][0m   Found errors. Error code: 3, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:23:50 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:23:50 [0;31m[ERROR][0m   Error code: 3. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationResponse.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationResponse.java:8:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationResponse.java:9:5: Missing a Javadoc comment. [JavadocVariable]
Audit done.
Checkstyle ends with 3 errors.
------[0m
[0m2025-06-16 21:23:50 [0;34m[DEBUG][0m   Error code: 3. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationResponse.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationResponse.java:8:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationResponse.java:9:5: Missing a Javadoc comment. [JavadocVariable]
Audit done.
Checkstyle ends with 3 errors.
------[0m
[0m2025-06-16 21:23:50 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderItemResponse.java[0m
[0m2025-06-16 21:23:50 [0;34m[DEBUG][0m   FILE_STATUS (OrderItemResponse.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:50 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderItemResponse.java, FILE_NAME: OrderItemResponse.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:23:50 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:23:50 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:50 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderItemResponse.java][0m
[0m2025-06-16 21:23:51 [0;34m[DEBUG][0m   Found errors. Error code: 5, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:23:51 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:23:51 [0;31m[ERROR][0m   Error code: 5. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderItemResponse.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderItemResponse.java:10:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderItemResponse.java:11:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderItemResponse.java:12:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderItemResponse.java:13:5: Missing a Javadoc comment. [JavadocVariable]
Audit done.
Checkstyle ends with 5 errors.
------[0m
[0m2025-06-16 21:23:51 [0;34m[DEBUG][0m   Error code: 5. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderItemResponse.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderItemResponse.java:10:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderItemResponse.java:11:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderItemResponse.java:12:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderItemResponse.java:13:5: Missing a Javadoc comment. [JavadocVariable]
Audit done.
Checkstyle ends with 5 errors.
------[0m
[0m2025-06-16 21:23:51 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java[0m
[0m2025-06-16 21:23:51 [0;34m[DEBUG][0m   FILE_STATUS (OrderRequest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:51 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java, FILE_NAME: OrderRequest.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:23:51 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:23:51 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:51 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java][0m
[0m2025-06-16 21:23:52 [0;34m[DEBUG][0m   Found errors. Error code: 12, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:23:52 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:23:52 [0;31m[ERROR][0m   Error code: 12. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java:11:71: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.*. [AvoidStarImport]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java:16:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java:17:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java:19:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java:22:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java:25:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java:28:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java:31:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java:35:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java:38:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java:39:18: '5' is a magic number. [MagicNumber]
Audit done.
Checkstyle ends with 12 errors.
------[0m
[0m2025-06-16 21:23:52 [0;34m[DEBUG][0m   Error code: 12. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java:11:71: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.*. [AvoidStarImport]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java:16:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java:17:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java:19:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java:22:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java:25:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java:28:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java:31:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java:35:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java:38:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java:39:18: '5' is a magic number. [MagicNumber]
Audit done.
Checkstyle ends with 12 errors.
------[0m
[0m2025-06-16 21:23:52 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java[0m
[0m2025-06-16 21:23:52 [0;34m[DEBUG][0m   FILE_STATUS (OrderResponse.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:52 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java, FILE_NAME: OrderResponse.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:23:52 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:23:52 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:52 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java][0m
[0m2025-06-16 21:23:53 [0;34m[DEBUG][0m   Found errors. Error code: 11, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:23:53 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:23:53 [0;31m[ERROR][0m   Error code: 11. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java:11:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java:12:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java:13:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java:14:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java:15:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java:16:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java:17:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java:18:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java:19:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java:20:5: Missing a Javadoc comment. [JavadocVariable]
Audit done.
Checkstyle ends with 11 errors.
------[0m
[0m2025-06-16 21:23:53 [0;34m[DEBUG][0m   Error code: 11. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java:11:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java:12:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java:13:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java:14:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java:15:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java:16:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java:17:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java:18:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java:19:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java:20:5: Missing a Javadoc comment. [JavadocVariable]
Audit done.
Checkstyle ends with 11 errors.
------[0m
[0m2025-06-16 21:23:53 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/FullPerfumeResponse.java[0m
[0m2025-06-16 21:23:53 [0;34m[DEBUG][0m   FILE_STATUS (FullPerfumeResponse.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:53 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/FullPerfumeResponse.java, FILE_NAME: FullPerfumeResponse.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:23:53 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:23:53 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:53 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/FullPerfumeResponse.java][0m
[0m2025-06-16 21:23:54 [0;34m[DEBUG][0m   Found errors. Error code: 10, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:23:54 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:23:54 [0;31m[ERROR][0m   Error code: 10. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/FullPerfumeResponse.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/FullPerfumeResponse.java:10:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/FullPerfumeResponse.java:11:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/FullPerfumeResponse.java:12:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/FullPerfumeResponse.java:13:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/FullPerfumeResponse.java:14:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/FullPerfumeResponse.java:15:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/FullPerfumeResponse.java:16:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/FullPerfumeResponse.java:17:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/FullPerfumeResponse.java:18:5: Missing a Javadoc comment. [JavadocVariable]
Audit done.
Checkstyle ends with 10 errors.
------[0m
[0m2025-06-16 21:23:54 [0;34m[DEBUG][0m   Error code: 10. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/FullPerfumeResponse.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/FullPerfumeResponse.java:10:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/FullPerfumeResponse.java:11:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/FullPerfumeResponse.java:12:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/FullPerfumeResponse.java:13:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/FullPerfumeResponse.java:14:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/FullPerfumeResponse.java:15:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/FullPerfumeResponse.java:16:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/FullPerfumeResponse.java:17:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/FullPerfumeResponse.java:18:5: Missing a Javadoc comment. [JavadocVariable]
Audit done.
Checkstyle ends with 10 errors.
------[0m
[0m2025-06-16 21:23:54 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java[0m
[0m2025-06-16 21:23:54 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeRequest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:54 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java, FILE_NAME: PerfumeRequest.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:23:54 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:23:54 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:54 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java][0m
[0m2025-06-16 21:23:54 [0;34m[DEBUG][0m   Found errors. Error code: 23, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:23:54 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:23:54 [0;31m[ERROR][0m   Error code: 23. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java:14:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java:15:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java:17:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java:18:19: '255' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java:21:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java:22:19: '255' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java:25:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java:28:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java:29:19: '255' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java:32:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java:33:19: '255' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java:36:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java:37:19: '255' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java:40:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java:41:19: '255' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java:44:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java:45:19: '255' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java:48:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java:51:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java:52:19: '255' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java:55:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java:56:19: '255' is a magic number. [MagicNumber]
Audit done.
Checkstyle ends with 23 errors.
------[0m
[0m2025-06-16 21:23:54 [0;34m[DEBUG][0m   Error code: 23. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java:14:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java:15:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java:17:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java:18:19: '255' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java:21:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java:22:19: '255' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java:25:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java:28:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java:29:19: '255' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java:32:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java:33:19: '255' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java:36:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java:37:19: '255' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java:40:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java:41:19: '255' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java:44:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java:45:19: '255' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java:48:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java:51:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java:52:19: '255' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java:55:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java:56:19: '255' is a magic number. [MagicNumber]
Audit done.
Checkstyle ends with 23 errors.
------[0m
[0m2025-06-16 21:23:54 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeResponse.java[0m
[0m2025-06-16 21:23:54 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeResponse.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:54 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeResponse.java, FILE_NAME: PerfumeResponse.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:23:54 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:23:54 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:54 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeResponse.java][0m
[0m2025-06-16 21:23:55 [0;34m[DEBUG][0m   Found errors. Error code: 9, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:23:55 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:23:55 [0;31m[ERROR][0m   Error code: 9. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeResponse.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeResponse.java:9:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeResponse.java:10:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeResponse.java:11:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeResponse.java:12:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeResponse.java:13:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeResponse.java:14:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeResponse.java:15:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeResponse.java:16:5: Missing a Javadoc comment. [JavadocVariable]
Audit done.
Checkstyle ends with 9 errors.
------[0m
[0m2025-06-16 21:23:55 [0;34m[DEBUG][0m   Error code: 9. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeResponse.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeResponse.java:9:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeResponse.java:10:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeResponse.java:11:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeResponse.java:12:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeResponse.java:13:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeResponse.java:14:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeResponse.java:15:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeResponse.java:16:5: Missing a Javadoc comment. [JavadocVariable]
Audit done.
Checkstyle ends with 9 errors.
------[0m
[0m2025-06-16 21:23:55 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeSearchRequest.java[0m
[0m2025-06-16 21:23:55 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeSearchRequest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:55 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeSearchRequest.java, FILE_NAME: PerfumeSearchRequest.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:23:55 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:23:55 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:55 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeSearchRequest.java][0m
[0m2025-06-16 21:23:56 [0;34m[DEBUG][0m   Found errors. Error code: 7, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:23:56 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:23:56 [0;31m[ERROR][0m   Error code: 7. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeSearchRequest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeSearchRequest.java:9:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeSearchRequest.java:10:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeSearchRequest.java:11:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeSearchRequest.java:12:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeSearchRequest.java:13:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeSearchRequest.java:14:5: Missing a Javadoc comment. [JavadocVariable]
Audit done.
Checkstyle ends with 7 errors.
------[0m
[0m2025-06-16 21:23:56 [0;34m[DEBUG][0m   Error code: 7. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeSearchRequest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeSearchRequest.java:9:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeSearchRequest.java:10:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeSearchRequest.java:11:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeSearchRequest.java:12:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeSearchRequest.java:13:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeSearchRequest.java:14:5: Missing a Javadoc comment. [JavadocVariable]
Audit done.
Checkstyle ends with 7 errors.
------[0m
[0m2025-06-16 21:23:56 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/SearchTypeRequest.java[0m
[0m2025-06-16 21:23:56 [0;34m[DEBUG][0m   FILE_STATUS (SearchTypeRequest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:56 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/SearchTypeRequest.java, FILE_NAME: SearchTypeRequest.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:23:56 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:23:56 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:56 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/SearchTypeRequest.java][0m
[0m2025-06-16 21:23:57 [0;34m[DEBUG][0m   Found errors. Error code: 3, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:23:57 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:23:57 [0;31m[ERROR][0m   Error code: 3. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/SearchTypeRequest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/SearchTypeRequest.java:8:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/SearchTypeRequest.java:9:5: Missing a Javadoc comment. [JavadocVariable]
Audit done.
Checkstyle ends with 3 errors.
------[0m
[0m2025-06-16 21:23:57 [0;34m[DEBUG][0m   Error code: 3. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/SearchTypeRequest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/SearchTypeRequest.java:8:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/SearchTypeRequest.java:9:5: Missing a Javadoc comment. [JavadocVariable]
Audit done.
Checkstyle ends with 3 errors.
------[0m
[0m2025-06-16 21:23:57 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewRequest.java[0m
[0m2025-06-16 21:23:57 [0;34m[DEBUG][0m   FILE_STATUS (ReviewRequest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:57 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewRequest.java, FILE_NAME: ReviewRequest.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:23:57 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:23:57 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:57 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewRequest.java][0m
[0m2025-06-16 21:23:58 [0;34m[DEBUG][0m   Found errors. Error code: 5, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:23:58 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:23:58 [0;31m[ERROR][0m   Error code: 5. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewRequest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewRequest.java:13:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewRequest.java:15:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewRequest.java:18:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewRequest.java:21:5: Missing a Javadoc comment. [JavadocVariable]
Audit done.
Checkstyle ends with 5 errors.
------[0m
[0m2025-06-16 21:23:58 [0;34m[DEBUG][0m   Error code: 5. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewRequest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewRequest.java:13:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewRequest.java:15:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewRequest.java:18:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewRequest.java:21:5: Missing a Javadoc comment. [JavadocVariable]
Audit done.
Checkstyle ends with 5 errors.
------[0m
[0m2025-06-16 21:23:58 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewResponse.java[0m
[0m2025-06-16 21:23:58 [0;34m[DEBUG][0m   FILE_STATUS (ReviewResponse.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:58 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewResponse.java, FILE_NAME: ReviewResponse.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:23:58 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:23:58 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:58 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewResponse.java][0m
[0m2025-06-16 21:23:59 [0;34m[DEBUG][0m   Found errors. Error code: 6, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:23:59 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:23:59 [0;31m[ERROR][0m   Error code: 6. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewResponse.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewResponse.java:9:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewResponse.java:10:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewResponse.java:11:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewResponse.java:12:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewResponse.java:13:5: Missing a Javadoc comment. [JavadocVariable]
Audit done.
Checkstyle ends with 6 errors.
------[0m
[0m2025-06-16 21:23:59 [0;34m[DEBUG][0m   Error code: 6. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewResponse.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewResponse.java:9:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewResponse.java:10:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewResponse.java:11:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewResponse.java:12:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewResponse.java:13:5: Missing a Javadoc comment. [JavadocVariable]
Audit done.
Checkstyle ends with 6 errors.
------[0m
[0m2025-06-16 21:23:59 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/BaseUserResponse.java[0m
[0m2025-06-16 21:23:59 [0;34m[DEBUG][0m   FILE_STATUS (BaseUserResponse.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:23:59 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/BaseUserResponse.java, FILE_NAME: BaseUserResponse.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:23:59 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:23:59 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:23:59 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/BaseUserResponse.java][0m
[0m2025-06-16 21:24:00 [0;34m[DEBUG][0m   Found errors. Error code: 6, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:00 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:00 [0;31m[ERROR][0m   Error code: 6. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/BaseUserResponse.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/BaseUserResponse.java:12:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/BaseUserResponse.java:13:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/BaseUserResponse.java:14:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/BaseUserResponse.java:15:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/BaseUserResponse.java:16:5: Missing a Javadoc comment. [JavadocVariable]
Audit done.
Checkstyle ends with 6 errors.
------[0m
[0m2025-06-16 21:24:00 [0;34m[DEBUG][0m   Error code: 6. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/BaseUserResponse.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/BaseUserResponse.java:12:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/BaseUserResponse.java:13:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/BaseUserResponse.java:14:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/BaseUserResponse.java:15:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/BaseUserResponse.java:16:5: Missing a Javadoc comment. [JavadocVariable]
Audit done.
Checkstyle ends with 6 errors.
------[0m
[0m2025-06-16 21:24:00 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UpdateUserRequest.java[0m
[0m2025-06-16 21:24:00 [0;34m[DEBUG][0m   FILE_STATUS (UpdateUserRequest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:00 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UpdateUserRequest.java, FILE_NAME: UpdateUserRequest.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:00 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:00 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:00 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UpdateUserRequest.java][0m
[0m2025-06-16 21:24:00 [0;34m[DEBUG][0m   Found errors. Error code: 8, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:00 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:00 [0;31m[ERROR][0m   Error code: 8. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UpdateUserRequest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UpdateUserRequest.java:12:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UpdateUserRequest.java:14:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UpdateUserRequest.java:17:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UpdateUserRequest.java:20:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UpdateUserRequest.java:21:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UpdateUserRequest.java:22:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UpdateUserRequest.java:23:5: Missing a Javadoc comment. [JavadocVariable]
Audit done.
Checkstyle ends with 8 errors.
------[0m
[0m2025-06-16 21:24:00 [0;34m[DEBUG][0m   Error code: 8. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UpdateUserRequest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UpdateUserRequest.java:12:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UpdateUserRequest.java:14:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UpdateUserRequest.java:17:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UpdateUserRequest.java:20:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UpdateUserRequest.java:21:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UpdateUserRequest.java:22:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UpdateUserRequest.java:23:5: Missing a Javadoc comment. [JavadocVariable]
Audit done.
Checkstyle ends with 8 errors.
------[0m
[0m2025-06-16 21:24:01 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UserResponse.java[0m
[0m2025-06-16 21:24:01 [0;34m[DEBUG][0m   FILE_STATUS (UserResponse.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:01 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UserResponse.java, FILE_NAME: UserResponse.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:01 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:01 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:01 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UserResponse.java][0m
[0m2025-06-16 21:24:01 [0;34m[DEBUG][0m   Found errors. Error code: 6, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:01 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:01 [0;31m[ERROR][0m   Error code: 6. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UserResponse.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UserResponse.java:9:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UserResponse.java:10:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UserResponse.java:11:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UserResponse.java:12:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UserResponse.java:13:5: Missing a Javadoc comment. [JavadocVariable]
Audit done.
Checkstyle ends with 6 errors.
------[0m
[0m2025-06-16 21:24:01 [0;34m[DEBUG][0m   Error code: 6. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UserResponse.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UserResponse.java:9:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UserResponse.java:10:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UserResponse.java:11:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UserResponse.java:12:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UserResponse.java:13:5: Missing a Javadoc comment. [JavadocVariable]
Audit done.
Checkstyle ends with 6 errors.
------[0m
[0m2025-06-16 21:24:01 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/AuthProvider.java[0m
[0m2025-06-16 21:24:01 [0;34m[DEBUG][0m   FILE_STATUS (AuthProvider.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:01 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/AuthProvider.java, FILE_NAME: AuthProvider.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:01 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:01 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:01 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/AuthProvider.java][0m
[0m2025-06-16 21:24:02 [0;34m[DEBUG][0m   Found errors. Error code: 5, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:02 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:02 [0;31m[ERROR][0m   Error code: 5. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/AuthProvider.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/AuthProvider.java:4:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/AuthProvider.java:4:12: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/AuthProvider.java:4:20: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/AuthProvider.java:4:28: Missing a Javadoc comment. [JavadocVariable]
Audit done.
Checkstyle ends with 5 errors.
------[0m
[0m2025-06-16 21:24:02 [0;34m[DEBUG][0m   Error code: 5. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/AuthProvider.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/AuthProvider.java:4:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/AuthProvider.java:4:12: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/AuthProvider.java:4:20: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/AuthProvider.java:4:28: Missing a Javadoc comment. [JavadocVariable]
Audit done.
Checkstyle ends with 5 errors.
------[0m
[0m2025-06-16 21:24:02 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/Role.java[0m
[0m2025-06-16 21:24:02 [0;34m[DEBUG][0m   FILE_STATUS (Role.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:02 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/Role.java, FILE_NAME: Role.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:02 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:02 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:02 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/Role.java][0m
[0m2025-06-16 21:24:03 [0;34m[DEBUG][0m   Found errors. Error code: 3, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:03 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:03 [0;31m[ERROR][0m   Error code: 3. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/Role.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/Role.java:4:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/Role.java:4:11: Missing a Javadoc comment. [JavadocVariable]
Audit done.
Checkstyle ends with 3 errors.
------[0m
[0m2025-06-16 21:24:03 [0;34m[DEBUG][0m   Error code: 3. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/Role.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/Role.java:4:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/Role.java:4:11: Missing a Javadoc comment. [JavadocVariable]
Audit done.
Checkstyle ends with 3 errors.
------[0m
[0m2025-06-16 21:24:03 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/SearchPerfume.java[0m
[0m2025-06-16 21:24:03 [0;34m[DEBUG][0m   FILE_STATUS (SearchPerfume.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:03 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/SearchPerfume.java, FILE_NAME: SearchPerfume.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:03 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:03 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:03 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/SearchPerfume.java][0m
[0m2025-06-16 21:24:04 [0;34m[DEBUG][0m   Found errors. Error code: 4, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:04 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:04 [0;31m[ERROR][0m   Error code: 4. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/SearchPerfume.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/SearchPerfume.java:4:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/SearchPerfume.java:4:12: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/SearchPerfume.java:4:27: Missing a Javadoc comment. [JavadocVariable]
Audit done.
Checkstyle ends with 4 errors.
------[0m
[0m2025-06-16 21:24:04 [0;34m[DEBUG][0m   Error code: 4. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/SearchPerfume.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/SearchPerfume.java:4:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/SearchPerfume.java:4:12: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/SearchPerfume.java:4:27: Missing a Javadoc comment. [JavadocVariable]
Audit done.
Checkstyle ends with 4 errors.
------[0m
[0m2025-06-16 21:24:04 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java[0m
[0m2025-06-16 21:24:04 [0;34m[DEBUG][0m   FILE_STATUS (ApiExceptionHandler.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:04 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java, FILE_NAME: ApiExceptionHandler.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:04 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:04 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:04 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java][0m
[0m2025-06-16 21:24:05 [0;34m[DEBUG][0m   Found errors. Error code: 37, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:05 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:05 [0;31m[ERROR][0m   Error code: 37. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:14:5: Class 'ApiExceptionHandler' looks like designed for extension (can be subclassed), but the method 'handleApiRequestException' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ApiExceptionHandler' final or making the method 'handleApiRequestException' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:14:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:15: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:15:61: Parameter exception should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:16: Line is longer than 80 characters (found 89). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:19:5: Class 'ApiExceptionHandler' looks like designed for extension (can be subclassed), but the method 'handlePasswordConfirmationException' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ApiExceptionHandler' final or making the method 'handlePasswordConfirmationException' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:19:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:20: Line is longer than 80 characters (found 135). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:20:94: Parameter exception should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:21: Line is longer than 80 characters (found 114). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:24:5: Class 'ApiExceptionHandler' looks like designed for extension (can be subclassed), but the method 'handlePasswordException' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ApiExceptionHandler' final or making the method 'handlePasswordException' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:24:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:25: Line is longer than 80 characters (found 99). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:25:70: Parameter exception should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:26: Line is longer than 80 characters (found 101). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:29:5: Class 'ApiExceptionHandler' looks like designed for extension (can be subclassed), but the method 'handleEmailError' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ApiExceptionHandler' final or making the method 'handleEmailError' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:29:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:30: Line is longer than 80 characters (found 86). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:30:60: Parameter exception should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:31: Line is longer than 80 characters (found 95). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:34:5: Class 'ApiExceptionHandler' looks like designed for extension (can be subclassed), but the method 'handleCaptchaException' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ApiExceptionHandler' final or making the method 'handleCaptchaException' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:34:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:35: Line is longer than 80 characters (found 96). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:35:68: Parameter exception should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:36: Line is longer than 80 characters (found 99). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:39:5: Class 'ApiExceptionHandler' looks like designed for extension (can be subclassed), but the method 'handleInputFieldException' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ApiExceptionHandler' final or making the method 'handleInputFieldException' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:39:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:40: Line is longer than 80 characters (found 105). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:40:74: Parameter exception should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:41: Line is longer than 80 characters (found 104). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:42: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:45:5: Class 'ApiExceptionHandler' looks like designed for extension (can be subclassed), but the method 'handleJwtAuthenticationException' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ApiExceptionHandler' final or making the method 'handleJwtAuthenticationException' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:45:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:46: Line is longer than 80 characters (found 106). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:46:68: Parameter exception should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:47: Line is longer than 80 characters (found 91). [LineLength]
Audit done.
Checkstyle ends with 37 errors.
------[0m
[0m2025-06-16 21:24:05 [0;34m[DEBUG][0m   Error code: 37. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:14:5: Class 'ApiExceptionHandler' looks like designed for extension (can be subclassed), but the method 'handleApiRequestException' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ApiExceptionHandler' final or making the method 'handleApiRequestException' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:14:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:15: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:15:61: Parameter exception should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:16: Line is longer than 80 characters (found 89). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:19:5: Class 'ApiExceptionHandler' looks like designed for extension (can be subclassed), but the method 'handlePasswordConfirmationException' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ApiExceptionHandler' final or making the method 'handlePasswordConfirmationException' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:19:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:20: Line is longer than 80 characters (found 135). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:20:94: Parameter exception should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:21: Line is longer than 80 characters (found 114). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:24:5: Class 'ApiExceptionHandler' looks like designed for extension (can be subclassed), but the method 'handlePasswordException' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ApiExceptionHandler' final or making the method 'handlePasswordException' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:24:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:25: Line is longer than 80 characters (found 99). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:25:70: Parameter exception should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:26: Line is longer than 80 characters (found 101). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:29:5: Class 'ApiExceptionHandler' looks like designed for extension (can be subclassed), but the method 'handleEmailError' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ApiExceptionHandler' final or making the method 'handleEmailError' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:29:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:30: Line is longer than 80 characters (found 86). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:30:60: Parameter exception should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:31: Line is longer than 80 characters (found 95). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:34:5: Class 'ApiExceptionHandler' looks like designed for extension (can be subclassed), but the method 'handleCaptchaException' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ApiExceptionHandler' final or making the method 'handleCaptchaException' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:34:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:35: Line is longer than 80 characters (found 96). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:35:68: Parameter exception should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:36: Line is longer than 80 characters (found 99). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:39:5: Class 'ApiExceptionHandler' looks like designed for extension (can be subclassed), but the method 'handleInputFieldException' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ApiExceptionHandler' final or making the method 'handleInputFieldException' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:39:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:40: Line is longer than 80 characters (found 105). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:40:74: Parameter exception should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:41: Line is longer than 80 characters (found 104). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:42: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:45:5: Class 'ApiExceptionHandler' looks like designed for extension (can be subclassed), but the method 'handleJwtAuthenticationException' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ApiExceptionHandler' final or making the method 'handleJwtAuthenticationException' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:45:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:46: Line is longer than 80 characters (found 106). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:46:68: Parameter exception should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java:47: Line is longer than 80 characters (found 91). [LineLength]
Audit done.
Checkstyle ends with 37 errors.
------[0m
[0m2025-06-16 21:24:05 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiRequestException.java[0m
[0m2025-06-16 21:24:05 [0;34m[DEBUG][0m   FILE_STATUS (ApiRequestException.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:05 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiRequestException.java, FILE_NAME: ApiRequestException.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:05 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:05 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:05 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiRequestException.java][0m
[0m2025-06-16 21:24:06 [0;34m[DEBUG][0m   Found errors. Error code: 6, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:06 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:06 [0;31m[ERROR][0m   Error code: 6. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiRequestException.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiRequestException.java:8:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiRequestException.java:10:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiRequestException.java:10:32: Parameter message should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiRequestException.java:10:48: Parameter status should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiRequestException.java:10:59: 'status' hides a field. [HiddenField]
Audit done.
Checkstyle ends with 6 errors.
------[0m
[0m2025-06-16 21:24:06 [0;34m[DEBUG][0m   Error code: 6. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiRequestException.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiRequestException.java:8:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiRequestException.java:10:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiRequestException.java:10:32: Parameter message should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiRequestException.java:10:48: Parameter status should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiRequestException.java:10:59: 'status' hides a field. [HiddenField]
Audit done.
Checkstyle ends with 6 errors.
------[0m
[0m2025-06-16 21:24:06 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/CaptchaException.java[0m
[0m2025-06-16 21:24:06 [0;34m[DEBUG][0m   FILE_STATUS (CaptchaException.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:06 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/CaptchaException.java, FILE_NAME: CaptchaException.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:06 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:06 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:06 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/CaptchaException.java][0m
[0m2025-06-16 21:24:07 [0;34m[DEBUG][0m   Found errors. Error code: 5, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:07 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:07 [0;31m[ERROR][0m   Error code: 5. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/CaptchaException.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/CaptchaException.java:7:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/CaptchaException.java:9:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/CaptchaException.java:9:29: Parameter captchaError should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/CaptchaException.java:9:36: 'captchaError' hides a field. [HiddenField]
Audit done.
Checkstyle ends with 5 errors.
------[0m
[0m2025-06-16 21:24:07 [0;34m[DEBUG][0m   Error code: 5. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/CaptchaException.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/CaptchaException.java:7:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/CaptchaException.java:9:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/CaptchaException.java:9:29: Parameter captchaError should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/CaptchaException.java:9:36: 'captchaError' hides a field. [HiddenField]
Audit done.
Checkstyle ends with 5 errors.
------[0m
[0m2025-06-16 21:24:07 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/EmailException.java[0m
[0m2025-06-16 21:24:07 [0;34m[DEBUG][0m   FILE_STATUS (EmailException.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:07 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/EmailException.java, FILE_NAME: EmailException.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:07 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:07 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:07 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/EmailException.java][0m
[0m2025-06-16 21:24:08 [0;34m[DEBUG][0m   Found errors. Error code: 5, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:08 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:08 [0;31m[ERROR][0m   Error code: 5. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/EmailException.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/EmailException.java:7:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/EmailException.java:9:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/EmailException.java:9:27: Parameter emailError should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/EmailException.java:9:34: 'emailError' hides a field. [HiddenField]
Audit done.
Checkstyle ends with 5 errors.
------[0m
[0m2025-06-16 21:24:08 [0;34m[DEBUG][0m   Error code: 5. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/EmailException.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/EmailException.java:7:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/EmailException.java:9:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/EmailException.java:9:27: Parameter emailError should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/EmailException.java:9:34: 'emailError' hides a field. [HiddenField]
Audit done.
Checkstyle ends with 5 errors.
------[0m
[0m2025-06-16 21:24:08 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/InputFieldException.java[0m
[0m2025-06-16 21:24:08 [0;34m[DEBUG][0m   FILE_STATUS (InputFieldException.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:08 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/InputFieldException.java, FILE_NAME: InputFieldException.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:08 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:08 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:08 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/InputFieldException.java][0m
[0m2025-06-16 21:24:08 [0;34m[DEBUG][0m   Found errors. Error code: 6, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:08 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:08 [0;31m[ERROR][0m   Error code: 6. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/InputFieldException.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/InputFieldException.java:13:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/InputFieldException.java:14:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/InputFieldException.java:16:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/InputFieldException.java:16:32: Parameter bindingResult should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/InputFieldException.java:16:46: 'bindingResult' hides a field. [HiddenField]
Audit done.
Checkstyle ends with 6 errors.
------[0m
[0m2025-06-16 21:24:08 [0;34m[DEBUG][0m   Error code: 6. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/InputFieldException.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/InputFieldException.java:13:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/InputFieldException.java:14:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/InputFieldException.java:16:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/InputFieldException.java:16:32: Parameter bindingResult should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/InputFieldException.java:16:46: 'bindingResult' hides a field. [HiddenField]
Audit done.
Checkstyle ends with 6 errors.
------[0m
[0m2025-06-16 21:24:08 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordConfirmationException.java[0m
[0m2025-06-16 21:24:09 [0;34m[DEBUG][0m   FILE_STATUS (PasswordConfirmationException.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:09 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordConfirmationException.java, FILE_NAME: PasswordConfirmationException.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:09 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:09 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:09 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordConfirmationException.java][0m
[0m2025-06-16 21:24:09 [0;34m[DEBUG][0m   Found errors. Error code: 5, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:09 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:09 [0;31m[ERROR][0m   Error code: 5. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordConfirmationException.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordConfirmationException.java:7:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordConfirmationException.java:9:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordConfirmationException.java:9:42: Parameter password2Error should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordConfirmationException.java:9:49: 'password2Error' hides a field. [HiddenField]
Audit done.
Checkstyle ends with 5 errors.
------[0m
[0m2025-06-16 21:24:09 [0;34m[DEBUG][0m   Error code: 5. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordConfirmationException.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordConfirmationException.java:7:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordConfirmationException.java:9:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordConfirmationException.java:9:42: Parameter password2Error should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordConfirmationException.java:9:49: 'password2Error' hides a field. [HiddenField]
Audit done.
Checkstyle ends with 5 errors.
------[0m
[0m2025-06-16 21:24:09 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordException.java[0m
[0m2025-06-16 21:24:09 [0;34m[DEBUG][0m   FILE_STATUS (PasswordException.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:09 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordException.java, FILE_NAME: PasswordException.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:09 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:09 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:09 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordException.java][0m
[0m2025-06-16 21:24:10 [0;34m[DEBUG][0m   Found errors. Error code: 5, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:10 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:10 [0;31m[ERROR][0m   Error code: 5. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordException.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordException.java:7:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordException.java:9:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordException.java:9:30: Parameter passwordError should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordException.java:9:37: 'passwordError' hides a field. [HiddenField]
Audit done.
Checkstyle ends with 5 errors.
------[0m
[0m2025-06-16 21:24:10 [0;34m[DEBUG][0m   Error code: 5. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordException.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordException.java:7:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordException.java:9:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordException.java:9:30: Parameter passwordError should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordException.java:9:37: 'passwordError' hides a field. [HiddenField]
Audit done.
Checkstyle ends with 5 errors.
------[0m
[0m2025-06-16 21:24:10 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java[0m
[0m2025-06-16 21:24:10 [0;34m[DEBUG][0m   FILE_STATUS (AuthenticationMapper.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:10 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java, FILE_NAME: AuthenticationMapper.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:10 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:10 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:10 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java][0m
[0m2025-06-16 21:24:11 [0;34m[DEBUG][0m   Found errors. Error code: 38, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:11 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:11 [0;31m[ERROR][0m   Error code: 38. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:21:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:22:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:24:5: Class 'AuthenticationMapper' looks like designed for extension (can be subclassed), but the method 'login' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AuthenticationMapper' final or making the method 'login' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:24:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:24:41: Parameter request should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:25: Line is longer than 80 characters (found 113). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:27: Line is longer than 80 characters (found 102). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:32:5: Class 'AuthenticationMapper' looks like designed for extension (can be subclassed), but the method 'getEmailByPasswordResetCode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AuthenticationMapper' final or making the method 'getEmailByPasswordResetCode' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:32:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:32:47: Parameter code should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:36: Line is longer than 80 characters (found 118). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:36:5: Class 'AuthenticationMapper' looks like designed for extension (can be subclassed), but the method 'registerUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AuthenticationMapper' final or making the method 'registerUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:36:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:36:32: Parameter captcha should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:36:48: Parameter registrationRequest should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:36:89: Parameter bindingResult should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:40: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:41: Line is longer than 80 characters (found 101). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:44:5: Class 'AuthenticationMapper' looks like designed for extension (can be subclassed), but the method 'activateUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AuthenticationMapper' final or making the method 'activateUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:44:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:44:32: Parameter code should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:48:5: Class 'AuthenticationMapper' looks like designed for extension (can be subclassed), but the method 'sendPasswordResetCode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AuthenticationMapper' final or making the method 'sendPasswordResetCode' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:48:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:48:41: Parameter email should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:52: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:52:5: Class 'AuthenticationMapper' looks like designed for extension (can be subclassed), but the method 'passwordReset' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AuthenticationMapper' final or making the method 'passwordReset' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:52:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:52:33: Parameter email should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:52:47: Parameter passwordReset should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:53: Line is longer than 80 characters (found 117). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:56: Line is longer than 80 characters (found 112). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:56:5: Class 'AuthenticationMapper' looks like designed for extension (can be subclassed), but the method 'passwordReset' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AuthenticationMapper' final or making the method 'passwordReset' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:56:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:56:33: Parameter email should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:56:47: Parameter passwordReset should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:56:83: Parameter bindingResult should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:60: Line is longer than 80 characters (found 121). [LineLength]
Audit done.
Checkstyle ends with 38 errors.
------[0m
[0m2025-06-16 21:24:11 [0;34m[DEBUG][0m   Error code: 38. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:21:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:22:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:24:5: Class 'AuthenticationMapper' looks like designed for extension (can be subclassed), but the method 'login' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AuthenticationMapper' final or making the method 'login' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:24:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:24:41: Parameter request should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:25: Line is longer than 80 characters (found 113). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:27: Line is longer than 80 characters (found 102). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:32:5: Class 'AuthenticationMapper' looks like designed for extension (can be subclassed), but the method 'getEmailByPasswordResetCode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AuthenticationMapper' final or making the method 'getEmailByPasswordResetCode' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:32:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:32:47: Parameter code should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:36: Line is longer than 80 characters (found 118). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:36:5: Class 'AuthenticationMapper' looks like designed for extension (can be subclassed), but the method 'registerUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AuthenticationMapper' final or making the method 'registerUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:36:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:36:32: Parameter captcha should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:36:48: Parameter registrationRequest should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:36:89: Parameter bindingResult should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:40: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:41: Line is longer than 80 characters (found 101). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:44:5: Class 'AuthenticationMapper' looks like designed for extension (can be subclassed), but the method 'activateUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AuthenticationMapper' final or making the method 'activateUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:44:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:44:32: Parameter code should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:48:5: Class 'AuthenticationMapper' looks like designed for extension (can be subclassed), but the method 'sendPasswordResetCode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AuthenticationMapper' final or making the method 'sendPasswordResetCode' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:48:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:48:41: Parameter email should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:52: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:52:5: Class 'AuthenticationMapper' looks like designed for extension (can be subclassed), but the method 'passwordReset' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AuthenticationMapper' final or making the method 'passwordReset' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:52:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:52:33: Parameter email should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:52:47: Parameter passwordReset should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:53: Line is longer than 80 characters (found 117). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:56: Line is longer than 80 characters (found 112). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:56:5: Class 'AuthenticationMapper' looks like designed for extension (can be subclassed), but the method 'passwordReset' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AuthenticationMapper' final or making the method 'passwordReset' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:56:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:56:33: Parameter email should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:56:47: Parameter passwordReset should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:56:83: Parameter bindingResult should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java:60: Line is longer than 80 characters (found 121). [LineLength]
Audit done.
Checkstyle ends with 38 errors.
------[0m
[0m2025-06-16 21:24:11 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java[0m
[0m2025-06-16 21:24:11 [0;34m[DEBUG][0m   FILE_STATUS (CommonMapper.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:11 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java, FILE_NAME: CommonMapper.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:11 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:11 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:11 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java][0m
[0m2025-06-16 21:24:12 [0;34m[DEBUG][0m   Found errors. Error code: 19, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:12 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:12 [0;31m[ERROR][0m   Error code: 19. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java:17: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java:18:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java:20:5: Class 'CommonMapper' looks like designed for extension (can be subclassed), but the method 'convertToEntity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CommonMapper' final or making the method 'convertToEntity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java:20:30: Parameter data should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java:20:38: Parameter type should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java:24:5: Class 'CommonMapper' looks like designed for extension (can be subclassed), but the method 'convertToResponse' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CommonMapper' final or making the method 'convertToResponse' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java:24:32: Parameter data should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java:24:40: Parameter type should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java:28:5: Class 'CommonMapper' looks like designed for extension (can be subclassed), but the method 'convertToResponseList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CommonMapper' final or making the method 'convertToResponseList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java:28:42: Parameter lists should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java:28:57: Parameter type should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java:34: Line is longer than 80 characters (found 119). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java:34:5: Class 'CommonMapper' looks like designed for extension (can be subclassed), but the method 'getHeaderResponse' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CommonMapper' final or making the method 'getHeaderResponse' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java:34:48: Parameter orders should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java:34:64: Parameter totalPages should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java:34:84: Parameter totalElements should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java:34:104: Parameter type should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java:38: Line is longer than 80 characters (found 82). [LineLength]
Audit done.
Checkstyle ends with 19 errors.
------[0m
[0m2025-06-16 21:24:12 [0;34m[DEBUG][0m   Error code: 19. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java:17: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java:18:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java:20:5: Class 'CommonMapper' looks like designed for extension (can be subclassed), but the method 'convertToEntity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CommonMapper' final or making the method 'convertToEntity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java:20:30: Parameter data should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java:20:38: Parameter type should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java:24:5: Class 'CommonMapper' looks like designed for extension (can be subclassed), but the method 'convertToResponse' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CommonMapper' final or making the method 'convertToResponse' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java:24:32: Parameter data should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java:24:40: Parameter type should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java:28:5: Class 'CommonMapper' looks like designed for extension (can be subclassed), but the method 'convertToResponseList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CommonMapper' final or making the method 'convertToResponseList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java:28:42: Parameter lists should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java:28:57: Parameter type should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java:34: Line is longer than 80 characters (found 119). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java:34:5: Class 'CommonMapper' looks like designed for extension (can be subclassed), but the method 'getHeaderResponse' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CommonMapper' final or making the method 'getHeaderResponse' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java:34:48: Parameter orders should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java:34:64: Parameter totalPages should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java:34:84: Parameter totalElements should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java:34:104: Parameter type should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java:38: Line is longer than 80 characters (found 82). [LineLength]
Audit done.
Checkstyle ends with 19 errors.
------[0m
[0m2025-06-16 21:24:12 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java[0m
[0m2025-06-16 21:24:12 [0;34m[DEBUG][0m   FILE_STATUS (OrderMapper.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:12 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java, FILE_NAME: OrderMapper.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:12 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:12 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:12 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java][0m
[0m2025-06-16 21:24:13 [0;34m[DEBUG][0m   Found errors. Error code: 32, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:13 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:13 [0;31m[ERROR][0m   Error code: 32. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:23:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:24:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:25: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:26:5: Class 'OrderMapper' looks like designed for extension (can be subclassed), but the method 'getOrderById' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OrderMapper' final or making the method 'getOrderById' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:26:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:26:39: Parameter orderId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:27: Line is longer than 80 characters (found 103). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:29: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:30:5: Class 'OrderMapper' looks like designed for extension (can be subclassed), but the method 'getOrderItemsByOrderId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OrderMapper' final or making the method 'getOrderItemsByOrderId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:30:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:30:59: Parameter orderId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:31: Line is longer than 80 characters (found 121). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:34:5: Class 'OrderMapper' looks like designed for extension (can be subclassed), but the method 'getAllOrders' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OrderMapper' final or making the method 'getAllOrders' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:34:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:34:55: Parameter pageable should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:36: Line is longer than 80 characters (found 139). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:39: Line is longer than 80 characters (found 89). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:39:5: Class 'OrderMapper' looks like designed for extension (can be subclassed), but the method 'getUserOrders' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OrderMapper' final or making the method 'getUserOrders' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:39:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:39:56: Parameter email should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:39:70: Parameter pageable should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:41: Line is longer than 80 characters (found 139). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:44:5: Class 'OrderMapper' looks like designed for extension (can be subclassed), but the method 'deleteOrder' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OrderMapper' final or making the method 'deleteOrder' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:44:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:44:31: Parameter orderId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:48: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:48:5: Class 'OrderMapper' looks like designed for extension (can be subclassed), but the method 'postOrder' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OrderMapper' final or making the method 'postOrder' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:48:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:48:36: Parameter orderRequest should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:48:63: Parameter bindingResult should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:52: Line is longer than 80 characters (found 132). [LineLength]
Audit done.
Checkstyle ends with 32 errors.
------[0m
[0m2025-06-16 21:24:13 [0;34m[DEBUG][0m   Error code: 32. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:23:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:24:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:25: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:26:5: Class 'OrderMapper' looks like designed for extension (can be subclassed), but the method 'getOrderById' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OrderMapper' final or making the method 'getOrderById' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:26:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:26:39: Parameter orderId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:27: Line is longer than 80 characters (found 103). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:29: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:30:5: Class 'OrderMapper' looks like designed for extension (can be subclassed), but the method 'getOrderItemsByOrderId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OrderMapper' final or making the method 'getOrderItemsByOrderId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:30:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:30:59: Parameter orderId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:31: Line is longer than 80 characters (found 121). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:34:5: Class 'OrderMapper' looks like designed for extension (can be subclassed), but the method 'getAllOrders' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OrderMapper' final or making the method 'getAllOrders' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:34:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:34:55: Parameter pageable should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:36: Line is longer than 80 characters (found 139). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:39: Line is longer than 80 characters (found 89). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:39:5: Class 'OrderMapper' looks like designed for extension (can be subclassed), but the method 'getUserOrders' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OrderMapper' final or making the method 'getUserOrders' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:39:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:39:56: Parameter email should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:39:70: Parameter pageable should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:41: Line is longer than 80 characters (found 139). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:44:5: Class 'OrderMapper' looks like designed for extension (can be subclassed), but the method 'deleteOrder' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OrderMapper' final or making the method 'deleteOrder' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:44:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:44:31: Parameter orderId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:48: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:48:5: Class 'OrderMapper' looks like designed for extension (can be subclassed), but the method 'postOrder' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OrderMapper' final or making the method 'postOrder' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:48:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:48:36: Parameter orderRequest should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:48:63: Parameter bindingResult should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java:52: Line is longer than 80 characters (found 132). [LineLength]
Audit done.
Checkstyle ends with 32 errors.
------[0m
[0m2025-06-16 21:24:13 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java[0m
[0m2025-06-16 21:24:13 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeMapper.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:13 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java, FILE_NAME: PerfumeMapper.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:13 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:13 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:13 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java][0m
[0m2025-06-16 21:24:14 [0;34m[DEBUG][0m   Found errors. Error code: 51, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:14 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:14 [0;31m[ERROR][0m   Error code: 51. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:26:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:27:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:29:5: Class 'PerfumeMapper' looks like designed for extension (can be subclassed), but the method 'getPerfumeById' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeMapper' final or making the method 'getPerfumeById' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:29:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:29:47: Parameter perfumeId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:30: Line is longer than 80 characters (found 115). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:33:5: Class 'PerfumeMapper' looks like designed for extension (can be subclassed), but the method 'getPerfumesByIds' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeMapper' final or making the method 'getPerfumesByIds' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:33:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:33:51: Parameter perfumesId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:34: Line is longer than 80 characters (found 118). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:37:5: Class 'PerfumeMapper' looks like designed for extension (can be subclassed), but the method 'getAllPerfumes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeMapper' final or making the method 'getAllPerfumes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:37:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:37:59: Parameter pageable should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:38: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:39: Line is longer than 80 characters (found 147). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:42: Line is longer than 80 characters (found 119). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:42:5: Class 'PerfumeMapper' looks like designed for extension (can be subclassed), but the method 'findPerfumesByFilterParams' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeMapper' final or making the method 'findPerfumesByFilterParams' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:42:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:42:71: Parameter filter should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:42:100: Parameter pageable should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:43: Line is longer than 80 characters (found 103). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:44: Line is longer than 80 characters (found 147). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:47:5: Class 'PerfumeMapper' looks like designed for extension (can be subclassed), but the method 'findByPerfumer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeMapper' final or making the method 'findByPerfumer' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:47:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:47:49: Parameter perfumer should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:48: Line is longer than 80 characters (found 114). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:51:5: Class 'PerfumeMapper' looks like designed for extension (can be subclassed), but the method 'findByPerfumeGender' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeMapper' final or making the method 'findByPerfumeGender' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:51:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:51:54: Parameter perfumeGender should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:52: Line is longer than 80 characters (found 124). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:54: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:55: Line is longer than 80 characters (found 118). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:55:5: Class 'PerfumeMapper' looks like designed for extension (can be subclassed), but the method 'findByInputText' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeMapper' final or making the method 'findByInputText' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:55:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:55:60: Parameter searchType should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:55:86: Parameter text should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:55:99: Parameter pageable should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:56: Line is longer than 80 characters (found 102). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:57: Line is longer than 80 characters (found 147). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:60: Line is longer than 80 characters (found 124). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:60:5: Class 'PerfumeMapper' looks like designed for extension (can be subclassed), but the method 'savePerfume' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeMapper' final or making the method 'savePerfume' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:60:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:60:44: Parameter perfumeRequest should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:60:75: Parameter file should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:60:95: Parameter bindingResult should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:64: Line is longer than 80 characters (found 86). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:65: Line is longer than 80 characters (found 116). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:68:5: Class 'PerfumeMapper' looks like designed for extension (can be subclassed), but the method 'deletePerfume' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeMapper' final or making the method 'deletePerfume' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:68:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:68:33: Parameter perfumeId should be final. [FinalParameters]
Audit done.
Checkstyle ends with 51 errors.
------[0m
[0m2025-06-16 21:24:14 [0;34m[DEBUG][0m   Error code: 51. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:26:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:27:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:29:5: Class 'PerfumeMapper' looks like designed for extension (can be subclassed), but the method 'getPerfumeById' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeMapper' final or making the method 'getPerfumeById' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:29:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:29:47: Parameter perfumeId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:30: Line is longer than 80 characters (found 115). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:33:5: Class 'PerfumeMapper' looks like designed for extension (can be subclassed), but the method 'getPerfumesByIds' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeMapper' final or making the method 'getPerfumesByIds' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:33:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:33:51: Parameter perfumesId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:34: Line is longer than 80 characters (found 118). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:37:5: Class 'PerfumeMapper' looks like designed for extension (can be subclassed), but the method 'getAllPerfumes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeMapper' final or making the method 'getAllPerfumes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:37:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:37:59: Parameter pageable should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:38: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:39: Line is longer than 80 characters (found 147). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:42: Line is longer than 80 characters (found 119). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:42:5: Class 'PerfumeMapper' looks like designed for extension (can be subclassed), but the method 'findPerfumesByFilterParams' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeMapper' final or making the method 'findPerfumesByFilterParams' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:42:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:42:71: Parameter filter should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:42:100: Parameter pageable should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:43: Line is longer than 80 characters (found 103). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:44: Line is longer than 80 characters (found 147). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:47:5: Class 'PerfumeMapper' looks like designed for extension (can be subclassed), but the method 'findByPerfumer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeMapper' final or making the method 'findByPerfumer' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:47:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:47:49: Parameter perfumer should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:48: Line is longer than 80 characters (found 114). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:51:5: Class 'PerfumeMapper' looks like designed for extension (can be subclassed), but the method 'findByPerfumeGender' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeMapper' final or making the method 'findByPerfumeGender' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:51:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:51:54: Parameter perfumeGender should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:52: Line is longer than 80 characters (found 124). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:54: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:55: Line is longer than 80 characters (found 118). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:55:5: Class 'PerfumeMapper' looks like designed for extension (can be subclassed), but the method 'findByInputText' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeMapper' final or making the method 'findByInputText' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:55:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:55:60: Parameter searchType should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:55:86: Parameter text should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:55:99: Parameter pageable should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:56: Line is longer than 80 characters (found 102). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:57: Line is longer than 80 characters (found 147). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:60: Line is longer than 80 characters (found 124). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:60:5: Class 'PerfumeMapper' looks like designed for extension (can be subclassed), but the method 'savePerfume' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeMapper' final or making the method 'savePerfume' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:60:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:60:44: Parameter perfumeRequest should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:60:75: Parameter file should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:60:95: Parameter bindingResult should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:64: Line is longer than 80 characters (found 86). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:65: Line is longer than 80 characters (found 116). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:68:5: Class 'PerfumeMapper' looks like designed for extension (can be subclassed), but the method 'deletePerfume' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeMapper' final or making the method 'deletePerfume' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:68:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java:68:33: Parameter perfumeId should be final. [FinalParameters]
Audit done.
Checkstyle ends with 51 errors.
------[0m
[0m2025-06-16 21:24:14 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java[0m
[0m2025-06-16 21:24:14 [0;34m[DEBUG][0m   FILE_STATUS (ReviewMapper.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:14 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java, FILE_NAME: ReviewMapper.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:14 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:14 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:14 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java][0m
[0m2025-06-16 21:24:15 [0;34m[DEBUG][0m   Found errors. Error code: 15, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:15 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:15 [0;31m[ERROR][0m   Error code: 15. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java:18:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java:19:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java:21:5: Class 'ReviewMapper' looks like designed for extension (can be subclassed), but the method 'getReviewsByPerfumeId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ReviewMapper' final or making the method 'getReviewsByPerfumeId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java:21:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java:21:55: Parameter perfumeId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java:22: Line is longer than 80 characters (found 120). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java:25: Line is longer than 80 characters (found 120). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java:25:5: Class 'ReviewMapper' looks like designed for extension (can be subclassed), but the method 'addReviewToPerfume' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ReviewMapper' final or making the method 'addReviewToPerfume' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java:25:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java:25:46: Parameter reviewRequest should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java:25:75: Parameter perfumeId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java:25:91: Parameter bindingResult should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java:29: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java:30: Line is longer than 80 characters (found 121). [LineLength]
Audit done.
Checkstyle ends with 15 errors.
------[0m
[0m2025-06-16 21:24:15 [0;34m[DEBUG][0m   Error code: 15. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java:18:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java:19:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java:21:5: Class 'ReviewMapper' looks like designed for extension (can be subclassed), but the method 'getReviewsByPerfumeId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ReviewMapper' final or making the method 'getReviewsByPerfumeId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java:21:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java:21:55: Parameter perfumeId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java:22: Line is longer than 80 characters (found 120). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java:25: Line is longer than 80 characters (found 120). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java:25:5: Class 'ReviewMapper' looks like designed for extension (can be subclassed), but the method 'addReviewToPerfume' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ReviewMapper' final or making the method 'addReviewToPerfume' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java:25:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java:25:46: Parameter reviewRequest should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java:25:75: Parameter perfumeId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java:25:91: Parameter bindingResult should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java:29: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java:30: Line is longer than 80 characters (found 121). [LineLength]
Audit done.
Checkstyle ends with 15 errors.
------[0m
[0m2025-06-16 21:24:15 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java[0m
[0m2025-06-16 21:24:15 [0;34m[DEBUG][0m   FILE_STATUS (UserMapper.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:15 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java, FILE_NAME: UserMapper.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:15 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:15 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:15 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java][0m
[0m2025-06-16 21:24:16 [0;34m[DEBUG][0m   Found errors. Error code: 26, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:16 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:16 [0;31m[ERROR][0m   Error code: 26. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:23:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:24:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:26:5: Class 'UserMapper' looks like designed for extension (can be subclassed), but the method 'getUserById' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserMapper' final or making the method 'getUserById' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:26:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:26:37: Parameter userId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:27: Line is longer than 80 characters (found 99). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:30:5: Class 'UserMapper' looks like designed for extension (can be subclassed), but the method 'getUserInfo' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserMapper' final or making the method 'getUserInfo' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:30:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:30:37: Parameter email should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:31: Line is longer than 80 characters (found 98). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:34:5: Class 'UserMapper' looks like designed for extension (can be subclassed), but the method 'getCart' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserMapper' final or making the method 'getCart' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:34:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:34:42: Parameter perfumesIds should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:35: Line is longer than 80 characters (found 107). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:38:5: Class 'UserMapper' looks like designed for extension (can be subclassed), but the method 'getAllUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserMapper' final or making the method 'getAllUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:38:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:38:57: Parameter pageable should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:40: Line is longer than 80 characters (found 139). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:43: Line is longer than 80 characters (found 114). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:43:5: Class 'UserMapper' looks like designed for extension (can be subclassed), but the method 'updateUserInfo' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserMapper' final or making the method 'updateUserInfo' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:43:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:43:40: Parameter email should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:43:54: Parameter userRequest should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:43:85: Parameter bindingResult should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:48: Line is longer than 80 characters (found 107). [LineLength]
Audit done.
Checkstyle ends with 26 errors.
------[0m
[0m2025-06-16 21:24:16 [0;34m[DEBUG][0m   Error code: 26. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:23:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:24:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:26:5: Class 'UserMapper' looks like designed for extension (can be subclassed), but the method 'getUserById' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserMapper' final or making the method 'getUserById' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:26:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:26:37: Parameter userId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:27: Line is longer than 80 characters (found 99). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:30:5: Class 'UserMapper' looks like designed for extension (can be subclassed), but the method 'getUserInfo' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserMapper' final or making the method 'getUserInfo' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:30:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:30:37: Parameter email should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:31: Line is longer than 80 characters (found 98). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:34:5: Class 'UserMapper' looks like designed for extension (can be subclassed), but the method 'getCart' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserMapper' final or making the method 'getCart' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:34:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:34:42: Parameter perfumesIds should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:35: Line is longer than 80 characters (found 107). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:38:5: Class 'UserMapper' looks like designed for extension (can be subclassed), but the method 'getAllUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserMapper' final or making the method 'getAllUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:38:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:38:57: Parameter pageable should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:40: Line is longer than 80 characters (found 139). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:43: Line is longer than 80 characters (found 114). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:43:5: Class 'UserMapper' looks like designed for extension (can be subclassed), but the method 'updateUserInfo' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserMapper' final or making the method 'updateUserInfo' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:43:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:43:40: Parameter email should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:43:54: Parameter userRequest should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:43:85: Parameter bindingResult should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java:48: Line is longer than 80 characters (found 107). [LineLength]
Audit done.
Checkstyle ends with 26 errors.
------[0m
[0m2025-06-16 21:24:16 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderItemRepository.java[0m
[0m2025-06-16 21:24:16 [0;34m[DEBUG][0m   FILE_STATUS (OrderItemRepository.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:16 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderItemRepository.java, FILE_NAME: OrderItemRepository.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:16 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:16 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:16 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderItemRepository.java][0m
[0m2025-06-16 21:24:17 [0;34m[DEBUG][0m   Found errors. Error code: 1, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:17 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:17 [0;31m[ERROR][0m   Error code: 1. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderItemRepository.java:1: Missing package-info.java file. [JavadocPackage]
Audit done.
Checkstyle ends with 1 errors.
------[0m
[0m2025-06-16 21:24:17 [0;34m[DEBUG][0m   Error code: 1. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderItemRepository.java:1: Missing package-info.java file. [JavadocPackage]
Audit done.
Checkstyle ends with 1 errors.
------[0m
[0m2025-06-16 21:24:17 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderRepository.java[0m
[0m2025-06-16 21:24:17 [0;34m[DEBUG][0m   FILE_STATUS (OrderRepository.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:17 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderRepository.java, FILE_NAME: OrderRepository.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:17 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:17 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:17 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderRepository.java][0m
[0m2025-06-16 21:24:18 [0;34m[DEBUG][0m   Found errors. Error code: 5, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:18 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:18 [0;31m[ERROR][0m   Error code: 5. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderRepository.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderRepository.java:15:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderRepository.java:17:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderRepository.java:19:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderRepository.java:21:5: Missing a Javadoc comment. [MissingJavadocMethod]
Audit done.
Checkstyle ends with 5 errors.
------[0m
[0m2025-06-16 21:24:18 [0;34m[DEBUG][0m   Error code: 5. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderRepository.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderRepository.java:15:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderRepository.java:17:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderRepository.java:19:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderRepository.java:21:5: Missing a Javadoc comment. [MissingJavadocMethod]
Audit done.
Checkstyle ends with 5 errors.
------[0m
[0m2025-06-16 21:24:18 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java[0m
[0m2025-06-16 21:24:18 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeRepository.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:18 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java, FILE_NAME: PerfumeRepository.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:18 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:18 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:18 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java][0m
[0m2025-06-16 21:24:19 [0;34m[DEBUG][0m   Found errors. Error code: 34, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:19 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:19 [0;31m[ERROR][0m   Error code: 34. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:10:8: Unused import - org.springframework.data.repository.query.Param. [UnusedImports]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:18:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:19: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:20:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:23:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:25:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:27:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:29: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:29:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:32:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:32:51: '+' should be on a new line. [OperatorWrap]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:33: Line is longer than 80 characters (found 93). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:33:93: '+' should be on a new line. [OperatorWrap]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:34: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:34:92: '+' should be on a new line. [OperatorWrap]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:35: Line is longer than 80 characters (found 109). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:35:109: '+' should be on a new line. [OperatorWrap]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:36: Line is longer than 80 characters (found 100). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:38: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:39: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:40: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:41: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:45:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:45:51: '+' should be on a new line. [OperatorWrap]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:46:80: '+' should be on a new line. [OperatorWrap]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:50:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:50:51: '+' should be on a new line. [OperatorWrap]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:51: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:51:84: '+' should be on a new line. [OperatorWrap]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:55:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:55:51: '+' should be on a new line. [OperatorWrap]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:56:79: '+' should be on a new line. [OperatorWrap]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:58: Line is longer than 80 characters (found 86). [LineLength]
Audit done.
Checkstyle ends with 34 errors.
------[0m
[0m2025-06-16 21:24:19 [0;34m[DEBUG][0m   Error code: 34. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:10:8: Unused import - org.springframework.data.repository.query.Param. [UnusedImports]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:18:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:19: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:20:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:23:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:25:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:27:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:29: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:29:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:32:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:32:51: '+' should be on a new line. [OperatorWrap]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:33: Line is longer than 80 characters (found 93). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:33:93: '+' should be on a new line. [OperatorWrap]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:34: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:34:92: '+' should be on a new line. [OperatorWrap]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:35: Line is longer than 80 characters (found 109). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:35:109: '+' should be on a new line. [OperatorWrap]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:36: Line is longer than 80 characters (found 100). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:38: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:39: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:40: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:41: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:45:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:45:51: '+' should be on a new line. [OperatorWrap]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:46:80: '+' should be on a new line. [OperatorWrap]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:50:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:50:51: '+' should be on a new line. [OperatorWrap]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:51: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:51:84: '+' should be on a new line. [OperatorWrap]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:55:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:55:51: '+' should be on a new line. [OperatorWrap]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:56:79: '+' should be on a new line. [OperatorWrap]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java:58: Line is longer than 80 characters (found 86). [LineLength]
Audit done.
Checkstyle ends with 34 errors.
------[0m
[0m2025-06-16 21:24:19 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/ReviewRepository.java[0m
[0m2025-06-16 21:24:19 [0;34m[DEBUG][0m   FILE_STATUS (ReviewRepository.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:19 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/ReviewRepository.java, FILE_NAME: ReviewRepository.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:19 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:19 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:19 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/ReviewRepository.java][0m
[0m2025-06-16 21:24:20 [0;34m[DEBUG][0m   Found errors. Error code: 1, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:20 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:20 [0;31m[ERROR][0m   Error code: 1. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/ReviewRepository.java:1: Missing package-info.java file. [JavadocPackage]
Audit done.
Checkstyle ends with 1 errors.
------[0m
[0m2025-06-16 21:24:20 [0;34m[DEBUG][0m   Error code: 1. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/ReviewRepository.java:1: Missing package-info.java file. [JavadocPackage]
Audit done.
Checkstyle ends with 1 errors.
------[0m
[0m2025-06-16 21:24:20 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/UserRepository.java[0m
[0m2025-06-16 21:24:20 [0;34m[DEBUG][0m   FILE_STATUS (UserRepository.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:20 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/UserRepository.java, FILE_NAME: UserRepository.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:20 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:20 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:20 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/UserRepository.java][0m
[0m2025-06-16 21:24:21 [0;34m[DEBUG][0m   Found errors. Error code: 7, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:21 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:21 [0;31m[ERROR][0m   Error code: 7. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/UserRepository.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/UserRepository.java:17:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/UserRepository.java:19:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/UserRepository.java:21:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/UserRepository.java:23:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/UserRepository.java:25: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/UserRepository.java:25:5: Missing a Javadoc comment. [MissingJavadocMethod]
Audit done.
Checkstyle ends with 7 errors.
------[0m
[0m2025-06-16 21:24:21 [0;34m[DEBUG][0m   Error code: 7. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/UserRepository.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/UserRepository.java:17:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/UserRepository.java:19:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/UserRepository.java:21:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/UserRepository.java:23:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/UserRepository.java:25: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/UserRepository.java:25:5: Missing a Javadoc comment. [MissingJavadocMethod]
Audit done.
Checkstyle ends with 7 errors.
------[0m
[0m2025-06-16 21:24:21 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java[0m
[0m2025-06-16 21:24:21 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeProjection.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:21 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java, FILE_NAME: PerfumeProjection.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:21 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:21 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:21 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java][0m
[0m2025-06-16 21:24:21 [0;34m[DEBUG][0m   Found errors. Error code: 12, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:21 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:21 [0;31m[ERROR][0m   Error code: 12. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java:6:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java:7:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java:8:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java:9:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java:10:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java:11:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java:12: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java:13:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java:16:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java:17:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java:18:5: Missing a Javadoc comment. [MissingJavadocMethod]
Audit done.
Checkstyle ends with 12 errors.
------[0m
[0m2025-06-16 21:24:21 [0;34m[DEBUG][0m   Error code: 12. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java:6:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java:7:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java:8:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java:9:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java:10:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java:11:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java:12: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java:13:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java:16:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java:17:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java:18:5: Missing a Javadoc comment. [MissingJavadocMethod]
Audit done.
Checkstyle ends with 12 errors.
------[0m
[0m2025-06-16 21:24:21 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtAuthenticationException.java[0m
[0m2025-06-16 21:24:21 [0;34m[DEBUG][0m   FILE_STATUS (JwtAuthenticationException.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:21 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtAuthenticationException.java, FILE_NAME: JwtAuthenticationException.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:21 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:21 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:21 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtAuthenticationException.java][0m
[0m2025-06-16 21:24:22 [0;34m[DEBUG][0m   Found errors. Error code: 8, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:22 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:22 [0;31m[ERROR][0m   Error code: 8. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtAuthenticationException.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtAuthenticationException.java:10:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtAuthenticationException.java:12:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtAuthenticationException.java:12:39: Parameter msg should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtAuthenticationException.java:16:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtAuthenticationException.java:16:39: Parameter msg should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtAuthenticationException.java:16:51: Parameter httpStatus should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtAuthenticationException.java:16:62: 'httpStatus' hides a field. [HiddenField]
Audit done.
Checkstyle ends with 8 errors.
------[0m
[0m2025-06-16 21:24:22 [0;34m[DEBUG][0m   Error code: 8. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtAuthenticationException.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtAuthenticationException.java:10:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtAuthenticationException.java:12:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtAuthenticationException.java:12:39: Parameter msg should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtAuthenticationException.java:16:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtAuthenticationException.java:16:39: Parameter msg should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtAuthenticationException.java:16:51: Parameter httpStatus should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtAuthenticationException.java:16:62: 'httpStatus' hides a field. [HiddenField]
Audit done.
Checkstyle ends with 8 errors.
------[0m
[0m2025-06-16 21:24:22 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtConfigurer.java[0m
[0m2025-06-16 21:24:22 [0;34m[DEBUG][0m   FILE_STATUS (JwtConfigurer.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:22 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtConfigurer.java, FILE_NAME: JwtConfigurer.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:22 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:22 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:22 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtConfigurer.java][0m
[0m2025-06-16 21:24:23 [0;34m[DEBUG][0m   Found errors. Error code: 6, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:23 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:23 [0;31m[ERROR][0m   Error code: 6. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtConfigurer.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtConfigurer.java:12: Line is longer than 80 characters (found 104). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtConfigurer.java:14:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtConfigurer.java:16:5: Class 'JwtConfigurer' looks like designed for extension (can be subclassed), but the method 'configure' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'JwtConfigurer' final or making the method 'configure' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtConfigurer.java:17:27: Parameter builder should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtConfigurer.java:18: Line is longer than 80 characters (found 87). [LineLength]
Audit done.
Checkstyle ends with 6 errors.
------[0m
[0m2025-06-16 21:24:23 [0;34m[DEBUG][0m   Error code: 6. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtConfigurer.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtConfigurer.java:12: Line is longer than 80 characters (found 104). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtConfigurer.java:14:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtConfigurer.java:16:5: Class 'JwtConfigurer' looks like designed for extension (can be subclassed), but the method 'configure' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'JwtConfigurer' final or making the method 'configure' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtConfigurer.java:17:27: Parameter builder should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtConfigurer.java:18: Line is longer than 80 characters (found 87). [LineLength]
Audit done.
Checkstyle ends with 6 errors.
------[0m
[0m2025-06-16 21:24:23 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java[0m
[0m2025-06-16 21:24:23 [0;34m[DEBUG][0m   FILE_STATUS (JwtFilter.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:23 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java, FILE_NAME: JwtFilter.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:23 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:23 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:23 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java][0m
[0m2025-06-16 21:24:24 [0;34m[DEBUG][0m   Found errors. Error code: 11, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:24 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:24 [0;31m[ERROR][0m   Error code: 11. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java:23:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java:25:5: Class 'JwtFilter' looks like designed for extension (can be subclassed), but the method 'doFilter' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'JwtFilter' final or making the method 'doFilter' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java:26: Line is longer than 80 characters (found 152). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java:26:26: Parameter servletRequest should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java:26:57: Parameter servletResponse should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java:26:90: Parameter filterChain should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java:27: Line is longer than 80 characters (found 85). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java:31: Line is longer than 80 characters (found 85). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java:34: Line is longer than 80 characters (found 89). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java:39: Line is longer than 80 characters (found 89). [LineLength]
Audit done.
Checkstyle ends with 11 errors.
------[0m
[0m2025-06-16 21:24:24 [0;34m[DEBUG][0m   Error code: 11. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java:23:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java:25:5: Class 'JwtFilter' looks like designed for extension (can be subclassed), but the method 'doFilter' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'JwtFilter' final or making the method 'doFilter' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java:26: Line is longer than 80 characters (found 152). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java:26:26: Parameter servletRequest should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java:26:57: Parameter servletResponse should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java:26:90: Parameter filterChain should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java:27: Line is longer than 80 characters (found 85). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java:31: Line is longer than 80 characters (found 85). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java:34: Line is longer than 80 characters (found 89). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java:39: Line is longer than 80 characters (found 89). [LineLength]
Audit done.
Checkstyle ends with 11 errors.
------[0m
[0m2025-06-16 21:24:24 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java[0m
[0m2025-06-16 21:24:24 [0;34m[DEBUG][0m   FILE_STATUS (JwtProvider.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:24 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java, FILE_NAME: JwtProvider.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:24 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:24 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:24 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java][0m
[0m2025-06-16 21:24:25 [0;34m[DEBUG][0m   Found errors. Error code: 32, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:25 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:25 [0;31m[ERROR][0m   Error code: 32. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:30:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:33:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:36:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:37: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:39:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:42:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:44:5: Class 'JwtProvider' looks like designed for extension (can be subclassed), but the method 'init' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'JwtProvider' final or making the method 'init' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:46: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:51:5: Class 'JwtProvider' looks like designed for extension (can be subclassed), but the method 'createToken' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'JwtProvider' final or making the method 'createToken' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:51:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:51:31: Parameter username should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:51:48: Parameter role should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:53:75: '1000' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:57: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:64:5: Class 'JwtProvider' looks like designed for extension (can be subclassed), but the method 'validateToken' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'JwtProvider' final or making the method 'validateToken' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:64:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:64:34: Parameter token should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:66: Line is longer than 80 characters (found 111). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:69: Line is longer than 80 characters (found 93). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:73:5: Class 'JwtProvider' looks like designed for extension (can be subclassed), but the method 'getAuthentication' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'JwtProvider' final or making the method 'getAuthentication' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:73:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:73:45: Parameter token should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:74: Line is longer than 80 characters (found 97). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:75: Line is longer than 80 characters (found 102). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:78:5: Class 'JwtProvider' looks like designed for extension (can be subclassed), but the method 'getUsername' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'JwtProvider' final or making the method 'getUsername' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:78:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:78:31: Parameter token should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:79: Line is longer than 80 characters (found 116). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:82:5: Class 'JwtProvider' looks like designed for extension (can be subclassed), but the method 'resolveToken' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'JwtProvider' final or making the method 'resolveToken' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:82:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:82:32: Parameter request should be final. [FinalParameters]
Audit done.
Checkstyle ends with 32 errors.
------[0m
[0m2025-06-16 21:24:25 [0;34m[DEBUG][0m   Error code: 32. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:30:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:33:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:36:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:37: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:39:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:42:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:44:5: Class 'JwtProvider' looks like designed for extension (can be subclassed), but the method 'init' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'JwtProvider' final or making the method 'init' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:46: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:51:5: Class 'JwtProvider' looks like designed for extension (can be subclassed), but the method 'createToken' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'JwtProvider' final or making the method 'createToken' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:51:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:51:31: Parameter username should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:51:48: Parameter role should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:53:75: '1000' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:57: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:64:5: Class 'JwtProvider' looks like designed for extension (can be subclassed), but the method 'validateToken' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'JwtProvider' final or making the method 'validateToken' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:64:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:64:34: Parameter token should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:66: Line is longer than 80 characters (found 111). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:69: Line is longer than 80 characters (found 93). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:73:5: Class 'JwtProvider' looks like designed for extension (can be subclassed), but the method 'getAuthentication' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'JwtProvider' final or making the method 'getAuthentication' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:73:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:73:45: Parameter token should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:74: Line is longer than 80 characters (found 97). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:75: Line is longer than 80 characters (found 102). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:78:5: Class 'JwtProvider' looks like designed for extension (can be subclassed), but the method 'getUsername' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'JwtProvider' final or making the method 'getUsername' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:78:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:78:31: Parameter token should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:79: Line is longer than 80 characters (found 116). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:82:5: Class 'JwtProvider' looks like designed for extension (can be subclassed), but the method 'resolveToken' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'JwtProvider' final or making the method 'resolveToken' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:82:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java:82:32: Parameter request should be final. [FinalParameters]
Audit done.
Checkstyle ends with 32 errors.
------[0m
[0m2025-06-16 21:24:25 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserDetailsServiceImpl.java[0m
[0m2025-06-16 21:24:25 [0;34m[DEBUG][0m   FILE_STATUS (UserDetailsServiceImpl.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:25 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserDetailsServiceImpl.java, FILE_NAME: UserDetailsServiceImpl.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:25 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:25 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:25 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserDetailsServiceImpl.java][0m
[0m2025-06-16 21:24:26 [0;34m[DEBUG][0m   Found errors. Error code: 6, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:26 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:26 [0;31m[ERROR][0m   Error code: 6. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserDetailsServiceImpl.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserDetailsServiceImpl.java:18:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserDetailsServiceImpl.java:20:5: Class 'UserDetailsServiceImpl' looks like designed for extension (can be subclassed), but the method 'loadUserByUsername' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserDetailsServiceImpl' final or making the method 'loadUserByUsername' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserDetailsServiceImpl.java:21: Line is longer than 80 characters (found 90). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserDetailsServiceImpl.java:21:43: Parameter email should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserDetailsServiceImpl.java:23: Line is longer than 80 characters (found 82). [LineLength]
Audit done.
Checkstyle ends with 6 errors.
------[0m
[0m2025-06-16 21:24:26 [0;34m[DEBUG][0m   Error code: 6. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserDetailsServiceImpl.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserDetailsServiceImpl.java:18:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserDetailsServiceImpl.java:20:5: Class 'UserDetailsServiceImpl' looks like designed for extension (can be subclassed), but the method 'loadUserByUsername' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserDetailsServiceImpl' final or making the method 'loadUserByUsername' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserDetailsServiceImpl.java:21: Line is longer than 80 characters (found 90). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserDetailsServiceImpl.java:21:43: Parameter email should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserDetailsServiceImpl.java:23: Line is longer than 80 characters (found 82). [LineLength]
Audit done.
Checkstyle ends with 6 errors.
------[0m
[0m2025-06-16 21:24:26 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java[0m
[0m2025-06-16 21:24:26 [0;34m[DEBUG][0m   FILE_STATUS (UserPrincipal.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:26 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java, FILE_NAME: UserPrincipal.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:26 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:26 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:26 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java][0m
[0m2025-06-16 21:24:27 [0;34m[DEBUG][0m   Found errors. Error code: 23, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:27 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:27 [0;31m[ERROR][0m   Error code: 23. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java:18:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java:19:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java:20:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java:21:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java:22:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java:24:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java:24:40: Parameter user should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java:26: Line is longer than 80 characters (found 109). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java:27: Line is longer than 80 characters (found 97). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java:30: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java:30:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java:30:40: Parameter user should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java:30:51: Parameter attributes should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java:36:5: Class 'UserPrincipal' looks like designed for extension (can be subclassed), but the method 'getAttributes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserPrincipal' final or making the method 'getAttributes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java:41:5: Class 'UserPrincipal' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserPrincipal' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java:46:5: Class 'UserPrincipal' looks like designed for extension (can be subclassed), but the method 'getAuthorities' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserPrincipal' final or making the method 'getAuthorities' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java:51:5: Class 'UserPrincipal' looks like designed for extension (can be subclassed), but the method 'getPassword' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserPrincipal' final or making the method 'getPassword' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java:56:5: Class 'UserPrincipal' looks like designed for extension (can be subclassed), but the method 'getUsername' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserPrincipal' final or making the method 'getUsername' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java:61:5: Class 'UserPrincipal' looks like designed for extension (can be subclassed), but the method 'isAccountNonExpired' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserPrincipal' final or making the method 'isAccountNonExpired' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java:66:5: Class 'UserPrincipal' looks like designed for extension (can be subclassed), but the method 'isAccountNonLocked' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserPrincipal' final or making the method 'isAccountNonLocked' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java:71:5: Class 'UserPrincipal' looks like designed for extension (can be subclassed), but the method 'isCredentialsNonExpired' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserPrincipal' final or making the method 'isCredentialsNonExpired' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java:76:5: Class 'UserPrincipal' looks like designed for extension (can be subclassed), but the method 'isEnabled' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserPrincipal' final or making the method 'isEnabled' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
Audit done.
Checkstyle ends with 23 errors.
------[0m
[0m2025-06-16 21:24:27 [0;34m[DEBUG][0m   Error code: 23. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java:18:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java:19:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java:20:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java:21:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java:22:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java:24:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java:24:40: Parameter user should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java:26: Line is longer than 80 characters (found 109). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java:27: Line is longer than 80 characters (found 97). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java:30: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java:30:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java:30:40: Parameter user should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java:30:51: Parameter attributes should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java:36:5: Class 'UserPrincipal' looks like designed for extension (can be subclassed), but the method 'getAttributes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserPrincipal' final or making the method 'getAttributes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java:41:5: Class 'UserPrincipal' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserPrincipal' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java:46:5: Class 'UserPrincipal' looks like designed for extension (can be subclassed), but the method 'getAuthorities' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserPrincipal' final or making the method 'getAuthorities' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java:51:5: Class 'UserPrincipal' looks like designed for extension (can be subclassed), but the method 'getPassword' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserPrincipal' final or making the method 'getPassword' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java:56:5: Class 'UserPrincipal' looks like designed for extension (can be subclassed), but the method 'getUsername' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserPrincipal' final or making the method 'getUsername' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java:61:5: Class 'UserPrincipal' looks like designed for extension (can be subclassed), but the method 'isAccountNonExpired' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserPrincipal' final or making the method 'isAccountNonExpired' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java:66:5: Class 'UserPrincipal' looks like designed for extension (can be subclassed), but the method 'isAccountNonLocked' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserPrincipal' final or making the method 'isAccountNonLocked' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java:71:5: Class 'UserPrincipal' looks like designed for extension (can be subclassed), but the method 'isCredentialsNonExpired' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserPrincipal' final or making the method 'isCredentialsNonExpired' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java:76:5: Class 'UserPrincipal' looks like designed for extension (can be subclassed), but the method 'isEnabled' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserPrincipal' final or making the method 'isEnabled' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
Audit done.
Checkstyle ends with 23 errors.
------[0m
[0m2025-06-16 21:24:27 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/CustomOAuth2UserService.java[0m
[0m2025-06-16 21:24:27 [0;34m[DEBUG][0m   FILE_STATUS (CustomOAuth2UserService.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:27 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/CustomOAuth2UserService.java, FILE_NAME: CustomOAuth2UserService.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:27 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:27 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:27 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/CustomOAuth2UserService.java][0m
[0m2025-06-16 21:24:28 [0;34m[DEBUG][0m   Found errors. Error code: 10, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:28 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:28 [0;31m[ERROR][0m   Error code: 10. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/CustomOAuth2UserService.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/CustomOAuth2UserService.java:19:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/CustomOAuth2UserService.java:20:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/CustomOAuth2UserService.java:22:5: Class 'CustomOAuth2UserService' looks like designed for extension (can be subclassed), but the method 'loadUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CustomOAuth2UserService' final or making the method 'loadUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/CustomOAuth2UserService.java:23: Line is longer than 80 characters (found 100). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/CustomOAuth2UserService.java:23:32: Parameter userRequest should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/CustomOAuth2UserService.java:24: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/CustomOAuth2UserService.java:26: Line is longer than 80 characters (found 114). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/CustomOAuth2UserService.java:30: Line is longer than 80 characters (found 86). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/CustomOAuth2UserService.java:32: Line is longer than 80 characters (found 90). [LineLength]
Audit done.
Checkstyle ends with 10 errors.
------[0m
[0m2025-06-16 21:24:28 [0;34m[DEBUG][0m   Error code: 10. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/CustomOAuth2UserService.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/CustomOAuth2UserService.java:19:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/CustomOAuth2UserService.java:20:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/CustomOAuth2UserService.java:22:5: Class 'CustomOAuth2UserService' looks like designed for extension (can be subclassed), but the method 'loadUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CustomOAuth2UserService' final or making the method 'loadUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/CustomOAuth2UserService.java:23: Line is longer than 80 characters (found 100). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/CustomOAuth2UserService.java:23:32: Parameter userRequest should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/CustomOAuth2UserService.java:24: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/CustomOAuth2UserService.java:26: Line is longer than 80 characters (found 114). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/CustomOAuth2UserService.java:30: Line is longer than 80 characters (found 86). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/CustomOAuth2UserService.java:32: Line is longer than 80 characters (found 90). [LineLength]
Audit done.
Checkstyle ends with 10 errors.
------[0m
[0m2025-06-16 21:24:28 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/FacebookOAuth2UserInfo.java[0m
[0m2025-06-16 21:24:28 [0;34m[DEBUG][0m   FILE_STATUS (FacebookOAuth2UserInfo.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:28 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/FacebookOAuth2UserInfo.java, FILE_NAME: FacebookOAuth2UserInfo.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:28 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:28 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:28 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/FacebookOAuth2UserInfo.java][0m
[0m2025-06-16 21:24:29 [0;34m[DEBUG][0m   Found errors. Error code: 7, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:29 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:29 [0;31m[ERROR][0m   Error code: 7. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/FacebookOAuth2UserInfo.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/FacebookOAuth2UserInfo.java:7:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/FacebookOAuth2UserInfo.java:7:35: Parameter attributes should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/FacebookOAuth2UserInfo.java:11:5: Class 'FacebookOAuth2UserInfo' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FacebookOAuth2UserInfo' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/FacebookOAuth2UserInfo.java:16:5: Class 'FacebookOAuth2UserInfo' looks like designed for extension (can be subclassed), but the method 'getFirstName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FacebookOAuth2UserInfo' final or making the method 'getFirstName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/FacebookOAuth2UserInfo.java:21:5: Class 'FacebookOAuth2UserInfo' looks like designed for extension (can be subclassed), but the method 'getLastName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FacebookOAuth2UserInfo' final or making the method 'getLastName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/FacebookOAuth2UserInfo.java:26:5: Class 'FacebookOAuth2UserInfo' looks like designed for extension (can be subclassed), but the method 'getEmail' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FacebookOAuth2UserInfo' final or making the method 'getEmail' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
Audit done.
Checkstyle ends with 7 errors.
------[0m
[0m2025-06-16 21:24:29 [0;34m[DEBUG][0m   Error code: 7. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/FacebookOAuth2UserInfo.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/FacebookOAuth2UserInfo.java:7:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/FacebookOAuth2UserInfo.java:7:35: Parameter attributes should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/FacebookOAuth2UserInfo.java:11:5: Class 'FacebookOAuth2UserInfo' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FacebookOAuth2UserInfo' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/FacebookOAuth2UserInfo.java:16:5: Class 'FacebookOAuth2UserInfo' looks like designed for extension (can be subclassed), but the method 'getFirstName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FacebookOAuth2UserInfo' final or making the method 'getFirstName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/FacebookOAuth2UserInfo.java:21:5: Class 'FacebookOAuth2UserInfo' looks like designed for extension (can be subclassed), but the method 'getLastName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FacebookOAuth2UserInfo' final or making the method 'getLastName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/FacebookOAuth2UserInfo.java:26:5: Class 'FacebookOAuth2UserInfo' looks like designed for extension (can be subclassed), but the method 'getEmail' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FacebookOAuth2UserInfo' final or making the method 'getEmail' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
Audit done.
Checkstyle ends with 7 errors.
------[0m
[0m2025-06-16 21:24:29 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GithubOAuth2UserInfo.java[0m
[0m2025-06-16 21:24:29 [0;34m[DEBUG][0m   FILE_STATUS (GithubOAuth2UserInfo.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:29 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GithubOAuth2UserInfo.java, FILE_NAME: GithubOAuth2UserInfo.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:29 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:29 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:29 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GithubOAuth2UserInfo.java][0m
[0m2025-06-16 21:24:30 [0;34m[DEBUG][0m   Found errors. Error code: 7, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:30 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:30 [0;31m[ERROR][0m   Error code: 7. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GithubOAuth2UserInfo.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GithubOAuth2UserInfo.java:7:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GithubOAuth2UserInfo.java:7:33: Parameter attributes should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GithubOAuth2UserInfo.java:11:5: Class 'GithubOAuth2UserInfo' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GithubOAuth2UserInfo' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GithubOAuth2UserInfo.java:16:5: Class 'GithubOAuth2UserInfo' looks like designed for extension (can be subclassed), but the method 'getFirstName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GithubOAuth2UserInfo' final or making the method 'getFirstName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GithubOAuth2UserInfo.java:21:5: Class 'GithubOAuth2UserInfo' looks like designed for extension (can be subclassed), but the method 'getLastName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GithubOAuth2UserInfo' final or making the method 'getLastName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GithubOAuth2UserInfo.java:26:5: Class 'GithubOAuth2UserInfo' looks like designed for extension (can be subclassed), but the method 'getEmail' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GithubOAuth2UserInfo' final or making the method 'getEmail' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
Audit done.
Checkstyle ends with 7 errors.
------[0m
[0m2025-06-16 21:24:30 [0;34m[DEBUG][0m   Error code: 7. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GithubOAuth2UserInfo.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GithubOAuth2UserInfo.java:7:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GithubOAuth2UserInfo.java:7:33: Parameter attributes should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GithubOAuth2UserInfo.java:11:5: Class 'GithubOAuth2UserInfo' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GithubOAuth2UserInfo' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GithubOAuth2UserInfo.java:16:5: Class 'GithubOAuth2UserInfo' looks like designed for extension (can be subclassed), but the method 'getFirstName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GithubOAuth2UserInfo' final or making the method 'getFirstName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GithubOAuth2UserInfo.java:21:5: Class 'GithubOAuth2UserInfo' looks like designed for extension (can be subclassed), but the method 'getLastName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GithubOAuth2UserInfo' final or making the method 'getLastName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GithubOAuth2UserInfo.java:26:5: Class 'GithubOAuth2UserInfo' looks like designed for extension (can be subclassed), but the method 'getEmail' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GithubOAuth2UserInfo' final or making the method 'getEmail' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
Audit done.
Checkstyle ends with 7 errors.
------[0m
[0m2025-06-16 21:24:30 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GoogleOAuth2UserInfo.java[0m
[0m2025-06-16 21:24:30 [0;34m[DEBUG][0m   FILE_STATUS (GoogleOAuth2UserInfo.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:30 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GoogleOAuth2UserInfo.java, FILE_NAME: GoogleOAuth2UserInfo.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:30 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:30 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:30 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GoogleOAuth2UserInfo.java][0m
[0m2025-06-16 21:24:31 [0;34m[DEBUG][0m   Found errors. Error code: 7, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:31 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:31 [0;31m[ERROR][0m   Error code: 7. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GoogleOAuth2UserInfo.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GoogleOAuth2UserInfo.java:7:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GoogleOAuth2UserInfo.java:7:33: Parameter attributes should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GoogleOAuth2UserInfo.java:11:5: Class 'GoogleOAuth2UserInfo' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GoogleOAuth2UserInfo' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GoogleOAuth2UserInfo.java:16:5: Class 'GoogleOAuth2UserInfo' looks like designed for extension (can be subclassed), but the method 'getFirstName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GoogleOAuth2UserInfo' final or making the method 'getFirstName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GoogleOAuth2UserInfo.java:21:5: Class 'GoogleOAuth2UserInfo' looks like designed for extension (can be subclassed), but the method 'getLastName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GoogleOAuth2UserInfo' final or making the method 'getLastName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GoogleOAuth2UserInfo.java:26:5: Class 'GoogleOAuth2UserInfo' looks like designed for extension (can be subclassed), but the method 'getEmail' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GoogleOAuth2UserInfo' final or making the method 'getEmail' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
Audit done.
Checkstyle ends with 7 errors.
------[0m
[0m2025-06-16 21:24:31 [0;34m[DEBUG][0m   Error code: 7. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GoogleOAuth2UserInfo.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GoogleOAuth2UserInfo.java:7:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GoogleOAuth2UserInfo.java:7:33: Parameter attributes should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GoogleOAuth2UserInfo.java:11:5: Class 'GoogleOAuth2UserInfo' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GoogleOAuth2UserInfo' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GoogleOAuth2UserInfo.java:16:5: Class 'GoogleOAuth2UserInfo' looks like designed for extension (can be subclassed), but the method 'getFirstName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GoogleOAuth2UserInfo' final or making the method 'getFirstName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GoogleOAuth2UserInfo.java:21:5: Class 'GoogleOAuth2UserInfo' looks like designed for extension (can be subclassed), but the method 'getLastName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GoogleOAuth2UserInfo' final or making the method 'getLastName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GoogleOAuth2UserInfo.java:26:5: Class 'GoogleOAuth2UserInfo' looks like designed for extension (can be subclassed), but the method 'getEmail' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GoogleOAuth2UserInfo' final or making the method 'getEmail' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
Audit done.
Checkstyle ends with 7 errors.
------[0m
[0m2025-06-16 21:24:31 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2SuccessHandler.java[0m
[0m2025-06-16 21:24:31 [0;34m[DEBUG][0m   FILE_STATUS (OAuth2SuccessHandler.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:31 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2SuccessHandler.java, FILE_NAME: OAuth2SuccessHandler.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:31 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:31 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:31 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2SuccessHandler.java][0m
[0m2025-06-16 21:24:32 [0;34m[DEBUG][0m   Found errors. Error code: 10, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:32 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:32 [0;31m[ERROR][0m   Error code: 10. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2SuccessHandler.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2SuccessHandler.java:19: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2SuccessHandler.java:21:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2SuccessHandler.java:23:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2SuccessHandler.java:26:5: Class 'OAuth2SuccessHandler' looks like designed for extension (can be subclassed), but the method 'onAuthenticationSuccess' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OAuth2SuccessHandler' final or making the method 'onAuthenticationSuccess' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2SuccessHandler.java:27:41: Parameter request should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2SuccessHandler.java:28:41: Parameter response should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2SuccessHandler.java:29: Line is longer than 80 characters (found 109). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2SuccessHandler.java:29:41: Parameter authentication should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2SuccessHandler.java:33: Line is longer than 80 characters (found 98). [LineLength]
Audit done.
Checkstyle ends with 10 errors.
------[0m
[0m2025-06-16 21:24:32 [0;34m[DEBUG][0m   Error code: 10. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2SuccessHandler.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2SuccessHandler.java:19: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2SuccessHandler.java:21:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2SuccessHandler.java:23:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2SuccessHandler.java:26:5: Class 'OAuth2SuccessHandler' looks like designed for extension (can be subclassed), but the method 'onAuthenticationSuccess' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OAuth2SuccessHandler' final or making the method 'onAuthenticationSuccess' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2SuccessHandler.java:27:41: Parameter request should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2SuccessHandler.java:28:41: Parameter response should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2SuccessHandler.java:29: Line is longer than 80 characters (found 109). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2SuccessHandler.java:29:41: Parameter authentication should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2SuccessHandler.java:33: Line is longer than 80 characters (found 98). [LineLength]
Audit done.
Checkstyle ends with 10 errors.
------[0m
[0m2025-06-16 21:24:32 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserFactory.java[0m
[0m2025-06-16 21:24:32 [0;34m[DEBUG][0m   FILE_STATUS (OAuth2UserFactory.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:32 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserFactory.java, FILE_NAME: OAuth2UserFactory.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:32 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:32 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:32 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserFactory.java][0m
[0m2025-06-16 21:24:33 [0;34m[DEBUG][0m   Found errors. Error code: 9, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:33 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:33 [0;31m[ERROR][0m   Error code: 9. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserFactory.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserFactory.java:9:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserFactory.java:11:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserFactory.java:12: Line is longer than 80 characters (found 107). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserFactory.java:12:52: Parameter registrationId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserFactory.java:12:75: Parameter attributes should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserFactory.java:13:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserFactory.java:15: Line is longer than 80 characters (found 87). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserFactory.java:17: Line is longer than 80 characters (found 85). [LineLength]
Audit done.
Checkstyle ends with 9 errors.
------[0m
[0m2025-06-16 21:24:33 [0;34m[DEBUG][0m   Error code: 9. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserFactory.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserFactory.java:9:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserFactory.java:11:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserFactory.java:12: Line is longer than 80 characters (found 107). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserFactory.java:12:52: Parameter registrationId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserFactory.java:12:75: Parameter attributes should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserFactory.java:13:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserFactory.java:15: Line is longer than 80 characters (found 87). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserFactory.java:17: Line is longer than 80 characters (found 85). [LineLength]
Audit done.
Checkstyle ends with 9 errors.
------[0m
[0m2025-06-16 21:24:33 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java[0m
[0m2025-06-16 21:24:33 [0;34m[DEBUG][0m   FILE_STATUS (OAuth2UserInfo.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:33 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java, FILE_NAME: OAuth2UserInfo.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:33 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:33 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:33 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java][0m
[0m2025-06-16 21:24:34 [0;34m[DEBUG][0m   Found errors. Error code: 12, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:34 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:34 [0;31m[ERROR][0m   Error code: 12. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java:7:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java:7:35: Variable 'attributes' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java:9:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java:9:27: Parameter attributes should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java:9:47: 'attributes' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java:13:5: Class 'OAuth2UserInfo' looks like designed for extension (can be subclassed), but the method 'getAttributes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OAuth2UserInfo' final or making the method 'getAttributes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java:13:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java:17:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java:19:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java:21:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java:23:5: Missing a Javadoc comment. [MissingJavadocMethod]
Audit done.
Checkstyle ends with 12 errors.
------[0m
[0m2025-06-16 21:24:34 [0;34m[DEBUG][0m   Error code: 12. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java:7:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java:7:35: Variable 'attributes' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java:9:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java:9:27: Parameter attributes should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java:9:47: 'attributes' hides a field. [HiddenField]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java:13:5: Class 'OAuth2UserInfo' looks like designed for extension (can be subclassed), but the method 'getAttributes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OAuth2UserInfo' final or making the method 'getAttributes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java:13:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java:17:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java:19:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java:21:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java:23:5: Missing a Javadoc comment. [MissingJavadocMethod]
Audit done.
Checkstyle ends with 12 errors.
------[0m
[0m2025-06-16 21:24:34 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/AuthenticationService.java[0m
[0m2025-06-16 21:24:34 [0;34m[DEBUG][0m   FILE_STATUS (AuthenticationService.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:34 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/AuthenticationService.java, FILE_NAME: AuthenticationService.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:34 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:34 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:34 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/AuthenticationService.java][0m
[0m2025-06-16 21:24:35 [0;34m[DEBUG][0m   Found errors. Error code: 10, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:35 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:35 [0;31m[ERROR][0m   Error code: 10. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/AuthenticationService.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/AuthenticationService.java:10:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/AuthenticationService.java:12:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/AuthenticationService.java:14:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/AuthenticationService.java:16: Line is longer than 80 characters (found 85). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/AuthenticationService.java:16:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/AuthenticationService.java:18:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/AuthenticationService.java:20:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/AuthenticationService.java:22:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/AuthenticationService.java:24:5: Missing a Javadoc comment. [MissingJavadocMethod]
Audit done.
Checkstyle ends with 10 errors.
------[0m
[0m2025-06-16 21:24:35 [0;34m[DEBUG][0m   Error code: 10. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/AuthenticationService.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/AuthenticationService.java:10:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/AuthenticationService.java:12:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/AuthenticationService.java:14:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/AuthenticationService.java:16: Line is longer than 80 characters (found 85). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/AuthenticationService.java:16:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/AuthenticationService.java:18:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/AuthenticationService.java:20:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/AuthenticationService.java:22:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/AuthenticationService.java:24:5: Missing a Javadoc comment. [MissingJavadocMethod]
Audit done.
Checkstyle ends with 10 errors.
------[0m
[0m2025-06-16 21:24:35 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java[0m
[0m2025-06-16 21:24:35 [0;34m[DEBUG][0m   FILE_STATUS (AuthenticationServiceImpl.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:35 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java, FILE_NAME: AuthenticationServiceImpl.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:35 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:35 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:35 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java][0m
[0m2025-06-16 21:24:36 [0;34m[DEBUG][0m   Found errors. Error code: 69, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:36 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:36 [0;31m[ERROR][0m   Error code: 69. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:35:71: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.*. [AvoidStarImport]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:43: Line is longer than 80 characters (found 98). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:43:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:43:33: Name 'logger' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:45:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:46:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:47:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:48:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:49:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:50:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:52:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:55:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:58:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:61:5: Class 'AuthenticationServiceImpl' looks like designed for extension (can be subclassed), but the method 'login' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AuthenticationServiceImpl' final or making the method 'login' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:62:38: Parameter email should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:62:52: Parameter password should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:64: Line is longer than 80 characters (found 105). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:67: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:68: Line is longer than 80 characters (found 94). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:80: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:84:5: Class 'AuthenticationServiceImpl' looks like designed for extension (can be subclassed), but the method 'registerUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AuthenticationServiceImpl' final or making the method 'registerUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:86:32: Parameter user should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:86:43: Parameter captcha should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:86:59: Parameter password2 should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:87: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:89: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:95: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:103: Line is longer than 80 characters (found 102). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:107: Line is longer than 80 characters (found 89). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:110: Line is longer than 80 characters (found 91). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:121: Line is longer than 80 characters (found 128). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:126:5: Class 'AuthenticationServiceImpl' looks like designed for extension (can be subclassed), but the method 'registerOauth2User' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AuthenticationServiceImpl' final or making the method 'registerOauth2User' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:128: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:128:36: Parameter provider should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:128:53: Parameter oAuth2UserInfo should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:141:5: Class 'AuthenticationServiceImpl' looks like designed for extension (can be subclassed), but the method 'updateOauth2User' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AuthenticationServiceImpl' final or making the method 'updateOauth2User' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:143: Line is longer than 80 characters (found 93). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:143:34: Parameter user should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:143:45: Parameter provider should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:143:62: Parameter oAuth2UserInfo should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:144: Line is longer than 80 characters (found 95). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:151:5: Class 'AuthenticationServiceImpl' looks like designed for extension (can be subclassed), but the method 'getEmailByPasswordResetCode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AuthenticationServiceImpl' final or making the method 'getEmailByPasswordResetCode' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:152:47: Parameter code should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:157: Line is longer than 80 characters (found 98). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:161:5: Class 'AuthenticationServiceImpl' looks like designed for extension (can be subclassed), but the method 'sendPasswordResetCode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AuthenticationServiceImpl' final or making the method 'sendPasswordResetCode' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:163:41: Parameter email should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:167: Line is longer than 80 characters (found 86). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:168: Line is longer than 80 characters (found 90). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:173: Line is longer than 80 characters (found 122). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:178:5: Class 'AuthenticationServiceImpl' looks like designed for extension (can be subclassed), but the method 'passwordReset' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AuthenticationServiceImpl' final or making the method 'passwordReset' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:180: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:180:33: Parameter email should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:180:47: Parameter password should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:180:64: Parameter password2 should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:183: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:191: Line is longer than 80 characters (found 86). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:192: Line is longer than 80 characters (found 90). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:201:5: Class 'AuthenticationServiceImpl' looks like designed for extension (can be subclassed), but the method 'activateUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AuthenticationServiceImpl' final or making the method 'activateUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:203:32: Parameter code should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:208: Line is longer than 80 characters (found 100). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:217: Line is longer than 80 characters (found 109). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:217:28: Parameter user should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:217:39: Parameter subject should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:217:55: Parameter template should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:217:72: Parameter urlAttribute should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:217:93: Parameter urlPath should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:221: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:222: Line is longer than 80 characters (found 86). [LineLength]
Audit done.
Checkstyle ends with 69 errors.
------[0m
[0m2025-06-16 21:24:36 [0;34m[DEBUG][0m   Error code: 69. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:35:71: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.*. [AvoidStarImport]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:43: Line is longer than 80 characters (found 98). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:43:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:43:33: Name 'logger' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:45:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:46:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:47:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:48:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:49:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:50:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:52:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:55:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:58:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:61:5: Class 'AuthenticationServiceImpl' looks like designed for extension (can be subclassed), but the method 'login' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AuthenticationServiceImpl' final or making the method 'login' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:62:38: Parameter email should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:62:52: Parameter password should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:64: Line is longer than 80 characters (found 105). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:67: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:68: Line is longer than 80 characters (found 94). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:80: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:84:5: Class 'AuthenticationServiceImpl' looks like designed for extension (can be subclassed), but the method 'registerUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AuthenticationServiceImpl' final or making the method 'registerUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:86:32: Parameter user should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:86:43: Parameter captcha should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:86:59: Parameter password2 should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:87: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:89: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:95: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:103: Line is longer than 80 characters (found 102). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:107: Line is longer than 80 characters (found 89). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:110: Line is longer than 80 characters (found 91). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:121: Line is longer than 80 characters (found 128). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:126:5: Class 'AuthenticationServiceImpl' looks like designed for extension (can be subclassed), but the method 'registerOauth2User' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AuthenticationServiceImpl' final or making the method 'registerOauth2User' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:128: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:128:36: Parameter provider should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:128:53: Parameter oAuth2UserInfo should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:141:5: Class 'AuthenticationServiceImpl' looks like designed for extension (can be subclassed), but the method 'updateOauth2User' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AuthenticationServiceImpl' final or making the method 'updateOauth2User' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:143: Line is longer than 80 characters (found 93). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:143:34: Parameter user should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:143:45: Parameter provider should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:143:62: Parameter oAuth2UserInfo should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:144: Line is longer than 80 characters (found 95). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:151:5: Class 'AuthenticationServiceImpl' looks like designed for extension (can be subclassed), but the method 'getEmailByPasswordResetCode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AuthenticationServiceImpl' final or making the method 'getEmailByPasswordResetCode' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:152:47: Parameter code should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:157: Line is longer than 80 characters (found 98). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:161:5: Class 'AuthenticationServiceImpl' looks like designed for extension (can be subclassed), but the method 'sendPasswordResetCode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AuthenticationServiceImpl' final or making the method 'sendPasswordResetCode' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:163:41: Parameter email should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:167: Line is longer than 80 characters (found 86). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:168: Line is longer than 80 characters (found 90). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:173: Line is longer than 80 characters (found 122). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:178:5: Class 'AuthenticationServiceImpl' looks like designed for extension (can be subclassed), but the method 'passwordReset' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AuthenticationServiceImpl' final or making the method 'passwordReset' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:180: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:180:33: Parameter email should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:180:47: Parameter password should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:180:64: Parameter password2 should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:183: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:191: Line is longer than 80 characters (found 86). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:192: Line is longer than 80 characters (found 90). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:201:5: Class 'AuthenticationServiceImpl' looks like designed for extension (can be subclassed), but the method 'activateUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AuthenticationServiceImpl' final or making the method 'activateUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:203:32: Parameter code should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:208: Line is longer than 80 characters (found 100). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:217: Line is longer than 80 characters (found 109). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:217:28: Parameter user should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:217:39: Parameter subject should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:217:55: Parameter template should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:217:72: Parameter urlAttribute should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:217:93: Parameter urlPath should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:221: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java:222: Line is longer than 80 characters (found 86). [LineLength]
Audit done.
Checkstyle ends with 69 errors.
------[0m
[0m2025-06-16 21:24:36 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java[0m
[0m2025-06-16 21:24:36 [0;34m[DEBUG][0m   FILE_STATUS (OrderServiceImpl.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:36 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java, FILE_NAME: OrderServiceImpl.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:36 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:36 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:36 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java][0m
[0m2025-06-16 21:24:37 [0;34m[DEBUG][0m   Found errors. Error code: 32, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:37 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:37 [0;31m[ERROR][0m   Error code: 32. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:34: Line is longer than 80 characters (found 89). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:34:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:34:33: Name 'logger' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:36:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:37:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:38:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:39:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:41:5: Class 'OrderServiceImpl' looks like designed for extension (can be subclassed), but the method 'getOrderById' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OrderServiceImpl' final or making the method 'getOrderById' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:42:31: Parameter orderId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:47: Line is longer than 80 characters (found 90). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:51:5: Class 'OrderServiceImpl' looks like designed for extension (can be subclassed), but the method 'getOrderItemsByOrderId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OrderServiceImpl' final or making the method 'getOrderItemsByOrderId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:52:51: Parameter orderId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:58:5: Class 'OrderServiceImpl' looks like designed for extension (can be subclassed), but the method 'getAllOrders' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OrderServiceImpl' final or making the method 'getAllOrders' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:59:37: Parameter pageable should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:60: Line is longer than 80 characters (found 127). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:64:5: Class 'OrderServiceImpl' looks like designed for extension (can be subclassed), but the method 'getUserOrders' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OrderServiceImpl' final or making the method 'getUserOrders' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:65:38: Parameter email should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:65:52: Parameter pageable should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:70:5: Class 'OrderServiceImpl' looks like designed for extension (can be subclassed), but the method 'postOrder' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OrderServiceImpl' final or making the method 'postOrder' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:72:28: Parameter order should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:72:41: Parameter perfumesId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:83: Line is longer than 80 characters (found 98). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:104: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:106: Line is longer than 80 characters (found 98). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:110:5: Class 'OrderServiceImpl' looks like designed for extension (can be subclassed), but the method 'deleteOrder' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OrderServiceImpl' final or making the method 'deleteOrder' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:112:31: Parameter orderId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:117: Line is longer than 80 characters (found 90). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:124:5: Class 'OrderServiceImpl' looks like designed for extension (can be subclassed), but the method 'getAllOrdersByQuery' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OrderServiceImpl' final or making the method 'getAllOrdersByQuery' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:132:5: Class 'OrderServiceImpl' looks like designed for extension (can be subclassed), but the method 'getUserOrdersByEmailQuery' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OrderServiceImpl' final or making the method 'getUserOrdersByEmailQuery' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:135: Line is longer than 80 characters (found 83). [LineLength]
Audit done.
Checkstyle ends with 32 errors.
------[0m
[0m2025-06-16 21:24:37 [0;34m[DEBUG][0m   Error code: 32. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:34: Line is longer than 80 characters (found 89). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:34:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:34:33: Name 'logger' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:36:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:37:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:38:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:39:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:41:5: Class 'OrderServiceImpl' looks like designed for extension (can be subclassed), but the method 'getOrderById' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OrderServiceImpl' final or making the method 'getOrderById' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:42:31: Parameter orderId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:47: Line is longer than 80 characters (found 90). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:51:5: Class 'OrderServiceImpl' looks like designed for extension (can be subclassed), but the method 'getOrderItemsByOrderId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OrderServiceImpl' final or making the method 'getOrderItemsByOrderId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:52:51: Parameter orderId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:58:5: Class 'OrderServiceImpl' looks like designed for extension (can be subclassed), but the method 'getAllOrders' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OrderServiceImpl' final or making the method 'getAllOrders' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:59:37: Parameter pageable should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:60: Line is longer than 80 characters (found 127). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:64:5: Class 'OrderServiceImpl' looks like designed for extension (can be subclassed), but the method 'getUserOrders' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OrderServiceImpl' final or making the method 'getUserOrders' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:65:38: Parameter email should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:65:52: Parameter pageable should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:70:5: Class 'OrderServiceImpl' looks like designed for extension (can be subclassed), but the method 'postOrder' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OrderServiceImpl' final or making the method 'postOrder' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:72:28: Parameter order should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:72:41: Parameter perfumesId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:83: Line is longer than 80 characters (found 98). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:104: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:106: Line is longer than 80 characters (found 98). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:110:5: Class 'OrderServiceImpl' looks like designed for extension (can be subclassed), but the method 'deleteOrder' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OrderServiceImpl' final or making the method 'deleteOrder' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:112:31: Parameter orderId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:117: Line is longer than 80 characters (found 90). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:124:5: Class 'OrderServiceImpl' looks like designed for extension (can be subclassed), but the method 'getAllOrdersByQuery' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OrderServiceImpl' final or making the method 'getAllOrdersByQuery' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:132:5: Class 'OrderServiceImpl' looks like designed for extension (can be subclassed), but the method 'getUserOrdersByEmailQuery' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OrderServiceImpl' final or making the method 'getUserOrdersByEmailQuery' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java:135: Line is longer than 80 characters (found 83). [LineLength]
Audit done.
Checkstyle ends with 32 errors.
------[0m
[0m2025-06-16 21:24:37 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java[0m
[0m2025-06-16 21:24:37 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeServiceImpl.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:37 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java, FILE_NAME: PerfumeServiceImpl.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:37 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:37 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:37 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java][0m
[0m2025-06-16 21:24:38 [0;34m[DEBUG][0m   Found errors. Error code: 54, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:38 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:38 [0;31m[ERROR][0m   Error code: 54. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:42: Line is longer than 80 characters (found 91). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:42:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:42:33: Name 'logger' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:44:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:45:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:47:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:50:5: Class 'PerfumeServiceImpl' looks like designed for extension (can be subclassed), but the method 'getPerfumeById' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeServiceImpl' final or making the method 'getPerfumeById' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:51:35: Parameter perfumeId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:55: Line is longer than 80 characters (found 91). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:56: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:60:5: Class 'PerfumeServiceImpl' looks like designed for extension (can be subclassed), but the method 'getAllPerfumes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeServiceImpl' final or making the method 'getAllPerfumes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:61:51: Parameter pageable should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:62: Line is longer than 80 characters (found 129). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:66:5: Class 'PerfumeServiceImpl' looks like designed for extension (can be subclassed), but the method 'getPerfumesByIds' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeServiceImpl' final or making the method 'getPerfumesByIds' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:67:53: Parameter perfumesId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:72:5: Class 'PerfumeServiceImpl' looks like designed for extension (can be subclassed), but the method 'findPerfumesByFilterParams' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeServiceImpl' final or making the method 'findPerfumesByFilterParams' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:73: Line is longer than 80 characters (found 111). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:73:63: Parameter filter should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:73:92: Parameter pageable should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:74: Line is longer than 80 characters (found 120). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:75: Line is longer than 80 characters (found 139). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:85:5: Class 'PerfumeServiceImpl' looks like designed for extension (can be subclassed), but the method 'findByPerfumer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeServiceImpl' final or making the method 'findByPerfumer' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:86:41: Parameter perfumer should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:91:5: Class 'PerfumeServiceImpl' looks like designed for extension (can be subclassed), but the method 'findByPerfumeGender' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeServiceImpl' final or making the method 'findByPerfumeGender' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:92:46: Parameter perfumeGender should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:94: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:97:5: Class 'PerfumeServiceImpl' looks like designed for extension (can be subclassed), but the method 'findByInputText' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeServiceImpl' final or making the method 'findByInputText' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:98: Line is longer than 80 characters (found 110). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:98:52: Parameter searchType should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:98:78: Parameter text should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:98:91: Parameter pageable should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:99: Line is longer than 80 characters (found 90). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:109:5: Class 'PerfumeServiceImpl' looks like designed for extension (can be subclassed), but the method 'savePerfume' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeServiceImpl' final or making the method 'savePerfume' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:111:32: Parameter perfume should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:111:49: Parameter multipartFile should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:115: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:120: Line is longer than 80 characters (found 87). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:123: Line is longer than 80 characters (found 122). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:127: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:128: Line is longer than 80 characters (found 115). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:135: Line is longer than 80 characters (found 85). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:141: Line is longer than 80 characters (found 91). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:142: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:150: Line is longer than 80 characters (found 103). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:161:5: Class 'PerfumeServiceImpl' looks like designed for extension (can be subclassed), but the method 'deletePerfume' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeServiceImpl' final or making the method 'deletePerfume' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:163:33: Parameter perfumeId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:167: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:168: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:175:5: Class 'PerfumeServiceImpl' looks like designed for extension (can be subclassed), but the method 'getPerfumeByQuery' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeServiceImpl' final or making the method 'getPerfumeByQuery' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:186: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:190:5: Class 'PerfumeServiceImpl' looks like designed for extension (can be subclassed), but the method 'getAllPerfumesByQuery' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeServiceImpl' final or making the method 'getAllPerfumesByQuery' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:198:5: Class 'PerfumeServiceImpl' looks like designed for extension (can be subclassed), but the method 'getAllPerfumesByIdsQuery' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeServiceImpl' final or making the method 'getAllPerfumesByIdsQuery' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:209: Line is longer than 80 characters (found 82). [LineLength]
Audit done.
Checkstyle ends with 54 errors.
------[0m
[0m2025-06-16 21:24:38 [0;34m[DEBUG][0m   Error code: 54. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:42: Line is longer than 80 characters (found 91). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:42:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:42:33: Name 'logger' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:44:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:45:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:47:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:50:5: Class 'PerfumeServiceImpl' looks like designed for extension (can be subclassed), but the method 'getPerfumeById' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeServiceImpl' final or making the method 'getPerfumeById' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:51:35: Parameter perfumeId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:55: Line is longer than 80 characters (found 91). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:56: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:60:5: Class 'PerfumeServiceImpl' looks like designed for extension (can be subclassed), but the method 'getAllPerfumes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeServiceImpl' final or making the method 'getAllPerfumes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:61:51: Parameter pageable should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:62: Line is longer than 80 characters (found 129). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:66:5: Class 'PerfumeServiceImpl' looks like designed for extension (can be subclassed), but the method 'getPerfumesByIds' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeServiceImpl' final or making the method 'getPerfumesByIds' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:67:53: Parameter perfumesId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:72:5: Class 'PerfumeServiceImpl' looks like designed for extension (can be subclassed), but the method 'findPerfumesByFilterParams' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeServiceImpl' final or making the method 'findPerfumesByFilterParams' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:73: Line is longer than 80 characters (found 111). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:73:63: Parameter filter should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:73:92: Parameter pageable should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:74: Line is longer than 80 characters (found 120). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:75: Line is longer than 80 characters (found 139). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:85:5: Class 'PerfumeServiceImpl' looks like designed for extension (can be subclassed), but the method 'findByPerfumer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeServiceImpl' final or making the method 'findByPerfumer' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:86:41: Parameter perfumer should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:91:5: Class 'PerfumeServiceImpl' looks like designed for extension (can be subclassed), but the method 'findByPerfumeGender' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeServiceImpl' final or making the method 'findByPerfumeGender' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:92:46: Parameter perfumeGender should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:94: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:97:5: Class 'PerfumeServiceImpl' looks like designed for extension (can be subclassed), but the method 'findByInputText' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeServiceImpl' final or making the method 'findByInputText' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:98: Line is longer than 80 characters (found 110). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:98:52: Parameter searchType should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:98:78: Parameter text should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:98:91: Parameter pageable should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:99: Line is longer than 80 characters (found 90). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:109:5: Class 'PerfumeServiceImpl' looks like designed for extension (can be subclassed), but the method 'savePerfume' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeServiceImpl' final or making the method 'savePerfume' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:111:32: Parameter perfume should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:111:49: Parameter multipartFile should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:115: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:120: Line is longer than 80 characters (found 87). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:123: Line is longer than 80 characters (found 122). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:127: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:128: Line is longer than 80 characters (found 115). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:135: Line is longer than 80 characters (found 85). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:141: Line is longer than 80 characters (found 91). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:142: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:150: Line is longer than 80 characters (found 103). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:161:5: Class 'PerfumeServiceImpl' looks like designed for extension (can be subclassed), but the method 'deletePerfume' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeServiceImpl' final or making the method 'deletePerfume' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:163:33: Parameter perfumeId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:167: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:168: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:175:5: Class 'PerfumeServiceImpl' looks like designed for extension (can be subclassed), but the method 'getPerfumeByQuery' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeServiceImpl' final or making the method 'getPerfumeByQuery' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:186: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:190:5: Class 'PerfumeServiceImpl' looks like designed for extension (can be subclassed), but the method 'getAllPerfumesByQuery' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeServiceImpl' final or making the method 'getAllPerfumesByQuery' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:198:5: Class 'PerfumeServiceImpl' looks like designed for extension (can be subclassed), but the method 'getAllPerfumesByIdsQuery' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeServiceImpl' final or making the method 'getAllPerfumesByIdsQuery' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java:209: Line is longer than 80 characters (found 82). [LineLength]
Audit done.
Checkstyle ends with 54 errors.
------[0m
[0m2025-06-16 21:24:38 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java[0m
[0m2025-06-16 21:24:38 [0;34m[DEBUG][0m   FILE_STATUS (ReviewServiceImpl.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:38 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java, FILE_NAME: ReviewServiceImpl.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:38 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:38 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:38 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java][0m
[0m2025-06-16 21:24:39 [0;34m[DEBUG][0m   Found errors. Error code: 15, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:39 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:39 [0;31m[ERROR][0m   Error code: 15. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java:25: Line is longer than 80 characters (found 90). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java:25:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java:25:33: Name 'logger' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java:27:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java:28:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java:30:5: Class 'ReviewServiceImpl' looks like designed for extension (can be subclassed), but the method 'getReviewsByPerfumeId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ReviewServiceImpl' final or making the method 'getReviewsByPerfumeId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java:31:47: Parameter perfumeId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java:36: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java:41:5: Class 'ReviewServiceImpl' looks like designed for extension (can be subclassed), but the method 'addReviewToPerfume' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ReviewServiceImpl' final or making the method 'addReviewToPerfume' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java:43:38: Parameter review should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java:43:53: Parameter perfumeId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java:44: Line is longer than 80 characters (found 97). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java:48: Line is longer than 80 characters (found 92). [LineLength]
Audit done.
Checkstyle ends with 15 errors.
------[0m
[0m2025-06-16 21:24:39 [0;34m[DEBUG][0m   Error code: 15. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java:25: Line is longer than 80 characters (found 90). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java:25:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java:25:33: Name 'logger' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java:27:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java:28:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java:30:5: Class 'ReviewServiceImpl' looks like designed for extension (can be subclassed), but the method 'getReviewsByPerfumeId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ReviewServiceImpl' final or making the method 'getReviewsByPerfumeId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java:31:47: Parameter perfumeId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java:36: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java:41:5: Class 'ReviewServiceImpl' looks like designed for extension (can be subclassed), but the method 'addReviewToPerfume' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ReviewServiceImpl' final or making the method 'addReviewToPerfume' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java:43:38: Parameter review should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java:43:53: Parameter perfumeId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java:44: Line is longer than 80 characters (found 97). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java:48: Line is longer than 80 characters (found 92). [LineLength]
Audit done.
Checkstyle ends with 15 errors.
------[0m
[0m2025-06-16 21:24:39 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java[0m
[0m2025-06-16 21:24:39 [0;34m[DEBUG][0m   FILE_STATUS (UserServiceImpl.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:39 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java, FILE_NAME: UserServiceImpl.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:39 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:39 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:39 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java][0m
[0m2025-06-16 21:24:40 [0;34m[DEBUG][0m   Found errors. Error code: 23, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:40 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:40 [0;31m[ERROR][0m   Error code: 23. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java:29: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java:29:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java:29:33: Name 'logger' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java:31:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java:32:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java:34:5: Class 'UserServiceImpl' looks like designed for extension (can be subclassed), but the method 'getUserById' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserServiceImpl' final or making the method 'getUserById' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java:35:29: Parameter userId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java:40: Line is longer than 80 characters (found 89). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java:44:5: Class 'UserServiceImpl' looks like designed for extension (can be subclassed), but the method 'getUserInfo' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserServiceImpl' final or making the method 'getUserInfo' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java:45:29: Parameter email should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java:50: Line is longer than 80 characters (found 90). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java:54:5: Class 'UserServiceImpl' looks like designed for extension (can be subclassed), but the method 'getAllUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserServiceImpl' final or making the method 'getAllUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java:55:35: Parameter pageable should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java:60:5: Class 'UserServiceImpl' looks like designed for extension (can be subclassed), but the method 'getCart' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserServiceImpl' final or making the method 'getCart' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java:61:34: Parameter perfumeIds should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java:66:5: Class 'UserServiceImpl' looks like designed for extension (can be subclassed), but the method 'updateUserInfo' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserServiceImpl' final or making the method 'updateUserInfo' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java:68:32: Parameter email should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java:68:46: Parameter user should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java:73: Line is longer than 80 characters (found 90). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java:85:5: Class 'UserServiceImpl' looks like designed for extension (can be subclassed), but the method 'getUserByQuery' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserServiceImpl' final or making the method 'getUserByQuery' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java:88: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java:94:5: Class 'UserServiceImpl' looks like designed for extension (can be subclassed), but the method 'getAllUsersByQuery' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserServiceImpl' final or making the method 'getAllUsersByQuery' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
Audit done.
Checkstyle ends with 23 errors.
------[0m
[0m2025-06-16 21:24:40 [0;34m[DEBUG][0m   Error code: 23. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java:29: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java:29:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java:29:33: Name 'logger' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java:31:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java:32:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java:34:5: Class 'UserServiceImpl' looks like designed for extension (can be subclassed), but the method 'getUserById' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserServiceImpl' final or making the method 'getUserById' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java:35:29: Parameter userId should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java:40: Line is longer than 80 characters (found 89). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java:44:5: Class 'UserServiceImpl' looks like designed for extension (can be subclassed), but the method 'getUserInfo' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserServiceImpl' final or making the method 'getUserInfo' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java:45:29: Parameter email should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java:50: Line is longer than 80 characters (found 90). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java:54:5: Class 'UserServiceImpl' looks like designed for extension (can be subclassed), but the method 'getAllUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserServiceImpl' final or making the method 'getAllUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java:55:35: Parameter pageable should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java:60:5: Class 'UserServiceImpl' looks like designed for extension (can be subclassed), but the method 'getCart' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserServiceImpl' final or making the method 'getCart' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java:61:34: Parameter perfumeIds should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java:66:5: Class 'UserServiceImpl' looks like designed for extension (can be subclassed), but the method 'updateUserInfo' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserServiceImpl' final or making the method 'updateUserInfo' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java:68:32: Parameter email should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java:68:46: Parameter user should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java:73: Line is longer than 80 characters (found 90). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java:85:5: Class 'UserServiceImpl' looks like designed for extension (can be subclassed), but the method 'getUserByQuery' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserServiceImpl' final or making the method 'getUserByQuery' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java:88: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java:94:5: Class 'UserServiceImpl' looks like designed for extension (can be subclassed), but the method 'getAllUsersByQuery' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserServiceImpl' final or making the method 'getAllUsersByQuery' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
Audit done.
Checkstyle ends with 23 errors.
------[0m
[0m2025-06-16 21:24:40 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/OrderService.java[0m
[0m2025-06-16 21:24:40 [0;34m[DEBUG][0m   FILE_STATUS (OrderService.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:40 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/OrderService.java, FILE_NAME: OrderService.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:40 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:40 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:40 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/OrderService.java][0m
[0m2025-06-16 21:24:41 [0;34m[DEBUG][0m   Found errors. Error code: 10, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:41 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:41 [0;31m[ERROR][0m   Error code: 10. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/OrderService.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/OrderService.java:15:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/OrderService.java:17:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/OrderService.java:18: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/OrderService.java:19:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/OrderService.java:21:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/OrderService.java:23:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/OrderService.java:25:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/OrderService.java:27:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/OrderService.java:29:5: Missing a Javadoc comment. [MissingJavadocMethod]
Audit done.
Checkstyle ends with 10 errors.
------[0m
[0m2025-06-16 21:24:41 [0;34m[DEBUG][0m   Error code: 10. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/OrderService.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/OrderService.java:15:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/OrderService.java:17:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/OrderService.java:18: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/OrderService.java:19:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/OrderService.java:21:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/OrderService.java:23:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/OrderService.java:25:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/OrderService.java:27:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/OrderService.java:29:5: Missing a Javadoc comment. [MissingJavadocMethod]
Audit done.
Checkstyle ends with 10 errors.
------[0m
[0m2025-06-16 21:24:41 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java[0m
[0m2025-06-16 21:24:41 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeService.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:41 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java, FILE_NAME: PerfumeService.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:41 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:41 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:41 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java][0m
[0m2025-06-16 21:24:42 [0;34m[DEBUG][0m   Found errors. Error code: 16, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:42 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:42 [0;31m[ERROR][0m   Error code: 16. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java:16:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java:18:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java:20:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java:22: Line is longer than 80 characters (found 103). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java:22:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java:24:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java:26:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java:27: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java:28: Line is longer than 80 characters (found 102). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java:28:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java:30:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java:32:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java:34:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java:36:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java:38:5: Missing a Javadoc comment. [MissingJavadocMethod]
Audit done.
Checkstyle ends with 16 errors.
------[0m
[0m2025-06-16 21:24:42 [0;34m[DEBUG][0m   Error code: 16. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java:16:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java:18:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java:20:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java:22: Line is longer than 80 characters (found 103). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java:22:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java:24:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java:26:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java:27: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java:28: Line is longer than 80 characters (found 102). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java:28:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java:30:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java:32:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java:34:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java:36:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java:38:5: Missing a Javadoc comment. [MissingJavadocMethod]
Audit done.
Checkstyle ends with 16 errors.
------[0m
[0m2025-06-16 21:24:42 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/ReviewService.java[0m
[0m2025-06-16 21:24:42 [0;34m[DEBUG][0m   FILE_STATUS (ReviewService.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:42 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/ReviewService.java, FILE_NAME: ReviewService.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:42 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:42 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:42 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/ReviewService.java][0m
[0m2025-06-16 21:24:43 [0;34m[DEBUG][0m   Found errors. Error code: 3, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:43 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:43 [0;31m[ERROR][0m   Error code: 3. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/ReviewService.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/ReviewService.java:9:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/ReviewService.java:11:5: Missing a Javadoc comment. [MissingJavadocMethod]
Audit done.
Checkstyle ends with 3 errors.
------[0m
[0m2025-06-16 21:24:43 [0;34m[DEBUG][0m   Error code: 3. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/ReviewService.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/ReviewService.java:9:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/ReviewService.java:11:5: Missing a Javadoc comment. [MissingJavadocMethod]
Audit done.
Checkstyle ends with 3 errors.
------[0m
[0m2025-06-16 21:24:43 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/UserService.java[0m
[0m2025-06-16 21:24:43 [0;34m[DEBUG][0m   FILE_STATUS (UserService.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:43 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/UserService.java, FILE_NAME: UserService.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:43 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:43 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:43 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/UserService.java][0m
[0m2025-06-16 21:24:44 [0;34m[DEBUG][0m   Found errors. Error code: 10, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:44 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:44 [0;31m[ERROR][0m   Error code: 10. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/UserService.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/UserService.java:4:8: Unused import - com.gmail.merikbest2015.ecommerce.domain.Review. [UnusedImports]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/UserService.java:15:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/UserService.java:17:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/UserService.java:18: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/UserService.java:19:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/UserService.java:21:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/UserService.java:23:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/UserService.java:25:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/UserService.java:27:5: Missing a Javadoc comment. [MissingJavadocMethod]
Audit done.
Checkstyle ends with 10 errors.
------[0m
[0m2025-06-16 21:24:44 [0;34m[DEBUG][0m   Error code: 10. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/UserService.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/UserService.java:4:8: Unused import - com.gmail.merikbest2015.ecommerce.domain.Review. [UnusedImports]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/UserService.java:15:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/UserService.java:17:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/UserService.java:18: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/UserService.java:19:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/UserService.java:21:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/UserService.java:23:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/UserService.java:25:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/UserService.java:27:5: Missing a Javadoc comment. [MissingJavadocMethod]
Audit done.
Checkstyle ends with 10 errors.
------[0m
[0m2025-06-16 21:24:44 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java[0m
[0m2025-06-16 21:24:44 [0;34m[DEBUG][0m   FILE_STATUS (MailSender.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:44 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java, FILE_NAME: MailSender.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:44 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:44 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:44 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java][0m
[0m2025-06-16 21:24:45 [0;34m[DEBUG][0m   Found errors. Error code: 13, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:45 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:45 [0;31m[ERROR][0m   Error code: 13. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java:20:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java:21:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java:23:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java:26:5: Class 'MailSender' looks like designed for extension (can be subclassed), but the method 'sendMessageHtml' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MailSender' final or making the method 'sendMessageHtml' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java:26:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java:27: Line is longer than 80 characters (found 135). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java:27:33: Parameter to should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java:27:44: Parameter subject should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java:27:60: Parameter template should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java:27:77: Parameter attributes should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java:30: Line is longer than 80 characters (found 86). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java:32: Line is longer than 80 characters (found 81). [LineLength]
Audit done.
Checkstyle ends with 13 errors.
------[0m
[0m2025-06-16 21:24:45 [0;34m[DEBUG][0m   Error code: 13. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java:20:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java:21:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java:23:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java:26:5: Class 'MailSender' looks like designed for extension (can be subclassed), but the method 'sendMessageHtml' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MailSender' final or making the method 'sendMessageHtml' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java:26:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java:27: Line is longer than 80 characters (found 135). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java:27:33: Parameter to should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java:27:44: Parameter subject should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java:27:60: Parameter template should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java:27:77: Parameter attributes should be final. [FinalParameters]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java:30: Line is longer than 80 characters (found 86). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java:32: Line is longer than 80 characters (found 81). [LineLength]
Audit done.
Checkstyle ends with 13 errors.
------[0m
[0m2025-06-16 21:24:45 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java[0m
[0m2025-06-16 21:24:45 [0;34m[DEBUG][0m   FILE_STATUS (GraphQLProvider.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:45 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java, FILE_NAME: GraphQLProvider.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:45 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:45 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:45 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java][0m
[0m2025-06-16 21:24:46 [0;34m[DEBUG][0m   Found errors. Error code: 17, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:46 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:46 [0;31m[ERROR][0m   Error code: 17. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java:27:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java:28:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java:29:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java:31:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java:34:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java:37:5: Class 'GraphQLProvider' looks like designed for extension (can be subclassed), but the method 'loadSchema' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GraphQLProvider' final or making the method 'loadSchema' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java:37:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java:43:38: '1024' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java:48: Line is longer than 80 characters (found 101). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java:55: Line is longer than 80 characters (found 89). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java:57: Line is longer than 80 characters (found 100). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java:65: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java:66: Line is longer than 80 characters (found 94). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java:67: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java:68: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java:69: Line is longer than 80 characters (found 95). [LineLength]
Audit done.
Checkstyle ends with 17 errors.
------[0m
[0m2025-06-16 21:24:46 [0;34m[DEBUG][0m   Error code: 17. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java:27:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java:28:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java:29:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java:31:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java:34:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java:37:5: Class 'GraphQLProvider' looks like designed for extension (can be subclassed), but the method 'loadSchema' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GraphQLProvider' final or making the method 'loadSchema' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java:37:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java:43:38: '1024' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java:48: Line is longer than 80 characters (found 101). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java:55: Line is longer than 80 characters (found 89). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java:57: Line is longer than 80 characters (found 100). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java:65: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java:66: Line is longer than 80 characters (found 94). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java:67: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java:68: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java:69: Line is longer than 80 characters (found 95). [LineLength]
Audit done.
Checkstyle ends with 17 errors.
------[0m
[0m2025-06-16 21:24:46 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/EcommerceApplicationTests.java[0m
[0m2025-06-16 21:24:46 [0;34m[DEBUG][0m   FILE_STATUS (EcommerceApplicationTests.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:46 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/EcommerceApplicationTests.java, FILE_NAME: EcommerceApplicationTests.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:46 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:46 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:46 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/EcommerceApplicationTests.java][0m
[0m2025-06-16 21:24:47 [0;34m[DEBUG][0m   Found errors. Error code: 1, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:47 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:47 [0;31m[ERROR][0m   Error code: 1. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/EcommerceApplicationTests.java:1: Missing package-info.java file. [JavadocPackage]
Audit done.
Checkstyle ends with 1 errors.
------[0m
[0m2025-06-16 21:24:47 [0;34m[DEBUG][0m   Error code: 1. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/EcommerceApplicationTests.java:1: Missing package-info.java file. [JavadocPackage]
Audit done.
Checkstyle ends with 1 errors.
------[0m
[0m2025-06-16 21:24:47 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java[0m
[0m2025-06-16 21:24:47 [0;34m[DEBUG][0m   FILE_STATUS (AdminControllerTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:47 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java, FILE_NAME: AdminControllerTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:47 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:47 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:47 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java][0m
[0m2025-06-16 21:24:48 [0;34m[DEBUG][0m   Found errors. Error code: 102, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:48 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:48 [0;31m[ERROR][0m   Error code: 102. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:31:71: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:32:72: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.constants.PathConstants.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:33:67: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.util.TestConstants.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:34:36: Using the '.*' form of import should be avoided - org.hamcrest.Matchers.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:37:82: Using the '.*' form of import should be avoided - org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:47: Line is longer than 80 characters (found 113). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:49: Line is longer than 80 characters (found 110). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:52:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:54:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:57:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:60:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:63:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:64:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:66:5: Class 'AdminControllerTest' looks like designed for extension (can be subclassed), but the method 'init' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdminControllerTest' final or making the method 'init' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:66:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:69: Line is longer than 80 characters (found 103). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:72: Line is longer than 80 characters (found 112). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:88:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:92: Line is longer than 80 characters (found 131). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:93: Line is longer than 80 characters (found 162). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:102:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:103: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:104:17: Name 'addPerfume_ShouldInputFieldsAreEmpty' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:105:24: 'perfumeRequest' hides a field. [HiddenField]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:106: Line is longer than 80 characters (found 162). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:113: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:114: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:116: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:117: Line is longer than 80 characters (found 89). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:118: Line is longer than 80 characters (found 93). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:119: Line is longer than 80 characters (found 96). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:120: Line is longer than 80 characters (found 94). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:121: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:122: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:123: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:126:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:130: Line is longer than 80 characters (found 131). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:131: Line is longer than 80 characters (found 166). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:140:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:141: Line is longer than 80 characters (found 94). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:142:17: Name 'editPerfume_ShouldInputFieldsAreEmpty' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:143:24: 'perfumeRequest' hides a field. [HiddenField]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:144: Line is longer than 80 characters (found 162). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:151: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:152: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:154: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:155: Line is longer than 80 characters (found 89). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:156: Line is longer than 80 characters (found 93). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:157: Line is longer than 80 characters (found 96). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:158: Line is longer than 80 characters (found 94). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:159: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:160: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:161: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:164:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:167:69: '46' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:174:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:175: Line is longer than 80 characters (found 90). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:176:17: Name 'deletePerfume_ShouldNotFound' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:177:69: '99' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:184:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:202:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:203: Line is longer than 80 characters (found 93). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:220:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:223:61: '111' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:230:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:231: Line is longer than 80 characters (found 95). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:232:17: Name 'deleteOrder_ShouldNotFound' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:233:61: '222' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:240:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:251:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:252: Line is longer than 80 characters (found 87). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:253:17: Name 'getUserById_ShouldNotFound' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:254:56: '1222' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:260:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:270:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:282: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:286: Line is longer than 80 characters (found 86). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:287: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:288: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:289: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:291: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:294:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:295: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:312: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:313: Line is longer than 80 characters (found 86). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:318:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:319: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:336: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:338: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:341:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:342: Line is longer than 80 characters (found 91). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:352: Line is longer than 80 characters (found 87). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:353: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:354: Line is longer than 80 characters (found 86). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:355: Line is longer than 80 characters (found 85). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:356: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:357: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:358: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:359: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:360: Line is longer than 80 characters (found 86). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:361: Line is longer than 80 characters (found 99). [LineLength]
Audit done.
Checkstyle ends with 102 errors.
------[0m
[0m2025-06-16 21:24:48 [0;34m[DEBUG][0m   Error code: 102. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:31:71: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:32:72: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.constants.PathConstants.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:33:67: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.util.TestConstants.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:34:36: Using the '.*' form of import should be avoided - org.hamcrest.Matchers.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:37:82: Using the '.*' form of import should be avoided - org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:47: Line is longer than 80 characters (found 113). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:49: Line is longer than 80 characters (found 110). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:52:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:54:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:57:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:60:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:63:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:64:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:66:5: Class 'AdminControllerTest' looks like designed for extension (can be subclassed), but the method 'init' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AdminControllerTest' final or making the method 'init' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:66:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:69: Line is longer than 80 characters (found 103). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:72: Line is longer than 80 characters (found 112). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:88:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:92: Line is longer than 80 characters (found 131). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:93: Line is longer than 80 characters (found 162). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:102:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:103: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:104:17: Name 'addPerfume_ShouldInputFieldsAreEmpty' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:105:24: 'perfumeRequest' hides a field. [HiddenField]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:106: Line is longer than 80 characters (found 162). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:113: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:114: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:116: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:117: Line is longer than 80 characters (found 89). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:118: Line is longer than 80 characters (found 93). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:119: Line is longer than 80 characters (found 96). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:120: Line is longer than 80 characters (found 94). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:121: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:122: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:123: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:126:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:130: Line is longer than 80 characters (found 131). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:131: Line is longer than 80 characters (found 166). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:140:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:141: Line is longer than 80 characters (found 94). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:142:17: Name 'editPerfume_ShouldInputFieldsAreEmpty' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:143:24: 'perfumeRequest' hides a field. [HiddenField]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:144: Line is longer than 80 characters (found 162). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:151: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:152: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:154: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:155: Line is longer than 80 characters (found 89). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:156: Line is longer than 80 characters (found 93). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:157: Line is longer than 80 characters (found 96). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:158: Line is longer than 80 characters (found 94). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:159: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:160: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:161: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:164:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:167:69: '46' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:174:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:175: Line is longer than 80 characters (found 90). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:176:17: Name 'deletePerfume_ShouldNotFound' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:177:69: '99' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:184:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:202:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:203: Line is longer than 80 characters (found 93). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:220:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:223:61: '111' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:230:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:231: Line is longer than 80 characters (found 95). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:232:17: Name 'deleteOrder_ShouldNotFound' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:233:61: '222' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:240:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:251:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:252: Line is longer than 80 characters (found 87). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:253:17: Name 'getUserById_ShouldNotFound' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:254:56: '1222' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:260:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:270:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:282: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:286: Line is longer than 80 characters (found 86). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:287: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:288: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:289: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:291: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:294:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:295: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:312: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:313: Line is longer than 80 characters (found 86). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:318:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:319: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:336: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:338: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:341:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:342: Line is longer than 80 characters (found 91). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:352: Line is longer than 80 characters (found 87). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:353: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:354: Line is longer than 80 characters (found 86). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:355: Line is longer than 80 characters (found 85). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:356: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:357: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:358: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:359: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:360: Line is longer than 80 characters (found 86). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java:361: Line is longer than 80 characters (found 99). [LineLength]
Audit done.
Checkstyle ends with 102 errors.
------[0m
[0m2025-06-16 21:24:48 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java[0m
[0m2025-06-16 21:24:48 [0;34m[DEBUG][0m   FILE_STATUS (AuthenticationControllerTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:48 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java, FILE_NAME: AuthenticationControllerTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:48 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:48 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:48 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java][0m
[0m2025-06-16 21:24:49 [0;34m[DEBUG][0m   Found errors. Error code: 42, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:49 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:49 [0;31m[ERROR][0m   Error code: 42. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:19:71: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:20:72: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.constants.PathConstants.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:21:67: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.util.TestConstants.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:25:82: Using the '.*' form of import should be avoided - org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:26:80: Using the '.*' form of import should be avoided - org.springframework.test.web.servlet.result.MockMvcResultMatchers.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:32: Line is longer than 80 characters (found 101). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:33: Line is longer than 80 characters (found 99). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:35:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:38:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:41:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:42:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:44:5: Class 'AuthenticationControllerTest' looks like designed for extension (can be subclassed), but the method 'init' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AuthenticationControllerTest' final or making the method 'init' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:44:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:60: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:65:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:66:17: Name 'login_ShouldEmailOrPasswordBeNotValid' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:70: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:78:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:79:17: Name 'forgotPassword_ShouldEmailBeNotValid' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:86:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:94:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:97: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:101: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:104:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:105:17: Name 'passwordReset_ShouldPasswordsNotMatch' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:109: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:113: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:116:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:117:17: Name 'passwordReset_ShouldPassword2BeEmpty' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:121: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:125: Line is longer than 80 characters (found 90). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:128:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:140: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:143:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:145:17: Name 'updateUserPassword_ShouldPasswordsNotMatch' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:155: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:158:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:160: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:160:17: Name 'updateUserPassword_ShouldInputFieldsAreEmpty' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:170: Line is longer than 80 characters (found 86). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:171: Line is longer than 80 characters (found 89). [LineLength]
Audit done.
Checkstyle ends with 42 errors.
------[0m
[0m2025-06-16 21:24:49 [0;34m[DEBUG][0m   Error code: 42. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:19:71: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:20:72: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.constants.PathConstants.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:21:67: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.util.TestConstants.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:25:82: Using the '.*' form of import should be avoided - org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:26:80: Using the '.*' form of import should be avoided - org.springframework.test.web.servlet.result.MockMvcResultMatchers.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:32: Line is longer than 80 characters (found 101). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:33: Line is longer than 80 characters (found 99). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:35:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:38:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:41:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:42:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:44:5: Class 'AuthenticationControllerTest' looks like designed for extension (can be subclassed), but the method 'init' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AuthenticationControllerTest' final or making the method 'init' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:44:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:60: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:65:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:66:17: Name 'login_ShouldEmailOrPasswordBeNotValid' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:70: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:78:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:79:17: Name 'forgotPassword_ShouldEmailBeNotValid' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:86:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:94:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:97: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:101: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:104:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:105:17: Name 'passwordReset_ShouldPasswordsNotMatch' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:109: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:113: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:116:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:117:17: Name 'passwordReset_ShouldPassword2BeEmpty' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:121: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:125: Line is longer than 80 characters (found 90). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:128:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:140: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:143:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:145:17: Name 'updateUserPassword_ShouldPasswordsNotMatch' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:155: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:158:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:160: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:160:17: Name 'updateUserPassword_ShouldInputFieldsAreEmpty' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:170: Line is longer than 80 characters (found 86). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java:171: Line is longer than 80 characters (found 89). [LineLength]
Audit done.
Checkstyle ends with 42 errors.
------[0m
[0m2025-06-16 21:24:49 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java[0m
[0m2025-06-16 21:24:49 [0;34m[DEBUG][0m   FILE_STATUS (OrderControllerTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:49 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java, FILE_NAME: OrderControllerTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:49 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:49 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:49 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java][0m
[0m2025-06-16 21:24:50 [0;34m[DEBUG][0m   Found errors. Error code: 34, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:50 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:50 [0;31m[ERROR][0m   Error code: 34. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:18:71: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:19:72: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.constants.PathConstants.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:20:67: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.util.TestConstants.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:21:36: Using the '.*' form of import should be avoided - org.hamcrest.Matchers.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:32: Line is longer than 80 characters (found 113). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:34: Line is longer than 80 characters (found 110). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:37:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:40:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:43:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:45:54: '111' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:48:51: '111' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:60:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:61:17: Name 'getOrderById_ShouldNotFound' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:62:54: '1111' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:68:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:70:60: '111' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:79:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:129:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:130:17: Name 'postOrder_ShouldInputFieldsAreEmpty' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:131:22: Name 'OrderRequest' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:138: Line is longer than 80 characters (found 85). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:139: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:141: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:143: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:147:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:159: Line is longer than 80 characters (found 89). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:161: Line is longer than 80 characters (found 87). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:162: Line is longer than 80 characters (found 85). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:164: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:165: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:166: Line is longer than 80 characters (found 91). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:167: Line is longer than 80 characters (found 87). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:168: Line is longer than 80 characters (found 81). [LineLength]
Audit done.
Checkstyle ends with 34 errors.
------[0m
[0m2025-06-16 21:24:50 [0;34m[DEBUG][0m   Error code: 34. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:18:71: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:19:72: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.constants.PathConstants.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:20:67: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.util.TestConstants.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:21:36: Using the '.*' form of import should be avoided - org.hamcrest.Matchers.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:32: Line is longer than 80 characters (found 113). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:34: Line is longer than 80 characters (found 110). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:37:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:40:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:43:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:45:54: '111' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:48:51: '111' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:60:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:61:17: Name 'getOrderById_ShouldNotFound' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:62:54: '1111' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:68:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:70:60: '111' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:79:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:129:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:130:17: Name 'postOrder_ShouldInputFieldsAreEmpty' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:131:22: Name 'OrderRequest' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:138: Line is longer than 80 characters (found 85). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:139: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:141: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:143: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:147:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:159: Line is longer than 80 characters (found 89). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:161: Line is longer than 80 characters (found 87). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:162: Line is longer than 80 characters (found 85). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:164: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:165: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:166: Line is longer than 80 characters (found 91). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:167: Line is longer than 80 characters (found 87). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java:168: Line is longer than 80 characters (found 81). [LineLength]
Audit done.
Checkstyle ends with 34 errors.
------[0m
[0m2025-06-16 21:24:50 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java[0m
[0m2025-06-16 21:24:50 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeControllerTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:50 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java, FILE_NAME: PerfumeControllerTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:50 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:50 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:50 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java][0m
[0m2025-06-16 21:24:51 [0;34m[DEBUG][0m   Found errors. Error code: 50, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:51 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:51 [0;31m[ERROR][0m   Error code: 50. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:25:72: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.constants.PathConstants.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:26:67: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.util.TestConstants.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:39: Line is longer than 80 characters (found 105). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:40: Line is longer than 80 characters (found 103). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:43:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:46:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:49:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:50:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:52:5: Class 'PerfumeControllerTest' looks like designed for extension (can be subclassed), but the method 'init' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeControllerTest' final or making the method 'init' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:52:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:60:20: '1000' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:71:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:83:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:89: Line is longer than 80 characters (found 85). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:94:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:95:17: Name 'getPerfumeById_ShouldNotFound' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:96:59: '1111' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:102:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:105: Line is longer than 80 characters (found 86). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:105:74: '3L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:105:78: '4L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:105:82: '5L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:116:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:130:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:132:30: 'filter' hides a field. [HiddenField]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:136:20: '150' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:137:20: '250' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:140: Line is longer than 80 characters (found 101). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:141: Line is longer than 80 characters (found 96). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:159:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:161:30: 'filter' hides a field. [HiddenField]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:176:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:178:30: 'filter' hides a field. [HiddenField]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:193:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:198: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:204:53: '15' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:213: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:219:53: '7' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:242:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:252: Line is longer than 80 characters (found 87). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:253: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:254: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:257:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:267: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:270: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:273:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:283: Line is longer than 80 characters (found 98). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:284: Line is longer than 80 characters (found 85). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:285:69: '35' is a magic number. [MagicNumber]
Audit done.
Checkstyle ends with 50 errors.
------[0m
[0m2025-06-16 21:24:51 [0;34m[DEBUG][0m   Error code: 50. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:25:72: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.constants.PathConstants.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:26:67: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.util.TestConstants.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:39: Line is longer than 80 characters (found 105). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:40: Line is longer than 80 characters (found 103). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:43:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:46:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:49:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:50:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:52:5: Class 'PerfumeControllerTest' looks like designed for extension (can be subclassed), but the method 'init' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeControllerTest' final or making the method 'init' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:52:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:60:20: '1000' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:71:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:83:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:89: Line is longer than 80 characters (found 85). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:94:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:95:17: Name 'getPerfumeById_ShouldNotFound' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:96:59: '1111' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:102:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:105: Line is longer than 80 characters (found 86). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:105:74: '3L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:105:78: '4L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:105:82: '5L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:116:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:130:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:132:30: 'filter' hides a field. [HiddenField]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:136:20: '150' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:137:20: '250' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:140: Line is longer than 80 characters (found 101). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:141: Line is longer than 80 characters (found 96). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:159:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:161:30: 'filter' hides a field. [HiddenField]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:176:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:178:30: 'filter' hides a field. [HiddenField]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:193:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:198: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:204:53: '15' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:213: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:219:53: '7' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:242:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:252: Line is longer than 80 characters (found 87). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:253: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:254: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:257:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:267: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:270: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:273:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:283: Line is longer than 80 characters (found 98). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:284: Line is longer than 80 characters (found 85). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java:285:69: '35' is a magic number. [MagicNumber]
Audit done.
Checkstyle ends with 50 errors.
------[0m
[0m2025-06-16 21:24:51 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java[0m
[0m2025-06-16 21:24:51 [0;34m[DEBUG][0m   FILE_STATUS (RegistrationControllerTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:51 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java, FILE_NAME: RegistrationControllerTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:51 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:51 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:51 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java][0m
[0m2025-06-16 21:24:52 [0;34m[DEBUG][0m   Found errors. Error code: 31, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:52 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:52 [0;31m[ERROR][0m   Error code: 31. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:17:71: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:20:67: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.util.TestConstants.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:26:80: Using the '.*' form of import should be avoided - org.springframework.test.web.servlet.result.MockMvcResultMatchers.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:32: Line is longer than 80 characters (found 101). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:33: Line is longer than 80 characters (found 99). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:36:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:39:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:42:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:44:5: Class 'RegistrationControllerTest' looks like designed for extension (can be subclassed), but the method 'init' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RegistrationControllerTest' final or making the method 'init' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:44:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:55:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:56:17: Name 'registration_ShouldPassword2BeEmpty' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:65: Line is longer than 80 characters (found 89). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:68:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:69:17: Name 'registration_ShouldPasswordsNotMatch' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:77: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:80:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:81:17: Name 'registration_ShouldUserEmailIsExist' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:82:29: 'registrationRequest' hides a field. [HiddenField]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:98:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:99:17: Name 'registration_ShouldCaptchaNotFilled' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:110:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:111:17: Name 'registration_ShouldInputFieldsAreEmpty' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:115: Line is longer than 80 characters (found 86). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:121:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:123: Line is longer than 80 characters (found 86). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:126: Line is longer than 80 characters (found 86). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:129:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:130: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:130:17: Name 'activateEmailCode_ShouldNotFoundActivationCode' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
Audit done.
Checkstyle ends with 31 errors.
------[0m
[0m2025-06-16 21:24:52 [0;34m[DEBUG][0m   Error code: 31. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:17:71: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.constants.ErrorMessage.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:20:67: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.util.TestConstants.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:26:80: Using the '.*' form of import should be avoided - org.springframework.test.web.servlet.result.MockMvcResultMatchers.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:32: Line is longer than 80 characters (found 101). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:33: Line is longer than 80 characters (found 99). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:36:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:39:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:42:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:44:5: Class 'RegistrationControllerTest' looks like designed for extension (can be subclassed), but the method 'init' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RegistrationControllerTest' final or making the method 'init' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:44:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:55:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:56:17: Name 'registration_ShouldPassword2BeEmpty' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:65: Line is longer than 80 characters (found 89). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:68:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:69:17: Name 'registration_ShouldPasswordsNotMatch' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:77: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:80:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:81:17: Name 'registration_ShouldUserEmailIsExist' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:82:29: 'registrationRequest' hides a field. [HiddenField]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:98:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:99:17: Name 'registration_ShouldCaptchaNotFilled' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:110:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:111:17: Name 'registration_ShouldInputFieldsAreEmpty' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:115: Line is longer than 80 characters (found 86). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:121:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:123: Line is longer than 80 characters (found 86). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:126: Line is longer than 80 characters (found 86). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:129:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:130: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java:130:17: Name 'activateEmailCode_ShouldNotFoundActivationCode' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
Audit done.
Checkstyle ends with 31 errors.
------[0m
[0m2025-06-16 21:24:52 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java[0m
[0m2025-06-16 21:24:52 [0;34m[DEBUG][0m   FILE_STATUS (ReviewControllerTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:52 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java, FILE_NAME: ReviewControllerTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:52 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:52 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:52 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java][0m
[0m2025-06-16 21:24:53 [0;34m[DEBUG][0m   Found errors. Error code: 19, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:53 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:53 [0;31m[ERROR][0m   Error code: 19. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java:21:36: Using the '.*' form of import should be avoided - org.hamcrest.Matchers.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java:32: Line is longer than 80 characters (found 105). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java:33: Line is longer than 80 characters (found 103). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java:36:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java:39:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java:42:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java:55:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java:61:33: '5' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java:70:57: '5' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java:74:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java:75:17: Name 'addReviewToPerfume_ShouldNotFound' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java:77:36: '111L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java:80:33: '5' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java:90:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java:91: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java:91:17: Name 'addReviewToPerfume_ShouldInputFieldsAreEmpty' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java:99: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java:100: Line is longer than 80 characters (found 84). [LineLength]
Audit done.
Checkstyle ends with 19 errors.
------[0m
[0m2025-06-16 21:24:53 [0;34m[DEBUG][0m   Error code: 19. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java:21:36: Using the '.*' form of import should be avoided - org.hamcrest.Matchers.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java:32: Line is longer than 80 characters (found 105). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java:33: Line is longer than 80 characters (found 103). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java:36:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java:39:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java:42:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java:55:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java:61:33: '5' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java:70:57: '5' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java:74:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java:75:17: Name 'addReviewToPerfume_ShouldNotFound' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java:77:36: '111L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java:80:33: '5' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java:90:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java:91: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java:91:17: Name 'addReviewToPerfume_ShouldInputFieldsAreEmpty' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java:99: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java:100: Line is longer than 80 characters (found 84). [LineLength]
Audit done.
Checkstyle ends with 19 errors.
------[0m
[0m2025-06-16 21:24:53 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java[0m
[0m2025-06-16 21:24:53 [0;34m[DEBUG][0m   FILE_STATUS (UserControllerTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:53 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java, FILE_NAME: UserControllerTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:53 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:53 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:53 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java][0m
[0m2025-06-16 21:24:54 [0;34m[DEBUG][0m   Found errors. Error code: 19, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:54 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:54 [0;31m[ERROR][0m   Error code: 19. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java:23:72: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.constants.PathConstants.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java:24:67: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.util.TestConstants.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java:28:82: Using the '.*' form of import should be avoided - org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java:42:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java:45:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java:48:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java:79:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java:97:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java:99:17: Name 'updateUserInfo_ShouldInputFieldsAreEmpty' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java:111:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java:115:25: '4L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java:132:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java:145: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java:149: Line is longer than 80 characters (found 86). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java:150: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java:151: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java:152: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java:154: Line is longer than 80 characters (found 81). [LineLength]
Audit done.
Checkstyle ends with 19 errors.
------[0m
[0m2025-06-16 21:24:54 [0;34m[DEBUG][0m   Error code: 19. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java:23:72: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.constants.PathConstants.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java:24:67: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.util.TestConstants.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java:28:82: Using the '.*' form of import should be avoided - org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java:42:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java:45:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java:48:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java:79:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java:97:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java:99:17: Name 'updateUserInfo_ShouldInputFieldsAreEmpty' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java:111:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java:115:25: '4L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java:132:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java:145: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java:149: Line is longer than 80 characters (found 86). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java:150: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java:151: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java:152: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java:154: Line is longer than 80 characters (found 81). [LineLength]
Audit done.
Checkstyle ends with 19 errors.
------[0m
[0m2025-06-16 21:24:54 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java[0m
[0m2025-06-16 21:24:54 [0;34m[DEBUG][0m   FILE_STATUS (OrderItemTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:54 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java, FILE_NAME: OrderItemTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:54 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:54 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:54 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java][0m
[0m2025-06-16 21:24:55 [0;34m[DEBUG][0m   Found errors. Error code: 26, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:55 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:55 [0;31m[ERROR][0m   Error code: 26. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:5:47: Using the '.*' form of import should be avoided - org.junit.jupiter.api.Assertions.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:11:10: Name 'constructor_shouldCreateOrderItem_whenValidInputs' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:13:23: '100L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:24:10: Name 'constructor_shouldThrowException_whenAmountIsNull' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:27: Line is longer than 80 characters (found 134). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:28: Line is longer than 80 characters (found 90). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:32:10: Name 'constructor_shouldThrowException_whenAmountIsNegative' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:35: Line is longer than 80 characters (found 133). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:36: Line is longer than 80 characters (found 90). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:40:10: Name 'constructor_shouldThrowException_whenQuantityIsNull' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:43: Line is longer than 80 characters (found 135). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:43:111: '10L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:44: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:48:10: Name 'constructor_shouldThrowException_whenQuantityIsZeroOrNegative' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:51: Line is longer than 80 characters (found 137). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:51:115: '10L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:52: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:54: Line is longer than 80 characters (found 142). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:54:119: '10L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:54:124: '-5L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:55: Line is longer than 80 characters (found 96). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:59:10: Name 'constructor_shouldThrowException_whenPerfumeIsNull' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:60: Line is longer than 80 characters (found 126). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:60:111: '10L' is a magic number. [MagicNumber]
Audit done.
Checkstyle ends with 26 errors.
------[0m
[0m2025-06-16 21:24:55 [0;34m[DEBUG][0m   Error code: 26. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:5:47: Using the '.*' form of import should be avoided - org.junit.jupiter.api.Assertions.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:11:10: Name 'constructor_shouldCreateOrderItem_whenValidInputs' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:13:23: '100L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:24:10: Name 'constructor_shouldThrowException_whenAmountIsNull' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:27: Line is longer than 80 characters (found 134). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:28: Line is longer than 80 characters (found 90). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:32:10: Name 'constructor_shouldThrowException_whenAmountIsNegative' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:35: Line is longer than 80 characters (found 133). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:36: Line is longer than 80 characters (found 90). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:40:10: Name 'constructor_shouldThrowException_whenQuantityIsNull' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:43: Line is longer than 80 characters (found 135). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:43:111: '10L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:44: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:48:10: Name 'constructor_shouldThrowException_whenQuantityIsZeroOrNegative' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:51: Line is longer than 80 characters (found 137). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:51:115: '10L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:52: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:54: Line is longer than 80 characters (found 142). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:54:119: '10L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:54:124: '-5L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:55: Line is longer than 80 characters (found 96). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:59:10: Name 'constructor_shouldThrowException_whenPerfumeIsNull' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:60: Line is longer than 80 characters (found 126). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java:60:111: '10L' is a magic number. [MagicNumber]
Audit done.
Checkstyle ends with 26 errors.
------[0m
[0m2025-06-16 21:24:55 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java[0m
[0m2025-06-16 21:24:55 [0;34m[DEBUG][0m   FILE_STATUS (OrderTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:55 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java, FILE_NAME: OrderTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:55 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:55 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:55 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java][0m
[0m2025-06-16 21:24:56 [0;34m[DEBUG][0m   Found errors. Error code: 76, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:56 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:56 [0;31m[ERROR][0m   Error code: 76. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:7:47: Using the '.*' form of import should be avoided - org.junit.jupiter.api.Assertions.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:11:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:15:17: '100.0' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:23:17: '12345' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:26:22: '100.0' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:34:22: '12345' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:39:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:41: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:42: Line is longer than 80 characters (found 123). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:42:120: '123' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:44: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:47:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:49: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:50: Line is longer than 80 characters (found 124). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:50:27: '-10.0' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:50:121: '123' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:52: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:55:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:57: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:58: Line is longer than 80 characters (found 112). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:58:27: '10.0' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:58:109: '123' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:63:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:65: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:66: Line is longer than 80 characters (found 135). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:66:27: '10.0' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:66:132: '123' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:71:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:73: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:74: Line is longer than 80 characters (found 120). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:74:27: '10.0' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:74:117: '123' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:79:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:81: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:82: Line is longer than 80 characters (found 121). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:82:27: '10.0' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:82:118: '123' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:87:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:89: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:90: Line is longer than 80 characters (found 119). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:90:27: '10.0' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:90:116: '123' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:95:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:97: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:98: Line is longer than 80 characters (found 117). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:98:27: '10.0' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:98:114: '123' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:103:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:105: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:106: Line is longer than 80 characters (found 119). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:106:27: '10.0' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:106:116: '123' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:111:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:113: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:114: Line is longer than 80 characters (found 107). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:114:27: '10.0' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:114:104: '123' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:119:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:121: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:122: Line is longer than 80 characters (found 118). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:122:27: '10.0' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:122:115: '123' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:127:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:129: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:130: Line is longer than 80 characters (found 113). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:130:27: '10.0' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:130:110: '123' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:135:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:137: Line is longer than 80 characters (found 89). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:138: Line is longer than 80 characters (found 124). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:138:27: '10.0' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:142: Line is longer than 80 characters (found 89). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:143: Line is longer than 80 characters (found 122). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:143:27: '10.0' is a magic number. [MagicNumber]
Audit done.
Checkstyle ends with 76 errors.
------[0m
[0m2025-06-16 21:24:56 [0;34m[DEBUG][0m   Error code: 76. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:7:47: Using the '.*' form of import should be avoided - org.junit.jupiter.api.Assertions.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:11:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:15:17: '100.0' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:23:17: '12345' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:26:22: '100.0' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:34:22: '12345' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:39:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:41: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:42: Line is longer than 80 characters (found 123). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:42:120: '123' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:44: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:47:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:49: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:50: Line is longer than 80 characters (found 124). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:50:27: '-10.0' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:50:121: '123' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:52: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:55:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:57: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:58: Line is longer than 80 characters (found 112). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:58:27: '10.0' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:58:109: '123' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:63:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:65: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:66: Line is longer than 80 characters (found 135). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:66:27: '10.0' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:66:132: '123' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:71:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:73: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:74: Line is longer than 80 characters (found 120). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:74:27: '10.0' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:74:117: '123' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:79:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:81: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:82: Line is longer than 80 characters (found 121). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:82:27: '10.0' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:82:118: '123' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:87:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:89: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:90: Line is longer than 80 characters (found 119). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:90:27: '10.0' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:90:116: '123' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:95:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:97: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:98: Line is longer than 80 characters (found 117). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:98:27: '10.0' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:98:114: '123' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:103:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:105: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:106: Line is longer than 80 characters (found 119). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:106:27: '10.0' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:106:116: '123' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:111:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:113: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:114: Line is longer than 80 characters (found 107). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:114:27: '10.0' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:114:104: '123' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:119:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:121: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:122: Line is longer than 80 characters (found 118). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:122:27: '10.0' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:122:115: '123' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:127:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:129: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:130: Line is longer than 80 characters (found 113). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:130:27: '10.0' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:130:110: '123' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:135:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:137: Line is longer than 80 characters (found 89). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:138: Line is longer than 80 characters (found 124). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:138:27: '10.0' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:142: Line is longer than 80 characters (found 89). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:143: Line is longer than 80 characters (found 122). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java:143:27: '10.0' is a magic number. [MagicNumber]
Audit done.
Checkstyle ends with 76 errors.
------[0m
[0m2025-06-16 21:24:56 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java[0m
[0m2025-06-16 21:24:56 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:56 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java, FILE_NAME: PerfumeTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:56 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:56 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:56 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java][0m
[0m2025-06-16 21:24:57 [0;34m[DEBUG][0m   Found errors. Error code: 41, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:57 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:57 [0;31m[ERROR][0m   Error code: 41. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:8:47: Using the '.*' form of import should be avoided - org.junit.jupiter.api.Assertions.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:14:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:16:5: Class 'PerfumeTest' looks like designed for extension (can be subclassed), but the method 'setUp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeTest' final or making the method 'setUp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:16:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:21:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:25: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:34:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:44:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:51:42: '999L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:54:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:60:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:71:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:74:36: '2020' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:76:51: '120' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:77:45: '4.5' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:81:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:84:43: '2020' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:86:46: '100' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:86:67: '4.0' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:91:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:94:43: '2020' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:96:45: '100' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:96:66: '4.0' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:101:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:104:46: '1500' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:106:45: '100' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:106:66: '4.0' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:111:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:114:46: '2020' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:116:45: '100' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:116:66: '4.0' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:118: Line is longer than 80 characters (found 102). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:121:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:124:46: '2020' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:126:45: '100' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:126:66: '6.0' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:131:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:134:34: '2020' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:136:37: '100' is a magic number. [MagicNumber]
Audit done.
Checkstyle ends with 41 errors.
------[0m
[0m2025-06-16 21:24:57 [0;34m[DEBUG][0m   Error code: 41. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:8:47: Using the '.*' form of import should be avoided - org.junit.jupiter.api.Assertions.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:14:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:16:5: Class 'PerfumeTest' looks like designed for extension (can be subclassed), but the method 'setUp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PerfumeTest' final or making the method 'setUp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:16:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:21:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:25: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:34:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:44:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:51:42: '999L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:54:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:60:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:71:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:74:36: '2020' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:76:51: '120' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:77:45: '4.5' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:81:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:84:43: '2020' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:86:46: '100' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:86:67: '4.0' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:91:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:94:43: '2020' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:96:45: '100' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:96:66: '4.0' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:101:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:104:46: '1500' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:106:45: '100' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:106:66: '4.0' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:111:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:114:46: '2020' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:116:45: '100' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:116:66: '4.0' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:118: Line is longer than 80 characters (found 102). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:121:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:124:46: '2020' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:126:45: '100' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:126:66: '6.0' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:131:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:134:34: '2020' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java:136:37: '100' is a magic number. [MagicNumber]
Audit done.
Checkstyle ends with 41 errors.
------[0m
[0m2025-06-16 21:24:57 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java[0m
[0m2025-06-16 21:24:57 [0;34m[DEBUG][0m   FILE_STATUS (ReviewTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:57 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java, FILE_NAME: ReviewTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:57 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:57 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:57 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java][0m
[0m2025-06-16 21:24:58 [0;34m[DEBUG][0m   Found errors. Error code: 35, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:58 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:58 [0;31m[ERROR][0m   Error code: 35. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:7:47: Using the '.*' form of import should be avoided - org.junit.jupiter.api.Assertions.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:12:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:13:17: Name 'testConstructor_validInputs_shouldCreateReview' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:14:39: '2023' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:14:45: '5' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:15:60: '4' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:19:22: '4' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:23:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:24:17: Name 'testConstructor_nullDate_shouldSetToNow' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:25:52: '3' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:29:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:30:17: Name 'testConstructor_blankAuthor_shouldThrow' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:31: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:32:47: '3' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:36:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:37:17: Name 'testConstructor_blankMessage_shouldThrow' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:38: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:39:50: '3' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:43:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:44:17: Name 'testConstructor_invalidRating_shouldThrow' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:45: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:49: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:50:51: '6' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:53: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:58:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:59:17: Name 'testConstructor_futureDate_shouldThrow' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:61: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:62:51: '4' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:66:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:67:17: Name 'testSetters_validValues_shouldSet' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:76:26: '5' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:77:22: '5' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:79:39: '2020' is a magic number. [MagicNumber]
Audit done.
Checkstyle ends with 35 errors.
------[0m
[0m2025-06-16 21:24:58 [0;34m[DEBUG][0m   Error code: 35. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:7:47: Using the '.*' form of import should be avoided - org.junit.jupiter.api.Assertions.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:12:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:13:17: Name 'testConstructor_validInputs_shouldCreateReview' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:14:39: '2023' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:14:45: '5' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:15:60: '4' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:19:22: '4' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:23:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:24:17: Name 'testConstructor_nullDate_shouldSetToNow' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:25:52: '3' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:29:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:30:17: Name 'testConstructor_blankAuthor_shouldThrow' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:31: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:32:47: '3' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:36:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:37:17: Name 'testConstructor_blankMessage_shouldThrow' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:38: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:39:50: '3' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:43:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:44:17: Name 'testConstructor_invalidRating_shouldThrow' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:45: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:49: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:50:51: '6' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:53: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:58:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:59:17: Name 'testConstructor_futureDate_shouldThrow' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:61: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:62:51: '4' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:66:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:67:17: Name 'testSetters_validValues_shouldSet' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:76:26: '5' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:77:22: '5' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java:79:39: '2020' is a magic number. [MagicNumber]
Audit done.
Checkstyle ends with 35 errors.
------[0m
[0m2025-06-16 21:24:58 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java[0m
[0m2025-06-16 21:24:58 [0;34m[DEBUG][0m   FILE_STATUS (UserTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:58 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java, FILE_NAME: UserTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:58 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:58 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:58 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java][0m
[0m2025-06-16 21:24:59 [0;34m[DEBUG][0m   Found errors. Error code: 29, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:24:59 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:24:59 [0;31m[ERROR][0m   Error code: 29. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:11:47: Using the '.*' form of import should be avoided - org.junit.jupiter.api.Assertions.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:15:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:15:15: Variable 'roles' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:17:5: Class 'UserTest' looks like designed for extension (can be subclassed), but the method 'setUp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserTest' final or making the method 'setUp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:17:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:24:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:49:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:50:17: Name 'testInvalidEmailNull_ThrowsException' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:51: Line is longer than 80 characters (found 98). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:59:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:60:17: Name 'testInvalidEmailFormat_ThrowsException' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:61: Line is longer than 80 characters (found 98). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:69:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:70:17: Name 'testValidPhoneNumberNull_Allows' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:72: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:74:35: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:79:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:80:17: Name 'testInvalidPhoneNumber_ThrowsException' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:81: Line is longer than 80 characters (found 98). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:82: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:89:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:90:17: Name 'testValidPostIndexNull_Allows' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:92: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:99:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:100:17: Name 'testInvalidPostIndexTooLong_ThrowsException' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:101: Line is longer than 80 characters (found 98). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:102: Line is longer than 80 characters (found 81). [LineLength]
Audit done.
Checkstyle ends with 29 errors.
------[0m
[0m2025-06-16 21:24:59 [0;34m[DEBUG][0m   Error code: 29. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:11:47: Using the '.*' form of import should be avoided - org.junit.jupiter.api.Assertions.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:15:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:15:15: Variable 'roles' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:17:5: Class 'UserTest' looks like designed for extension (can be subclassed), but the method 'setUp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserTest' final or making the method 'setUp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:17:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:24:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:49:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:50:17: Name 'testInvalidEmailNull_ThrowsException' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:51: Line is longer than 80 characters (found 98). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:59:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:60:17: Name 'testInvalidEmailFormat_ThrowsException' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:61: Line is longer than 80 characters (found 98). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:69:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:70:17: Name 'testValidPhoneNumberNull_Allows' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:72: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:74:35: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:79:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:80:17: Name 'testInvalidPhoneNumber_ThrowsException' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:81: Line is longer than 80 characters (found 98). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:82: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:89:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:90:17: Name 'testValidPostIndexNull_Allows' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:92: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:99:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:100:17: Name 'testInvalidPostIndexTooLong_ThrowsException' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:101: Line is longer than 80 characters (found 98). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java:102: Line is longer than 80 characters (found 81). [LineLength]
Audit done.
Checkstyle ends with 29 errors.
------[0m
[0m2025-06-16 21:24:59 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapperTest.java[0m
[0m2025-06-16 21:24:59 [0;34m[DEBUG][0m   FILE_STATUS (OrderMapperTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:24:59 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapperTest.java, FILE_NAME: OrderMapperTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:24:59 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:24:59 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:24:59 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapperTest.java][0m
[0m2025-06-16 21:25:00 [0;34m[DEBUG][0m   Found errors. Error code: 6, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:25:00 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:25:00 [0;31m[ERROR][0m   Error code: 6. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapperTest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapperTest.java:13:67: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.util.TestConstants.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapperTest.java:20:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapperTest.java:23:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapperTest.java:46:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapperTest.java:59: Line is longer than 80 characters (found 82). [LineLength]
Audit done.
Checkstyle ends with 6 errors.
------[0m
[0m2025-06-16 21:25:00 [0;34m[DEBUG][0m   Error code: 6. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapperTest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapperTest.java:13:67: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.util.TestConstants.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapperTest.java:20:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapperTest.java:23:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapperTest.java:46:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapperTest.java:59: Line is longer than 80 characters (found 82). [LineLength]
Audit done.
Checkstyle ends with 6 errors.
------[0m
[0m2025-06-16 21:25:00 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java[0m
[0m2025-06-16 21:25:00 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeMapperTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:00 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java, FILE_NAME: PerfumeMapperTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:25:00 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:25:00 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:00 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java][0m
[0m2025-06-16 21:25:01 [0;34m[DEBUG][0m   Found errors. Error code: 16, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:25:01 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:25:01 [0;31m[ERROR][0m   Error code: 16. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java:14:67: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.util.TestConstants.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java:21:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java:24:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java:30: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java:33: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java:34: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java:35: Line is longer than 80 characters (found 98). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java:36: Line is longer than 80 characters (found 94). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java:59:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java:63: Line is longer than 80 characters (found 102). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java:66: Line is longer than 80 characters (found 87). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java:69: Line is longer than 80 characters (found 89). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java:70: Line is longer than 80 characters (found 97). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java:71: Line is longer than 80 characters (found 103). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java:72: Line is longer than 80 characters (found 99). [LineLength]
Audit done.
Checkstyle ends with 16 errors.
------[0m
[0m2025-06-16 21:25:01 [0;34m[DEBUG][0m   Error code: 16. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java:14:67: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.util.TestConstants.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java:21:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java:24:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java:30: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java:33: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java:34: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java:35: Line is longer than 80 characters (found 98). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java:36: Line is longer than 80 characters (found 94). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java:59:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java:63: Line is longer than 80 characters (found 102). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java:66: Line is longer than 80 characters (found 87). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java:69: Line is longer than 80 characters (found 89). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java:70: Line is longer than 80 characters (found 97). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java:71: Line is longer than 80 characters (found 103). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java:72: Line is longer than 80 characters (found 99). [LineLength]
Audit done.
Checkstyle ends with 16 errors.
------[0m
[0m2025-06-16 21:25:01 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapperTest.java[0m
[0m2025-06-16 21:25:01 [0;34m[DEBUG][0m   FILE_STATUS (UserMapperTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:01 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapperTest.java, FILE_NAME: UserMapperTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:25:01 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:25:01 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:01 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapperTest.java][0m
[0m2025-06-16 21:25:02 [0;34m[DEBUG][0m   Found errors. Error code: 7, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:25:02 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:25:02 [0;31m[ERROR][0m   Error code: 7. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapperTest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapperTest.java:16:67: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.util.TestConstants.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapperTest.java:23:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapperTest.java:26:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapperTest.java:35:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapperTest.java:48:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapperTest.java:59:5: Missing a Javadoc comment. [MissingJavadocMethod]
Audit done.
Checkstyle ends with 7 errors.
------[0m
[0m2025-06-16 21:25:02 [0;34m[DEBUG][0m   Error code: 7. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapperTest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapperTest.java:16:67: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.util.TestConstants.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapperTest.java:23:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapperTest.java:26:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapperTest.java:35:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapperTest.java:48:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapperTest.java:59:5: Missing a Javadoc comment. [MissingJavadocMethod]
Audit done.
Checkstyle ends with 7 errors.
------[0m
[0m2025-06-16 21:25:02 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java[0m
[0m2025-06-16 21:25:02 [0;34m[DEBUG][0m   FILE_STATUS (AuthenticationServiceImplTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:02 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java, FILE_NAME: AuthenticationServiceImplTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:25:02 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:25:02 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:02 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java][0m
[0m2025-06-16 21:25:03 [0;34m[DEBUG][0m   Found errors. Error code: 48, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:25:03 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:25:03 [0;31m[ERROR][0m   Error code: 48. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:8:57: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.security.oauth2.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:26:67: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.util.TestConstants.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:27:47: Using the '.*' form of import should be avoided - org.junit.jupiter.api.Assertions.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:28:34: Using the '.*' form of import should be avoided - org.mockito.Mockito.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:34:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:37:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:40:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:43:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:46:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:49:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:52:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:56: Line is longer than 80 characters (found 119). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:57: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:60: Line is longer than 80 characters (found 95). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:63:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:66:20: '123L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:73: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:74: Line is longer than 80 characters (found 90). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:75:22: '123L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:79: Line is longer than 80 characters (found 85). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:81: Line is longer than 80 characters (found 109). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:84:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:89: Line is longer than 80 characters (found 89). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:92: Line is longer than 80 characters (found 106). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:96: Line is longer than 80 characters (found 95). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:106:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:109:31: '123456' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:114: Line is longer than 80 characters (found 90). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:134:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:137:30: '123456' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:141: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:142: Line is longer than 80 characters (found 94). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:162:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:165:30: '123456' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:169: Line is longer than 80 characters (found 90). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:188:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:191:31: '123456' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:213:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:220: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:224: Line is longer than 80 characters (found 99). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:238:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:244: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:245: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:247: Line is longer than 80 characters (found 101). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:255:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:260: Line is longer than 80 characters (found 102). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:262: Line is longer than 80 characters (found 88). [LineLength]
Audit done.
Checkstyle ends with 48 errors.
------[0m
[0m2025-06-16 21:25:03 [0;34m[DEBUG][0m   Error code: 48. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:8:57: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.security.oauth2.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:26:67: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.util.TestConstants.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:27:47: Using the '.*' form of import should be avoided - org.junit.jupiter.api.Assertions.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:28:34: Using the '.*' form of import should be avoided - org.mockito.Mockito.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:34:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:37:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:40:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:43:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:46:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:49:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:52:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:56: Line is longer than 80 characters (found 119). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:57: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:60: Line is longer than 80 characters (found 95). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:63:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:66:20: '123L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:73: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:74: Line is longer than 80 characters (found 90). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:75:22: '123L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:79: Line is longer than 80 characters (found 85). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:81: Line is longer than 80 characters (found 109). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:84:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:89: Line is longer than 80 characters (found 89). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:92: Line is longer than 80 characters (found 106). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:96: Line is longer than 80 characters (found 95). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:106:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:109:31: '123456' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:114: Line is longer than 80 characters (found 90). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:134:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:137:30: '123456' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:141: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:142: Line is longer than 80 characters (found 94). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:162:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:165:30: '123456' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:169: Line is longer than 80 characters (found 90). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:188:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:191:31: '123456' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:213:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:220: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:224: Line is longer than 80 characters (found 99). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:238:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:244: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:245: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:247: Line is longer than 80 characters (found 101). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:255:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:260: Line is longer than 80 characters (found 102). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java:262: Line is longer than 80 characters (found 88). [LineLength]
Audit done.
Checkstyle ends with 48 errors.
------[0m
[0m2025-06-16 21:25:03 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java[0m
[0m2025-06-16 21:25:03 [0;34m[DEBUG][0m   FILE_STATUS (OrderServiceImplTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:03 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java, FILE_NAME: OrderServiceImplTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:25:03 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:25:03 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:03 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java][0m
[0m2025-06-16 21:25:04 [0;34m[DEBUG][0m   Found errors. Error code: 23, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:25:04 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:25:04 [0;31m[ERROR][0m   Error code: 23. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java:22:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java:24:67: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.util.TestConstants.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java:27:34: Using the '.*' form of import should be avoided - org.mockito.Mockito.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java:33:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java:36:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java:39:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java:42:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java:45:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java:48:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java:50:47: '20' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java:54:66: '20' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java:56: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java:62:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java:64:47: '20' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java:72:66: '20' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java:74: Line is longer than 80 characters (found 89). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java:77: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java:80:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java:95:30: '192L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java:99:30: '192L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java:114: Line is longer than 80 characters (found 89). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java:115: Line is longer than 80 characters (found 89). [LineLength]
Audit done.
Checkstyle ends with 23 errors.
------[0m
[0m2025-06-16 21:25:04 [0;34m[DEBUG][0m   Error code: 23. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java:22:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java:24:67: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.util.TestConstants.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java:27:34: Using the '.*' form of import should be avoided - org.mockito.Mockito.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java:33:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java:36:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java:39:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java:42:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java:45:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java:48:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java:50:47: '20' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java:54:66: '20' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java:56: Line is longer than 80 characters (found 81). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java:62:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java:64:47: '20' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java:72:66: '20' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java:74: Line is longer than 80 characters (found 89). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java:77: Line is longer than 80 characters (found 82). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java:80:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java:95:30: '192L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java:99:30: '192L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java:114: Line is longer than 80 characters (found 89). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java:115: Line is longer than 80 characters (found 89). [LineLength]
Audit done.
Checkstyle ends with 23 errors.
------[0m
[0m2025-06-16 21:25:04 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java[0m
[0m2025-06-16 21:25:04 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeServiceImplTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:04 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java, FILE_NAME: PerfumeServiceImplTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:25:04 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:25:04 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:04 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java][0m
[0m2025-06-16 21:25:05 [0;34m[DEBUG][0m   Found errors. Error code: 41, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:25:05 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:25:05 [0;31m[ERROR][0m   Error code: 41. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:23:67: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.util.TestConstants.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:26:34: Using the '.*' form of import should be avoided - org.mockito.Mockito.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:32:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:35:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:38:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:41:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:44:23: '123L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:46: Line is longer than 80 characters (found 90). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:46:41: '123L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:47:39: '123L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:48:22: '123L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:50:54: '123L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:53:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:55:47: '20' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:57: Line is longer than 80 characters (found 85). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:58: Line is longer than 80 characters (found 85). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:59: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:61: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:67:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:69:47: '20' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:70: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:71: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:71: Line is longer than 80 characters (found 101). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:74:32: '101' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:75: Line is longer than 80 characters (found 91). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:78:31: '102' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:79: Line is longer than 80 characters (found 105). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:88: Line is longer than 80 characters (found 129). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:88:82: '1000' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:92:43: '1000' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:96: Line is longer than 80 characters (found 85). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:97: Line is longer than 80 characters (found 117). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:97:95: '1000' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:100:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:110: Line is longer than 80 characters (found 104). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:114: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:117:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:124: Line is longer than 80 characters (found 108). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:128: Line is longer than 80 characters (found 96). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:134: Line is longer than 80 characters (found 127). [LineLength]
Audit done.
Checkstyle ends with 41 errors.
------[0m
[0m2025-06-16 21:25:05 [0;34m[DEBUG][0m   Error code: 41. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:23:67: Using the '.*' form of import should be avoided - com.gmail.merikbest2015.ecommerce.util.TestConstants.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:26:34: Using the '.*' form of import should be avoided - org.mockito.Mockito.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:32:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:35:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:38:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:41:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:44:23: '123L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:46: Line is longer than 80 characters (found 90). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:46:41: '123L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:47:39: '123L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:48:22: '123L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:50:54: '123L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:53:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:55:47: '20' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:57: Line is longer than 80 characters (found 85). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:58: Line is longer than 80 characters (found 85). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:59: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:61: Line is longer than 80 characters (found 88). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:67:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:69:47: '20' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:70: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:71: Line has trailing spaces. [RegexpSingleline]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:71: Line is longer than 80 characters (found 101). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:74:32: '101' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:75: Line is longer than 80 characters (found 91). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:78:31: '102' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:79: Line is longer than 80 characters (found 105). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:88: Line is longer than 80 characters (found 129). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:88:82: '1000' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:92:43: '1000' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:96: Line is longer than 80 characters (found 85). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:97: Line is longer than 80 characters (found 117). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:97:95: '1000' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:100:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:110: Line is longer than 80 characters (found 104). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:114: Line is longer than 80 characters (found 92). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:117:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:124: Line is longer than 80 characters (found 108). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:128: Line is longer than 80 characters (found 96). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java:134: Line is longer than 80 characters (found 127). [LineLength]
Audit done.
Checkstyle ends with 41 errors.
------[0m
[0m2025-06-16 21:25:05 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java[0m
[0m2025-06-16 21:25:05 [0;34m[DEBUG][0m   FILE_STATUS (ReviewServiceImplTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:05 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java, FILE_NAME: ReviewServiceImplTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:25:05 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:25:05 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:05 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java][0m
[0m2025-06-16 21:25:06 [0;34m[DEBUG][0m   Found errors. Error code: 12, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:25:06 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:25:06 [0;31m[ERROR][0m   Error code: 12. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java:20:34: Using the '.*' form of import should be avoided - org.mockito.Mockito.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java:26:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java:29:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java:32:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java:35:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java:39:26: '5' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java:42:23: '123L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java:45:41: '123L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java:47:50: '123L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java:48:22: '123L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java:50:54: '123L' is a magic number. [MagicNumber]
Audit done.
Checkstyle ends with 12 errors.
------[0m
[0m2025-06-16 21:25:06 [0;34m[DEBUG][0m   Error code: 12. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java:20:34: Using the '.*' form of import should be avoided - org.mockito.Mockito.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java:26:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java:29:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java:32:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java:35:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java:39:26: '5' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java:42:23: '123L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java:45:41: '123L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java:47:50: '123L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java:48:22: '123L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java:50:54: '123L' is a magic number. [MagicNumber]
Audit done.
Checkstyle ends with 12 errors.
------[0m
[0m2025-06-16 21:25:06 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java[0m
[0m2025-06-16 21:25:06 [0;34m[DEBUG][0m   FILE_STATUS (UserServiceImlTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:06 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java, FILE_NAME: UserServiceImlTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:25:06 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:25:06 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:06 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java][0m
[0m2025-06-16 21:25:07 [0;34m[DEBUG][0m   Found errors. Error code: 27, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:25:07 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:25:07 [0;31m[ERROR][0m   Error code: 27. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:19:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:23:47: Using the '.*' form of import should be avoided - org.junit.jupiter.api.Assertions.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:24:34: Using the '.*' form of import should be avoided - org.mockito.Mockito.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:30:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:33:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:36:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:39:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:42:20: '122L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:44: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:44:38: '122L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:45:33: '122L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:46:22: '122L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:47:51: '122L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:50:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:55: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:61:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:63:47: '20' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:68:64: '20' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:75:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:77:67: '4L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:81:29: '4L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:82: Line is longer than 80 characters (found 96). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:92:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:100: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:106:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:112: Line is longer than 80 characters (found 83). [LineLength]
Audit done.
Checkstyle ends with 27 errors.
------[0m
[0m2025-06-16 21:25:07 [0;34m[DEBUG][0m   Error code: 27. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:19:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:23:47: Using the '.*' form of import should be avoided - org.junit.jupiter.api.Assertions.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:24:34: Using the '.*' form of import should be avoided - org.mockito.Mockito.*. [AvoidStarImport]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:30:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:33:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:36:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:39:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:42:20: '122L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:44: Line is longer than 80 characters (found 84). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:44:38: '122L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:45:33: '122L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:46:22: '122L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:47:51: '122L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:50:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:55: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:61:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:63:47: '20' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:68:64: '20' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:75:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:77:67: '4L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:81:29: '4L' is a magic number. [MagicNumber]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:82: Line is longer than 80 characters (found 96). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:92:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:100: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:106:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java:112: Line is longer than 80 characters (found 83). [LineLength]
Audit done.
Checkstyle ends with 27 errors.
------[0m
[0m2025-06-16 21:25:07 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java[0m
[0m2025-06-16 21:25:07 [0;34m[DEBUG][0m   FILE_STATUS (TestConstants.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:07 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java, FILE_NAME: TestConstants.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: java, TEST_CASE_DIRECTORY: .automation/test/java[0m
[0m2025-06-16 21:25:07 [0;34m[DEBUG][0m   JAVA expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/java/[0m
[0m2025-06-16 21:25:07 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:07 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java][0m
[0m2025-06-16 21:25:08 [0;34m[DEBUG][0m   Found errors. Error code: 59, File type: JAVA, Error on missing exec bit: false[0m
[0m2025-06-16 21:25:08 [0;31m[ERROR][0m   Found errors in [checkstyle] linter![0m
[0m2025-06-16 21:25:08 [0;31m[ERROR][0m   Error code: 59. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:3:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:5:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:6:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:7:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:8:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:10: Line is longer than 80 characters (found 97). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:10:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:11:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:13:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:14:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:16:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:17:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:19:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:20:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:21:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:22:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:23:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:24:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:25:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:26:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:28:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:29:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:30:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:31:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:32:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:33:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:34: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:34:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:35:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:36: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:36:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:37:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:38:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:39:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:41:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:42:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:44: Line is longer than 80 characters (found 109). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:44:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:44:109: '+' should be on a new line. [OperatorWrap]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:45: Line is longer than 80 characters (found 103). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:46: Line is longer than 80 characters (found 116). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:46:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:46:116: '+' should be on a new line. [OperatorWrap]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:47: Line is longer than 80 characters (found 103). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:48: Line is longer than 80 characters (found 120). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:48:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:48:120: '+' should be on a new line. [OperatorWrap]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:49: Line is longer than 80 characters (found 132). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:50: Line is longer than 80 characters (found 165). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:50:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:50:165: '+' should be on a new line. [OperatorWrap]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:51: Line is longer than 80 characters (found 132). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:52: Line is longer than 80 characters (found 130). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:52:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:53: Line is longer than 80 characters (found 115). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:53:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:54: Line is longer than 80 characters (found 111). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:54:5: Missing a Javadoc comment. [JavadocVariable]
Audit done.
Checkstyle ends with 59 errors.
------[0m
[0m2025-06-16 21:25:08 [0;34m[DEBUG][0m   Error code: 59. Command output:[0m
------
Starting audit...
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:1: Missing package-info.java file. [JavadocPackage]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:3:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:5:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:6:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:7:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:8:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:10: Line is longer than 80 characters (found 97). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:10:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:11:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:13:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:14:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:16:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:17:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:19:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:20:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:21:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:22:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:23:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:24:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:25:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:26:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:28:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:29:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:30:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:31:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:32:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:33:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:34: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:34:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:35:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:36: Line is longer than 80 characters (found 83). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:36:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:37:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:38:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:39:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:41:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:42:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:44: Line is longer than 80 characters (found 109). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:44:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:44:109: '+' should be on a new line. [OperatorWrap]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:45: Line is longer than 80 characters (found 103). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:46: Line is longer than 80 characters (found 116). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:46:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:46:116: '+' should be on a new line. [OperatorWrap]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:47: Line is longer than 80 characters (found 103). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:48: Line is longer than 80 characters (found 120). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:48:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:48:120: '+' should be on a new line. [OperatorWrap]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:49: Line is longer than 80 characters (found 132). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:50: Line is longer than 80 characters (found 165). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:50:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:50:165: '+' should be on a new line. [OperatorWrap]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:51: Line is longer than 80 characters (found 132). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:52: Line is longer than 80 characters (found 130). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:52:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:53: Line is longer than 80 characters (found 115). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:53:5: Missing a Javadoc comment. [JavadocVariable]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:54: Line is longer than 80 characters (found 111). [LineLength]
[ERROR] /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java:54:5: Missing a Javadoc comment. [JavadocVariable]
Audit done.
Checkstyle ends with 59 errors.
------[0m
[0m2025-06-16 21:25:08 [0;34m[DEBUG][0m   Running linter for the JAVASCRIPT_ES language...[0m
[0m2025-06-16 21:25:08 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_JAVASCRIPT_ES...[0m
[0m2025-06-16 21:25:08 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:25:08 [0;34m[DEBUG][0m   Setting LINTER_NAME to eslint...[0m
[0m2025-06-16 21:25:08 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to eslint --no-eslintrc -c /action/lib/.automation/.eslintrc.yml...[0m
[0m2025-06-16 21:25:08 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_JAVASCRIPT_ES...[0m
[0m2025-06-16 21:25:08 [0;34m[DEBUG][0m   FILE_ARRAY_JAVASCRIPT_ES file array contents: [0m
[0m2025-06-16 21:25:08 [0;34m[DEBUG][0m   Invoking eslint linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:25:08 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[JAVASCRIPT_ES][0m
[0m2025-06-16 21:25:08 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:25:08 [0;34m[DEBUG][0m   Running linter for the JAVASCRIPT_STANDARD language...[0m
[0m2025-06-16 21:25:08 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_JAVASCRIPT_STANDARD...[0m
[0m2025-06-16 21:25:08 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:25:08 [0;34m[DEBUG][0m   Setting LINTER_NAME to standard...[0m
[0m2025-06-16 21:25:08 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to standard --env browser --env es6 --env jest...[0m
[0m2025-06-16 21:25:08 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_JAVASCRIPT_STANDARD...[0m
[0m2025-06-16 21:25:08 [0;34m[DEBUG][0m   FILE_ARRAY_JAVASCRIPT_STANDARD file array contents: [0m
[0m2025-06-16 21:25:08 [0;34m[DEBUG][0m   Invoking standard linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:25:08 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[JAVASCRIPT_STANDARD][0m
[0m2025-06-16 21:25:08 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:25:08 [0;34m[DEBUG][0m   Running linter for the JSCPD language...[0m
[0m2025-06-16 21:25:08 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_JSCPD...[0m
[0m2025-06-16 21:25:08 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:25:08 [0;34m[DEBUG][0m   Setting LINTER_NAME to jscpd...[0m
[0m2025-06-16 21:25:08 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to jscpd --config /action/lib/.automation/.jscpd.json...[0m
[0m2025-06-16 21:25:08 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_JSCPD...[0m
[0m2025-06-16 21:25:08 [0;34m[DEBUG][0m   FILE_ARRAY_JSCPD file array contents: /github/workspace/.gitattributes /github/workspace/.github/ISSUE_TEMPLATE/issue_template.yml /github/workspace/.github/actions/secret-scanner/excluded_files.patterns /github/workspace/.github/actions/secret-scanner/excluded_lines.patterns /github/workspace/.github/actions/secret-scanner/excluded_secrets.patterns /github/workspace/.github/workflows/cicd.yml /github/workspace/.github/workflows/detect-new-secrets.yml /github/workspace/.github/workflows/gitleaks.yml /github/workspace/.github/workflows/snyk-security.yml /github/workspace/.github/workflows/superlinter.yml /github/workspace/.github/workflows/superpipeline.yml /github/workspace/.gitignore /github/workspace/.gitleaks.toml /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java /github/workspace/.mvn/wrapper/maven-wrapper.jar /github/workspace/.mvn/wrapper/maven-wrapper.properties /github/workspace/.secrets.baseline /github/workspace/Deliverables/ASVSResults.png /github/workspace/Deliverables/DSOFT.pdf /github/workspace/Deliverables/DSOFTPart3.md /github/workspace/Deliverables/v4-ASVS-checklist-en.xlsx /github/workspace/Dockerfile /github/workspace/LICENSE /github/workspace/Project.pdf /github/workspace/README.md /github/workspace/docker-compose.yml /github/workspace/init.sql /github/workspace/lombok.config /github/workspace/mvnw /github/workspace/mvnw.cmd /github/workspace/pom.xml /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/EcommerceApplication.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect/ControllerAspect.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/MvcConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/SwaggerConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSocketConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/GraphQLRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/HeaderResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/PasswordResetRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderItemResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/FullPerfumeResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeSearchRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/SearchTypeRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/BaseUserResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UpdateUserRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UserResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/AuthProvider.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/Role.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/SearchPerfume.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiRequestException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/CaptchaException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/EmailException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/InputFieldException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordConfirmationException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderItemRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/ReviewRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/UserRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtAuthenticationException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtConfigurer.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserDetailsServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/CustomOAuth2UserService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/FacebookOAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GithubOAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GoogleOAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2SuccessHandler.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserFactory.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/AuthenticationService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/OrderService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/ReviewService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/UserService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java /github/workspace/src/main/resources/application.properties /github/workspace/src/main/resources/db/migration/V1__Init_BD.sql /github/workspace/src/main/resources/db/migration/V2__Add_users.sql /github/workspace/src/main/resources/db/migration/V3__Add_products.sql /github/workspace/src/main/resources/db/migration/V4__Add_orders.sql /github/workspace/src/main/resources/graphql/schemas.graphql /github/workspace/src/main/resources/mail-templates/order-template.html /github/workspace/src/main/resources/mail-templates/password-reset-template.html /github/workspace/src/main/resources/mail-templates/registration-template.html /github/workspace/src/main/resources/static/swagger-api/swagger.yaml /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/EcommerceApplicationTests.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapperTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapperTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java /github/workspace/src/test/resources/application-test.properties /github/workspace/src/test/resources/empty.jpg /github/workspace/src/test/resources/sql/create-orders-after.sql /github/workspace/src/test/resources/sql/create-orders-before.sql /github/workspace/src/test/resources/sql/create-perfumes-after.sql /github/workspace/src/test/resources/sql/create-perfumes-before.sql /github/workspace/src/test/resources/sql/create-user-after.sql /github/workspace/src/test/resources/sql/create-user-before.sql[0m
[0m2025-06-16 21:25:08 [0;34m[DEBUG][0m   Invoking jscpd linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:25:08 [0;34m[DEBUG][0m   SKIP_FLAG: 0, list of files to lint: /github/workspace/.gitattributes /github/workspace/.github/ISSUE_TEMPLATE/issue_template.yml /github/workspace/.github/actions/secret-scanner/excluded_files.patterns /github/workspace/.github/actions/secret-scanner/excluded_lines.patterns /github/workspace/.github/actions/secret-scanner/excluded_secrets.patterns /github/workspace/.github/workflows/cicd.yml /github/workspace/.github/workflows/detect-new-secrets.yml /github/workspace/.github/workflows/gitleaks.yml /github/workspace/.github/workflows/snyk-security.yml /github/workspace/.github/workflows/superlinter.yml /github/workspace/.github/workflows/superpipeline.yml /github/workspace/.gitignore /github/workspace/.gitleaks.toml /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java /github/workspace/.mvn/wrapper/maven-wrapper.jar /github/workspace/.mvn/wrapper/maven-wrapper.properties /github/workspace/.secrets.baseline /github/workspace/Deliverables/ASVSResults.png /github/workspace/Deliverables/DSOFT.pdf /github/workspace/Deliverables/DSOFTPart3.md /github/workspace/Deliverables/v4-ASVS-checklist-en.xlsx /github/workspace/Dockerfile /github/workspace/LICENSE /github/workspace/Project.pdf /github/workspace/README.md /github/workspace/docker-compose.yml /github/workspace/init.sql /github/workspace/lombok.config /github/workspace/mvnw /github/workspace/mvnw.cmd /github/workspace/pom.xml /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/EcommerceApplication.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect/ControllerAspect.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/MvcConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/SwaggerConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSocketConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/GraphQLRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/HeaderResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/PasswordResetRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderItemResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/FullPerfumeResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeSearchRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/SearchTypeRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/BaseUserResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UpdateUserRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UserResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/AuthProvider.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/Role.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/SearchPerfume.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiRequestException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/CaptchaException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/EmailException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/InputFieldException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordConfirmationException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderItemRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/ReviewRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/UserRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtAuthenticationException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtConfigurer.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserDetailsServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/CustomOAuth2UserService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/FacebookOAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GithubOAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GoogleOAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2SuccessHandler.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserFactory.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/AuthenticationService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/OrderService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/ReviewService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/UserService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java /github/workspace/src/main/resources/application.properties /github/workspace/src/main/resources/db/migration/V1__Init_BD.sql /github/workspace/src/main/resources/db/migration/V2__Add_users.sql /github/workspace/src/main/resources/db/migration/V3__Add_products.sql /github/workspace/src/main/resources/db/migration/V4__Add_orders.sql /github/workspace/src/main/resources/graphql/schemas.graphql /github/workspace/src/main/resources/mail-templates/order-template.html /github/workspace/src/main/resources/mail-templates/password-reset-template.html /github/workspace/src/main/resources/mail-templates/registration-template.html /github/workspace/src/main/resources/static/swagger-api/swagger.yaml /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/EcommerceApplicationTests.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapperTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapperTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java /github/workspace/src/test/resources/application-test.properties /github/workspace/src/test/resources/empty.jpg /github/workspace/src/test/resources/sql/create-orders-after.sql /github/workspace/src/test/resources/sql/create-orders-before.sql /github/workspace/src/test/resources/sql/create-perfumes-after.sql /github/workspace/src/test/resources/sql/create-perfumes-before.sql /github/workspace/src/test/resources/sql/create-user-after.sql /github/workspace/src/test/resources/sql/create-user-before.sql[0m
[0m2025-06-16 21:25:08 [0;34m[DEBUG][0m   Workspace path: /github/workspace[0m
[0m2025-06-16 21:25:08 [0;34m[INFO][0m   [0m
[0m2025-06-16 21:25:08 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:25:08 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:25:08 [0;34m[DEBUG][0m   Running LintCodebase. FILE_TYPE: JSCPD. Linter name: jscpd, linter command: jscpd --config /action/lib/.automation/.jscpd.json, TEST_CASE_RUN: false, FILTER_REGEX_INCLUDE: , FILTER_REGEX_EXCLUDE: .*/securityReports/.* files to lint: /github/workspace/.gitattributes /github/workspace/.github/ISSUE_TEMPLATE/issue_template.yml /github/workspace/.github/actions/secret-scanner/excluded_files.patterns /github/workspace/.github/actions/secret-scanner/excluded_lines.patterns /github/workspace/.github/actions/secret-scanner/excluded_secrets.patterns /github/workspace/.github/workflows/cicd.yml /github/workspace/.github/workflows/detect-new-secrets.yml /github/workspace/.github/workflows/gitleaks.yml /github/workspace/.github/workflows/snyk-security.yml /github/workspace/.github/workflows/superlinter.yml /github/workspace/.github/workflows/superpipeline.yml /github/workspace/.gitignore /github/workspace/.gitleaks.toml /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java /github/workspace/.mvn/wrapper/maven-wrapper.jar /github/workspace/.mvn/wrapper/maven-wrapper.properties /github/workspace/.secrets.baseline /github/workspace/Deliverables/ASVSResults.png /github/workspace/Deliverables/DSOFT.pdf /github/workspace/Deliverables/DSOFTPart3.md /github/workspace/Deliverables/v4-ASVS-checklist-en.xlsx /github/workspace/Dockerfile /github/workspace/LICENSE /github/workspace/Project.pdf /github/workspace/README.md /github/workspace/docker-compose.yml /github/workspace/init.sql /github/workspace/lombok.config /github/workspace/mvnw /github/workspace/mvnw.cmd /github/workspace/pom.xml /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/EcommerceApplication.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect/ControllerAspect.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/MvcConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/SwaggerConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSocketConfiguration.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/GraphQLRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/HeaderResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/PasswordResetRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderItemResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/FullPerfumeResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeSearchRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/SearchTypeRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/BaseUserResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UpdateUserRequest.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UserResponse.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/AuthProvider.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/Role.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/SearchPerfume.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiRequestException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/CaptchaException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/EmailException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/InputFieldException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordConfirmationException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderItemRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/ReviewRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/UserRepository.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtAuthenticationException.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtConfigurer.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserDetailsServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/CustomOAuth2UserService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/FacebookOAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GithubOAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GoogleOAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2SuccessHandler.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserFactory.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/AuthenticationService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/OrderService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/ReviewService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/UserService.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java /github/workspace/src/main/resources/application.properties /github/workspace/src/main/resources/db/migration/V1__Init_BD.sql /github/workspace/src/main/resources/db/migration/V2__Add_users.sql /github/workspace/src/main/resources/db/migration/V3__Add_products.sql /github/workspace/src/main/resources/db/migration/V4__Add_orders.sql /github/workspace/src/main/resources/graphql/schemas.graphql /github/workspace/src/main/resources/mail-templates/order-template.html /github/workspace/src/main/resources/mail-templates/password-reset-template.html /github/workspace/src/main/resources/mail-templates/registration-template.html /github/workspace/src/main/resources/static/swagger-api/swagger.yaml /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/EcommerceApplicationTests.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapperTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapperTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java /github/workspace/src/test/resources/application-test.properties /github/workspace/src/test/resources/empty.jpg /github/workspace/src/test/resources/sql/create-orders-after.sql /github/workspace/src/test/resources/sql/create-orders-before.sql /github/workspace/src/test/resources/sql/create-perfumes-after.sql /github/workspace/src/test/resources/sql/create-perfumes-before.sql /github/workspace/src/test/resources/sql/create-user-after.sql /github/workspace/src/test/resources/sql/create-user-before.sql[0m
[0m2025-06-16 21:25:08 [0;34m[INFO][0m   Linting [JSCPD] files...[0m
[0m2025-06-16 21:25:08 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:25:08 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:25:08 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/.gitattributes[0m
[0m2025-06-16 21:25:08 [0;34m[DEBUG][0m   FILE_STATUS (.gitattributes) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:08 [0;34m[DEBUG][0m   File: /github/workspace/.gitattributes, FILE_NAME: .gitattributes, DIR_NAME:/github/workspace, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:08 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:08 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:08 [0;34m[INFO][0m   File:[/github/workspace/.gitattributes][0m
[0m2025-06-16 21:25:09 [0;34m[INFO][0m    - File:[0;37m[.gitattributes][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:09 [0;34m[INFO][0m      - Command output:[0m
------
Detection time:: 0.853ms
------[0m
[0m2025-06-16 21:25:09 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Detection time:: 0.853ms
------[0m
[0m2025-06-16 21:25:09 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/.github/ISSUE_TEMPLATE/issue_template.yml[0m
[0m2025-06-16 21:25:09 [0;34m[DEBUG][0m   FILE_STATUS (template.yml) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:09 [0;34m[DEBUG][0m   File: /github/workspace/.github/ISSUE_TEMPLATE/issue_template.yml, FILE_NAME: issue_template.yml, DIR_NAME:/github/workspace/.github/ISSUE_TEMPLATE, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:09 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:09 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:09 [0;34m[INFO][0m   File:[/github/workspace/.github/ISSUE_TEMPLATE/issue_template.yml][0m
[0m2025-06-16 21:25:09 [0;34m[INFO][0m    - File:[0;37m[issue_template.yml][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:09 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 12.955ms
------[0m
[0m2025-06-16 21:25:09 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 12.955ms
------[0m
[0m2025-06-16 21:25:09 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/.github/actions/secret-scanner/excluded_files.patterns[0m
[0m2025-06-16 21:25:09 [0;34m[DEBUG][0m   FILE_STATUS (files.patterns) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:09 [0;34m[DEBUG][0m   File: /github/workspace/.github/actions/secret-scanner/excluded_files.patterns, FILE_NAME: excluded_files.patterns, DIR_NAME:/github/workspace/.github/actions/secret-scanner, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:09 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:09 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:09 [0;34m[INFO][0m   File:[/github/workspace/.github/actions/secret-scanner/excluded_files.patterns][0m
[0m2025-06-16 21:25:10 [0;34m[INFO][0m    - File:[0;37m[excluded_files.patterns][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:10 [0;34m[INFO][0m      - Command output:[0m
------
Detection time:: 0.867ms
------[0m
[0m2025-06-16 21:25:10 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Detection time:: 0.867ms
------[0m
[0m2025-06-16 21:25:10 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/.github/actions/secret-scanner/excluded_lines.patterns[0m
[0m2025-06-16 21:25:10 [0;34m[DEBUG][0m   FILE_STATUS (lines.patterns) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:10 [0;34m[DEBUG][0m   File: /github/workspace/.github/actions/secret-scanner/excluded_lines.patterns, FILE_NAME: excluded_lines.patterns, DIR_NAME:/github/workspace/.github/actions/secret-scanner, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:10 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:10 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:10 [0;34m[INFO][0m   File:[/github/workspace/.github/actions/secret-scanner/excluded_lines.patterns][0m
[0m2025-06-16 21:25:10 [0;34m[INFO][0m    - File:[0;37m[excluded_lines.patterns][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:10 [0;34m[INFO][0m      - Command output:[0m
------
Detection time:: 0.84ms
------[0m
[0m2025-06-16 21:25:10 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Detection time:: 0.84ms
------[0m
[0m2025-06-16 21:25:10 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/.github/actions/secret-scanner/excluded_secrets.patterns[0m
[0m2025-06-16 21:25:10 [0;34m[DEBUG][0m   FILE_STATUS (secrets.patterns) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:10 [0;34m[DEBUG][0m   File: /github/workspace/.github/actions/secret-scanner/excluded_secrets.patterns, FILE_NAME: excluded_secrets.patterns, DIR_NAME:/github/workspace/.github/actions/secret-scanner, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:10 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:10 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:10 [0;34m[INFO][0m   File:[/github/workspace/.github/actions/secret-scanner/excluded_secrets.patterns][0m
[0m2025-06-16 21:25:11 [0;34m[INFO][0m    - File:[0;37m[excluded_secrets.patterns][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:11 [0;34m[INFO][0m      - Command output:[0m
------
Detection time:: 0.744ms
------[0m
[0m2025-06-16 21:25:11 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Detection time:: 0.744ms
------[0m
[0m2025-06-16 21:25:11 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/.github/workflows/cicd.yml[0m
[0m2025-06-16 21:25:11 [0;34m[DEBUG][0m   FILE_STATUS (cicd.yml) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:11 [0;34m[DEBUG][0m   File: /github/workspace/.github/workflows/cicd.yml, FILE_NAME: cicd.yml, DIR_NAME:/github/workspace/.github/workflows, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:11 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:11 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:11 [0;34m[INFO][0m   File:[/github/workspace/.github/workflows/cicd.yml][0m
[0m2025-06-16 21:25:11 [0;34m[INFO][0m    - File:[0;37m[cicd.yml][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:11 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 47.629ms
------[0m
[0m2025-06-16 21:25:11 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 47.629ms
------[0m
[0m2025-06-16 21:25:11 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/.github/workflows/detect-new-secrets.yml[0m
[0m2025-06-16 21:25:11 [0;34m[DEBUG][0m   FILE_STATUS (detect-new-secrets.yml) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:11 [0;34m[DEBUG][0m   File: /github/workspace/.github/workflows/detect-new-secrets.yml, FILE_NAME: detect-new-secrets.yml, DIR_NAME:/github/workspace/.github/workflows, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:11 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:11 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:11 [0;34m[INFO][0m   File:[/github/workspace/.github/workflows/detect-new-secrets.yml][0m
[0m2025-06-16 21:25:12 [0;34m[INFO][0m    - File:[0;37m[detect-new-secrets.yml][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:12 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 10.329ms
------[0m
[0m2025-06-16 21:25:12 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 10.329ms
------[0m
[0m2025-06-16 21:25:12 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/.github/workflows/gitleaks.yml[0m
[0m2025-06-16 21:25:12 [0;34m[DEBUG][0m   FILE_STATUS (gitleaks.yml) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:12 [0;34m[DEBUG][0m   File: /github/workspace/.github/workflows/gitleaks.yml, FILE_NAME: gitleaks.yml, DIR_NAME:/github/workspace/.github/workflows, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:12 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:12 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:12 [0;34m[INFO][0m   File:[/github/workspace/.github/workflows/gitleaks.yml][0m
[0m2025-06-16 21:25:12 [0;34m[INFO][0m    - File:[0;37m[gitleaks.yml][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:12 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 10.967ms
------[0m
[0m2025-06-16 21:25:12 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 10.967ms
------[0m
[0m2025-06-16 21:25:12 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/.github/workflows/snyk-security.yml[0m
[0m2025-06-16 21:25:12 [0;34m[DEBUG][0m   FILE_STATUS (snyk-security.yml) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:12 [0;34m[DEBUG][0m   File: /github/workspace/.github/workflows/snyk-security.yml, FILE_NAME: snyk-security.yml, DIR_NAME:/github/workspace/.github/workflows, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:12 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:12 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:12 [0;34m[INFO][0m   File:[/github/workspace/.github/workflows/snyk-security.yml][0m
[0m2025-06-16 21:25:13 [0;34m[DEBUG][0m   Found errors. Error code: 1, File type: JSCPD, Error on missing exec bit: false[0m
[0m2025-06-16 21:25:13 [0;31m[ERROR][0m   Found errors in [jscpd] linter![0m
[0m2025-06-16 21:25:13 [0;31m[ERROR][0m   Error code: 1. Command output:[0m
------
Clone found (yaml):
 - /github/workspace/.github/workflows/snyk-security.yml [54:5 - 80:5] (26 lines, 194 tokens)
   /github/workspace/.github/workflows/snyk-security.yml [10:4 - 36:5]

Clone found (yaml):
 - /github/workspace/.github/workflows/snyk-security.yml [54:5 - 80:5] (26 lines, 194 tokens)
   /github/workspace/.github/workflows/snyk-security.yml [10:4 - 36:5]

 54 │ 10 │ :                                               
 55 │ 11 │     runs-on: ubuntu-latest                      
 56 │ 12 │     env:                                        
 57 │ 13 │       SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}     
 58 │ 14 │     steps:                                      
 59 │ 15 │       - name: Checkout code                     
 60 │ 16 │         uses: actions/checkout@v4               
 61 │ 17 │                                                 
 62 │ 18 │       - name: Set up Java                       
 63 │ 19 │         id: set-java                            
 64 │ 20 │         uses: actions/setup-java@v4             
 65 │ 21 │         with:                                   
 66 │ 22 │           distribution: 'temurin'               
 67 │ 23 │           java-version: '17'                    
 68 │ 24 │                                                 
 69 │ 25 │       - name: Build with Maven (skip tests)     
 70 │ 26 │         run: mvn clean install -DskipTests      
 71 │ 27 │                                                 
 72 │ 28 │       - name: Corrigir permissão do mvnw        
 73 │ 29 │         run: chmod +x ./mvnw                    
 74 │ 30 │                                                 
 75 │ 31 │       - name: Set up Snyk CLI                   
 76 │ 32 │         uses: snyk/actions/setup@master         
 77 │ 33 │         env:                                    
 78 │ 34 │           SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }} 
 79 │ 35 │                                                 
 80 │ 36 │       - name: Snyk Code                         

Found 1 clones.
ERROR: jscpd found too many duplicates (18.84%) over threshold (0%)
Error: ERROR: jscpd found too many duplicates (18.84%) over threshold (0%)
    at ThresholdReporter.report (/node_modules/@jscpd/finder/dist/reporters/threshold.js:12:19)
    at /node_modules/@jscpd/finder/dist/in-files-detector.js:82:26
    at Array.forEach (<anonymous>)
    at /node_modules/@jscpd/finder/dist/in-files-detector.js:81:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
------[0m
[0m2025-06-16 21:25:13 [0;34m[DEBUG][0m   Error code: 1. Command output:[0m
------
Clone found (yaml):
 - /github/workspace/.github/workflows/snyk-security.yml [54:5 - 80:5] (26 lines, 194 tokens)
   /github/workspace/.github/workflows/snyk-security.yml [10:4 - 36:5]

Clone found (yaml):
 - /github/workspace/.github/workflows/snyk-security.yml [54:5 - 80:5] (26 lines, 194 tokens)
   /github/workspace/.github/workflows/snyk-security.yml [10:4 - 36:5]

 54 │ 10 │ :                                               
 55 │ 11 │     runs-on: ubuntu-latest                      
 56 │ 12 │     env:                                        
 57 │ 13 │       SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}     
 58 │ 14 │     steps:                                      
 59 │ 15 │       - name: Checkout code                     
 60 │ 16 │         uses: actions/checkout@v4               
 61 │ 17 │                                                 
 62 │ 18 │       - name: Set up Java                       
 63 │ 19 │         id: set-java                            
 64 │ 20 │         uses: actions/setup-java@v4             
 65 │ 21 │         with:                                   
 66 │ 22 │           distribution: 'temurin'               
 67 │ 23 │           java-version: '17'                    
 68 │ 24 │                                                 
 69 │ 25 │       - name: Build with Maven (skip tests)     
 70 │ 26 │         run: mvn clean install -DskipTests      
 71 │ 27 │                                                 
 72 │ 28 │       - name: Corrigir permissão do mvnw        
 73 │ 29 │         run: chmod +x ./mvnw                    
 74 │ 30 │                                                 
 75 │ 31 │       - name: Set up Snyk CLI                   
 76 │ 32 │         uses: snyk/actions/setup@master         
 77 │ 33 │         env:                                    
 78 │ 34 │           SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }} 
 79 │ 35 │                                                 
 80 │ 36 │       - name: Snyk Code                         

Found 1 clones.
ERROR: jscpd found too many duplicates (18.84%) over threshold (0%)
Error: ERROR: jscpd found too many duplicates (18.84%) over threshold (0%)
    at ThresholdReporter.report (/node_modules/@jscpd/finder/dist/reporters/threshold.js:12:19)
    at /node_modules/@jscpd/finder/dist/in-files-detector.js:82:26
    at Array.forEach (<anonymous>)
    at /node_modules/@jscpd/finder/dist/in-files-detector.js:81:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
------[0m
[0m2025-06-16 21:25:13 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/.github/workflows/superlinter.yml[0m
[0m2025-06-16 21:25:13 [0;34m[DEBUG][0m   FILE_STATUS (superlinter.yml) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:13 [0;34m[DEBUG][0m   File: /github/workspace/.github/workflows/superlinter.yml, FILE_NAME: superlinter.yml, DIR_NAME:/github/workspace/.github/workflows, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:13 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:13 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:13 [0;34m[INFO][0m   File:[/github/workspace/.github/workflows/superlinter.yml][0m
[0m2025-06-16 21:25:13 [0;34m[INFO][0m    - File:[0;37m[superlinter.yml][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:13 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 9.508ms
------[0m
[0m2025-06-16 21:25:13 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 9.508ms
------[0m
[0m2025-06-16 21:25:13 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/.github/workflows/superpipeline.yml[0m
[0m2025-06-16 21:25:13 [0;34m[DEBUG][0m   FILE_STATUS (superpipeline.yml) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:13 [0;34m[DEBUG][0m   File: /github/workspace/.github/workflows/superpipeline.yml, FILE_NAME: superpipeline.yml, DIR_NAME:/github/workspace/.github/workflows, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:13 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:13 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:13 [0;34m[INFO][0m   File:[/github/workspace/.github/workflows/superpipeline.yml][0m
[0m2025-06-16 21:25:14 [0;34m[DEBUG][0m   Found errors. Error code: 1, File type: JSCPD, Error on missing exec bit: false[0m
[0m2025-06-16 21:25:14 [0;31m[ERROR][0m   Found errors in [jscpd] linter![0m
[0m2025-06-16 21:25:14 [0;31m[ERROR][0m   Error code: 1. Command output:[0m
------
Clone found (yaml):
 - /github/workspace/.github/workflows/superpipeline.yml [275:2 - 289:51] (14 lines, 111 tokens)
   /github/workspace/.github/workflows/superpipeline.yml [239:2 - 253:60]

Clone found (yaml):
 - /github/workspace/.github/workflows/superpipeline.yml [275:2 - 289:51] (14 lines, 111 tokens)
   /github/workspace/.github/workflows/superpipeline.yml [239:2 - 253:60]

 275 │ 239 │ Scan                                                                                          
 276 │ 240 │     runs-on: ubuntu-latest                                                                    
 277 │ 241 │     needs: setup-java-and-cache # Snyk precisa do Java/Maven configurado                      
 278 │ 242 │     steps:                                                                                    
 279 │ 243 │       - name: Checkout code                                                                   
 280 │ 244 │         uses: actions/checkout@v4                                                             
 281 │ 245 │                                                                                               
 282 │ 246 │       - name: Set up Java                                                                     
 283 │ 247 │         uses: actions/setup-java@v4                                                           
 284 │ 248 │         with:                                                                                 
 285 │ 249 │           distribution: 'temurin'                                                             
 286 │ 250 │           java-version: '17'                                                                  
 287 │ 251 │                                                                                               
 288 │ 252 │       - name: Build with Maven (skip tests)                                                   
 289 │ 253 │         run: mvn clean install -DskipTests # Pode ser útil para algumas análises SAST do Snyk 

Found 1 clones.
ERROR: jscpd found too many duplicates (2.27%) over threshold (0%)
Error: ERROR: jscpd found too many duplicates (2.27%) over threshold (0%)
    at ThresholdReporter.report (/node_modules/@jscpd/finder/dist/reporters/threshold.js:12:19)
    at /node_modules/@jscpd/finder/dist/in-files-detector.js:82:26
    at Array.forEach (<anonymous>)
    at /node_modules/@jscpd/finder/dist/in-files-detector.js:81:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
------[0m
[0m2025-06-16 21:25:14 [0;34m[DEBUG][0m   Error code: 1. Command output:[0m
------
Clone found (yaml):
 - /github/workspace/.github/workflows/superpipeline.yml [275:2 - 289:51] (14 lines, 111 tokens)
   /github/workspace/.github/workflows/superpipeline.yml [239:2 - 253:60]

Clone found (yaml):
 - /github/workspace/.github/workflows/superpipeline.yml [275:2 - 289:51] (14 lines, 111 tokens)
   /github/workspace/.github/workflows/superpipeline.yml [239:2 - 253:60]

 275 │ 239 │ Scan                                                                                          
 276 │ 240 │     runs-on: ubuntu-latest                                                                    
 277 │ 241 │     needs: setup-java-and-cache # Snyk precisa do Java/Maven configurado                      
 278 │ 242 │     steps:                                                                                    
 279 │ 243 │       - name: Checkout code                                                                   
 280 │ 244 │         uses: actions/checkout@v4                                                             
 281 │ 245 │                                                                                               
 282 │ 246 │       - name: Set up Java                                                                     
 283 │ 247 │         uses: actions/setup-java@v4                                                           
 284 │ 248 │         with:                                                                                 
 285 │ 249 │           distribution: 'temurin'                                                             
 286 │ 250 │           java-version: '17'                                                                  
 287 │ 251 │                                                                                               
 288 │ 252 │       - name: Build with Maven (skip tests)                                                   
 289 │ 253 │         run: mvn clean install -DskipTests # Pode ser útil para algumas análises SAST do Snyk 

Found 1 clones.
ERROR: jscpd found too many duplicates (2.27%) over threshold (0%)
Error: ERROR: jscpd found too many duplicates (2.27%) over threshold (0%)
    at ThresholdReporter.report (/node_modules/@jscpd/finder/dist/reporters/threshold.js:12:19)
    at /node_modules/@jscpd/finder/dist/in-files-detector.js:82:26
    at Array.forEach (<anonymous>)
    at /node_modules/@jscpd/finder/dist/in-files-detector.js:81:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
------[0m
[0m2025-06-16 21:25:14 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/.gitignore[0m
[0m2025-06-16 21:25:14 [0;34m[DEBUG][0m   FILE_STATUS (.gitignore) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:14 [0;34m[DEBUG][0m   File: /github/workspace/.gitignore, FILE_NAME: .gitignore, DIR_NAME:/github/workspace, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:14 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:14 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:14 [0;34m[INFO][0m   File:[/github/workspace/.gitignore][0m
[0m2025-06-16 21:25:14 [0;34m[INFO][0m    - File:[0;37m[.gitignore][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:14 [0;34m[INFO][0m      - Command output:[0m
------
Detection time:: 0.835ms
------[0m
[0m2025-06-16 21:25:14 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Detection time:: 0.835ms
------[0m
[0m2025-06-16 21:25:14 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/.gitleaks.toml[0m
[0m2025-06-16 21:25:14 [0;34m[DEBUG][0m   FILE_STATUS (.gitleaks.toml) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:14 [0;34m[DEBUG][0m   File: /github/workspace/.gitleaks.toml, FILE_NAME: .gitleaks.toml, DIR_NAME:/github/workspace, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:14 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:14 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:14 [0;34m[INFO][0m   File:[/github/workspace/.gitleaks.toml][0m
[0m2025-06-16 21:25:15 [0;34m[INFO][0m    - File:[0;37m[.gitleaks.toml][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:15 [0;34m[INFO][0m      - Command output:[0m
------
Detection time:: 0.846ms
------[0m
[0m2025-06-16 21:25:15 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Detection time:: 0.846ms
------[0m
[0m2025-06-16 21:25:15 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java[0m
[0m2025-06-16 21:25:15 [0;34m[DEBUG][0m   FILE_STATUS (MavenWrapperDownloader.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:15 [0;34m[DEBUG][0m   File: /github/workspace/.mvn/wrapper/MavenWrapperDownloader.java, FILE_NAME: MavenWrapperDownloader.java, DIR_NAME:/github/workspace/.mvn/wrapper, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:15 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:15 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:15 [0;34m[INFO][0m   File:[/github/workspace/.mvn/wrapper/MavenWrapperDownloader.java][0m
[0m2025-06-16 21:25:15 [0;34m[INFO][0m    - File:[0;37m[MavenWrapperDownloader.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:15 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 28.031ms
------[0m
[0m2025-06-16 21:25:15 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 28.031ms
------[0m
[0m2025-06-16 21:25:15 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/.mvn/wrapper/maven-wrapper.jar[0m
[0m2025-06-16 21:25:15 [0;34m[DEBUG][0m   FILE_STATUS (maven-wrapper.jar) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:15 [0;34m[DEBUG][0m   File: /github/workspace/.mvn/wrapper/maven-wrapper.jar, FILE_NAME: maven-wrapper.jar, DIR_NAME:/github/workspace/.mvn/wrapper, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:15 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:15 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:15 [0;34m[INFO][0m   File:[/github/workspace/.mvn/wrapper/maven-wrapper.jar][0m
[0m2025-06-16 21:25:16 [0;34m[INFO][0m    - File:[0;37m[maven-wrapper.jar][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:16 [0;34m[INFO][0m      - Command output:[0m
------
Detection time:: 0.743ms
------[0m
[0m2025-06-16 21:25:16 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Detection time:: 0.743ms
------[0m
[0m2025-06-16 21:25:16 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/.mvn/wrapper/maven-wrapper.properties[0m
[0m2025-06-16 21:25:16 [0;34m[DEBUG][0m   FILE_STATUS (maven-wrapper.properties) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:16 [0;34m[DEBUG][0m   File: /github/workspace/.mvn/wrapper/maven-wrapper.properties, FILE_NAME: maven-wrapper.properties, DIR_NAME:/github/workspace/.mvn/wrapper, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:16 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:16 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:16 [0;34m[INFO][0m   File:[/github/workspace/.mvn/wrapper/maven-wrapper.properties][0m
[0m2025-06-16 21:25:16 [0;34m[INFO][0m    - File:[0;37m[maven-wrapper.properties][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:16 [0;34m[INFO][0m      - Command output:[0m
------
Detection time:: 0.73ms
------[0m
[0m2025-06-16 21:25:16 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Detection time:: 0.73ms
------[0m
[0m2025-06-16 21:25:16 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/.secrets.baseline[0m
[0m2025-06-16 21:25:16 [0;34m[DEBUG][0m   FILE_STATUS (.secrets.baseline) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:16 [0;34m[DEBUG][0m   File: /github/workspace/.secrets.baseline, FILE_NAME: .secrets.baseline, DIR_NAME:/github/workspace, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:16 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:16 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:16 [0;34m[INFO][0m   File:[/github/workspace/.secrets.baseline][0m
[0m2025-06-16 21:25:16 [0;34m[INFO][0m    - File:[0;37m[.secrets.baseline][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:16 [0;34m[INFO][0m      - Command output:[0m
------
Detection time:: 0.877ms
------[0m
[0m2025-06-16 21:25:16 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Detection time:: 0.877ms
------[0m
[0m2025-06-16 21:25:16 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/Deliverables/ASVSResults.png[0m
[0m2025-06-16 21:25:17 [0;34m[DEBUG][0m   FILE_STATUS (ASVSResults.png) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:17 [0;34m[DEBUG][0m   File: /github/workspace/Deliverables/ASVSResults.png, FILE_NAME: ASVSResults.png, DIR_NAME:/github/workspace/Deliverables, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:17 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:17 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:17 [0;34m[INFO][0m   File:[/github/workspace/Deliverables/ASVSResults.png][0m
[0m2025-06-16 21:25:17 [0;34m[INFO][0m    - File:[0;37m[ASVSResults.png][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:17 [0;34m[INFO][0m      - Command output:[0m
------
Detection time:: 0.716ms
------[0m
[0m2025-06-16 21:25:17 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Detection time:: 0.716ms
------[0m
[0m2025-06-16 21:25:17 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/Deliverables/DSOFT.pdf[0m
[0m2025-06-16 21:25:17 [0;34m[DEBUG][0m   FILE_STATUS (DSOFT.pdf) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:17 [0;34m[DEBUG][0m   File: /github/workspace/Deliverables/DSOFT.pdf, FILE_NAME: DSOFT.pdf, DIR_NAME:/github/workspace/Deliverables, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:17 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:17 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:17 [0;34m[INFO][0m   File:[/github/workspace/Deliverables/DSOFT.pdf][0m
[0m2025-06-16 21:25:17 [0;34m[INFO][0m    - File:[0;37m[DSOFT.pdf][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:17 [0;34m[INFO][0m      - Command output:[0m
------
Detection time:: 0.866ms
------[0m
[0m2025-06-16 21:25:17 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Detection time:: 0.866ms
------[0m
[0m2025-06-16 21:25:17 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/Deliverables/DSOFTPart3.md[0m
[0m2025-06-16 21:25:17 [0;34m[DEBUG][0m   FILE_STATUS (DSOFTPart3.md) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:17 [0;34m[DEBUG][0m   File: /github/workspace/Deliverables/DSOFTPart3.md, FILE_NAME: DSOFTPart3.md, DIR_NAME:/github/workspace/Deliverables, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:17 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:17 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:17 [0;34m[INFO][0m   File:[/github/workspace/Deliverables/DSOFTPart3.md][0m
[0m2025-06-16 21:25:18 [0;34m[INFO][0m    - File:[0;37m[DSOFTPart3.md][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:18 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 37.741ms
------[0m
[0m2025-06-16 21:25:18 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 37.741ms
------[0m
[0m2025-06-16 21:25:18 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/Deliverables/v4-ASVS-checklist-en.xlsx[0m
[0m2025-06-16 21:25:18 [0;34m[DEBUG][0m   FILE_STATUS (v4-ASVS-checklist-en.xlsx) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:18 [0;34m[DEBUG][0m   File: /github/workspace/Deliverables/v4-ASVS-checklist-en.xlsx, FILE_NAME: v4-ASVS-checklist-en.xlsx, DIR_NAME:/github/workspace/Deliverables, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:18 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:18 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:18 [0;34m[INFO][0m   File:[/github/workspace/Deliverables/v4-ASVS-checklist-en.xlsx][0m
[0m2025-06-16 21:25:18 [0;34m[INFO][0m    - File:[0;37m[v4-ASVS-checklist-en.xlsx][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:18 [0;34m[INFO][0m      - Command output:[0m
------
Detection time:: 0.827ms
------[0m
[0m2025-06-16 21:25:18 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Detection time:: 0.827ms
------[0m
[0m2025-06-16 21:25:18 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/Dockerfile[0m
[0m2025-06-16 21:25:18 [0;34m[DEBUG][0m   FILE_STATUS (Dockerfile) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:18 [0;34m[DEBUG][0m   File: /github/workspace/Dockerfile, FILE_NAME: Dockerfile, DIR_NAME:/github/workspace, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:18 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:18 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:18 [0;34m[INFO][0m   File:[/github/workspace/Dockerfile][0m
[0m2025-06-16 21:25:19 [0;34m[INFO][0m    - File:[0;37m[Dockerfile][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:19 [0;34m[INFO][0m      - Command output:[0m
------
Detection time:: 0.757ms
------[0m
[0m2025-06-16 21:25:19 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Detection time:: 0.757ms
------[0m
[0m2025-06-16 21:25:19 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/LICENSE[0m
[0m2025-06-16 21:25:19 [0;34m[DEBUG][0m   FILE_STATUS (LICENSE) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:19 [0;34m[DEBUG][0m   File: /github/workspace/LICENSE, FILE_NAME: LICENSE, DIR_NAME:/github/workspace, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:19 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:19 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:19 [0;34m[INFO][0m   File:[/github/workspace/LICENSE][0m
[0m2025-06-16 21:25:19 [0;34m[INFO][0m    - File:[0;37m[LICENSE][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:19 [0;34m[INFO][0m      - Command output:[0m
------
Detection time:: 0.74ms
------[0m
[0m2025-06-16 21:25:19 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Detection time:: 0.74ms
------[0m
[0m2025-06-16 21:25:19 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/Project.pdf[0m
[0m2025-06-16 21:25:19 [0;34m[DEBUG][0m   FILE_STATUS (Project.pdf) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:19 [0;34m[DEBUG][0m   File: /github/workspace/Project.pdf, FILE_NAME: Project.pdf, DIR_NAME:/github/workspace, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:19 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:19 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:19 [0;34m[INFO][0m   File:[/github/workspace/Project.pdf][0m
[0m2025-06-16 21:25:20 [0;34m[INFO][0m    - File:[0;37m[Project.pdf][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:20 [0;34m[INFO][0m      - Command output:[0m
------
Detection time:: 0.845ms
------[0m
[0m2025-06-16 21:25:20 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Detection time:: 0.845ms
------[0m
[0m2025-06-16 21:25:20 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/README.md[0m
[0m2025-06-16 21:25:20 [0;34m[DEBUG][0m   FILE_STATUS (README.md) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:20 [0;34m[DEBUG][0m   File: /github/workspace/README.md, FILE_NAME: README.md, DIR_NAME:/github/workspace, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:20 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:20 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:20 [0;34m[INFO][0m   File:[/github/workspace/README.md][0m
[0m2025-06-16 21:25:20 [0;34m[INFO][0m    - File:[0;37m[README.md][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:20 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 32.937ms
------[0m
[0m2025-06-16 21:25:20 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 32.937ms
------[0m
[0m2025-06-16 21:25:20 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/docker-compose.yml[0m
[0m2025-06-16 21:25:20 [0;34m[DEBUG][0m   FILE_STATUS (docker-compose.yml) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:20 [0;34m[DEBUG][0m   File: /github/workspace/docker-compose.yml, FILE_NAME: docker-compose.yml, DIR_NAME:/github/workspace, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:20 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:20 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:20 [0;34m[INFO][0m   File:[/github/workspace/docker-compose.yml][0m
[0m2025-06-16 21:25:21 [0;34m[INFO][0m    - File:[0;37m[docker-compose.yml][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:21 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 13.42ms
------[0m
[0m2025-06-16 21:25:21 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 13.42ms
------[0m
[0m2025-06-16 21:25:21 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/init.sql[0m
[0m2025-06-16 21:25:21 [0;34m[DEBUG][0m   FILE_STATUS (init.sql) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:21 [0;34m[DEBUG][0m   File: /github/workspace/init.sql, FILE_NAME: init.sql, DIR_NAME:/github/workspace, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:21 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:21 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:21 [0;34m[INFO][0m   File:[/github/workspace/init.sql][0m
[0m2025-06-16 21:25:21 [0;34m[INFO][0m    - File:[0;37m[init.sql][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:21 [0;34m[INFO][0m      - Command output:[0m
------
Detection time:: 0.861ms
------[0m
[0m2025-06-16 21:25:21 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Detection time:: 0.861ms
------[0m
[0m2025-06-16 21:25:21 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/lombok.config[0m
[0m2025-06-16 21:25:21 [0;34m[DEBUG][0m   FILE_STATUS (lombok.config) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:21 [0;34m[DEBUG][0m   File: /github/workspace/lombok.config, FILE_NAME: lombok.config, DIR_NAME:/github/workspace, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:21 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:21 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:21 [0;34m[INFO][0m   File:[/github/workspace/lombok.config][0m
[0m2025-06-16 21:25:22 [0;34m[INFO][0m    - File:[0;37m[lombok.config][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:22 [0;34m[INFO][0m      - Command output:[0m
------
Detection time:: 0.858ms
------[0m
[0m2025-06-16 21:25:22 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Detection time:: 0.858ms
------[0m
[0m2025-06-16 21:25:22 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/mvnw[0m
[0m2025-06-16 21:25:22 [0;34m[DEBUG][0m   FILE_STATUS (mvnw) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:22 [0;34m[DEBUG][0m   File: /github/workspace/mvnw, FILE_NAME: mvnw, DIR_NAME:/github/workspace, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:22 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:22 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:22 [0;34m[INFO][0m   File:[/github/workspace/mvnw][0m
[0m2025-06-16 21:25:22 [0;34m[INFO][0m    - File:[0;37m[mvnw][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:22 [0;34m[INFO][0m      - Command output:[0m
------
Detection time:: 0.732ms
------[0m
[0m2025-06-16 21:25:22 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Detection time:: 0.732ms
------[0m
[0m2025-06-16 21:25:22 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/mvnw.cmd[0m
[0m2025-06-16 21:25:22 [0;34m[DEBUG][0m   FILE_STATUS (mvnw.cmd) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:22 [0;34m[DEBUG][0m   File: /github/workspace/mvnw.cmd, FILE_NAME: mvnw.cmd, DIR_NAME:/github/workspace, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:22 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:22 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:22 [0;34m[INFO][0m   File:[/github/workspace/mvnw.cmd][0m
[0m2025-06-16 21:25:23 [0;34m[INFO][0m    - File:[0;37m[mvnw.cmd][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:23 [0;34m[INFO][0m      - Command output:[0m
------
Detection time:: 0.863ms
------[0m
[0m2025-06-16 21:25:23 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Detection time:: 0.863ms
------[0m
[0m2025-06-16 21:25:23 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/pom.xml[0m
[0m2025-06-16 21:25:23 [0;34m[DEBUG][0m   FILE_STATUS (pom.xml) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:23 [0;34m[DEBUG][0m   File: /github/workspace/pom.xml, FILE_NAME: pom.xml, DIR_NAME:/github/workspace, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:23 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:23 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:23 [0;34m[INFO][0m   File:[/github/workspace/pom.xml][0m
[0m2025-06-16 21:25:23 [0;34m[INFO][0m    - File:[0;37m[pom.xml][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:23 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 72.578ms
------[0m
[0m2025-06-16 21:25:23 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 72.578ms
------[0m
[0m2025-06-16 21:25:23 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/EcommerceApplication.java[0m
[0m2025-06-16 21:25:23 [0;34m[DEBUG][0m   FILE_STATUS (EcommerceApplication.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:23 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/EcommerceApplication.java, FILE_NAME: EcommerceApplication.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:23 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:23 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:23 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/EcommerceApplication.java][0m
[0m2025-06-16 21:25:24 [0;34m[INFO][0m    - File:[0;37m[EcommerceApplication.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:24 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 10.897ms
------[0m
[0m2025-06-16 21:25:24 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 10.897ms
------[0m
[0m2025-06-16 21:25:24 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect/ControllerAspect.java[0m
[0m2025-06-16 21:25:24 [0;34m[DEBUG][0m   FILE_STATUS (ControllerAspect.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:24 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect/ControllerAspect.java, FILE_NAME: ControllerAspect.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:24 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:24 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:24 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/aspect/ControllerAspect.java][0m
[0m2025-06-16 21:25:24 [0;34m[INFO][0m    - File:[0;37m[ControllerAspect.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:24 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 17.945ms
------[0m
[0m2025-06-16 21:25:24 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 17.945ms
------[0m
[0m2025-06-16 21:25:24 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java[0m
[0m2025-06-16 21:25:24 [0;34m[DEBUG][0m   FILE_STATUS (ApplicationConfiguration.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:24 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java, FILE_NAME: ApplicationConfiguration.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:24 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:24 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:24 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/ApplicationConfiguration.java][0m
[0m2025-06-16 21:25:25 [0;34m[INFO][0m    - File:[0;37m[ApplicationConfiguration.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:25 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 19.73ms
------[0m
[0m2025-06-16 21:25:25 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 19.73ms
------[0m
[0m2025-06-16 21:25:25 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java[0m
[0m2025-06-16 21:25:25 [0;34m[DEBUG][0m   FILE_STATUS (EmailConfiguration.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:25 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java, FILE_NAME: EmailConfiguration.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:25 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:25 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:25 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/EmailConfiguration.java][0m
[0m2025-06-16 21:25:25 [0;34m[INFO][0m    - File:[0;37m[EmailConfiguration.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:25 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 20.299ms
------[0m
[0m2025-06-16 21:25:25 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 20.299ms
------[0m
[0m2025-06-16 21:25:25 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/MvcConfiguration.java[0m
[0m2025-06-16 21:25:25 [0;34m[DEBUG][0m   FILE_STATUS (MvcConfiguration.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:25 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/MvcConfiguration.java, FILE_NAME: MvcConfiguration.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:25 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:25 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:25 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/MvcConfiguration.java][0m
[0m2025-06-16 21:25:26 [0;34m[INFO][0m    - File:[0;37m[MvcConfiguration.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:26 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 17.23ms
------[0m
[0m2025-06-16 21:25:26 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 17.23ms
------[0m
[0m2025-06-16 21:25:26 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/SwaggerConfiguration.java[0m
[0m2025-06-16 21:25:26 [0;34m[DEBUG][0m   FILE_STATUS (SwaggerConfiguration.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:26 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/SwaggerConfiguration.java, FILE_NAME: SwaggerConfiguration.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:26 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:26 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:26 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/SwaggerConfiguration.java][0m
[0m2025-06-16 21:25:26 [0;34m[INFO][0m    - File:[0;37m[SwaggerConfiguration.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:26 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 18.876ms
------[0m
[0m2025-06-16 21:25:26 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 18.876ms
------[0m
[0m2025-06-16 21:25:26 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java[0m
[0m2025-06-16 21:25:26 [0;34m[DEBUG][0m   FILE_STATUS (WebSecurityConfiguration.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:26 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java, FILE_NAME: WebSecurityConfiguration.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:26 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:26 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:26 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSecurityConfiguration.java][0m
[0m2025-06-16 21:25:27 [0;34m[INFO][0m    - File:[0;37m[WebSecurityConfiguration.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:27 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 25.985ms
------[0m
[0m2025-06-16 21:25:27 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 25.985ms
------[0m
[0m2025-06-16 21:25:27 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSocketConfiguration.java[0m
[0m2025-06-16 21:25:27 [0;34m[DEBUG][0m   FILE_STATUS (WebSocketConfiguration.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:27 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSocketConfiguration.java, FILE_NAME: WebSocketConfiguration.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:27 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:27 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:27 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSocketConfiguration.java][0m
[0m2025-06-16 21:25:27 [0;34m[INFO][0m    - File:[0;37m[WebSocketConfiguration.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:27 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 13.25ms
------[0m
[0m2025-06-16 21:25:27 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 13.25ms
------[0m
[0m2025-06-16 21:25:27 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java[0m
[0m2025-06-16 21:25:27 [0;34m[DEBUG][0m   FILE_STATUS (ErrorMessage.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:27 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java, FILE_NAME: ErrorMessage.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:27 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:27 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:27 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java][0m
[0m2025-06-16 21:25:28 [0;34m[INFO][0m    - File:[0;37m[ErrorMessage.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:28 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 13.898ms
------[0m
[0m2025-06-16 21:25:28 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 13.898ms
------[0m
[0m2025-06-16 21:25:28 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java[0m
[0m2025-06-16 21:25:28 [0;34m[DEBUG][0m   FILE_STATUS (PathConstants.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:28 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java, FILE_NAME: PathConstants.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:28 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:28 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:28 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/constants/PathConstants.java][0m
[0m2025-06-16 21:25:28 [0;34m[INFO][0m    - File:[0;37m[PathConstants.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:28 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 25.234ms
------[0m
[0m2025-06-16 21:25:28 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 25.234ms
------[0m
[0m2025-06-16 21:25:28 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java[0m
[0m2025-06-16 21:25:28 [0;34m[DEBUG][0m   FILE_STATUS (AdminController.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:28 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java, FILE_NAME: AdminController.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:28 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:28 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:28 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java][0m
[0m2025-06-16 21:25:29 [0;34m[INFO][0m    - File:[0;37m[AdminController.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:29 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 48.686ms
------[0m
[0m2025-06-16 21:25:29 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 48.686ms
------[0m
[0m2025-06-16 21:25:29 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java[0m
[0m2025-06-16 21:25:29 [0;34m[DEBUG][0m   FILE_STATUS (AuthenticationController.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:29 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java, FILE_NAME: AuthenticationController.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:29 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:29 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:29 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationController.java][0m
[0m2025-06-16 21:25:29 [0;34m[INFO][0m    - File:[0;37m[AuthenticationController.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:29 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 26.46ms
------[0m
[0m2025-06-16 21:25:29 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 26.46ms
------[0m
[0m2025-06-16 21:25:29 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java[0m
[0m2025-06-16 21:25:29 [0;34m[DEBUG][0m   FILE_STATUS (OrderController.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:29 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java, FILE_NAME: OrderController.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:29 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:29 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:29 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/OrderController.java][0m
[0m2025-06-16 21:25:30 [0;34m[INFO][0m    - File:[0;37m[OrderController.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:30 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 25.781ms
------[0m
[0m2025-06-16 21:25:30 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 25.781ms
------[0m
[0m2025-06-16 21:25:30 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java[0m
[0m2025-06-16 21:25:30 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeController.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:30 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java, FILE_NAME: PerfumeController.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:30 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:30 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:30 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeController.java][0m
[0m2025-06-16 21:25:30 [0;34m[INFO][0m    - File:[0;37m[PerfumeController.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:30 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 37.261ms
------[0m
[0m2025-06-16 21:25:30 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 37.261ms
------[0m
[0m2025-06-16 21:25:30 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java[0m
[0m2025-06-16 21:25:30 [0;34m[DEBUG][0m   FILE_STATUS (RegistrationController.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:30 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java, FILE_NAME: RegistrationController.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:30 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:30 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:30 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationController.java][0m
[0m2025-06-16 21:25:31 [0;34m[INFO][0m    - File:[0;37m[RegistrationController.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:31 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 17.97ms
------[0m
[0m2025-06-16 21:25:31 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 17.97ms
------[0m
[0m2025-06-16 21:25:31 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java[0m
[0m2025-06-16 21:25:31 [0;34m[DEBUG][0m   FILE_STATUS (ReviewController.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:31 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java, FILE_NAME: ReviewController.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:31 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:31 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:31 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/ReviewController.java][0m
[0m2025-06-16 21:25:31 [0;34m[INFO][0m    - File:[0;37m[ReviewController.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:31 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 20.29ms
------[0m
[0m2025-06-16 21:25:31 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 20.29ms
------[0m
[0m2025-06-16 21:25:31 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java[0m
[0m2025-06-16 21:25:31 [0;34m[DEBUG][0m   FILE_STATUS (UserController.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:31 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java, FILE_NAME: UserController.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:31 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:31 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:31 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/controller/UserController.java][0m
[0m2025-06-16 21:25:32 [0;34m[INFO][0m    - File:[0;37m[UserController.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:32 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 24.964ms
------[0m
[0m2025-06-16 21:25:32 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 24.964ms
------[0m
[0m2025-06-16 21:25:32 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java[0m
[0m2025-06-16 21:25:32 [0;34m[DEBUG][0m   FILE_STATUS (Order.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:32 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java, FILE_NAME: Order.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:32 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:32 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:32 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Order.java][0m
[0m2025-06-16 21:25:32 [0;34m[INFO][0m    - File:[0;37m[Order.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:32 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 42.158ms
------[0m
[0m2025-06-16 21:25:32 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 42.158ms
------[0m
[0m2025-06-16 21:25:32 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java[0m
[0m2025-06-16 21:25:32 [0;34m[DEBUG][0m   FILE_STATUS (OrderItem.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:32 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java, FILE_NAME: OrderItem.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:32 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:32 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:32 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/OrderItem.java][0m
[0m2025-06-16 21:25:33 [0;34m[INFO][0m    - File:[0;37m[OrderItem.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:33 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 20.846ms
------[0m
[0m2025-06-16 21:25:33 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 20.846ms
------[0m
[0m2025-06-16 21:25:33 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java[0m
[0m2025-06-16 21:25:33 [0;34m[DEBUG][0m   FILE_STATUS (Perfume.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:33 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java, FILE_NAME: Perfume.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:33 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:33 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:33 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Perfume.java][0m
[0m2025-06-16 21:25:33 [0;34m[INFO][0m    - File:[0;37m[Perfume.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:33 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 39.825ms
------[0m
[0m2025-06-16 21:25:33 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 39.825ms
------[0m
[0m2025-06-16 21:25:33 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java[0m
[0m2025-06-16 21:25:33 [0;34m[DEBUG][0m   FILE_STATUS (Review.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:33 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java, FILE_NAME: Review.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:33 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:33 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:33 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/Review.java][0m
[0m2025-06-16 21:25:34 [0;34m[INFO][0m    - File:[0;37m[Review.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:34 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 25.388ms
------[0m
[0m2025-06-16 21:25:34 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 25.388ms
------[0m
[0m2025-06-16 21:25:34 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java[0m
[0m2025-06-16 21:25:34 [0;34m[DEBUG][0m   FILE_STATUS (User.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:34 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java, FILE_NAME: User.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:34 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:34 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:34 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/domain/User.java][0m
[0m2025-06-16 21:25:34 [0;34m[INFO][0m    - File:[0;37m[User.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:34 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 35.894ms
------[0m
[0m2025-06-16 21:25:34 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 35.894ms
------[0m
[0m2025-06-16 21:25:34 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java[0m
[0m2025-06-16 21:25:34 [0;34m[DEBUG][0m   FILE_STATUS (CaptchaResponse.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:34 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java, FILE_NAME: CaptchaResponse.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:34 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:34 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:34 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/CaptchaResponse.java][0m
[0m2025-06-16 21:25:35 [0;34m[INFO][0m    - File:[0;37m[CaptchaResponse.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:35 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 15.411ms
------[0m
[0m2025-06-16 21:25:35 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 15.411ms
------[0m
[0m2025-06-16 21:25:35 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/GraphQLRequest.java[0m
[0m2025-06-16 21:25:35 [0;34m[DEBUG][0m   FILE_STATUS (GraphQLRequest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:35 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/GraphQLRequest.java, FILE_NAME: GraphQLRequest.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:35 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:35 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:35 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/GraphQLRequest.java][0m
[0m2025-06-16 21:25:35 [0;34m[INFO][0m    - File:[0;37m[GraphQLRequest.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:35 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 8.819ms
------[0m
[0m2025-06-16 21:25:35 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 8.819ms
------[0m
[0m2025-06-16 21:25:35 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/HeaderResponse.java[0m
[0m2025-06-16 21:25:35 [0;34m[DEBUG][0m   FILE_STATUS (HeaderResponse.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:35 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/HeaderResponse.java, FILE_NAME: HeaderResponse.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:35 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:35 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:35 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/HeaderResponse.java][0m
[0m2025-06-16 21:25:36 [0;34m[INFO][0m    - File:[0;37m[HeaderResponse.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:36 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 10.742ms
------[0m
[0m2025-06-16 21:25:36 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 10.742ms
------[0m
[0m2025-06-16 21:25:36 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/PasswordResetRequest.java[0m
[0m2025-06-16 21:25:36 [0;34m[DEBUG][0m   FILE_STATUS (PasswordResetRequest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:36 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/PasswordResetRequest.java, FILE_NAME: PasswordResetRequest.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:36 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:36 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:36 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/PasswordResetRequest.java][0m
[0m2025-06-16 21:25:36 [0;34m[INFO][0m    - File:[0;37m[PasswordResetRequest.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:36 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 12.393ms
------[0m
[0m2025-06-16 21:25:36 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 12.393ms
------[0m
[0m2025-06-16 21:25:36 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java[0m
[0m2025-06-16 21:25:36 [0;34m[DEBUG][0m   FILE_STATUS (RegistrationRequest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:36 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java, FILE_NAME: RegistrationRequest.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:36 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:36 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:36 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/RegistrationRequest.java][0m
[0m2025-06-16 21:25:37 [0;34m[INFO][0m    - File:[0;37m[RegistrationRequest.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:37 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 14.45ms
------[0m
[0m2025-06-16 21:25:37 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 14.45ms
------[0m
[0m2025-06-16 21:25:37 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationRequest.java[0m
[0m2025-06-16 21:25:37 [0;34m[DEBUG][0m   FILE_STATUS (AuthenticationRequest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:37 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationRequest.java, FILE_NAME: AuthenticationRequest.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:37 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:37 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:37 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationRequest.java][0m
[0m2025-06-16 21:25:37 [0;34m[INFO][0m    - File:[0;37m[AuthenticationRequest.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:37 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 11.757ms
------[0m
[0m2025-06-16 21:25:37 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 11.757ms
------[0m
[0m2025-06-16 21:25:37 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationResponse.java[0m
[0m2025-06-16 21:25:37 [0;34m[DEBUG][0m   FILE_STATUS (AuthenticationResponse.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:37 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationResponse.java, FILE_NAME: AuthenticationResponse.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:37 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:37 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:37 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/auth/AuthenticationResponse.java][0m
[0m2025-06-16 21:25:37 [0;34m[INFO][0m    - File:[0;37m[AuthenticationResponse.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:38 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 12.844ms
------[0m
[0m2025-06-16 21:25:38 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 12.844ms
------[0m
[0m2025-06-16 21:25:38 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderItemResponse.java[0m
[0m2025-06-16 21:25:38 [0;34m[DEBUG][0m   FILE_STATUS (OrderItemResponse.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:38 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderItemResponse.java, FILE_NAME: OrderItemResponse.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:38 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:38 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:38 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderItemResponse.java][0m
[0m2025-06-16 21:25:38 [0;34m[INFO][0m    - File:[0;37m[OrderItemResponse.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:38 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 11.675ms
------[0m
[0m2025-06-16 21:25:38 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 11.675ms
------[0m
[0m2025-06-16 21:25:38 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java[0m
[0m2025-06-16 21:25:38 [0;34m[DEBUG][0m   FILE_STATUS (OrderRequest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:38 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java, FILE_NAME: OrderRequest.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:38 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:38 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:38 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderRequest.java][0m
[0m2025-06-16 21:25:38 [0;34m[INFO][0m    - File:[0;37m[OrderRequest.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:38 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 16.339ms
------[0m
[0m2025-06-16 21:25:38 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 16.339ms
------[0m
[0m2025-06-16 21:25:38 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java[0m
[0m2025-06-16 21:25:38 [0;34m[DEBUG][0m   FILE_STATUS (OrderResponse.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:38 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java, FILE_NAME: OrderResponse.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:39 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:39 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:39 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/order/OrderResponse.java][0m
[0m2025-06-16 21:25:39 [0;34m[INFO][0m    - File:[0;37m[OrderResponse.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:39 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 13.709ms
------[0m
[0m2025-06-16 21:25:39 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 13.709ms
------[0m
[0m2025-06-16 21:25:39 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/FullPerfumeResponse.java[0m
[0m2025-06-16 21:25:39 [0;34m[DEBUG][0m   FILE_STATUS (FullPerfumeResponse.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:39 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/FullPerfumeResponse.java, FILE_NAME: FullPerfumeResponse.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:39 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:39 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:39 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/FullPerfumeResponse.java][0m
[0m2025-06-16 21:25:39 [0;34m[INFO][0m    - File:[0;37m[FullPerfumeResponse.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:39 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 13.651ms
------[0m
[0m2025-06-16 21:25:39 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 13.651ms
------[0m
[0m2025-06-16 21:25:39 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java[0m
[0m2025-06-16 21:25:39 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeRequest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:39 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java, FILE_NAME: PerfumeRequest.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:39 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:39 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:39 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeRequest.java][0m
[0m2025-06-16 21:25:40 [0;34m[INFO][0m    - File:[0;37m[PerfumeRequest.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:40 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 19.116ms
------[0m
[0m2025-06-16 21:25:40 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 19.116ms
------[0m
[0m2025-06-16 21:25:40 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeResponse.java[0m
[0m2025-06-16 21:25:40 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeResponse.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:40 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeResponse.java, FILE_NAME: PerfumeResponse.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:40 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:40 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:40 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeResponse.java][0m
[0m2025-06-16 21:25:40 [0;34m[INFO][0m    - File:[0;37m[PerfumeResponse.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:40 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 11.183ms
------[0m
[0m2025-06-16 21:25:40 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 11.183ms
------[0m
[0m2025-06-16 21:25:40 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeSearchRequest.java[0m
[0m2025-06-16 21:25:40 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeSearchRequest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:40 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeSearchRequest.java, FILE_NAME: PerfumeSearchRequest.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:40 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:40 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:40 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/PerfumeSearchRequest.java][0m
[0m2025-06-16 21:25:41 [0;34m[INFO][0m    - File:[0;37m[PerfumeSearchRequest.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:41 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 10.921ms
------[0m
[0m2025-06-16 21:25:41 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 10.921ms
------[0m
[0m2025-06-16 21:25:41 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/SearchTypeRequest.java[0m
[0m2025-06-16 21:25:41 [0;34m[DEBUG][0m   FILE_STATUS (SearchTypeRequest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:41 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/SearchTypeRequest.java, FILE_NAME: SearchTypeRequest.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:41 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:41 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:41 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/perfume/SearchTypeRequest.java][0m
[0m2025-06-16 21:25:41 [0;34m[INFO][0m    - File:[0;37m[SearchTypeRequest.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:41 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 10.317ms
------[0m
[0m2025-06-16 21:25:41 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 10.317ms
------[0m
[0m2025-06-16 21:25:41 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewRequest.java[0m
[0m2025-06-16 21:25:41 [0;34m[DEBUG][0m   FILE_STATUS (ReviewRequest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:41 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewRequest.java, FILE_NAME: ReviewRequest.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:41 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:41 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:41 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewRequest.java][0m
[0m2025-06-16 21:25:42 [0;34m[INFO][0m    - File:[0;37m[ReviewRequest.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:42 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 13.616ms
------[0m
[0m2025-06-16 21:25:42 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 13.616ms
------[0m
[0m2025-06-16 21:25:42 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewResponse.java[0m
[0m2025-06-16 21:25:42 [0;34m[DEBUG][0m   FILE_STATUS (ReviewResponse.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:42 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewResponse.java, FILE_NAME: ReviewResponse.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:42 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:42 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:42 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/review/ReviewResponse.java][0m
[0m2025-06-16 21:25:42 [0;34m[INFO][0m    - File:[0;37m[ReviewResponse.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:42 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 10.512ms
------[0m
[0m2025-06-16 21:25:42 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 10.512ms
------[0m
[0m2025-06-16 21:25:42 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/BaseUserResponse.java[0m
[0m2025-06-16 21:25:42 [0;34m[DEBUG][0m   FILE_STATUS (BaseUserResponse.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:42 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/BaseUserResponse.java, FILE_NAME: BaseUserResponse.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:42 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:42 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:42 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/BaseUserResponse.java][0m
[0m2025-06-16 21:25:43 [0;34m[INFO][0m    - File:[0;37m[BaseUserResponse.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:43 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 14.164ms
------[0m
[0m2025-06-16 21:25:43 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 14.164ms
------[0m
[0m2025-06-16 21:25:43 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UpdateUserRequest.java[0m
[0m2025-06-16 21:25:43 [0;34m[DEBUG][0m   FILE_STATUS (UpdateUserRequest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:43 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UpdateUserRequest.java, FILE_NAME: UpdateUserRequest.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:43 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:43 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:43 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UpdateUserRequest.java][0m
[0m2025-06-16 21:25:43 [0;34m[INFO][0m    - File:[0;37m[UpdateUserRequest.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:43 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 13.818ms
------[0m
[0m2025-06-16 21:25:43 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 13.818ms
------[0m
[0m2025-06-16 21:25:43 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UserResponse.java[0m
[0m2025-06-16 21:25:43 [0;34m[DEBUG][0m   FILE_STATUS (UserResponse.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:43 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UserResponse.java, FILE_NAME: UserResponse.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:43 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:43 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:43 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/dto/user/UserResponse.java][0m
[0m2025-06-16 21:25:44 [0;34m[INFO][0m    - File:[0;37m[UserResponse.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:44 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 11.287ms
------[0m
[0m2025-06-16 21:25:44 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 11.287ms
------[0m
[0m2025-06-16 21:25:44 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/AuthProvider.java[0m
[0m2025-06-16 21:25:44 [0;34m[DEBUG][0m   FILE_STATUS (AuthProvider.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:44 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/AuthProvider.java, FILE_NAME: AuthProvider.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:44 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:44 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:44 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/AuthProvider.java][0m
[0m2025-06-16 21:25:44 [0;34m[INFO][0m    - File:[0;37m[AuthProvider.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:44 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 11.343ms
------[0m
[0m2025-06-16 21:25:44 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 11.343ms
------[0m
[0m2025-06-16 21:25:44 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/Role.java[0m
[0m2025-06-16 21:25:44 [0;34m[DEBUG][0m   FILE_STATUS (Role.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:44 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/Role.java, FILE_NAME: Role.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:44 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:44 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:44 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/Role.java][0m
[0m2025-06-16 21:25:45 [0;34m[INFO][0m    - File:[0;37m[Role.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:45 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 9.28ms
------[0m
[0m2025-06-16 21:25:45 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 9.28ms
------[0m
[0m2025-06-16 21:25:45 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/SearchPerfume.java[0m
[0m2025-06-16 21:25:45 [0;34m[DEBUG][0m   FILE_STATUS (SearchPerfume.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:45 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/SearchPerfume.java, FILE_NAME: SearchPerfume.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:45 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:45 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:45 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/enums/SearchPerfume.java][0m
[0m2025-06-16 21:25:45 [0;34m[INFO][0m    - File:[0;37m[SearchPerfume.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:45 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 9.485ms
------[0m
[0m2025-06-16 21:25:45 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 9.485ms
------[0m
[0m2025-06-16 21:25:45 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java[0m
[0m2025-06-16 21:25:45 [0;34m[DEBUG][0m   FILE_STATUS (ApiExceptionHandler.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:45 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java, FILE_NAME: ApiExceptionHandler.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:45 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:45 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:45 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiExceptionHandler.java][0m
[0m2025-06-16 21:25:46 [0;34m[INFO][0m    - File:[0;37m[ApiExceptionHandler.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:46 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 20.752ms
------[0m
[0m2025-06-16 21:25:46 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 20.752ms
------[0m
[0m2025-06-16 21:25:46 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiRequestException.java[0m
[0m2025-06-16 21:25:46 [0;34m[DEBUG][0m   FILE_STATUS (ApiRequestException.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:46 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiRequestException.java, FILE_NAME: ApiRequestException.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:46 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:46 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:46 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/ApiRequestException.java][0m
[0m2025-06-16 21:25:46 [0;34m[INFO][0m    - File:[0;37m[ApiRequestException.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:46 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 12.778ms
------[0m
[0m2025-06-16 21:25:46 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 12.778ms
------[0m
[0m2025-06-16 21:25:46 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/CaptchaException.java[0m
[0m2025-06-16 21:25:46 [0;34m[DEBUG][0m   FILE_STATUS (CaptchaException.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:46 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/CaptchaException.java, FILE_NAME: CaptchaException.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:46 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:46 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:46 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/CaptchaException.java][0m
[0m2025-06-16 21:25:47 [0;34m[INFO][0m    - File:[0;37m[CaptchaException.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:47 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 13.225ms
------[0m
[0m2025-06-16 21:25:47 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 13.225ms
------[0m
[0m2025-06-16 21:25:47 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/EmailException.java[0m
[0m2025-06-16 21:25:47 [0;34m[DEBUG][0m   FILE_STATUS (EmailException.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:47 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/EmailException.java, FILE_NAME: EmailException.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:47 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:47 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:47 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/EmailException.java][0m
[0m2025-06-16 21:25:47 [0;34m[INFO][0m    - File:[0;37m[EmailException.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:47 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 11.115ms
------[0m
[0m2025-06-16 21:25:47 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 11.115ms
------[0m
[0m2025-06-16 21:25:47 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/InputFieldException.java[0m
[0m2025-06-16 21:25:47 [0;34m[DEBUG][0m   FILE_STATUS (InputFieldException.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:47 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/InputFieldException.java, FILE_NAME: InputFieldException.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:47 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:47 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:47 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/InputFieldException.java][0m
[0m2025-06-16 21:25:48 [0;34m[INFO][0m    - File:[0;37m[InputFieldException.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:48 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 13.309ms
------[0m
[0m2025-06-16 21:25:48 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 13.309ms
------[0m
[0m2025-06-16 21:25:48 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordConfirmationException.java[0m
[0m2025-06-16 21:25:48 [0;34m[DEBUG][0m   FILE_STATUS (PasswordConfirmationException.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:48 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordConfirmationException.java, FILE_NAME: PasswordConfirmationException.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:48 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:48 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:48 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordConfirmationException.java][0m
[0m2025-06-16 21:25:48 [0;34m[INFO][0m    - File:[0;37m[PasswordConfirmationException.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:48 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 10.952ms
------[0m
[0m2025-06-16 21:25:48 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 10.952ms
------[0m
[0m2025-06-16 21:25:48 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordException.java[0m
[0m2025-06-16 21:25:48 [0;34m[DEBUG][0m   FILE_STATUS (PasswordException.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:48 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordException.java, FILE_NAME: PasswordException.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:48 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:48 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:48 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/exception/PasswordException.java][0m
[0m2025-06-16 21:25:49 [0;34m[INFO][0m    - File:[0;37m[PasswordException.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:49 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 12.093ms
------[0m
[0m2025-06-16 21:25:49 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 12.093ms
------[0m
[0m2025-06-16 21:25:49 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java[0m
[0m2025-06-16 21:25:49 [0;34m[DEBUG][0m   FILE_STATUS (AuthenticationMapper.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:49 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java, FILE_NAME: AuthenticationMapper.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:49 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:49 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:49 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/AuthenticationMapper.java][0m
[0m2025-06-16 21:25:49 [0;34m[INFO][0m    - File:[0;37m[AuthenticationMapper.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:49 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 24.594ms
------[0m
[0m2025-06-16 21:25:49 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 24.594ms
------[0m
[0m2025-06-16 21:25:49 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java[0m
[0m2025-06-16 21:25:49 [0;34m[DEBUG][0m   FILE_STATUS (CommonMapper.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:49 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java, FILE_NAME: CommonMapper.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:49 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:49 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:49 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/CommonMapper.java][0m
[0m2025-06-16 21:25:50 [0;34m[INFO][0m    - File:[0;37m[CommonMapper.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:50 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 19.102ms
------[0m
[0m2025-06-16 21:25:50 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 19.102ms
------[0m
[0m2025-06-16 21:25:50 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java[0m
[0m2025-06-16 21:25:50 [0;34m[DEBUG][0m   FILE_STATUS (OrderMapper.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:50 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java, FILE_NAME: OrderMapper.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:50 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:50 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:50 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapper.java][0m
[0m2025-06-16 21:25:50 [0;34m[INFO][0m    - File:[0;37m[OrderMapper.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:50 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 22.536ms
------[0m
[0m2025-06-16 21:25:50 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 22.536ms
------[0m
[0m2025-06-16 21:25:50 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java[0m
[0m2025-06-16 21:25:50 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeMapper.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:50 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java, FILE_NAME: PerfumeMapper.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:50 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:50 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:50 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java][0m
[0m2025-06-16 21:25:51 [0;34m[INFO][0m    - File:[0;37m[PerfumeMapper.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:51 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 27.906ms
------[0m
[0m2025-06-16 21:25:51 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 27.906ms
------[0m
[0m2025-06-16 21:25:51 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java[0m
[0m2025-06-16 21:25:51 [0;34m[DEBUG][0m   FILE_STATUS (ReviewMapper.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:51 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java, FILE_NAME: ReviewMapper.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:51 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:51 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:51 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/ReviewMapper.java][0m
[0m2025-06-16 21:25:51 [0;34m[INFO][0m    - File:[0;37m[ReviewMapper.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:51 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 16.443ms
------[0m
[0m2025-06-16 21:25:51 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 16.443ms
------[0m
[0m2025-06-16 21:25:51 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java[0m
[0m2025-06-16 21:25:51 [0;34m[DEBUG][0m   FILE_STATUS (UserMapper.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:51 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java, FILE_NAME: UserMapper.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:51 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:51 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:51 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapper.java][0m
[0m2025-06-16 21:25:51 [0;34m[INFO][0m    - File:[0;37m[UserMapper.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:51 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 21.494ms
------[0m
[0m2025-06-16 21:25:52 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 21.494ms
------[0m
[0m2025-06-16 21:25:52 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderItemRepository.java[0m
[0m2025-06-16 21:25:52 [0;34m[DEBUG][0m   FILE_STATUS (OrderItemRepository.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:52 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderItemRepository.java, FILE_NAME: OrderItemRepository.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:52 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:52 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:52 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderItemRepository.java][0m
[0m2025-06-16 21:25:52 [0;34m[INFO][0m    - File:[0;37m[OrderItemRepository.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:52 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 11.412ms
------[0m
[0m2025-06-16 21:25:52 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 11.412ms
------[0m
[0m2025-06-16 21:25:52 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderRepository.java[0m
[0m2025-06-16 21:25:52 [0;34m[DEBUG][0m   FILE_STATUS (OrderRepository.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:52 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderRepository.java, FILE_NAME: OrderRepository.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:52 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:52 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:52 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/OrderRepository.java][0m
[0m2025-06-16 21:25:52 [0;34m[INFO][0m    - File:[0;37m[OrderRepository.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:52 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 13.922ms
------[0m
[0m2025-06-16 21:25:52 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 13.922ms
------[0m
[0m2025-06-16 21:25:52 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java[0m
[0m2025-06-16 21:25:52 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeRepository.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:52 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java, FILE_NAME: PerfumeRepository.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:52 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:52 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:52 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/PerfumeRepository.java][0m
[0m2025-06-16 21:25:53 [0;34m[INFO][0m    - File:[0;37m[PerfumeRepository.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:53 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 18.298ms
------[0m
[0m2025-06-16 21:25:53 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 18.298ms
------[0m
[0m2025-06-16 21:25:53 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/ReviewRepository.java[0m
[0m2025-06-16 21:25:53 [0;34m[DEBUG][0m   FILE_STATUS (ReviewRepository.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:53 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/ReviewRepository.java, FILE_NAME: ReviewRepository.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:53 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:53 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:53 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/ReviewRepository.java][0m
[0m2025-06-16 21:25:53 [0;34m[INFO][0m    - File:[0;37m[ReviewRepository.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:53 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 10.766ms
------[0m
[0m2025-06-16 21:25:53 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 10.766ms
------[0m
[0m2025-06-16 21:25:53 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/UserRepository.java[0m
[0m2025-06-16 21:25:53 [0;34m[DEBUG][0m   FILE_STATUS (UserRepository.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:53 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/UserRepository.java, FILE_NAME: UserRepository.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:53 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:53 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:53 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/UserRepository.java][0m
[0m2025-06-16 21:25:54 [0;34m[INFO][0m    - File:[0;37m[UserRepository.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:54 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 13.551ms
------[0m
[0m2025-06-16 21:25:54 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 13.551ms
------[0m
[0m2025-06-16 21:25:54 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java[0m
[0m2025-06-16 21:25:54 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeProjection.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:54 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java, FILE_NAME: PerfumeProjection.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:54 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:54 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:54 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/repository/projection/PerfumeProjection.java][0m
[0m2025-06-16 21:25:54 [0;34m[INFO][0m    - File:[0;37m[PerfumeProjection.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:54 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 13.748ms
------[0m
[0m2025-06-16 21:25:54 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 13.748ms
------[0m
[0m2025-06-16 21:25:54 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtAuthenticationException.java[0m
[0m2025-06-16 21:25:54 [0;34m[DEBUG][0m   FILE_STATUS (JwtAuthenticationException.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:54 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtAuthenticationException.java, FILE_NAME: JwtAuthenticationException.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:54 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:54 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:54 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtAuthenticationException.java][0m
[0m2025-06-16 21:25:55 [0;34m[INFO][0m    - File:[0;37m[JwtAuthenticationException.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:55 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 13.292ms
------[0m
[0m2025-06-16 21:25:55 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 13.292ms
------[0m
[0m2025-06-16 21:25:55 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtConfigurer.java[0m
[0m2025-06-16 21:25:55 [0;34m[DEBUG][0m   FILE_STATUS (JwtConfigurer.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:55 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtConfigurer.java, FILE_NAME: JwtConfigurer.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:55 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:55 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:55 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtConfigurer.java][0m
[0m2025-06-16 21:25:55 [0;34m[INFO][0m    - File:[0;37m[JwtConfigurer.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:55 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 14.599ms
------[0m
[0m2025-06-16 21:25:55 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 14.599ms
------[0m
[0m2025-06-16 21:25:55 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java[0m
[0m2025-06-16 21:25:55 [0;34m[DEBUG][0m   FILE_STATUS (JwtFilter.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:55 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java, FILE_NAME: JwtFilter.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:55 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:55 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:55 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtFilter.java][0m
[0m2025-06-16 21:25:56 [0;34m[INFO][0m    - File:[0;37m[JwtFilter.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:56 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 18.618ms
------[0m
[0m2025-06-16 21:25:56 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 18.618ms
------[0m
[0m2025-06-16 21:25:56 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java[0m
[0m2025-06-16 21:25:56 [0;34m[DEBUG][0m   FILE_STATUS (JwtProvider.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:56 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java, FILE_NAME: JwtProvider.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:56 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:56 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:56 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/JwtProvider.java][0m
[0m2025-06-16 21:25:56 [0;34m[INFO][0m    - File:[0;37m[JwtProvider.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:56 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 25.993ms
------[0m
[0m2025-06-16 21:25:56 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 25.993ms
------[0m
[0m2025-06-16 21:25:56 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserDetailsServiceImpl.java[0m
[0m2025-06-16 21:25:56 [0;34m[DEBUG][0m   FILE_STATUS (UserDetailsServiceImpl.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:56 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserDetailsServiceImpl.java, FILE_NAME: UserDetailsServiceImpl.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:56 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:56 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:56 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserDetailsServiceImpl.java][0m
[0m2025-06-16 21:25:57 [0;34m[INFO][0m    - File:[0;37m[UserDetailsServiceImpl.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:57 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 15.886ms
------[0m
[0m2025-06-16 21:25:57 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 15.886ms
------[0m
[0m2025-06-16 21:25:57 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java[0m
[0m2025-06-16 21:25:57 [0;34m[DEBUG][0m   FILE_STATUS (UserPrincipal.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:57 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java, FILE_NAME: UserPrincipal.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:57 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:57 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:57 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/UserPrincipal.java][0m
[0m2025-06-16 21:25:57 [0;34m[INFO][0m    - File:[0;37m[UserPrincipal.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:57 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 23.582ms
------[0m
[0m2025-06-16 21:25:57 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 23.582ms
------[0m
[0m2025-06-16 21:25:57 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/CustomOAuth2UserService.java[0m
[0m2025-06-16 21:25:57 [0;34m[DEBUG][0m   FILE_STATUS (CustomOAuth2UserService.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:57 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/CustomOAuth2UserService.java, FILE_NAME: CustomOAuth2UserService.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:57 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:57 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:57 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/CustomOAuth2UserService.java][0m
[0m2025-06-16 21:25:58 [0;34m[INFO][0m    - File:[0;37m[CustomOAuth2UserService.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:58 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 18.659ms
------[0m
[0m2025-06-16 21:25:58 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 18.659ms
------[0m
[0m2025-06-16 21:25:58 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/FacebookOAuth2UserInfo.java[0m
[0m2025-06-16 21:25:58 [0;34m[DEBUG][0m   FILE_STATUS (FacebookOAuth2UserInfo.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:58 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/FacebookOAuth2UserInfo.java, FILE_NAME: FacebookOAuth2UserInfo.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:58 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:58 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:58 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/FacebookOAuth2UserInfo.java][0m
[0m2025-06-16 21:25:58 [0;34m[INFO][0m    - File:[0;37m[FacebookOAuth2UserInfo.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:58 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 14.035ms
------[0m
[0m2025-06-16 21:25:58 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 14.035ms
------[0m
[0m2025-06-16 21:25:58 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GithubOAuth2UserInfo.java[0m
[0m2025-06-16 21:25:58 [0;34m[DEBUG][0m   FILE_STATUS (GithubOAuth2UserInfo.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:58 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GithubOAuth2UserInfo.java, FILE_NAME: GithubOAuth2UserInfo.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:58 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:58 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:58 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GithubOAuth2UserInfo.java][0m
[0m2025-06-16 21:25:59 [0;34m[INFO][0m    - File:[0;37m[GithubOAuth2UserInfo.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:59 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 14.551ms
------[0m
[0m2025-06-16 21:25:59 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 14.551ms
------[0m
[0m2025-06-16 21:25:59 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GoogleOAuth2UserInfo.java[0m
[0m2025-06-16 21:25:59 [0;34m[DEBUG][0m   FILE_STATUS (GoogleOAuth2UserInfo.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:59 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GoogleOAuth2UserInfo.java, FILE_NAME: GoogleOAuth2UserInfo.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:59 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:59 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:59 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/GoogleOAuth2UserInfo.java][0m
[0m2025-06-16 21:25:59 [0;34m[INFO][0m    - File:[0;37m[GoogleOAuth2UserInfo.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:25:59 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 12.848ms
------[0m
[0m2025-06-16 21:25:59 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 12.848ms
------[0m
[0m2025-06-16 21:25:59 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2SuccessHandler.java[0m
[0m2025-06-16 21:25:59 [0;34m[DEBUG][0m   FILE_STATUS (OAuth2SuccessHandler.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:25:59 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2SuccessHandler.java, FILE_NAME: OAuth2SuccessHandler.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:25:59 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:25:59 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:25:59 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2SuccessHandler.java][0m
[0m2025-06-16 21:26:00 [0;34m[INFO][0m    - File:[0;37m[OAuth2SuccessHandler.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:26:00 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 18.594ms
------[0m
[0m2025-06-16 21:26:00 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 18.594ms
------[0m
[0m2025-06-16 21:26:00 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserFactory.java[0m
[0m2025-06-16 21:26:00 [0;34m[DEBUG][0m   FILE_STATUS (OAuth2UserFactory.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:00 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserFactory.java, FILE_NAME: OAuth2UserFactory.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:00 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:00 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:00 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserFactory.java][0m
[0m2025-06-16 21:26:00 [0;34m[INFO][0m    - File:[0;37m[OAuth2UserFactory.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:26:00 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 14.607ms
------[0m
[0m2025-06-16 21:26:00 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 14.607ms
------[0m
[0m2025-06-16 21:26:00 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java[0m
[0m2025-06-16 21:26:00 [0;34m[DEBUG][0m   FILE_STATUS (OAuth2UserInfo.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:00 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java, FILE_NAME: OAuth2UserInfo.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:00 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:00 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:00 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/security/oauth2/OAuth2UserInfo.java][0m
[0m2025-06-16 21:26:01 [0;34m[INFO][0m    - File:[0;37m[OAuth2UserInfo.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:26:01 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 13.632ms
------[0m
[0m2025-06-16 21:26:01 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 13.632ms
------[0m
[0m2025-06-16 21:26:01 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/AuthenticationService.java[0m
[0m2025-06-16 21:26:01 [0;34m[DEBUG][0m   FILE_STATUS (AuthenticationService.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:01 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/AuthenticationService.java, FILE_NAME: AuthenticationService.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:01 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:01 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:01 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/AuthenticationService.java][0m
[0m2025-06-16 21:26:01 [0;34m[INFO][0m    - File:[0;37m[AuthenticationService.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:26:01 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 14.767ms
------[0m
[0m2025-06-16 21:26:01 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 14.767ms
------[0m
[0m2025-06-16 21:26:01 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java[0m
[0m2025-06-16 21:26:01 [0;34m[DEBUG][0m   FILE_STATUS (AuthenticationServiceImpl.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:01 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java, FILE_NAME: AuthenticationServiceImpl.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:01 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:01 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:01 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImpl.java][0m
[0m2025-06-16 21:26:02 [0;34m[INFO][0m    - File:[0;37m[AuthenticationServiceImpl.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:26:02 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 76.288ms
------[0m
[0m2025-06-16 21:26:02 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 76.288ms
------[0m
[0m2025-06-16 21:26:02 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java[0m
[0m2025-06-16 21:26:02 [0;34m[DEBUG][0m   FILE_STATUS (OrderServiceImpl.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:02 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java, FILE_NAME: OrderServiceImpl.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:02 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:02 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:02 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImpl.java][0m
[0m2025-06-16 21:26:02 [0;34m[INFO][0m    - File:[0;37m[OrderServiceImpl.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:26:02 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 41.434ms
------[0m
[0m2025-06-16 21:26:02 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 41.434ms
------[0m
[0m2025-06-16 21:26:02 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java[0m
[0m2025-06-16 21:26:02 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeServiceImpl.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:02 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java, FILE_NAME: PerfumeServiceImpl.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:02 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:02 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:02 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java][0m
[0m2025-06-16 21:26:03 [0;34m[INFO][0m    - File:[0;37m[PerfumeServiceImpl.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:26:03 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 66.785ms
------[0m
[0m2025-06-16 21:26:03 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 66.785ms
------[0m
[0m2025-06-16 21:26:03 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java[0m
[0m2025-06-16 21:26:03 [0;34m[DEBUG][0m   FILE_STATUS (ReviewServiceImpl.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:03 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java, FILE_NAME: ReviewServiceImpl.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:03 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:03 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:03 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImpl.java][0m
[0m2025-06-16 21:26:03 [0;34m[INFO][0m    - File:[0;37m[ReviewServiceImpl.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:26:03 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 22.579ms
------[0m
[0m2025-06-16 21:26:03 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 22.579ms
------[0m
[0m2025-06-16 21:26:03 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java[0m
[0m2025-06-16 21:26:03 [0;34m[DEBUG][0m   FILE_STATUS (UserServiceImpl.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:03 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java, FILE_NAME: UserServiceImpl.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:03 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:03 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:03 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImpl.java][0m
[0m2025-06-16 21:26:04 [0;34m[INFO][0m    - File:[0;37m[UserServiceImpl.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:26:04 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 32.141ms
------[0m
[0m2025-06-16 21:26:04 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 32.141ms
------[0m
[0m2025-06-16 21:26:04 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/OrderService.java[0m
[0m2025-06-16 21:26:04 [0;34m[DEBUG][0m   FILE_STATUS (OrderService.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:04 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/OrderService.java, FILE_NAME: OrderService.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:04 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:04 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:04 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/OrderService.java][0m
[0m2025-06-16 21:26:04 [0;34m[INFO][0m    - File:[0;37m[OrderService.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:26:04 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 13.295ms
------[0m
[0m2025-06-16 21:26:04 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 13.295ms
------[0m
[0m2025-06-16 21:26:04 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java[0m
[0m2025-06-16 21:26:04 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeService.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:04 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java, FILE_NAME: PerfumeService.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:04 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:04 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:04 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/PerfumeService.java][0m
[0m2025-06-16 21:26:05 [0;34m[INFO][0m    - File:[0;37m[PerfumeService.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:26:05 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 17.708ms
------[0m
[0m2025-06-16 21:26:05 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 17.708ms
------[0m
[0m2025-06-16 21:26:05 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/ReviewService.java[0m
[0m2025-06-16 21:26:05 [0;34m[DEBUG][0m   FILE_STATUS (ReviewService.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:05 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/ReviewService.java, FILE_NAME: ReviewService.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:05 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:05 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:05 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/ReviewService.java][0m
[0m2025-06-16 21:26:05 [0;34m[INFO][0m    - File:[0;37m[ReviewService.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:26:05 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 12.588ms
------[0m
[0m2025-06-16 21:26:05 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 12.588ms
------[0m
[0m2025-06-16 21:26:05 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/UserService.java[0m
[0m2025-06-16 21:26:05 [0;34m[DEBUG][0m   FILE_STATUS (UserService.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:05 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/UserService.java, FILE_NAME: UserService.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:05 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:05 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:05 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/UserService.java][0m
[0m2025-06-16 21:26:06 [0;34m[INFO][0m    - File:[0;37m[UserService.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:26:06 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 14.595ms
------[0m
[0m2025-06-16 21:26:06 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 14.595ms
------[0m
[0m2025-06-16 21:26:06 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java[0m
[0m2025-06-16 21:26:06 [0;34m[DEBUG][0m   FILE_STATUS (MailSender.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:06 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java, FILE_NAME: MailSender.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:06 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:06 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:06 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/email/MailSender.java][0m
[0m2025-06-16 21:26:06 [0;34m[INFO][0m    - File:[0;37m[MailSender.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:26:06 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 18.636ms
------[0m
[0m2025-06-16 21:26:06 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 18.636ms
------[0m
[0m2025-06-16 21:26:06 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java[0m
[0m2025-06-16 21:26:06 [0;34m[DEBUG][0m   FILE_STATUS (GraphQLProvider.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:06 [0;34m[DEBUG][0m   File: /github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java, FILE_NAME: GraphQLProvider.java, DIR_NAME:/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:06 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:06 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:06 [0;34m[INFO][0m   File:[/github/workspace/src/main/java/com/gmail/merikbest2015/ecommerce/service/graphql/GraphQLProvider.java][0m
[0m2025-06-16 21:26:07 [0;34m[INFO][0m    - File:[0;37m[GraphQLProvider.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:26:07 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 24.729ms
------[0m
[0m2025-06-16 21:26:07 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 24.729ms
------[0m
[0m2025-06-16 21:26:07 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/resources/application.properties[0m
[0m2025-06-16 21:26:07 [0;34m[DEBUG][0m   FILE_STATUS (application.properties) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:07 [0;34m[DEBUG][0m   File: /github/workspace/src/main/resources/application.properties, FILE_NAME: application.properties, DIR_NAME:/github/workspace/src/main/resources, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:07 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:07 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:07 [0;34m[INFO][0m   File:[/github/workspace/src/main/resources/application.properties][0m
[0m2025-06-16 21:26:07 [0;34m[INFO][0m    - File:[0;37m[application.properties][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:26:07 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 10.585ms
------[0m
[0m2025-06-16 21:26:07 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 10.585ms
------[0m
[0m2025-06-16 21:26:07 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/resources/db/migration/V1__Init_BD.sql[0m
[0m2025-06-16 21:26:07 [0;34m[DEBUG][0m   FILE_STATUS () is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:07 [0;34m[DEBUG][0m   File: /github/workspace/src/main/resources/db/migration/V1__Init_BD.sql, FILE_NAME: V1__Init_BD.sql, DIR_NAME:/github/workspace/src/main/resources/db/migration, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:07 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:07 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:07 [0;34m[INFO][0m   File:[/github/workspace/src/main/resources/db/migration/V1__Init_BD.sql][0m
[0m2025-06-16 21:26:08 [0;34m[INFO][0m    - File:[0;37m[V1__Init_BD.sql][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:26:08 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 25.375ms
------[0m
[0m2025-06-16 21:26:08 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 25.375ms
------[0m
[0m2025-06-16 21:26:08 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/resources/db/migration/V2__Add_users.sql[0m
[0m2025-06-16 21:26:08 [0;34m[DEBUG][0m   FILE_STATUS () is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:08 [0;34m[DEBUG][0m   File: /github/workspace/src/main/resources/db/migration/V2__Add_users.sql, FILE_NAME: V2__Add_users.sql, DIR_NAME:/github/workspace/src/main/resources/db/migration, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:08 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:08 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:08 [0;34m[INFO][0m   File:[/github/workspace/src/main/resources/db/migration/V2__Add_users.sql][0m
[0m2025-06-16 21:26:08 [0;34m[INFO][0m    - File:[0;37m[V2__Add_users.sql][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:26:08 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 22.736ms
------[0m
[0m2025-06-16 21:26:08 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 22.736ms
------[0m
[0m2025-06-16 21:26:08 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/resources/db/migration/V3__Add_products.sql[0m
[0m2025-06-16 21:26:08 [0;34m[DEBUG][0m   FILE_STATUS () is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:08 [0;34m[DEBUG][0m   File: /github/workspace/src/main/resources/db/migration/V3__Add_products.sql, FILE_NAME: V3__Add_products.sql, DIR_NAME:/github/workspace/src/main/resources/db/migration, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:08 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:08 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:08 [0;34m[INFO][0m   File:[/github/workspace/src/main/resources/db/migration/V3__Add_products.sql][0m
[0m2025-06-16 21:26:09 [0;34m[INFO][0m    - File:[0;37m[V3__Add_products.sql][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:26:09 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 386.19ms
------[0m
[0m2025-06-16 21:26:09 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 386.19ms
------[0m
[0m2025-06-16 21:26:09 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/resources/db/migration/V4__Add_orders.sql[0m
[0m2025-06-16 21:26:09 [0;34m[DEBUG][0m   FILE_STATUS () is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:09 [0;34m[DEBUG][0m   File: /github/workspace/src/main/resources/db/migration/V4__Add_orders.sql, FILE_NAME: V4__Add_orders.sql, DIR_NAME:/github/workspace/src/main/resources/db/migration, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:09 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:09 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:09 [0;34m[INFO][0m   File:[/github/workspace/src/main/resources/db/migration/V4__Add_orders.sql][0m
[0m2025-06-16 21:26:10 [0;34m[INFO][0m    - File:[0;37m[V4__Add_orders.sql][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:26:10 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 37.768ms
------[0m
[0m2025-06-16 21:26:10 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 37.768ms
------[0m
[0m2025-06-16 21:26:10 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/resources/graphql/schemas.graphql[0m
[0m2025-06-16 21:26:10 [0;34m[DEBUG][0m   FILE_STATUS (schemas.graphql) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:10 [0;34m[DEBUG][0m   File: /github/workspace/src/main/resources/graphql/schemas.graphql, FILE_NAME: schemas.graphql, DIR_NAME:/github/workspace/src/main/resources/graphql, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:10 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:10 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:10 [0;34m[INFO][0m   File:[/github/workspace/src/main/resources/graphql/schemas.graphql][0m
[0m2025-06-16 21:26:10 [0;34m[INFO][0m    - File:[0;37m[schemas.graphql][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:26:10 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 15.994ms
------[0m
[0m2025-06-16 21:26:10 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 15.994ms
------[0m
[0m2025-06-16 21:26:10 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/resources/mail-templates/order-template.html[0m
[0m2025-06-16 21:26:10 [0;34m[DEBUG][0m   FILE_STATUS (order-template.html) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:10 [0;34m[DEBUG][0m   File: /github/workspace/src/main/resources/mail-templates/order-template.html, FILE_NAME: order-template.html, DIR_NAME:/github/workspace/src/main/resources/mail-templates, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:10 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:10 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:10 [0;34m[INFO][0m   File:[/github/workspace/src/main/resources/mail-templates/order-template.html][0m
[0m2025-06-16 21:26:11 [0;34m[INFO][0m    - File:[0;37m[order-template.html][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:26:11 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 49.486ms
------[0m
[0m2025-06-16 21:26:11 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 49.486ms
------[0m
[0m2025-06-16 21:26:11 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/resources/mail-templates/password-reset-template.html[0m
[0m2025-06-16 21:26:11 [0;34m[DEBUG][0m   FILE_STATUS (password-reset-template.html) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:11 [0;34m[DEBUG][0m   File: /github/workspace/src/main/resources/mail-templates/password-reset-template.html, FILE_NAME: password-reset-template.html, DIR_NAME:/github/workspace/src/main/resources/mail-templates, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:11 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:11 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:11 [0;34m[INFO][0m   File:[/github/workspace/src/main/resources/mail-templates/password-reset-template.html][0m
[0m2025-06-16 21:26:11 [0;34m[INFO][0m    - File:[0;37m[password-reset-template.html][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:26:11 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 15.64ms
------[0m
[0m2025-06-16 21:26:11 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 15.64ms
------[0m
[0m2025-06-16 21:26:11 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/resources/mail-templates/registration-template.html[0m
[0m2025-06-16 21:26:11 [0;34m[DEBUG][0m   FILE_STATUS (registration-template.html) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:11 [0;34m[DEBUG][0m   File: /github/workspace/src/main/resources/mail-templates/registration-template.html, FILE_NAME: registration-template.html, DIR_NAME:/github/workspace/src/main/resources/mail-templates, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:11 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:11 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:11 [0;34m[INFO][0m   File:[/github/workspace/src/main/resources/mail-templates/registration-template.html][0m
[0m2025-06-16 21:26:12 [0;34m[INFO][0m    - File:[0;37m[registration-template.html][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:26:12 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 16.655ms
------[0m
[0m2025-06-16 21:26:12 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 16.655ms
------[0m
[0m2025-06-16 21:26:12 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/resources/static/swagger-api/swagger.yaml[0m
[0m2025-06-16 21:26:12 [0;34m[DEBUG][0m   FILE_STATUS (swagger.yaml) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:12 [0;34m[DEBUG][0m   File: /github/workspace/src/main/resources/static/swagger-api/swagger.yaml, FILE_NAME: swagger.yaml, DIR_NAME:/github/workspace/src/main/resources/static/swagger-api, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:12 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:12 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:12 [0;34m[INFO][0m   File:[/github/workspace/src/main/resources/static/swagger-api/swagger.yaml][0m
[0m2025-06-16 21:26:12 [0;34m[INFO][0m    - File:[0;37m[swagger.yaml][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:26:12 [0;34m[INFO][0m      - Command output:[0m
------
Detection time:: 0.757ms
------[0m
[0m2025-06-16 21:26:12 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Detection time:: 0.757ms
------[0m
[0m2025-06-16 21:26:12 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/EcommerceApplicationTests.java[0m
[0m2025-06-16 21:26:12 [0;34m[DEBUG][0m   FILE_STATUS (EcommerceApplicationTests.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:12 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/EcommerceApplicationTests.java, FILE_NAME: EcommerceApplicationTests.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:12 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:12 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:12 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/EcommerceApplicationTests.java][0m
[0m2025-06-16 21:26:12 [0;34m[INFO][0m    - File:[0;37m[EcommerceApplicationTests.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:26:13 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 12.945ms
------[0m
[0m2025-06-16 21:26:13 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 12.945ms
------[0m
[0m2025-06-16 21:26:13 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java[0m
[0m2025-06-16 21:26:13 [0;34m[DEBUG][0m   FILE_STATUS (AdminControllerTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:13 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java, FILE_NAME: AdminControllerTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:13 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:13 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:13 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java][0m
[0m2025-06-16 21:26:13 [0;34m[DEBUG][0m   Found errors. Error code: 1, File type: JSCPD, Error on missing exec bit: false[0m
[0m2025-06-16 21:26:13 [0;31m[ERROR][0m   Found errors in [jscpd] linter![0m
[0m2025-06-16 21:26:13 [0;31m[ERROR][0m   Error code: 1. Command output:[0m
------
Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java [146:5 - 165:56] (19 lines, 230 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java [108:4 - 127:47]

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java [205:11 - 221:61] (16 lines, 192 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java [187:7 - 203:76]

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java [146:5 - 165:56] (19 lines, 230 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java [108:4 - 127:47]

 146 │ 108 │ )                                                                                                
 147 │ 109 │                         .file(jsonFile)                                                          
 148 │ 110 │                         .contentType(MediaType.APPLICATION_JSON_VALUE)                           
 149 │ 111 │                         .with(csrf())) // Adicionando token CSRF                                 
 150 │ 112 │                 .andExpect(status().isBadRequest())                                              
 151 │ 113 │                 .andExpect(jsonPath("$.perfumeTitleError", is(FILL_IN_THE_INPUT_FIELD)))         
 152 │ 114 │                 .andExpect(jsonPath("$.perfumerError", is(FILL_IN_THE_INPUT_FIELD)))             
 153 │ 115 │                 .andExpect(jsonPath("$.yearError", is(FILL_IN_THE_INPUT_FIELD)))                 
 154 │ 116 │                 .andExpect(jsonPath("$.countryError", is(FILL_IN_THE_INPUT_FIELD)))              
 155 │ 117 │                 .andExpect(jsonPath("$.perfumeGenderError", is(FILL_IN_THE_INPUT_FIELD)))        
 156 │ 118 │                 .andExpect(jsonPath("$.fragranceTopNotesError", is(FILL_IN_THE_INPUT_FIELD)))    
 157 │ 119 │                 .andExpect(jsonPath("$.fragranceMiddleNotesError", is(FILL_IN_THE_INPUT_FIELD))) 
 158 │ 120 │                 .andExpect(jsonPath("$.fragranceBaseNotesError", is(FILL_IN_THE_INPUT_FIELD)))   
 159 │ 121 │                 .andExpect(jsonPath("$.priceError", is(FILL_IN_THE_INPUT_FIELD)))                
 160 │ 122 │                 .andExpect(jsonPath("$.volumeError", is(FILL_IN_THE_INPUT_FIELD)))               
 161 │ 123 │                 .andExpect(jsonPath("$.typeError", is(FILL_IN_THE_INPUT_FIELD)));                
 162 │ 124 │     }                                                                                            
 163 │ 125 │                                                                                                  
 164 │ 126 │     @Test                                                                                        
 165 │ 127 │     @DisplayName("[200] DELETE /api/v1/admin/delete/46 - Delete Perfume"                         

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java [205:11 - 221:61] (16 lines, 192 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java [187:7 - 203:76]

 205 │ 187 │ )                                                                               
 206 │ 188 │                         .contentType(MediaType.APPLICATION_JSON_VALUE))         
 207 │ 189 │                 .andExpect(status().isOk())                                     
 208 │ 190 │                 .andExpect(jsonPath("$[*].id").isNotEmpty())                    
 209 │ 191 │                 .andExpect(jsonPath("$[*].totalPrice", hasItem(TOTAL_PRICE)))   
 210 │ 192 │                 .andExpect(jsonPath("$[*].date").isNotEmpty())                  
 211 │ 193 │                 .andExpect(jsonPath("$[*].firstName", hasItem(FIRST_NAME)))     
 212 │ 194 │                 .andExpect(jsonPath("$[*].lastName", hasItem(LAST_NAME)))       
 213 │ 195 │                 .andExpect(jsonPath("$[*].city", hasItem(CITY)))                
 214 │ 196 │                 .andExpect(jsonPath("$[*].address", hasItem(ADDRESS)))          
 215 │ 197 │                 .andExpect(jsonPath("$[*].email", hasItem(USER_EMAIL)))         
 216 │ 198 │                 .andExpect(jsonPath("$[*].phoneNumber", hasItem(PHONE_NUMBER))) 
 217 │ 199 │                 .andExpect(jsonPath("$[*].postIndex", hasItem(POST_INDEX)));    
 218 │ 200 │     }                                                                           
 219 │ 201 │                                                                                 
 220 │ 202 │     @Test                                                                       
 221 │ 203 │     @DisplayName("[200] DELETE /api/v1/admin/order/delete/111 - Delete Order"   

Found 2 clones.
ERROR: jscpd found too many duplicates (9.67%) over threshold (0%)
Error: ERROR: jscpd found too many duplicates (9.67%) over threshold (0%)
    at ThresholdReporter.report (/node_modules/@jscpd/finder/dist/reporters/threshold.js:12:19)
    at /node_modules/@jscpd/finder/dist/in-files-detector.js:82:26
    at Array.forEach (<anonymous>)
    at /node_modules/@jscpd/finder/dist/in-files-detector.js:81:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
------[0m
[0m2025-06-16 21:26:13 [0;34m[DEBUG][0m   Error code: 1. Command output:[0m
------
Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java [146:5 - 165:56] (19 lines, 230 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java [108:4 - 127:47]

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java [205:11 - 221:61] (16 lines, 192 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java [187:7 - 203:76]

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java [146:5 - 165:56] (19 lines, 230 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java [108:4 - 127:47]

 146 │ 108 │ )                                                                                                
 147 │ 109 │                         .file(jsonFile)                                                          
 148 │ 110 │                         .contentType(MediaType.APPLICATION_JSON_VALUE)                           
 149 │ 111 │                         .with(csrf())) // Adicionando token CSRF                                 
 150 │ 112 │                 .andExpect(status().isBadRequest())                                              
 151 │ 113 │                 .andExpect(jsonPath("$.perfumeTitleError", is(FILL_IN_THE_INPUT_FIELD)))         
 152 │ 114 │                 .andExpect(jsonPath("$.perfumerError", is(FILL_IN_THE_INPUT_FIELD)))             
 153 │ 115 │                 .andExpect(jsonPath("$.yearError", is(FILL_IN_THE_INPUT_FIELD)))                 
 154 │ 116 │                 .andExpect(jsonPath("$.countryError", is(FILL_IN_THE_INPUT_FIELD)))              
 155 │ 117 │                 .andExpect(jsonPath("$.perfumeGenderError", is(FILL_IN_THE_INPUT_FIELD)))        
 156 │ 118 │                 .andExpect(jsonPath("$.fragranceTopNotesError", is(FILL_IN_THE_INPUT_FIELD)))    
 157 │ 119 │                 .andExpect(jsonPath("$.fragranceMiddleNotesError", is(FILL_IN_THE_INPUT_FIELD))) 
 158 │ 120 │                 .andExpect(jsonPath("$.fragranceBaseNotesError", is(FILL_IN_THE_INPUT_FIELD)))   
 159 │ 121 │                 .andExpect(jsonPath("$.priceError", is(FILL_IN_THE_INPUT_FIELD)))                
 160 │ 122 │                 .andExpect(jsonPath("$.volumeError", is(FILL_IN_THE_INPUT_FIELD)))               
 161 │ 123 │                 .andExpect(jsonPath("$.typeError", is(FILL_IN_THE_INPUT_FIELD)));                
 162 │ 124 │     }                                                                                            
 163 │ 125 │                                                                                                  
 164 │ 126 │     @Test                                                                                        
 165 │ 127 │     @DisplayName("[200] DELETE /api/v1/admin/delete/46 - Delete Perfume"                         

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java [205:11 - 221:61] (16 lines, 192 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AdminControllerTest.java [187:7 - 203:76]

 205 │ 187 │ )                                                                               
 206 │ 188 │                         .contentType(MediaType.APPLICATION_JSON_VALUE))         
 207 │ 189 │                 .andExpect(status().isOk())                                     
 208 │ 190 │                 .andExpect(jsonPath("$[*].id").isNotEmpty())                    
 209 │ 191 │                 .andExpect(jsonPath("$[*].totalPrice", hasItem(TOTAL_PRICE)))   
 210 │ 192 │                 .andExpect(jsonPath("$[*].date").isNotEmpty())                  
 211 │ 193 │                 .andExpect(jsonPath("$[*].firstName", hasItem(FIRST_NAME)))     
 212 │ 194 │                 .andExpect(jsonPath("$[*].lastName", hasItem(LAST_NAME)))       
 213 │ 195 │                 .andExpect(jsonPath("$[*].city", hasItem(CITY)))                
 214 │ 196 │                 .andExpect(jsonPath("$[*].address", hasItem(ADDRESS)))          
 215 │ 197 │                 .andExpect(jsonPath("$[*].email", hasItem(USER_EMAIL)))         
 216 │ 198 │                 .andExpect(jsonPath("$[*].phoneNumber", hasItem(PHONE_NUMBER))) 
 217 │ 199 │                 .andExpect(jsonPath("$[*].postIndex", hasItem(POST_INDEX)));    
 218 │ 200 │     }                                                                           
 219 │ 201 │                                                                                 
 220 │ 202 │     @Test                                                                       
 221 │ 203 │     @DisplayName("[200] DELETE /api/v1/admin/order/delete/111 - Delete Order"   

Found 2 clones.
ERROR: jscpd found too many duplicates (9.67%) over threshold (0%)
Error: ERROR: jscpd found too many duplicates (9.67%) over threshold (0%)
    at ThresholdReporter.report (/node_modules/@jscpd/finder/dist/reporters/threshold.js:12:19)
    at /node_modules/@jscpd/finder/dist/in-files-detector.js:82:26
    at Array.forEach (<anonymous>)
    at /node_modules/@jscpd/finder/dist/in-files-detector.js:81:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
------[0m
[0m2025-06-16 21:26:13 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java[0m
[0m2025-06-16 21:26:13 [0;34m[DEBUG][0m   FILE_STATUS (AuthenticationControllerTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:13 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java, FILE_NAME: AuthenticationControllerTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:13 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:13 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:13 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java][0m
[0m2025-06-16 21:26:14 [0;34m[DEBUG][0m   Found errors. Error code: 1, File type: JSCPD, Error on missing exec bit: false[0m
[0m2025-06-16 21:26:14 [0;31m[ERROR][0m   Found errors in [jscpd] linter![0m
[0m2025-06-16 21:26:14 [0;31m[ERROR][0m   Error code: 1. Command output:[0m
------
Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java [118:3 - 125:19] (7 lines, 68 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java [106:8 - 113:18]

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java [163:3 - 170:26] (7 lines, 73 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java [148:15 - 155:23]

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java [118:3 - 125:19] (7 lines, 68 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java [106:8 - 113:18]

 118 │ 106 │ );                                                                                
 119 │ 107 │                                                                                   
 120 │ 108 │         mockMvc.perform(post(API_V1_AUTH + RESET)                                 
 121 │ 109 │                         .content(mapper.writeValueAsString(passwordResetRequest)) 
 122 │ 110 │                         .contentType(MediaType.APPLICATION_JSON_VALUE)            
 123 │ 111 │                         .with(csrf()))                                            
 124 │ 112 │                 .andExpect(status().isBadRequest())                               
 125 │ 113 │                 .andExpect(jsonPath("$.password2Error"                            

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java [163:3 - 170:26] (7 lines, 73 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java [148:15 - 155:23]

 163 │ 148 │ );                                                                                  
 164 │ 149 │                                                                                     
 165 │ 150 │         mockMvc.perform(put(API_V1_AUTH + EDIT_PASSWORD)                            
 166 │ 151 │                         .content(mapper.writeValueAsString(requestDto))             
 167 │ 152 │                         .contentType(MediaType.APPLICATION_JSON_VALUE)              
 168 │ 153 │                         .with(csrf()))                                              
 169 │ 154 │                 .andExpect(status().isBadRequest())                                 
 170 │ 155 │                 .andExpect(jsonPath("$.passwordError", is(PASSWORD_CHARACTER_LENGTH 

Found 2 clones.
ERROR: jscpd found too many duplicates (8.14%) over threshold (0%)
Error: ERROR: jscpd found too many duplicates (8.14%) over threshold (0%)
    at ThresholdReporter.report (/node_modules/@jscpd/finder/dist/reporters/threshold.js:12:19)
    at /node_modules/@jscpd/finder/dist/in-files-detector.js:82:26
    at Array.forEach (<anonymous>)
    at /node_modules/@jscpd/finder/dist/in-files-detector.js:81:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
------[0m
[0m2025-06-16 21:26:14 [0;34m[DEBUG][0m   Error code: 1. Command output:[0m
------
Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java [118:3 - 125:19] (7 lines, 68 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java [106:8 - 113:18]

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java [163:3 - 170:26] (7 lines, 73 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java [148:15 - 155:23]

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java [118:3 - 125:19] (7 lines, 68 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java [106:8 - 113:18]

 118 │ 106 │ );                                                                                
 119 │ 107 │                                                                                   
 120 │ 108 │         mockMvc.perform(post(API_V1_AUTH + RESET)                                 
 121 │ 109 │                         .content(mapper.writeValueAsString(passwordResetRequest)) 
 122 │ 110 │                         .contentType(MediaType.APPLICATION_JSON_VALUE)            
 123 │ 111 │                         .with(csrf()))                                            
 124 │ 112 │                 .andExpect(status().isBadRequest())                               
 125 │ 113 │                 .andExpect(jsonPath("$.password2Error"                            

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java [163:3 - 170:26] (7 lines, 73 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/AuthenticationControllerTest.java [148:15 - 155:23]

 163 │ 148 │ );                                                                                  
 164 │ 149 │                                                                                     
 165 │ 150 │         mockMvc.perform(put(API_V1_AUTH + EDIT_PASSWORD)                            
 166 │ 151 │                         .content(mapper.writeValueAsString(requestDto))             
 167 │ 152 │                         .contentType(MediaType.APPLICATION_JSON_VALUE)              
 168 │ 153 │                         .with(csrf()))                                              
 169 │ 154 │                 .andExpect(status().isBadRequest())                                 
 170 │ 155 │                 .andExpect(jsonPath("$.passwordError", is(PASSWORD_CHARACTER_LENGTH 

Found 2 clones.
ERROR: jscpd found too many duplicates (8.14%) over threshold (0%)
Error: ERROR: jscpd found too many duplicates (8.14%) over threshold (0%)
    at ThresholdReporter.report (/node_modules/@jscpd/finder/dist/reporters/threshold.js:12:19)
    at /node_modules/@jscpd/finder/dist/in-files-detector.js:82:26
    at Array.forEach (<anonymous>)
    at /node_modules/@jscpd/finder/dist/in-files-detector.js:81:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
------[0m
[0m2025-06-16 21:26:14 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java[0m
[0m2025-06-16 21:26:14 [0;34m[DEBUG][0m   FILE_STATUS (OrderControllerTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:14 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java, FILE_NAME: OrderControllerTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:14 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:14 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:14 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/OrderControllerTest.java][0m
[0m2025-06-16 21:26:14 [0;34m[INFO][0m    - File:[0;37m[OrderControllerTest.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:26:14 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 59.82ms
------[0m
[0m2025-06-16 21:26:14 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 59.82ms
------[0m
[0m2025-06-16 21:26:14 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java[0m
[0m2025-06-16 21:26:14 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeControllerTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:14 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java, FILE_NAME: PerfumeControllerTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:14 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:14 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:14 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java][0m
[0m2025-06-16 21:26:15 [0;34m[DEBUG][0m   Found errors. Error code: 1, File type: JSCPD, Error on missing exec bit: false[0m
[0m2025-06-16 21:26:15 [0;31m[ERROR][0m   Found errors in [jscpd] linter![0m
[0m2025-06-16 21:26:15 [0;31m[ERROR][0m   Error code: 1. Command output:[0m
------
Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [107:2 - 117:27] (10 lines, 99 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [74:23 - 84:15]

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [119:7 - 131:36] (12 lines, 118 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [105:2 - 84:15]

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [147:9 - 160:20] (13 lines, 140 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [118:9 - 84:15]

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [164:14 - 177:15] (13 lines, 129 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [118:7 - 84:15]

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [181:16 - 194:16] (13 lines, 129 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [118:7 - 84:15]

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [204:2 - 211:8] (7 lines, 76 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [75:2 - 81:2]

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [212:8 - 219:2] (7 lines, 74 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [197:9 - 204:3]

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [219:2 - 226:14] (7 lines, 83 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [204:3 - 211:6]

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [227:12 - 234:2] (7 lines, 73 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [197:9 - 204:3]

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [234:2 - 243:22] (9 lines, 87 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [204:3 - 84:15]

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [107:2 - 117:27] (10 lines, 99 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [74:23 - 84:15]

 107 │ 74 │              .with(csrf()))                                            
 108 │ 75 │                 .andExpect(status().isOk())                            
 109 │ 76 │                 .andExpect(jsonPath("$[*].id").isNotEmpty())           
 110 │ 77 │                 .andExpect(jsonPath("$[*].perfumeTitle").isNotEmpty()) 
 111 │ 78 │                 .andExpect(jsonPath("$[*].perfumer").isNotEmpty())     
 112 │ 79 │                 .andExpect(jsonPath("$[*].filename").isNotEmpty())     
 113 │ 80 │                 .andExpect(jsonPath("$[*].price").isNotEmpty());       
 114 │ 81 │     }                                                                  
 115 │ 82 │                                                                        
 116 │ 83 │     @Test                                                              
 117 │ 84 │     public void f                                                      

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [119:7 - 131:36] (12 lines, 118 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [105:2 - 84:15]

 119 │ 105 │ writeValueAsString(filter))                                            
 120 │ 106 │                         .contentType(MediaType.APPLICATION_JSON_VALUE) 
 121 │ 107 │                         .with(csrf()))                                 
 122 │ 108 │                 .andExpect(status().isOk())                            
 123 │ 109 │                 .andExpect(jsonPath("$[*].id").isNotEmpty())           
 124 │ 110 │                 .andExpect(jsonPath("$[*].perfumeTitle").isNotEmpty()) 
 125 │ 111 │                 .andExpect(jsonPath("$[*].perfumer").isNotEmpty())     
 126 │ 112 │                 .andExpect(jsonPath("$[*].filename").isNotEmpty())     
 127 │ 113 │                 .andExpect(jsonPath("$[*].price").isNotEmpty());       
 128 │ 114 │     }                                                                  
 129 │ 115 │                                                                        
 130 │ 116 │     @Test                                                              
 131 │ 117 │     public void findPerfum                                             

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [147:9 - 160:20] (13 lines, 140 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [118:9 - 84:15]

 147 │ 118 │     filter.setSortByPrice(true);                                       
 148 │ 119 │                                                                        
 149 │ 120 │         mockMvc.perform(post(API_V1_PERFUMES + SEARCH)                 
 150 │ 121 │                         .content(mapper.writeValueAsString(filter))    
 151 │ 122 │                         .contentType(MediaType.APPLICATION_JSON_VALUE) 
 152 │ 123 │                         .with(csrf()))                                 
 153 │ 124 │                 .andExpect(status().isOk())                            
 154 │ 125 │                 .andExpect(jsonPath("$[*].id").isNotEmpty())           
 155 │ 126 │                 .andExpect(jsonPath("$[*].perfumeTitle").isNotEmpty()) 
 156 │ 127 │                 .andExpect(jsonPath("$[*].perfumer").isNotEmpty())     
 157 │ 128 │                 .andExpect(jsonPath("$[*].filename").isNotEmpty())     
 158 │ 129 │                 .andExpect(jsonPath("$[*].price").isNotEmpty());       
 159 │ 130 │     }                                                                  
 160 │ 131 │                                                                        
 161 │ 132 │                                                                        

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [164:14 - 177:15] (13 lines, 129 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [118:7 - 84:15]

 164 │ 118 │ rform(post(API_V1_PERFUMES + SEARCH_GENDER)                            
 165 │ 119 │                         .content(mapper.writeValueAsString(filter))    
 166 │ 120 │                         .contentType(MediaType.APPLICATION_JSON_VALUE) 
 167 │ 121 │                         .with(csrf()))                                 
 168 │ 122 │                 .andExpect(status().isOk())                            
 169 │ 123 │                 .andExpect(jsonPath("$[*].id").isNotEmpty())           
 170 │ 124 │                 .andExpect(jsonPath("$[*].perfumeTitle").isNotEmpty()) 
 171 │ 125 │                 .andExpect(jsonPath("$[*].perfumer").isNotEmpty())     
 172 │ 126 │                 .andExpect(jsonPath("$[*].filename").isNotEmpty())     
 173 │ 127 │                 .andExpect(jsonPath("$[*].price").isNotEmpty());       
 174 │ 128 │     }                                                                  

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [181:16 - 194:16] (13 lines, 129 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [118:7 - 84:15]

 181 │ 118 │ orm(post(API_V1_PERFUMES + SEARCH_PERFUMER)                            
 182 │ 119 │                         .content(mapper.writeValueAsString(filter))    
 183 │ 120 │                         .contentType(MediaType.APPLICATION_JSON_VALUE) 
 184 │ 121 │                         .with(csrf()))                                 
 185 │ 122 │                 .andExpect(status().isOk())                            
 186 │ 123 │                 .andExpect(jsonPath("$[*].id").isNotEmpty())           
 187 │ 124 │                 .andExpect(jsonPath("$[*].perfumeTitle").isNotEmpty()) 
 188 │ 125 │                 .andExpect(jsonPath("$[*].perfumer").isNotEmpty())     
 189 │ 126 │                 .andExpect(jsonPath("$[*].filename").isNotEmpty())     
 190 │ 127 │                 .andExpect(jsonPath("$[*].price").isNotEmpty());       
 191 │ 128 │     }                                                                  
 192 │ 129 │                                                                        

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [204:2 - 211:8] (7 lines, 76 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [75:2 - 81:2]

 204 │ 75 │    .andExpect(jsonPath("$[*]", hasSize(15)))                           
 205 │ 76 │                 .andExpect(jsonPath("$[*].id").isNotEmpty())           
 206 │ 77 │                 .andExpect(jsonPath("$[*].perfumeTitle").isNotEmpty()) 
 207 │ 78 │                 .andExpect(jsonPath("$[*].perfumer").isNotEmpty())     
 208 │ 79 │                 .andExpect(jsonPath("$[*].filename").isNotEmpty())     
 209 │ 80 │                 .andExpect(jsonPath("$[                                

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [212:8 - 219:2] (7 lines, 74 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [197:9 - 204:3]

 212 │ 197 │ me.BRAND);                                                             
 213 │ 198 │         request.setText("Creed");                                      
 214 │ 199 │                                                                        
 215 │ 200 │         mockMvc.perform(post(API_V1_PERFUMES + SEARCH_TEXT)            
 216 │ 201 │                         .content(mapper.writeValueAsString(request))   
 217 │ 202 │                         .contentType(MediaType.APPLICATION_JSON_VALUE) 
 218 │ 203 │                         .with(csrf()))                                 
 219 │ 204 │                 .andExpect(status().isOk())                            
 220 │ 205 │                                                                        

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [219:2 - 226:14] (7 lines, 83 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [204:3 - 211:6]

 219 │ 204 │      .andExpect(jsonPath("$[*]", hasSize(7)))                          
 220 │ 205 │                 .andExpect(jsonPath("$[*].id").isNotEmpty())           
 221 │ 206 │                 .andExpect(jsonPath("$[*].perfumeTitle").isNotEmpty()) 
 222 │ 207 │                 .andExpect(jsonPath("$[*].perfumer").isNotEmpty())     
 223 │ 208 │                 .andExpect(jsonPath("$[*].filename").isNotEmpty())     
 224 │ 209 │                 .andExpect(jsonPath("$[*].price").isNotEmpty());       
 225 │ 210 │                                                                        
 226 │ 211 │         request                                                        

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [227:12 - 234:2] (7 lines, 73 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [197:9 - 204:3]

 227 │ 197 │ ITLE);                                                                 
 228 │ 198 │         request.setText("Chanel N5");                                  
 229 │ 199 │                                                                        
 230 │ 200 │         mockMvc.perform(post(API_V1_PERFUMES + SEARCH_TEXT)            
 231 │ 201 │                         .content(mapper.writeValueAsString(request))   
 232 │ 202 │                         .contentType(MediaType.APPLICATION_JSON_VALUE) 
 233 │ 203 │                         .with(csrf()))                                 
 234 │ 204 │                 .andExpect(status().isOk())                            
 235 │ 205 │                                                                        

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [234:2 - 243:22] (9 lines, 87 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [204:3 - 84:15]

 234 │ 204 │      .andExpect(jsonPath("$[*]", hasSize(1)))                          
 235 │ 205 │                 .andExpect(jsonPath("$[*].id").isNotEmpty())           
 236 │ 206 │                 .andExpect(jsonPath("$[*].perfumeTitle").isNotEmpty()) 
 237 │ 207 │                 .andExpect(jsonPath("$[*].perfumer").isNotEmpty())     
 238 │ 208 │                 .andExpect(jsonPath("$[*].filename").isNotEmpty())     
 239 │ 209 │                 .andExpect(jsonPath("$[*].price").isNotEmpty());       
 240 │ 210 │     }                                                                  
 241 │ 211 │                                                                        
 242 │ 212 │     @                                                                  

Found 10 clones.
ERROR: jscpd found too many duplicates (34.27%) over threshold (0%)
Error: ERROR: jscpd found too many duplicates (34.27%) over threshold (0%)
    at ThresholdReporter.report (/node_modules/@jscpd/finder/dist/reporters/threshold.js:12:19)
    at /node_modules/@jscpd/finder/dist/in-files-detector.js:82:26
    at Array.forEach (<anonymous>)
    at /node_modules/@jscpd/finder/dist/in-files-detector.js:81:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
------[0m
[0m2025-06-16 21:26:15 [0;34m[DEBUG][0m   Error code: 1. Command output:[0m
------
Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [107:2 - 117:27] (10 lines, 99 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [74:23 - 84:15]

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [119:7 - 131:36] (12 lines, 118 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [105:2 - 84:15]

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [147:9 - 160:20] (13 lines, 140 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [118:9 - 84:15]

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [164:14 - 177:15] (13 lines, 129 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [118:7 - 84:15]

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [181:16 - 194:16] (13 lines, 129 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [118:7 - 84:15]

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [204:2 - 211:8] (7 lines, 76 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [75:2 - 81:2]

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [212:8 - 219:2] (7 lines, 74 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [197:9 - 204:3]

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [219:2 - 226:14] (7 lines, 83 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [204:3 - 211:6]

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [227:12 - 234:2] (7 lines, 73 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [197:9 - 204:3]

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [234:2 - 243:22] (9 lines, 87 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [204:3 - 84:15]

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [107:2 - 117:27] (10 lines, 99 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [74:23 - 84:15]

 107 │ 74 │              .with(csrf()))                                            
 108 │ 75 │                 .andExpect(status().isOk())                            
 109 │ 76 │                 .andExpect(jsonPath("$[*].id").isNotEmpty())           
 110 │ 77 │                 .andExpect(jsonPath("$[*].perfumeTitle").isNotEmpty()) 
 111 │ 78 │                 .andExpect(jsonPath("$[*].perfumer").isNotEmpty())     
 112 │ 79 │                 .andExpect(jsonPath("$[*].filename").isNotEmpty())     
 113 │ 80 │                 .andExpect(jsonPath("$[*].price").isNotEmpty());       
 114 │ 81 │     }                                                                  
 115 │ 82 │                                                                        
 116 │ 83 │     @Test                                                              
 117 │ 84 │     public void f                                                      

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [119:7 - 131:36] (12 lines, 118 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [105:2 - 84:15]

 119 │ 105 │ writeValueAsString(filter))                                            
 120 │ 106 │                         .contentType(MediaType.APPLICATION_JSON_VALUE) 
 121 │ 107 │                         .with(csrf()))                                 
 122 │ 108 │                 .andExpect(status().isOk())                            
 123 │ 109 │                 .andExpect(jsonPath("$[*].id").isNotEmpty())           
 124 │ 110 │                 .andExpect(jsonPath("$[*].perfumeTitle").isNotEmpty()) 
 125 │ 111 │                 .andExpect(jsonPath("$[*].perfumer").isNotEmpty())     
 126 │ 112 │                 .andExpect(jsonPath("$[*].filename").isNotEmpty())     
 127 │ 113 │                 .andExpect(jsonPath("$[*].price").isNotEmpty());       
 128 │ 114 │     }                                                                  
 129 │ 115 │                                                                        
 130 │ 116 │     @Test                                                              
 131 │ 117 │     public void findPerfum                                             

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [147:9 - 160:20] (13 lines, 140 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [118:9 - 84:15]

 147 │ 118 │     filter.setSortByPrice(true);                                       
 148 │ 119 │                                                                        
 149 │ 120 │         mockMvc.perform(post(API_V1_PERFUMES + SEARCH)                 
 150 │ 121 │                         .content(mapper.writeValueAsString(filter))    
 151 │ 122 │                         .contentType(MediaType.APPLICATION_JSON_VALUE) 
 152 │ 123 │                         .with(csrf()))                                 
 153 │ 124 │                 .andExpect(status().isOk())                            
 154 │ 125 │                 .andExpect(jsonPath("$[*].id").isNotEmpty())           
 155 │ 126 │                 .andExpect(jsonPath("$[*].perfumeTitle").isNotEmpty()) 
 156 │ 127 │                 .andExpect(jsonPath("$[*].perfumer").isNotEmpty())     
 157 │ 128 │                 .andExpect(jsonPath("$[*].filename").isNotEmpty())     
 158 │ 129 │                 .andExpect(jsonPath("$[*].price").isNotEmpty());       
 159 │ 130 │     }                                                                  
 160 │ 131 │                                                                        
 161 │ 132 │                                                                        

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [164:14 - 177:15] (13 lines, 129 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [118:7 - 84:15]

 164 │ 118 │ rform(post(API_V1_PERFUMES + SEARCH_GENDER)                            
 165 │ 119 │                         .content(mapper.writeValueAsString(filter))    
 166 │ 120 │                         .contentType(MediaType.APPLICATION_JSON_VALUE) 
 167 │ 121 │                         .with(csrf()))                                 
 168 │ 122 │                 .andExpect(status().isOk())                            
 169 │ 123 │                 .andExpect(jsonPath("$[*].id").isNotEmpty())           
 170 │ 124 │                 .andExpect(jsonPath("$[*].perfumeTitle").isNotEmpty()) 
 171 │ 125 │                 .andExpect(jsonPath("$[*].perfumer").isNotEmpty())     
 172 │ 126 │                 .andExpect(jsonPath("$[*].filename").isNotEmpty())     
 173 │ 127 │                 .andExpect(jsonPath("$[*].price").isNotEmpty());       
 174 │ 128 │     }                                                                  

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [181:16 - 194:16] (13 lines, 129 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [118:7 - 84:15]

 181 │ 118 │ orm(post(API_V1_PERFUMES + SEARCH_PERFUMER)                            
 182 │ 119 │                         .content(mapper.writeValueAsString(filter))    
 183 │ 120 │                         .contentType(MediaType.APPLICATION_JSON_VALUE) 
 184 │ 121 │                         .with(csrf()))                                 
 185 │ 122 │                 .andExpect(status().isOk())                            
 186 │ 123 │                 .andExpect(jsonPath("$[*].id").isNotEmpty())           
 187 │ 124 │                 .andExpect(jsonPath("$[*].perfumeTitle").isNotEmpty()) 
 188 │ 125 │                 .andExpect(jsonPath("$[*].perfumer").isNotEmpty())     
 189 │ 126 │                 .andExpect(jsonPath("$[*].filename").isNotEmpty())     
 190 │ 127 │                 .andExpect(jsonPath("$[*].price").isNotEmpty());       
 191 │ 128 │     }                                                                  
 192 │ 129 │                                                                        

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [204:2 - 211:8] (7 lines, 76 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [75:2 - 81:2]

 204 │ 75 │    .andExpect(jsonPath("$[*]", hasSize(15)))                           
 205 │ 76 │                 .andExpect(jsonPath("$[*].id").isNotEmpty())           
 206 │ 77 │                 .andExpect(jsonPath("$[*].perfumeTitle").isNotEmpty()) 
 207 │ 78 │                 .andExpect(jsonPath("$[*].perfumer").isNotEmpty())     
 208 │ 79 │                 .andExpect(jsonPath("$[*].filename").isNotEmpty())     
 209 │ 80 │                 .andExpect(jsonPath("$[                                

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [212:8 - 219:2] (7 lines, 74 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [197:9 - 204:3]

 212 │ 197 │ me.BRAND);                                                             
 213 │ 198 │         request.setText("Creed");                                      
 214 │ 199 │                                                                        
 215 │ 200 │         mockMvc.perform(post(API_V1_PERFUMES + SEARCH_TEXT)            
 216 │ 201 │                         .content(mapper.writeValueAsString(request))   
 217 │ 202 │                         .contentType(MediaType.APPLICATION_JSON_VALUE) 
 218 │ 203 │                         .with(csrf()))                                 
 219 │ 204 │                 .andExpect(status().isOk())                            
 220 │ 205 │                                                                        

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [219:2 - 226:14] (7 lines, 83 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [204:3 - 211:6]

 219 │ 204 │      .andExpect(jsonPath("$[*]", hasSize(7)))                          
 220 │ 205 │                 .andExpect(jsonPath("$[*].id").isNotEmpty())           
 221 │ 206 │                 .andExpect(jsonPath("$[*].perfumeTitle").isNotEmpty()) 
 222 │ 207 │                 .andExpect(jsonPath("$[*].perfumer").isNotEmpty())     
 223 │ 208 │                 .andExpect(jsonPath("$[*].filename").isNotEmpty())     
 224 │ 209 │                 .andExpect(jsonPath("$[*].price").isNotEmpty());       
 225 │ 210 │                                                                        
 226 │ 211 │         request                                                        

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [227:12 - 234:2] (7 lines, 73 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [197:9 - 204:3]

 227 │ 197 │ ITLE);                                                                 
 228 │ 198 │         request.setText("Chanel N5");                                  
 229 │ 199 │                                                                        
 230 │ 200 │         mockMvc.perform(post(API_V1_PERFUMES + SEARCH_TEXT)            
 231 │ 201 │                         .content(mapper.writeValueAsString(request))   
 232 │ 202 │                         .contentType(MediaType.APPLICATION_JSON_VALUE) 
 233 │ 203 │                         .with(csrf()))                                 
 234 │ 204 │                 .andExpect(status().isOk())                            
 235 │ 205 │                                                                        

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [234:2 - 243:22] (9 lines, 87 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/PerfumeControllerTest.java [204:3 - 84:15]

 234 │ 204 │      .andExpect(jsonPath("$[*]", hasSize(1)))                          
 235 │ 205 │                 .andExpect(jsonPath("$[*].id").isNotEmpty())           
 236 │ 206 │                 .andExpect(jsonPath("$[*].perfumeTitle").isNotEmpty()) 
 237 │ 207 │                 .andExpect(jsonPath("$[*].perfumer").isNotEmpty())     
 238 │ 208 │                 .andExpect(jsonPath("$[*].filename").isNotEmpty())     
 239 │ 209 │                 .andExpect(jsonPath("$[*].price").isNotEmpty());       
 240 │ 210 │     }                                                                  
 241 │ 211 │                                                                        
 242 │ 212 │     @                                                                  

Found 10 clones.
ERROR: jscpd found too many duplicates (34.27%) over threshold (0%)
Error: ERROR: jscpd found too many duplicates (34.27%) over threshold (0%)
    at ThresholdReporter.report (/node_modules/@jscpd/finder/dist/reporters/threshold.js:12:19)
    at /node_modules/@jscpd/finder/dist/in-files-detector.js:82:26
    at Array.forEach (<anonymous>)
    at /node_modules/@jscpd/finder/dist/in-files-detector.js:81:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
------[0m
[0m2025-06-16 21:26:15 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java[0m
[0m2025-06-16 21:26:15 [0;34m[DEBUG][0m   FILE_STATUS (RegistrationControllerTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:15 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java, FILE_NAME: RegistrationControllerTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:15 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:15 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:15 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java][0m
[0m2025-06-16 21:26:15 [0;34m[DEBUG][0m   Found errors. Error code: 1, File type: JSCPD, Error on missing exec bit: false[0m
[0m2025-06-16 21:26:15 [0;31m[ERROR][0m   Found errors in [jscpd] linter![0m
[0m2025-06-16 21:26:15 [0;31m[ERROR][0m   Error code: 1. Command output:[0m
------
Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java [70:11 - 77:18] (7 lines, 64 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java [58:3 - 65:19]

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java [88:8 - 95:15] (7 lines, 64 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java [58:3 - 65:19]

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java [100:5 - 107:17] (7 lines, 64 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java [58:3 - 65:19]

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java [70:11 - 77:18] (7 lines, 64 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java [58:3 - 65:19]

 70 │ 58 │ );                                                                               
 71 │ 59 │                                                                                  
 72 │ 60 │         mockMvc.perform(post(API_V1_REGISTRATION)                                
 73 │ 61 │                         .content(mapper.writeValueAsString(registrationRequest)) 
 74 │ 62 │                         .contentType(MediaType.APPLICATION_JSON_VALUE)           
 75 │ 63 │                         .with(csrf()))                                           
 76 │ 64 │                 .andExpect(status().isBadRequest())                              
 77 │ 65 │                 .andExpect(jsonPath("$.passwordError"                            

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java [88:8 - 95:15] (7 lines, 64 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java [58:3 - 65:19]

 88 │ 58 │ );                                                                               
 89 │ 59 │                                                                                  
 90 │ 60 │         mockMvc.perform(post(API_V1_REGISTRATION)                                
 91 │ 61 │                         .content(mapper.writeValueAsString(registrationRequest)) 
 92 │ 62 │                         .contentType(MediaType.APPLICATION_JSON_VALUE)           
 93 │ 63 │                         .with(csrf()))                                           
 94 │ 64 │                 .andExpect(status().isBadRequest())                              
 95 │ 65 │                 .andExpect(jsonPath("$.emailError"                               

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java [100:5 - 107:17] (7 lines, 64 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java [58:3 - 65:19]

 100 │ 58 │ );                                                                               
 101 │ 59 │                                                                                  
 102 │ 60 │         mockMvc.perform(post(API_V1_REGISTRATION)                                
 103 │ 61 │                         .content(mapper.writeValueAsString(registrationRequest)) 
 104 │ 62 │                         .contentType(MediaType.APPLICATION_JSON_VALUE)           
 105 │ 63 │                         .with(csrf()))                                           
 106 │ 64 │                 .andExpect(status().isBadRequest())                              
 107 │ 65 │                 .andExpect(jsonPath("$.captchaError"                             

Found 3 clones.
ERROR: jscpd found too many duplicates (15.56%) over threshold (0%)
Error: ERROR: jscpd found too many duplicates (15.56%) over threshold (0%)
    at ThresholdReporter.report (/node_modules/@jscpd/finder/dist/reporters/threshold.js:12:19)
    at /node_modules/@jscpd/finder/dist/in-files-detector.js:82:26
    at Array.forEach (<anonymous>)
    at /node_modules/@jscpd/finder/dist/in-files-detector.js:81:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
------[0m
[0m2025-06-16 21:26:15 [0;34m[DEBUG][0m   Error code: 1. Command output:[0m
------
Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java [70:11 - 77:18] (7 lines, 64 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java [58:3 - 65:19]

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java [88:8 - 95:15] (7 lines, 64 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java [58:3 - 65:19]

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java [100:5 - 107:17] (7 lines, 64 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java [58:3 - 65:19]

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java [70:11 - 77:18] (7 lines, 64 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java [58:3 - 65:19]

 70 │ 58 │ );                                                                               
 71 │ 59 │                                                                                  
 72 │ 60 │         mockMvc.perform(post(API_V1_REGISTRATION)                                
 73 │ 61 │                         .content(mapper.writeValueAsString(registrationRequest)) 
 74 │ 62 │                         .contentType(MediaType.APPLICATION_JSON_VALUE)           
 75 │ 63 │                         .with(csrf()))                                           
 76 │ 64 │                 .andExpect(status().isBadRequest())                              
 77 │ 65 │                 .andExpect(jsonPath("$.passwordError"                            

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java [88:8 - 95:15] (7 lines, 64 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java [58:3 - 65:19]

 88 │ 58 │ );                                                                               
 89 │ 59 │                                                                                  
 90 │ 60 │         mockMvc.perform(post(API_V1_REGISTRATION)                                
 91 │ 61 │                         .content(mapper.writeValueAsString(registrationRequest)) 
 92 │ 62 │                         .contentType(MediaType.APPLICATION_JSON_VALUE)           
 93 │ 63 │                         .with(csrf()))                                           
 94 │ 64 │                 .andExpect(status().isBadRequest())                              
 95 │ 65 │                 .andExpect(jsonPath("$.emailError"                               

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java [100:5 - 107:17] (7 lines, 64 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/RegistrationControllerTest.java [58:3 - 65:19]

 100 │ 58 │ );                                                                               
 101 │ 59 │                                                                                  
 102 │ 60 │         mockMvc.perform(post(API_V1_REGISTRATION)                                
 103 │ 61 │                         .content(mapper.writeValueAsString(registrationRequest)) 
 104 │ 62 │                         .contentType(MediaType.APPLICATION_JSON_VALUE)           
 105 │ 63 │                         .with(csrf()))                                           
 106 │ 64 │                 .andExpect(status().isBadRequest())                              
 107 │ 65 │                 .andExpect(jsonPath("$.captchaError"                             

Found 3 clones.
ERROR: jscpd found too many duplicates (15.56%) over threshold (0%)
Error: ERROR: jscpd found too many duplicates (15.56%) over threshold (0%)
    at ThresholdReporter.report (/node_modules/@jscpd/finder/dist/reporters/threshold.js:12:19)
    at /node_modules/@jscpd/finder/dist/in-files-detector.js:82:26
    at Array.forEach (<anonymous>)
    at /node_modules/@jscpd/finder/dist/in-files-detector.js:81:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
------[0m
[0m2025-06-16 21:26:15 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java[0m
[0m2025-06-16 21:26:15 [0;34m[DEBUG][0m   FILE_STATUS (ReviewControllerTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:15 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java, FILE_NAME: ReviewControllerTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:15 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:15 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:15 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java][0m
[0m2025-06-16 21:26:16 [0;34m[DEBUG][0m   Found errors. Error code: 1, File type: JSCPD, Error on missing exec bit: false[0m
[0m2025-06-16 21:26:16 [0;31m[ERROR][0m   Found errors in [jscpd] linter![0m
[0m2025-06-16 21:26:16 [0;31m[ERROR][0m   Error code: 1. Command output:[0m
------
Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java [77:4 - 86:11] (9 lines, 81 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java [58:2 - 67:5]

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java [77:4 - 86:11] (9 lines, 81 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java [58:2 - 67:5]

 77 │ 58 │ L);                                                                        
 78 │ 59 │         reviewRequest.setAuthor(FIRST_NAME);                               
 79 │ 60 │         reviewRequest.setMessage("Hello world");                           
 80 │ 61 │         reviewRequest.setRating(5);                                        
 81 │ 62 │                                                                            
 82 │ 63 │         mockMvc.perform(post(API_V1_REVIEW)                                
 83 │ 64 │                         .content(mapper.writeValueAsString(reviewRequest)) 
 84 │ 65 │                         .contentType(MediaType.APPLICATION_JSON_VALUE)     
 85 │ 66 │                         .with(csrf()))                                     
 86 │ 67 │                 .andExpect(status().isNotFound                             

Found 1 clones.
ERROR: jscpd found too many duplicates (8.91%) over threshold (0%)
Error: ERROR: jscpd found too many duplicates (8.91%) over threshold (0%)
    at ThresholdReporter.report (/node_modules/@jscpd/finder/dist/reporters/threshold.js:12:19)
    at /node_modules/@jscpd/finder/dist/in-files-detector.js:82:26
    at Array.forEach (<anonymous>)
    at /node_modules/@jscpd/finder/dist/in-files-detector.js:81:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
------[0m
[0m2025-06-16 21:26:16 [0;34m[DEBUG][0m   Error code: 1. Command output:[0m
------
Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java [77:4 - 86:11] (9 lines, 81 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java [58:2 - 67:5]

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java [77:4 - 86:11] (9 lines, 81 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/ReviewControllerTest.java [58:2 - 67:5]

 77 │ 58 │ L);                                                                        
 78 │ 59 │         reviewRequest.setAuthor(FIRST_NAME);                               
 79 │ 60 │         reviewRequest.setMessage("Hello world");                           
 80 │ 61 │         reviewRequest.setRating(5);                                        
 81 │ 62 │                                                                            
 82 │ 63 │         mockMvc.perform(post(API_V1_REVIEW)                                
 83 │ 64 │                         .content(mapper.writeValueAsString(reviewRequest)) 
 84 │ 65 │                         .contentType(MediaType.APPLICATION_JSON_VALUE)     
 85 │ 66 │                         .with(csrf()))                                     
 86 │ 67 │                 .andExpect(status().isNotFound                             

Found 1 clones.
ERROR: jscpd found too many duplicates (8.91%) over threshold (0%)
Error: ERROR: jscpd found too many duplicates (8.91%) over threshold (0%)
    at ThresholdReporter.report (/node_modules/@jscpd/finder/dist/reporters/threshold.js:12:19)
    at /node_modules/@jscpd/finder/dist/in-files-detector.js:82:26
    at Array.forEach (<anonymous>)
    at /node_modules/@jscpd/finder/dist/in-files-detector.js:81:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
------[0m
[0m2025-06-16 21:26:16 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java[0m
[0m2025-06-16 21:26:16 [0;34m[DEBUG][0m   FILE_STATUS (UserControllerTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:16 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java, FILE_NAME: UserControllerTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:16 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:16 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:16 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/controller/UserControllerTest.java][0m
[0m2025-06-16 21:26:16 [0;34m[INFO][0m    - File:[0;37m[UserControllerTest.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:26:16 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 48.4ms
------[0m
[0m2025-06-16 21:26:16 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 48.4ms
------[0m
[0m2025-06-16 21:26:16 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java[0m
[0m2025-06-16 21:26:16 [0;34m[DEBUG][0m   FILE_STATUS (OrderItemTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:16 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java, FILE_NAME: OrderItemTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:16 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:16 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:16 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderItemTest.java][0m
[0m2025-06-16 21:26:17 [0;34m[INFO][0m    - File:[0;37m[OrderItemTest.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:26:17 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 23.731ms
------[0m
[0m2025-06-16 21:26:17 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 23.731ms
------[0m
[0m2025-06-16 21:26:17 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java[0m
[0m2025-06-16 21:26:17 [0;34m[DEBUG][0m   FILE_STATUS (OrderTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:17 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java, FILE_NAME: OrderTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:17 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:17 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:17 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/OrderTest.java][0m
[0m2025-06-16 21:26:17 [0;34m[INFO][0m    - File:[0;37m[OrderTest.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:26:17 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 48.953ms
------[0m
[0m2025-06-16 21:26:17 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 48.953ms
------[0m
[0m2025-06-16 21:26:17 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java[0m
[0m2025-06-16 21:26:17 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:17 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java, FILE_NAME: PerfumeTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:17 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:17 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:17 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/PerfumeTest.java][0m
[0m2025-06-16 21:26:18 [0;34m[INFO][0m    - File:[0;37m[PerfumeTest.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:26:18 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 37.398ms
------[0m
[0m2025-06-16 21:26:18 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 37.398ms
------[0m
[0m2025-06-16 21:26:18 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java[0m
[0m2025-06-16 21:26:18 [0;34m[DEBUG][0m   FILE_STATUS (ReviewTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:18 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java, FILE_NAME: ReviewTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:18 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:18 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:18 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/ReviewTest.java][0m
[0m2025-06-16 21:26:18 [0;34m[INFO][0m    - File:[0;37m[ReviewTest.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:26:18 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 27.33ms
------[0m
[0m2025-06-16 21:26:18 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 27.33ms
------[0m
[0m2025-06-16 21:26:18 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java[0m
[0m2025-06-16 21:26:18 [0;34m[DEBUG][0m   FILE_STATUS (UserTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:18 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java, FILE_NAME: UserTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:18 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:18 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:18 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/domain/UserTest.java][0m
[0m2025-06-16 21:26:19 [0;34m[INFO][0m    - File:[0;37m[UserTest.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:26:19 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 28.989ms
------[0m
[0m2025-06-16 21:26:19 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 28.989ms
------[0m
[0m2025-06-16 21:26:19 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapperTest.java[0m
[0m2025-06-16 21:26:19 [0;34m[DEBUG][0m   FILE_STATUS (OrderMapperTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:19 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapperTest.java, FILE_NAME: OrderMapperTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:19 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:19 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:19 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/OrderMapperTest.java][0m
[0m2025-06-16 21:26:19 [0;34m[INFO][0m    - File:[0;37m[OrderMapperTest.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:26:19 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 28.154ms
------[0m
[0m2025-06-16 21:26:19 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 28.154ms
------[0m
[0m2025-06-16 21:26:19 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java[0m
[0m2025-06-16 21:26:19 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeMapperTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:19 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java, FILE_NAME: PerfumeMapperTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:19 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:19 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:19 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapperTest.java][0m
[0m2025-06-16 21:26:20 [0;34m[INFO][0m    - File:[0;37m[PerfumeMapperTest.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:26:20 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 39.373ms
------[0m
[0m2025-06-16 21:26:20 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 39.373ms
------[0m
[0m2025-06-16 21:26:20 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapperTest.java[0m
[0m2025-06-16 21:26:20 [0;34m[DEBUG][0m   FILE_STATUS (UserMapperTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:20 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapperTest.java, FILE_NAME: UserMapperTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:20 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:20 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:20 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/mapper/UserMapperTest.java][0m
[0m2025-06-16 21:26:20 [0;34m[INFO][0m    - File:[0;37m[UserMapperTest.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:26:20 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 25.281ms
------[0m
[0m2025-06-16 21:26:20 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 25.281ms
------[0m
[0m2025-06-16 21:26:20 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java[0m
[0m2025-06-16 21:26:20 [0;34m[DEBUG][0m   FILE_STATUS (AuthenticationServiceImplTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:20 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java, FILE_NAME: AuthenticationServiceImplTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:20 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:20 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:20 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java][0m
[0m2025-06-16 21:26:21 [0;34m[DEBUG][0m   Found errors. Error code: 1, File type: JSCPD, Error on missing exec bit: false[0m
[0m2025-06-16 21:26:21 [0;31m[ERROR][0m   Found errors in [jscpd] linter![0m
[0m2025-06-16 21:26:21 [0;31m[ERROR][0m   Error code: 1. Command output:[0m
------
Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java [142:11 - 150:9] (8 lines, 80 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java [114:9 - 122:7]

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java [189:16 - 197:5] (8 lines, 86 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java [107:24 - 114:15]

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java [142:11 - 150:9] (8 lines, 80 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java [114:9 - 122:7]

 142 │ 114 │ = OAuth2UserFactory.getOAuth2UserInfo("facebook", attributes); 
 143 │ 115 │                                                                
 144 │ 116 │         User user = new User();                                
 145 │ 117 │         user.setEmail(USER_EMAIL);                             
 146 │ 118 │         user.setFirstName(FIRST_NAME);                         
 147 │ 119 │         user.setLastName(LAST_NAME);                           
 148 │ 120 │         user.setActive(true);                                  
 149 │ 121 │         user.setRoles(Collections.singleton(Role.USER))        

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java [189:16 - 197:5] (8 lines, 86 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java [107:24 - 114:15]

 189 │ 107 │ 1)).save(user);                                           
 190 │ 108 │     }                                                     
 191 │ 109 │                                                           
 192 │ 110 │     @Test                                                 
 193 │ 111 │     public void updateOauthUser() {                       
 194 │ 112 │         Map<String, Object> attributes = new HashMap<>(); 
 195 │ 113 │         attributes.put("sub", 123456);                    
 196 │ 114 │         attributes.put("given_name", FIRST_NAME);         
 197 │ 115 │         attributes.put("family_name", LAST_NAME);         
 198 │ 116 │         attributes.put("email", USER_EMAIL);              
 199 │ 117 │         Goo                                               

Found 2 clones.
ERROR: jscpd found too many duplicates (6.02%) over threshold (0%)
Error: ERROR: jscpd found too many duplicates (6.02%) over threshold (0%)
    at ThresholdReporter.report (/node_modules/@jscpd/finder/dist/reporters/threshold.js:12:19)
    at /node_modules/@jscpd/finder/dist/in-files-detector.js:82:26
    at Array.forEach (<anonymous>)
    at /node_modules/@jscpd/finder/dist/in-files-detector.js:81:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
------[0m
[0m2025-06-16 21:26:21 [0;34m[DEBUG][0m   Error code: 1. Command output:[0m
------
Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java [142:11 - 150:9] (8 lines, 80 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java [114:9 - 122:7]

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java [189:16 - 197:5] (8 lines, 86 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java [107:24 - 114:15]

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java [142:11 - 150:9] (8 lines, 80 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java [114:9 - 122:7]

 142 │ 114 │ = OAuth2UserFactory.getOAuth2UserInfo("facebook", attributes); 
 143 │ 115 │                                                                
 144 │ 116 │         User user = new User();                                
 145 │ 117 │         user.setEmail(USER_EMAIL);                             
 146 │ 118 │         user.setFirstName(FIRST_NAME);                         
 147 │ 119 │         user.setLastName(LAST_NAME);                           
 148 │ 120 │         user.setActive(true);                                  
 149 │ 121 │         user.setRoles(Collections.singleton(Role.USER))        

Clone found (java):
 - /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java [189:16 - 197:5] (8 lines, 86 tokens)
   /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/AuthenticationServiceImplTest.java [107:24 - 114:15]

 189 │ 107 │ 1)).save(user);                                           
 190 │ 108 │     }                                                     
 191 │ 109 │                                                           
 192 │ 110 │     @Test                                                 
 193 │ 111 │     public void updateOauthUser() {                       
 194 │ 112 │         Map<String, Object> attributes = new HashMap<>(); 
 195 │ 113 │         attributes.put("sub", 123456);                    
 196 │ 114 │         attributes.put("given_name", FIRST_NAME);         
 197 │ 115 │         attributes.put("family_name", LAST_NAME);         
 198 │ 116 │         attributes.put("email", USER_EMAIL);              
 199 │ 117 │         Goo                                               

Found 2 clones.
ERROR: jscpd found too many duplicates (6.02%) over threshold (0%)
Error: ERROR: jscpd found too many duplicates (6.02%) over threshold (0%)
    at ThresholdReporter.report (/node_modules/@jscpd/finder/dist/reporters/threshold.js:12:19)
    at /node_modules/@jscpd/finder/dist/in-files-detector.js:82:26
    at Array.forEach (<anonymous>)
    at /node_modules/@jscpd/finder/dist/in-files-detector.js:81:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
------[0m
[0m2025-06-16 21:26:21 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java[0m
[0m2025-06-16 21:26:21 [0;34m[DEBUG][0m   FILE_STATUS (OrderServiceImplTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:21 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java, FILE_NAME: OrderServiceImplTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:21 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:21 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:21 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/OrderServiceImplTest.java][0m
[0m2025-06-16 21:26:22 [0;34m[INFO][0m    - File:[0;37m[OrderServiceImplTest.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:26:22 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 48.462ms
------[0m
[0m2025-06-16 21:26:22 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 48.462ms
------[0m
[0m2025-06-16 21:26:22 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java[0m
[0m2025-06-16 21:26:22 [0;34m[DEBUG][0m   FILE_STATUS (PerfumeServiceImplTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:22 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java, FILE_NAME: PerfumeServiceImplTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:22 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:22 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:22 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImplTest.java][0m
[0m2025-06-16 21:26:22 [0;34m[INFO][0m    - File:[0;37m[PerfumeServiceImplTest.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:26:22 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 47.326ms
------[0m
[0m2025-06-16 21:26:22 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 47.326ms
------[0m
[0m2025-06-16 21:26:22 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java[0m
[0m2025-06-16 21:26:22 [0;34m[DEBUG][0m   FILE_STATUS (ReviewServiceImplTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:22 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java, FILE_NAME: ReviewServiceImplTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:22 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:22 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:22 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/ReviewServiceImplTest.java][0m
[0m2025-06-16 21:26:23 [0;34m[INFO][0m    - File:[0;37m[ReviewServiceImplTest.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:26:23 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 22.349ms
------[0m
[0m2025-06-16 21:26:23 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 22.349ms
------[0m
[0m2025-06-16 21:26:23 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java[0m
[0m2025-06-16 21:26:23 [0;34m[DEBUG][0m   FILE_STATUS (UserServiceImlTest.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:23 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java, FILE_NAME: UserServiceImlTest.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:23 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:23 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:23 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/service/Impl/UserServiceImlTest.java][0m
[0m2025-06-16 21:26:23 [0;34m[INFO][0m    - File:[0;37m[UserServiceImlTest.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:26:23 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 43.802ms
------[0m
[0m2025-06-16 21:26:23 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 43.802ms
------[0m
[0m2025-06-16 21:26:23 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java[0m
[0m2025-06-16 21:26:23 [0;34m[DEBUG][0m   FILE_STATUS (TestConstants.java) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:23 [0;34m[DEBUG][0m   File: /github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java, FILE_NAME: TestConstants.java, DIR_NAME:/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:23 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:23 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:23 [0;34m[INFO][0m   File:[/github/workspace/src/test/java/com/gmail/merikbest2015/ecommerce/util/TestConstants.java][0m
[0m2025-06-16 21:26:24 [0;34m[INFO][0m    - File:[0;37m[TestConstants.java][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:26:24 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 20.469ms
------[0m
[0m2025-06-16 21:26:24 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 20.469ms
------[0m
[0m2025-06-16 21:26:24 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/resources/application-test.properties[0m
[0m2025-06-16 21:26:24 [0;34m[DEBUG][0m   FILE_STATUS (application-test.properties) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:24 [0;34m[DEBUG][0m   File: /github/workspace/src/test/resources/application-test.properties, FILE_NAME: application-test.properties, DIR_NAME:/github/workspace/src/test/resources, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:24 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:24 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:24 [0;34m[INFO][0m   File:[/github/workspace/src/test/resources/application-test.properties][0m
[0m2025-06-16 21:26:24 [0;34m[INFO][0m    - File:[0;37m[application-test.properties][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:26:24 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 8.407ms
------[0m
[0m2025-06-16 21:26:24 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 8.407ms
------[0m
[0m2025-06-16 21:26:24 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/resources/empty.jpg[0m
[0m2025-06-16 21:26:24 [0;34m[DEBUG][0m   FILE_STATUS (empty.jpg) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:24 [0;34m[DEBUG][0m   File: /github/workspace/src/test/resources/empty.jpg, FILE_NAME: empty.jpg, DIR_NAME:/github/workspace/src/test/resources, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:24 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:24 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:24 [0;34m[INFO][0m   File:[/github/workspace/src/test/resources/empty.jpg][0m
[0m2025-06-16 21:26:24 [0;34m[INFO][0m    - File:[0;37m[empty.jpg][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:26:24 [0;34m[INFO][0m      - Command output:[0m
------
Detection time:: 0.76ms
------[0m
[0m2025-06-16 21:26:24 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Detection time:: 0.76ms
------[0m
[0m2025-06-16 21:26:24 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/resources/sql/create-orders-after.sql[0m
[0m2025-06-16 21:26:24 [0;34m[DEBUG][0m   FILE_STATUS (create-orders-after.sql) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:24 [0;34m[DEBUG][0m   File: /github/workspace/src/test/resources/sql/create-orders-after.sql, FILE_NAME: create-orders-after.sql, DIR_NAME:/github/workspace/src/test/resources/sql, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:24 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:24 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:24 [0;34m[INFO][0m   File:[/github/workspace/src/test/resources/sql/create-orders-after.sql][0m
[0m2025-06-16 21:26:25 [0;34m[INFO][0m    - File:[0;37m[create-orders-after.sql][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:26:25 [0;34m[INFO][0m      - Command output:[0m
------
Detection time:: 0.852ms
------[0m
[0m2025-06-16 21:26:25 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Detection time:: 0.852ms
------[0m
[0m2025-06-16 21:26:25 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/resources/sql/create-orders-before.sql[0m
[0m2025-06-16 21:26:25 [0;34m[DEBUG][0m   FILE_STATUS (create-orders-before.sql) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:25 [0;34m[DEBUG][0m   File: /github/workspace/src/test/resources/sql/create-orders-before.sql, FILE_NAME: create-orders-before.sql, DIR_NAME:/github/workspace/src/test/resources/sql, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:25 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:25 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:25 [0;34m[INFO][0m   File:[/github/workspace/src/test/resources/sql/create-orders-before.sql][0m
[0m2025-06-16 21:26:25 [0;34m[INFO][0m    - File:[0;37m[create-orders-before.sql][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:26:25 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 18.662ms
------[0m
[0m2025-06-16 21:26:25 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 18.662ms
------[0m
[0m2025-06-16 21:26:25 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/resources/sql/create-perfumes-after.sql[0m
[0m2025-06-16 21:26:25 [0;34m[DEBUG][0m   FILE_STATUS (create-perfumes-after.sql) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:25 [0;34m[DEBUG][0m   File: /github/workspace/src/test/resources/sql/create-perfumes-after.sql, FILE_NAME: create-perfumes-after.sql, DIR_NAME:/github/workspace/src/test/resources/sql, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:25 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:25 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:25 [0;34m[INFO][0m   File:[/github/workspace/src/test/resources/sql/create-perfumes-after.sql][0m
[0m2025-06-16 21:26:26 [0;34m[INFO][0m    - File:[0;37m[create-perfumes-after.sql][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:26:26 [0;34m[INFO][0m      - Command output:[0m
------
Detection time:: 0.777ms
------[0m
[0m2025-06-16 21:26:26 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Detection time:: 0.777ms
------[0m
[0m2025-06-16 21:26:26 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/resources/sql/create-perfumes-before.sql[0m
[0m2025-06-16 21:26:26 [0;34m[DEBUG][0m   FILE_STATUS (create-perfumes-before.sql) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:26 [0;34m[DEBUG][0m   File: /github/workspace/src/test/resources/sql/create-perfumes-before.sql, FILE_NAME: create-perfumes-before.sql, DIR_NAME:/github/workspace/src/test/resources/sql, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:26 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:26 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:26 [0;34m[INFO][0m   File:[/github/workspace/src/test/resources/sql/create-perfumes-before.sql][0m
[0m2025-06-16 21:26:26 [0;34m[INFO][0m    - File:[0;37m[create-perfumes-before.sql][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:26:26 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 93.281ms
------[0m
[0m2025-06-16 21:26:26 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 93.281ms
------[0m
[0m2025-06-16 21:26:26 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/resources/sql/create-user-after.sql[0m
[0m2025-06-16 21:26:26 [0;34m[DEBUG][0m   FILE_STATUS (create-user-after.sql) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:26 [0;34m[DEBUG][0m   File: /github/workspace/src/test/resources/sql/create-user-after.sql, FILE_NAME: create-user-after.sql, DIR_NAME:/github/workspace/src/test/resources/sql, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:26 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:26 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:26 [0;34m[INFO][0m   File:[/github/workspace/src/test/resources/sql/create-user-after.sql][0m
[0m2025-06-16 21:26:27 [0;34m[INFO][0m    - File:[0;37m[create-user-after.sql][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:26:27 [0;34m[INFO][0m      - Command output:[0m
------
Detection time:: 0.884ms
------[0m
[0m2025-06-16 21:26:27 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Detection time:: 0.884ms
------[0m
[0m2025-06-16 21:26:27 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/resources/sql/create-user-before.sql[0m
[0m2025-06-16 21:26:27 [0;34m[DEBUG][0m   FILE_STATUS (create-user-before.sql) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:27 [0;34m[DEBUG][0m   File: /github/workspace/src/test/resources/sql/create-user-before.sql, FILE_NAME: create-user-before.sql, DIR_NAME:/github/workspace/src/test/resources/sql, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: jscpd, TEST_CASE_DIRECTORY: .automation/test/jscpd[0m
[0m2025-06-16 21:26:27 [0;34m[DEBUG][0m   JSCPD expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/jscpd/[0m
[0m2025-06-16 21:26:27 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:27 [0;34m[INFO][0m   File:[/github/workspace/src/test/resources/sql/create-user-before.sql][0m
[0m2025-06-16 21:26:27 [0;34m[INFO][0m    - File:[0;37m[create-user-before.sql][0;34m was linted with [0;37m[jscpd][0;34m successfully[0m
[0m2025-06-16 21:26:27 [0;34m[INFO][0m      - Command output:[0m
------
Found 0 clones.
Detection time:: 21.73ms
------[0m
[0m2025-06-16 21:26:27 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
Found 0 clones.
Detection time:: 21.73ms
------[0m
[0m2025-06-16 21:26:27 [0;34m[DEBUG][0m   Running linter for the JSON language...[0m
[0m2025-06-16 21:26:27 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_JSON...[0m
[0m2025-06-16 21:26:27 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:26:27 [0;34m[DEBUG][0m   Setting LINTER_NAME to eslint...[0m
[0m2025-06-16 21:26:27 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to eslint --no-eslintrc -c /action/lib/.automation/.eslintrc.yml --ext .json...[0m
[0m2025-06-16 21:26:27 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_JSON...[0m
[0m2025-06-16 21:26:27 [0;34m[DEBUG][0m   FILE_ARRAY_JSON file array contents: [0m
[0m2025-06-16 21:26:27 [0;34m[DEBUG][0m   Invoking eslint linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:26:27 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[JSON][0m
[0m2025-06-16 21:26:27 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:26:27 [0;34m[DEBUG][0m   Running linter for the JSONC language...[0m
[0m2025-06-16 21:26:27 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_JSONC...[0m
[0m2025-06-16 21:26:27 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:26:27 [0;34m[DEBUG][0m   Setting LINTER_NAME to eslint...[0m
[0m2025-06-16 21:26:27 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to eslint --no-eslintrc -c /action/lib/.automation/.eslintrc.yml --ext .json5,.jsonc...[0m
[0m2025-06-16 21:26:27 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_JSONC...[0m
[0m2025-06-16 21:26:27 [0;34m[DEBUG][0m   FILE_ARRAY_JSONC file array contents: [0m
[0m2025-06-16 21:26:27 [0;34m[DEBUG][0m   Invoking eslint linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:26:27 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[JSONC][0m
[0m2025-06-16 21:26:27 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:26:27 [0;34m[DEBUG][0m   Running linter for the JSX language...[0m
[0m2025-06-16 21:26:27 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_JSX...[0m
[0m2025-06-16 21:26:27 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:26:27 [0;34m[DEBUG][0m   Setting LINTER_NAME to eslint...[0m
[0m2025-06-16 21:26:27 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to eslint --no-eslintrc -c /action/lib/.automation/.eslintrc.yml...[0m
[0m2025-06-16 21:26:27 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_JSX...[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   FILE_ARRAY_JSX file array contents: [0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Invoking eslint linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[JSX][0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Running linter for the KUBERNETES_KUBEVAL language...[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_KUBERNETES_KUBEVAL...[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Setting LINTER_NAME to kubeval...[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to kubeval --strict...[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_KUBERNETES_KUBEVAL...[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   FILE_ARRAY_KUBERNETES_KUBEVAL file array contents: [0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Invoking kubeval linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[KUBERNETES_KUBEVAL][0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Running linter for the KOTLIN language...[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_KOTLIN...[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Setting LINTER_NAME to ktlint...[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to ktlint...[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_KOTLIN...[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   FILE_ARRAY_KOTLIN file array contents: [0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Invoking ktlint linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[KOTLIN][0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Running linter for the KOTLIN_ANDROID language...[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_KOTLIN_ANDROID...[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Setting LINTER_NAME to ktlint...[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to ktlint --android...[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_KOTLIN_ANDROID...[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   FILE_ARRAY_KOTLIN_ANDROID file array contents: [0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Invoking ktlint linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[KOTLIN_ANDROID][0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Running linter for the LATEX language...[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_LATEX...[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Setting LINTER_NAME to chktex...[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to chktex -q -l /action/lib/.automation/.chktexrc...[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_LATEX...[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   FILE_ARRAY_LATEX file array contents: [0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Invoking chktex linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[LATEX][0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Running linter for the LUA language...[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_LUA...[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Setting LINTER_NAME to lua...[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to luacheck --config /action/lib/.automation/.luacheckrc...[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_LUA...[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   FILE_ARRAY_LUA file array contents: [0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Invoking lua linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[LUA][0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Running linter for the MARKDOWN language...[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_MARKDOWN...[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Setting LINTER_NAME to markdownlint...[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to markdownlint -c /action/lib/.automation/.markdown-lint.yml...[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_MARKDOWN...[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   FILE_ARRAY_MARKDOWN file array contents: /github/workspace/Deliverables/DSOFTPart3.md /github/workspace/README.md[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Invoking markdownlint linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   SKIP_FLAG: 0, list of files to lint: /github/workspace/Deliverables/DSOFTPart3.md /github/workspace/README.md[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Workspace path: /github/workspace[0m
[0m2025-06-16 21:26:28 [0;34m[INFO][0m   [0m
[0m2025-06-16 21:26:28 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:26:28 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Running LintCodebase. FILE_TYPE: MARKDOWN. Linter name: markdownlint, linter command: markdownlint -c /action/lib/.automation/.markdown-lint.yml, TEST_CASE_RUN: false, FILTER_REGEX_INCLUDE: , FILTER_REGEX_EXCLUDE: .*/securityReports/.* files to lint: /github/workspace/Deliverables/DSOFTPart3.md /github/workspace/README.md[0m
[0m2025-06-16 21:26:28 [0;34m[INFO][0m   Linting [MARKDOWN] files...[0m
[0m2025-06-16 21:26:28 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:26:28 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/Deliverables/DSOFTPart3.md[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   FILE_STATUS (DSOFTPart3.md) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   File: /github/workspace/Deliverables/DSOFTPart3.md, FILE_NAME: DSOFTPart3.md, DIR_NAME:/github/workspace/Deliverables, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: markdown, TEST_CASE_DIRECTORY: .automation/test/markdown[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   MARKDOWN expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/markdown/[0m
[0m2025-06-16 21:26:28 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:28 [0;34m[INFO][0m   File:[/github/workspace/Deliverables/DSOFTPart3.md][0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Found errors. Error code: 1, File type: MARKDOWN, Error on missing exec bit: false[0m
[0m2025-06-16 21:26:28 [0;31m[ERROR][0m   Found errors in [markdownlint] linter![0m
[0m2025-06-16 21:26:28 [0;31m[ERROR][0m   Error code: 1. Command output:[0m
------
/github/workspace/Deliverables/DSOFTPart3.md:15 MD001/heading-increment/header-increment Heading levels should only increment by one level at a time [Expected: h2; Actual: h3]
/github/workspace/Deliverables/DSOFTPart3.md:21:1 MD007/ul-indent Unordered list indentation [Expected: 2; Actual: 4]
/github/workspace/Deliverables/DSOFTPart3.md:22:1 MD007/ul-indent Unordered list indentation [Expected: 2; Actual: 4]
/github/workspace/Deliverables/DSOFTPart3.md:23:1 MD007/ul-indent Unordered list indentation [Expected: 2; Actual: 4]
/github/workspace/Deliverables/DSOFTPart3.md:37:1 MD007/ul-indent Unordered list indentation [Expected: 2; Actual: 4]
/github/workspace/Deliverables/DSOFTPart3.md:38:1 MD007/ul-indent Unordered list indentation [Expected: 2; Actual: 4]
/github/workspace/Deliverables/DSOFTPart3.md:39:1 MD007/ul-indent Unordered list indentation [Expected: 2; Actual: 4]
------[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Error code: 1. Command output:[0m
------
/github/workspace/Deliverables/DSOFTPart3.md:15 MD001/heading-increment/header-increment Heading levels should only increment by one level at a time [Expected: h2; Actual: h3]
/github/workspace/Deliverables/DSOFTPart3.md:21:1 MD007/ul-indent Unordered list indentation [Expected: 2; Actual: 4]
/github/workspace/Deliverables/DSOFTPart3.md:22:1 MD007/ul-indent Unordered list indentation [Expected: 2; Actual: 4]
/github/workspace/Deliverables/DSOFTPart3.md:23:1 MD007/ul-indent Unordered list indentation [Expected: 2; Actual: 4]
/github/workspace/Deliverables/DSOFTPart3.md:37:1 MD007/ul-indent Unordered list indentation [Expected: 2; Actual: 4]
/github/workspace/Deliverables/DSOFTPart3.md:38:1 MD007/ul-indent Unordered list indentation [Expected: 2; Actual: 4]
/github/workspace/Deliverables/DSOFTPart3.md:39:1 MD007/ul-indent Unordered list indentation [Expected: 2; Actual: 4]
------[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/README.md[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   FILE_STATUS (README.md) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   File: /github/workspace/README.md, FILE_NAME: README.md, DIR_NAME:/github/workspace, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: markdown, TEST_CASE_DIRECTORY: .automation/test/markdown[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   MARKDOWN expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/markdown/[0m
[0m2025-06-16 21:26:28 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:28 [0;34m[INFO][0m   File:[/github/workspace/README.md][0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Found errors. Error code: 1, File type: MARKDOWN, Error on missing exec bit: false[0m
[0m2025-06-16 21:26:28 [0;31m[ERROR][0m   Found errors in [markdownlint] linter![0m
[0m2025-06-16 21:26:28 [0;31m[ERROR][0m   Error code: 1. Command output:[0m
------
/github/workspace/README.md:1 MD041/first-line-heading/first-line-h1 First line in a file should be a top-level heading [Context: "[![Build Status](https://travi..."]
/github/workspace/README.md:8 MD001/heading-increment/header-increment Heading levels should only increment by one level at a time [Expected: h2; Actual: h4]
/github/workspace/README.md:8:91 MD026/no-trailing-punctuation Trailing punctuation in heading [Punctuation: ':']
/github/workspace/README.md:9:1 MD034/no-bare-urls Bare URL used [Context: "http://perfume-web.tk"]
/github/workspace/README.md:13:21 MD026/no-trailing-punctuation Trailing punctuation in heading [Punctuation: ':']
/github/workspace/README.md:61:17 MD034/no-bare-urls Bare URL used [Context: "http://localhost:3000"]
/github/workspace/README.md:65:1 MD034/no-bare-urls Bare URL used [Context: "https://perfume-websore-api.he..."]
/github/workspace/README.md:67:1 MD034/no-bare-urls Bare URL used [Context: "http://localhost:8080/swagger-..."]
------[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Error code: 1. Command output:[0m
------
/github/workspace/README.md:1 MD041/first-line-heading/first-line-h1 First line in a file should be a top-level heading [Context: "[![Build Status](https://travi..."]
/github/workspace/README.md:8 MD001/heading-increment/header-increment Heading levels should only increment by one level at a time [Expected: h2; Actual: h4]
/github/workspace/README.md:8:91 MD026/no-trailing-punctuation Trailing punctuation in heading [Punctuation: ':']
/github/workspace/README.md:9:1 MD034/no-bare-urls Bare URL used [Context: "http://perfume-web.tk"]
/github/workspace/README.md:13:21 MD026/no-trailing-punctuation Trailing punctuation in heading [Punctuation: ':']
/github/workspace/README.md:61:17 MD034/no-bare-urls Bare URL used [Context: "http://localhost:3000"]
/github/workspace/README.md:65:1 MD034/no-bare-urls Bare URL used [Context: "https://perfume-websore-api.he..."]
/github/workspace/README.md:67:1 MD034/no-bare-urls Bare URL used [Context: "http://localhost:8080/swagger-..."]
------[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Running linter for the NATURAL_LANGUAGE language...[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_NATURAL_LANGUAGE...[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Setting LINTER_NAME to textlint...[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to textlint -c /action/lib/.automation/.textlintrc...[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_NATURAL_LANGUAGE...[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   FILE_ARRAY_NATURAL_LANGUAGE file array contents: /github/workspace/Deliverables/DSOFTPart3.md /github/workspace/README.md[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Invoking textlint linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   SKIP_FLAG: 0, list of files to lint: /github/workspace/Deliverables/DSOFTPart3.md /github/workspace/README.md[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Workspace path: /github/workspace[0m
[0m2025-06-16 21:26:28 [0;34m[INFO][0m   [0m
[0m2025-06-16 21:26:28 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:26:28 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Running LintCodebase. FILE_TYPE: NATURAL_LANGUAGE. Linter name: textlint, linter command: textlint -c /action/lib/.automation/.textlintrc, TEST_CASE_RUN: false, FILTER_REGEX_INCLUDE: , FILTER_REGEX_EXCLUDE: .*/securityReports/.* files to lint: /github/workspace/Deliverables/DSOFTPart3.md /github/workspace/README.md[0m
[0m2025-06-16 21:26:28 [0;34m[INFO][0m   Linting [NATURAL_LANGUAGE] files...[0m
[0m2025-06-16 21:26:28 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:26:28 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/Deliverables/DSOFTPart3.md[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   FILE_STATUS (DSOFTPart3.md) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   File: /github/workspace/Deliverables/DSOFTPart3.md, FILE_NAME: DSOFTPart3.md, DIR_NAME:/github/workspace/Deliverables, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: natural_language, TEST_CASE_DIRECTORY: .automation/test/natural_language[0m
[0m2025-06-16 21:26:28 [0;34m[DEBUG][0m   NATURAL_LANGUAGE expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/natural_language/[0m
[0m2025-06-16 21:26:28 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:28 [0;34m[INFO][0m   File:[/github/workspace/Deliverables/DSOFTPart3.md][0m
[0m2025-06-16 21:26:29 [0;34m[INFO][0m    - File:[0;37m[DSOFTPart3.md][0;34m was linted with [0;37m[textlint][0;34m successfully[0m
[0m2025-06-16 21:26:29 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

------[0m
[0m2025-06-16 21:26:29 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/README.md[0m
[0m2025-06-16 21:26:29 [0;34m[DEBUG][0m   FILE_STATUS (README.md) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:29 [0;34m[DEBUG][0m   File: /github/workspace/README.md, FILE_NAME: README.md, DIR_NAME:/github/workspace, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: natural_language, TEST_CASE_DIRECTORY: .automation/test/natural_language[0m
[0m2025-06-16 21:26:29 [0;34m[DEBUG][0m   NATURAL_LANGUAGE expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/natural_language/[0m
[0m2025-06-16 21:26:29 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:29 [0;34m[INFO][0m   File:[/github/workspace/README.md][0m
[0m2025-06-16 21:26:29 [0;34m[DEBUG][0m   Found errors. Error code: 1, File type: NATURAL_LANGUAGE, Error on missing exec bit: false[0m
[0m2025-06-16 21:26:29 [0;31m[ERROR][0m   Found errors in [textlint] linter![0m
[0m2025-06-16 21:26:29 [0;31m[ERROR][0m   Error code: 1. Command output:[0m
------

/github/workspace/README.md
   6:52  ✓ error  Incorrect usage of the term: “React.js”, use “React” instead   terminology
  16:26  ✓ error  Incorrect usage of the term: “React.js”, use “React” instead   terminology
  17:43  ✓ error  Incorrect usage of the term: “Github”, use “GitHub” instead    terminology
  26:43  ✓ error  Incorrect usage of the term: “Github”, use “GitHub” instead    terminology
  49:6   ✓ error  Incorrect usage of the term: “github”, use “GitHub” instead    terminology
  59:13  ✓ error  Incorrect usage of the term: “node.js”, use “Node.js” instead  terminology

✖ 6 problems (6 errors, 0 warnings)
✓ 6 fixable problems.
Try to run: $ textlint --fix [file]
------[0m
[0m2025-06-16 21:26:29 [0;34m[DEBUG][0m   Error code: 1. Command output:[0m
------

/github/workspace/README.md
   6:52  ✓ error  Incorrect usage of the term: “React.js”, use “React” instead   terminology
  16:26  ✓ error  Incorrect usage of the term: “React.js”, use “React” instead   terminology
  17:43  ✓ error  Incorrect usage of the term: “Github”, use “GitHub” instead    terminology
  26:43  ✓ error  Incorrect usage of the term: “Github”, use “GitHub” instead    terminology
  49:6   ✓ error  Incorrect usage of the term: “github”, use “GitHub” instead    terminology
  59:13  ✓ error  Incorrect usage of the term: “node.js”, use “Node.js” instead  terminology

✖ 6 problems (6 errors, 0 warnings)
✓ 6 fixable problems.
Try to run: $ textlint --fix [file]
------[0m
[0m2025-06-16 21:26:29 [0;34m[DEBUG][0m   Running linter for the OPENAPI language...[0m
[0m2025-06-16 21:26:29 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_OPENAPI...[0m
[0m2025-06-16 21:26:29 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:26:29 [0;34m[DEBUG][0m   Setting LINTER_NAME to spectral...[0m
[0m2025-06-16 21:26:29 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to spectral lint -r /action/lib/.automation/.openapirc.yml -D...[0m
[0m2025-06-16 21:26:29 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_OPENAPI...[0m
[0m2025-06-16 21:26:29 [0;34m[DEBUG][0m   FILE_ARRAY_OPENAPI file array contents: /github/workspace/src/main/resources/static/swagger-api/swagger.yaml[0m
[0m2025-06-16 21:26:29 [0;34m[DEBUG][0m   Invoking spectral linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:26:29 [0;34m[DEBUG][0m   SKIP_FLAG: 0, list of files to lint: /github/workspace/src/main/resources/static/swagger-api/swagger.yaml[0m
[0m2025-06-16 21:26:29 [0;34m[DEBUG][0m   Workspace path: /github/workspace[0m
[0m2025-06-16 21:26:29 [0;34m[INFO][0m   [0m
[0m2025-06-16 21:26:30 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:26:30 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:26:30 [0;34m[DEBUG][0m   Running LintCodebase. FILE_TYPE: OPENAPI. Linter name: spectral, linter command: spectral lint -r /action/lib/.automation/.openapirc.yml -D, TEST_CASE_RUN: false, FILTER_REGEX_INCLUDE: , FILTER_REGEX_EXCLUDE: .*/securityReports/.* files to lint: /github/workspace/src/main/resources/static/swagger-api/swagger.yaml[0m
[0m2025-06-16 21:26:30 [0;34m[INFO][0m   Linting [OPENAPI] files...[0m
[0m2025-06-16 21:26:30 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:26:30 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:26:30 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/resources/static/swagger-api/swagger.yaml[0m
[0m2025-06-16 21:26:30 [0;34m[DEBUG][0m   FILE_STATUS (swagger.yaml) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:30 [0;34m[DEBUG][0m   File: /github/workspace/src/main/resources/static/swagger-api/swagger.yaml, FILE_NAME: swagger.yaml, DIR_NAME:/github/workspace/src/main/resources/static/swagger-api, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: openapi, TEST_CASE_DIRECTORY: .automation/test/openapi[0m
[0m2025-06-16 21:26:30 [0;34m[DEBUG][0m   OPENAPI expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/openapi/[0m
[0m2025-06-16 21:26:30 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:30 [0;34m[INFO][0m   File:[/github/workspace/src/main/resources/static/swagger-api/swagger.yaml][0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Found errors. Error code: 1, File type: OPENAPI, Error on missing exec bit: false[0m
[0m2025-06-16 21:26:31 [0;31m[ERROR][0m   Found errors in [spectral] linter![0m
[0m2025-06-16 21:26:31 [0;31m[ERROR][0m   Error code: 1. Command output:[0m
------

/github/workspace/src/main/resources/static/swagger-api/swagger.yaml
 1465:21  error  parser                    Mapping key must be a string scalar rather than number  paths./api/v1/users/order.post.requestBody.content.application/json.schema.properties.perfumesId.properties[43]
 1573:25  error  oas3-valid-media-example  "FullPerfumeResponse" property must exist               components.schemas.FullPerfumeResponse
 1574:13  error  oas3-schema               Property "type" is not expected to be here.             components.schemas.FullPerfumeResponse.type
 1575:18  error  oas3-schema               Property "properties" is not expected to be here.       components.schemas.FullPerfumeResponse.properties
 1675:18  error  oas3-valid-media-example  "PerfumeError" property must exist                      components.schemas.PerfumeError
 1676:13  error  oas3-schema               Property "type" is not expected to be here.             components.schemas.PerfumeError.type
 1677:18  error  oas3-schema               Property "properties" is not expected to be here.       components.schemas.PerfumeError.properties

✖ 7 problems (7 errors, 0 warnings, 0 infos, 0 hints)
------[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Error code: 1. Command output:[0m
------

/github/workspace/src/main/resources/static/swagger-api/swagger.yaml
 1465:21  error  parser                    Mapping key must be a string scalar rather than number  paths./api/v1/users/order.post.requestBody.content.application/json.schema.properties.perfumesId.properties[43]
 1573:25  error  oas3-valid-media-example  "FullPerfumeResponse" property must exist               components.schemas.FullPerfumeResponse
 1574:13  error  oas3-schema               Property "type" is not expected to be here.             components.schemas.FullPerfumeResponse.type
 1575:18  error  oas3-schema               Property "properties" is not expected to be here.       components.schemas.FullPerfumeResponse.properties
 1675:18  error  oas3-valid-media-example  "PerfumeError" property must exist                      components.schemas.PerfumeError
 1676:13  error  oas3-schema               Property "type" is not expected to be here.             components.schemas.PerfumeError.type
 1677:18  error  oas3-schema               Property "properties" is not expected to be here.       components.schemas.PerfumeError.properties

✖ 7 problems (7 errors, 0 warnings, 0 infos, 0 hints)
------[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Running linter for the PERL language...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_PERL...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting LINTER_NAME to perl...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to perlcritic...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_PERL...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   FILE_ARRAY_PERL file array contents: [0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Invoking perl linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[PERL][0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Running linter for the PHP_BUILTIN language...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_PHP_BUILTIN...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting LINTER_NAME to php...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to php -l -c /action/lib/.automation/php.ini...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_PHP_BUILTIN...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   FILE_ARRAY_PHP_BUILTIN file array contents: [0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Invoking php linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[PHP_BUILTIN][0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Running linter for the PHP_PHPCS language...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_PHP_PHPCS...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting LINTER_NAME to phpcs...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to phpcs --standard=/action/lib/.automation/phpcs.xml...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_PHP_PHPCS...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   FILE_ARRAY_PHP_PHPCS file array contents: [0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Invoking phpcs linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[PHP_PHPCS][0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Running linter for the PHP_PHPSTAN language...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_PHP_PHPSTAN...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting LINTER_NAME to phpstan...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to phpstan analyse --no-progress --no-ansi --memory-limit 1G -c /action/lib/.automation/phpstan.neon...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_PHP_PHPSTAN...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   FILE_ARRAY_PHP_PHPSTAN file array contents: [0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Invoking phpstan linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[PHP_PHPSTAN][0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Running linter for the PHP_PSALM language...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_PHP_PSALM...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting LINTER_NAME to psalm...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to psalm --config=/action/lib/.automation/psalm.xml...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_PHP_PSALM...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   FILE_ARRAY_PHP_PSALM file array contents: [0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Invoking psalm linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[PHP_PSALM][0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Running linter for the POWERSHELL language...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_POWERSHELL...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting LINTER_NAME to pwsh...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to Invoke-ScriptAnalyzer -EnableExit -Settings /action/lib/.automation/.powershell-psscriptanalyzer.psd1 -Path...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_POWERSHELL...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   FILE_ARRAY_POWERSHELL file array contents: [0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Invoking pwsh linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[POWERSHELL][0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Running linter for the PROTOBUF language...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_PROTOBUF...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting LINTER_NAME to protolint...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to protolint lint --config_path /action/lib/.automation/.protolintrc.yml...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_PROTOBUF...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   FILE_ARRAY_PROTOBUF file array contents: [0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Invoking protolint linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[PROTOBUF][0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Running linter for the PYTHON_BLACK language...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_PYTHON_BLACK...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting LINTER_NAME to black...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to black --config /action/lib/.automation/.python-black --diff --check...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_PYTHON_BLACK...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   FILE_ARRAY_PYTHON_BLACK file array contents: [0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Invoking black linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[PYTHON_BLACK][0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Running linter for the PYTHON_PYLINT language...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_PYTHON_PYLINT...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting LINTER_NAME to pylint...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to pylint --rcfile /action/lib/.automation/.python-lint...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_PYTHON_PYLINT...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   FILE_ARRAY_PYTHON_PYLINT file array contents: [0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Invoking pylint linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[PYTHON_PYLINT][0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Running linter for the PYTHON_FLAKE8 language...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_PYTHON_FLAKE8...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting LINTER_NAME to flake8...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to flake8 --config=/action/lib/.automation/.flake8...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_PYTHON_FLAKE8...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   FILE_ARRAY_PYTHON_FLAKE8 file array contents: [0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Invoking flake8 linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[PYTHON_FLAKE8][0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Running linter for the PYTHON_ISORT language...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_PYTHON_ISORT...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting LINTER_NAME to isort...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to isort --check --diff --sp /action/lib/.automation/.isort.cfg...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_PYTHON_ISORT...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   FILE_ARRAY_PYTHON_ISORT file array contents: [0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Invoking isort linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[PYTHON_ISORT][0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Running linter for the PYTHON_MYPY language...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_PYTHON_MYPY...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting LINTER_NAME to mypy...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to mypy --config-file /action/lib/.automation/.mypy.ini --install-types --non-interactive...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_PYTHON_MYPY...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   FILE_ARRAY_PYTHON_MYPY file array contents: [0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Invoking mypy linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[PYTHON_MYPY][0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Running linter for the R language...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_R...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting LINTER_NAME to R...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to lintr...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_R...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   FILE_ARRAY_R file array contents: [0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Invoking R linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[R][0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Running linter for the RAKU language...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_RAKU...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting LINTER_NAME to raku...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to raku...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_RAKU...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   FILE_ARRAY_RAKU file array contents: [0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Invoking raku linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[RAKU][0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Running linter for the RUBY language...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_RUBY...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting LINTER_NAME to rubocop...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to rubocop -c /action/lib/.automation/.ruby-lint.yml --force-exclusion --ignore-unrecognized-cops...[0m
[0m2025-06-16 21:26:31 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_RUBY...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   FILE_ARRAY_RUBY file array contents: [0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Invoking rubocop linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[RUBY][0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Running linter for the RUST_2015 language...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_RUST_2015...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Setting LINTER_NAME to rustfmt...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to rustfmt --check --edition 2015...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_RUST_2015...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   FILE_ARRAY_RUST_2015 file array contents: [0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Invoking rustfmt linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[RUST_2015][0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Running linter for the RUST_2018 language...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_RUST_2018...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Setting LINTER_NAME to rustfmt...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to rustfmt --check --edition 2018...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_RUST_2018...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   FILE_ARRAY_RUST_2018 file array contents: [0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Invoking rustfmt linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[RUST_2018][0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Running linter for the RUST_2021 language...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_RUST_2021...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Setting LINTER_NAME to rustfmt...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to rustfmt --check --edition 2021...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_RUST_2021...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   FILE_ARRAY_RUST_2021 file array contents: [0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Invoking rustfmt linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[RUST_2021][0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Running linter for the RUST_CLIPPY language...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_RUST_CLIPPY...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Setting LINTER_NAME to clippy...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to clippy...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_RUST_CLIPPY...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   FILE_ARRAY_RUST_CLIPPY file array contents: [0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Invoking clippy linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[RUST_CLIPPY][0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Running linter for the SCALAFMT language...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_SCALAFMT...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Setting LINTER_NAME to scalafmt...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to scalafmt --config /action/lib/.automation/.scalafmt.conf --test...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_SCALAFMT...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   FILE_ARRAY_SCALAFMT file array contents: [0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Invoking scalafmt linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[SCALAFMT][0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Running linter for the SHELL_SHFMT language...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_SHELL_SHFMT...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   No .editorconfig found at: /github/workspace/.editorconfig. Skipping SHELL_SHFMT linting...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Running linter for the SNAKEMAKE_LINT language...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_SNAKEMAKE_LINT...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Setting LINTER_NAME to snakemake...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to snakemake --lint -s...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_SNAKEMAKE_LINT...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   FILE_ARRAY_SNAKEMAKE_LINT file array contents: [0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Invoking snakemake linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[SNAKEMAKE_LINT][0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Running linter for the SNAKEMAKE_SNAKEFMT language...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_SNAKEMAKE_SNAKEFMT...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Setting LINTER_NAME to snakefmt...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to snakefmt --config /action/lib/.automation/.snakefmt.toml --check --compact-diff...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_SNAKEMAKE_SNAKEFMT...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   FILE_ARRAY_SNAKEMAKE_SNAKEFMT file array contents: [0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Invoking snakefmt linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[SNAKEMAKE_SNAKEFMT][0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Running linter for the STATES language...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_STATES...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Setting LINTER_NAME to asl-validator...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to asl-validator --json-path...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_STATES...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   FILE_ARRAY_STATES file array contents: [0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Invoking asl-validator linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[STATES][0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Running linter for the SQL language...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_SQL...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Setting LINTER_NAME to sql-lint...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to sql-lint --config /action/lib/.automation/.sql-config.json...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_SQL...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   FILE_ARRAY_SQL file array contents: /github/workspace/init.sql /github/workspace/src/main/resources/db/migration/V1__Init_BD.sql /github/workspace/src/main/resources/db/migration/V2__Add_users.sql /github/workspace/src/main/resources/db/migration/V3__Add_products.sql /github/workspace/src/main/resources/db/migration/V4__Add_orders.sql /github/workspace/src/test/resources/sql/create-orders-after.sql /github/workspace/src/test/resources/sql/create-orders-before.sql /github/workspace/src/test/resources/sql/create-perfumes-after.sql /github/workspace/src/test/resources/sql/create-perfumes-before.sql /github/workspace/src/test/resources/sql/create-user-after.sql /github/workspace/src/test/resources/sql/create-user-before.sql[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Invoking sql-lint linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   SKIP_FLAG: 0, list of files to lint: /github/workspace/init.sql /github/workspace/src/main/resources/db/migration/V1__Init_BD.sql /github/workspace/src/main/resources/db/migration/V2__Add_users.sql /github/workspace/src/main/resources/db/migration/V3__Add_products.sql /github/workspace/src/main/resources/db/migration/V4__Add_orders.sql /github/workspace/src/test/resources/sql/create-orders-after.sql /github/workspace/src/test/resources/sql/create-orders-before.sql /github/workspace/src/test/resources/sql/create-perfumes-after.sql /github/workspace/src/test/resources/sql/create-perfumes-before.sql /github/workspace/src/test/resources/sql/create-user-after.sql /github/workspace/src/test/resources/sql/create-user-before.sql[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Workspace path: /github/workspace[0m
[0m2025-06-16 21:26:32 [0;34m[INFO][0m   [0m
[0m2025-06-16 21:26:32 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:26:32 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Running LintCodebase. FILE_TYPE: SQL. Linter name: sql-lint, linter command: sql-lint --config /action/lib/.automation/.sql-config.json, TEST_CASE_RUN: false, FILTER_REGEX_INCLUDE: , FILTER_REGEX_EXCLUDE: .*/securityReports/.* files to lint: /github/workspace/init.sql /github/workspace/src/main/resources/db/migration/V1__Init_BD.sql /github/workspace/src/main/resources/db/migration/V2__Add_users.sql /github/workspace/src/main/resources/db/migration/V3__Add_products.sql /github/workspace/src/main/resources/db/migration/V4__Add_orders.sql /github/workspace/src/test/resources/sql/create-orders-after.sql /github/workspace/src/test/resources/sql/create-orders-before.sql /github/workspace/src/test/resources/sql/create-perfumes-after.sql /github/workspace/src/test/resources/sql/create-perfumes-before.sql /github/workspace/src/test/resources/sql/create-user-after.sql /github/workspace/src/test/resources/sql/create-user-before.sql[0m
[0m2025-06-16 21:26:32 [0;34m[INFO][0m   Linting [SQL] files...[0m
[0m2025-06-16 21:26:32 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:26:32 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/init.sql[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   FILE_STATUS (init.sql) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   File: /github/workspace/init.sql, FILE_NAME: init.sql, DIR_NAME:/github/workspace, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: sql, TEST_CASE_DIRECTORY: .automation/test/sql[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   SQL expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/sql/[0m
[0m2025-06-16 21:26:32 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:32 [0;34m[INFO][0m   File:[/github/workspace/init.sql][0m
[0m2025-06-16 21:26:32 [0;34m[INFO][0m    - File:[0;37m[init.sql][0;34m was linted with [0;37m[sql-lint][0;34m successfully[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

------[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/resources/db/migration/V1__Init_BD.sql[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   FILE_STATUS () is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   File: /github/workspace/src/main/resources/db/migration/V1__Init_BD.sql, FILE_NAME: V1__Init_BD.sql, DIR_NAME:/github/workspace/src/main/resources/db/migration, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: sql, TEST_CASE_DIRECTORY: .automation/test/sql[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   SQL expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/sql/[0m
[0m2025-06-16 21:26:32 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:32 [0;34m[INFO][0m   File:[/github/workspace/src/main/resources/db/migration/V1__Init_BD.sql][0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Found errors. Error code: 1, File type: SQL, Error on missing exec bit: false[0m
[0m2025-06-16 21:26:32 [0;31m[ERROR][0m   Found errors in [sql-lint] linter![0m
[0m2025-06-16 21:26:32 [0;31m[ERROR][0m   Error code: 1. Command output:[0m
------
/github/workspace/src/main/resources/db/migration/V1__Init_BD.sql:1 [sql-lint: my-sql-invalid-create-option] Option 'sequence' is not a valid option, must be one of '["algorithm","database","definer","event","function","index","or","procedure","role","server","schema","table","tablespace","temporary","trigger","user","unique","view"]'.
/github/workspace/src/main/resources/db/migration/V1__Init_BD.sql:2 [sql-lint: my-sql-invalid-create-option] Option 'sequence' is not a valid option, must be one of '["algorithm","database","definer","event","function","index","or","procedure","role","server","schema","table","tablespace","temporary","trigger","user","unique","view"]'.
/github/workspace/src/main/resources/db/migration/V1__Init_BD.sql:3 [sql-lint: my-sql-invalid-create-option] Option 'sequence' is not a valid option, must be one of '["algorithm","database","definer","event","function","index","or","procedure","role","server","schema","table","tablespace","temporary","trigger","user","unique","view"]'.
/github/workspace/src/main/resources/db/migration/V1__Init_BD.sql:4 [sql-lint: my-sql-invalid-create-option] Option 'sequence' is not a valid option, must be one of '["algorithm","database","definer","event","function","index","or","procedure","role","server","schema","table","tablespace","temporary","trigger","user","unique","view"]'.
------[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Error code: 1. Command output:[0m
------
/github/workspace/src/main/resources/db/migration/V1__Init_BD.sql:1 [sql-lint: my-sql-invalid-create-option] Option 'sequence' is not a valid option, must be one of '["algorithm","database","definer","event","function","index","or","procedure","role","server","schema","table","tablespace","temporary","trigger","user","unique","view"]'.
/github/workspace/src/main/resources/db/migration/V1__Init_BD.sql:2 [sql-lint: my-sql-invalid-create-option] Option 'sequence' is not a valid option, must be one of '["algorithm","database","definer","event","function","index","or","procedure","role","server","schema","table","tablespace","temporary","trigger","user","unique","view"]'.
/github/workspace/src/main/resources/db/migration/V1__Init_BD.sql:3 [sql-lint: my-sql-invalid-create-option] Option 'sequence' is not a valid option, must be one of '["algorithm","database","definer","event","function","index","or","procedure","role","server","schema","table","tablespace","temporary","trigger","user","unique","view"]'.
/github/workspace/src/main/resources/db/migration/V1__Init_BD.sql:4 [sql-lint: my-sql-invalid-create-option] Option 'sequence' is not a valid option, must be one of '["algorithm","database","definer","event","function","index","or","procedure","role","server","schema","table","tablespace","temporary","trigger","user","unique","view"]'.
------[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/resources/db/migration/V2__Add_users.sql[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   FILE_STATUS () is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   File: /github/workspace/src/main/resources/db/migration/V2__Add_users.sql, FILE_NAME: V2__Add_users.sql, DIR_NAME:/github/workspace/src/main/resources/db/migration, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: sql, TEST_CASE_DIRECTORY: .automation/test/sql[0m
[0m2025-06-16 21:26:32 [0;34m[DEBUG][0m   SQL expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/sql/[0m
[0m2025-06-16 21:26:32 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:32 [0;34m[INFO][0m   File:[/github/workspace/src/main/resources/db/migration/V2__Add_users.sql][0m
[0m2025-06-16 21:26:33 [0;34m[INFO][0m    - File:[0;37m[V2__Add_users.sql][0;34m was linted with [0;37m[sql-lint][0;34m successfully[0m
[0m2025-06-16 21:26:33 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

------[0m
[0m2025-06-16 21:26:33 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/resources/db/migration/V3__Add_products.sql[0m
[0m2025-06-16 21:26:33 [0;34m[DEBUG][0m   FILE_STATUS () is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:33 [0;34m[DEBUG][0m   File: /github/workspace/src/main/resources/db/migration/V3__Add_products.sql, FILE_NAME: V3__Add_products.sql, DIR_NAME:/github/workspace/src/main/resources/db/migration, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: sql, TEST_CASE_DIRECTORY: .automation/test/sql[0m
[0m2025-06-16 21:26:33 [0;34m[DEBUG][0m   SQL expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/sql/[0m
[0m2025-06-16 21:26:33 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:33 [0;34m[INFO][0m   File:[/github/workspace/src/main/resources/db/migration/V3__Add_products.sql][0m
[0m2025-06-16 21:26:33 [0;34m[INFO][0m    - File:[0;37m[V3__Add_products.sql][0;34m was linted with [0;37m[sql-lint][0;34m successfully[0m
[0m2025-06-16 21:26:33 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

------[0m
[0m2025-06-16 21:26:33 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/resources/db/migration/V4__Add_orders.sql[0m
[0m2025-06-16 21:26:33 [0;34m[DEBUG][0m   FILE_STATUS () is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:33 [0;34m[DEBUG][0m   File: /github/workspace/src/main/resources/db/migration/V4__Add_orders.sql, FILE_NAME: V4__Add_orders.sql, DIR_NAME:/github/workspace/src/main/resources/db/migration, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: sql, TEST_CASE_DIRECTORY: .automation/test/sql[0m
[0m2025-06-16 21:26:33 [0;34m[DEBUG][0m   SQL expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/sql/[0m
[0m2025-06-16 21:26:33 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:33 [0;34m[INFO][0m   File:[/github/workspace/src/main/resources/db/migration/V4__Add_orders.sql][0m
[0m2025-06-16 21:26:33 [0;34m[INFO][0m    - File:[0;37m[V4__Add_orders.sql][0;34m was linted with [0;37m[sql-lint][0;34m successfully[0m
[0m2025-06-16 21:26:33 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

------[0m
[0m2025-06-16 21:26:33 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/resources/sql/create-orders-after.sql[0m
[0m2025-06-16 21:26:33 [0;34m[DEBUG][0m   FILE_STATUS (create-orders-after.sql) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:33 [0;34m[DEBUG][0m   File: /github/workspace/src/test/resources/sql/create-orders-after.sql, FILE_NAME: create-orders-after.sql, DIR_NAME:/github/workspace/src/test/resources/sql, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: sql, TEST_CASE_DIRECTORY: .automation/test/sql[0m
[0m2025-06-16 21:26:33 [0;34m[DEBUG][0m   SQL expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/sql/[0m
[0m2025-06-16 21:26:33 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:33 [0;34m[INFO][0m   File:[/github/workspace/src/test/resources/sql/create-orders-after.sql][0m
[0m2025-06-16 21:26:33 [0;34m[DEBUG][0m   Found errors. Error code: 1, File type: SQL, Error on missing exec bit: false[0m
[0m2025-06-16 21:26:33 [0;31m[ERROR][0m   Found errors in [sql-lint] linter![0m
[0m2025-06-16 21:26:33 [0;31m[ERROR][0m   Error code: 1. Command output:[0m
------
/github/workspace/src/test/resources/sql/create-orders-after.sql:1 [sql-lint: missing-where] DELETE statement missing WHERE clause.
/github/workspace/src/test/resources/sql/create-orders-after.sql:2 [sql-lint: missing-where] DELETE statement missing WHERE clause.
/github/workspace/src/test/resources/sql/create-orders-after.sql:3 [sql-lint: missing-where] DELETE statement missing WHERE clause.
------[0m
[0m2025-06-16 21:26:33 [0;34m[DEBUG][0m   Error code: 1. Command output:[0m
------
/github/workspace/src/test/resources/sql/create-orders-after.sql:1 [sql-lint: missing-where] DELETE statement missing WHERE clause.
/github/workspace/src/test/resources/sql/create-orders-after.sql:2 [sql-lint: missing-where] DELETE statement missing WHERE clause.
/github/workspace/src/test/resources/sql/create-orders-after.sql:3 [sql-lint: missing-where] DELETE statement missing WHERE clause.
------[0m
[0m2025-06-16 21:26:33 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/resources/sql/create-orders-before.sql[0m
[0m2025-06-16 21:26:33 [0;34m[DEBUG][0m   FILE_STATUS (create-orders-before.sql) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:33 [0;34m[DEBUG][0m   File: /github/workspace/src/test/resources/sql/create-orders-before.sql, FILE_NAME: create-orders-before.sql, DIR_NAME:/github/workspace/src/test/resources/sql, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: sql, TEST_CASE_DIRECTORY: .automation/test/sql[0m
[0m2025-06-16 21:26:33 [0;34m[DEBUG][0m   SQL expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/sql/[0m
[0m2025-06-16 21:26:33 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:33 [0;34m[INFO][0m   File:[/github/workspace/src/test/resources/sql/create-orders-before.sql][0m
[0m2025-06-16 21:26:33 [0;34m[INFO][0m    - File:[0;37m[create-orders-before.sql][0;34m was linted with [0;37m[sql-lint][0;34m successfully[0m
[0m2025-06-16 21:26:33 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

------[0m
[0m2025-06-16 21:26:33 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/resources/sql/create-perfumes-after.sql[0m
[0m2025-06-16 21:26:33 [0;34m[DEBUG][0m   FILE_STATUS (create-perfumes-after.sql) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:33 [0;34m[DEBUG][0m   File: /github/workspace/src/test/resources/sql/create-perfumes-after.sql, FILE_NAME: create-perfumes-after.sql, DIR_NAME:/github/workspace/src/test/resources/sql, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: sql, TEST_CASE_DIRECTORY: .automation/test/sql[0m
[0m2025-06-16 21:26:33 [0;34m[DEBUG][0m   SQL expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/sql/[0m
[0m2025-06-16 21:26:33 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:33 [0;34m[INFO][0m   File:[/github/workspace/src/test/resources/sql/create-perfumes-after.sql][0m
[0m2025-06-16 21:26:34 [0;34m[DEBUG][0m   Found errors. Error code: 1, File type: SQL, Error on missing exec bit: false[0m
[0m2025-06-16 21:26:34 [0;31m[ERROR][0m   Found errors in [sql-lint] linter![0m
[0m2025-06-16 21:26:34 [0;31m[ERROR][0m   Error code: 1. Command output:[0m
------
/github/workspace/src/test/resources/sql/create-perfumes-after.sql:1 [sql-lint: missing-where] DELETE statement missing WHERE clause.
/github/workspace/src/test/resources/sql/create-perfumes-after.sql:2 [sql-lint: missing-where] DELETE statement missing WHERE clause.
/github/workspace/src/test/resources/sql/create-perfumes-after.sql:3 [sql-lint: missing-where] DELETE statement missing WHERE clause.
------[0m
[0m2025-06-16 21:26:34 [0;34m[DEBUG][0m   Error code: 1. Command output:[0m
------
/github/workspace/src/test/resources/sql/create-perfumes-after.sql:1 [sql-lint: missing-where] DELETE statement missing WHERE clause.
/github/workspace/src/test/resources/sql/create-perfumes-after.sql:2 [sql-lint: missing-where] DELETE statement missing WHERE clause.
/github/workspace/src/test/resources/sql/create-perfumes-after.sql:3 [sql-lint: missing-where] DELETE statement missing WHERE clause.
------[0m
[0m2025-06-16 21:26:34 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/resources/sql/create-perfumes-before.sql[0m
[0m2025-06-16 21:26:34 [0;34m[DEBUG][0m   FILE_STATUS (create-perfumes-before.sql) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:34 [0;34m[DEBUG][0m   File: /github/workspace/src/test/resources/sql/create-perfumes-before.sql, FILE_NAME: create-perfumes-before.sql, DIR_NAME:/github/workspace/src/test/resources/sql, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: sql, TEST_CASE_DIRECTORY: .automation/test/sql[0m
[0m2025-06-16 21:26:34 [0;34m[DEBUG][0m   SQL expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/sql/[0m
[0m2025-06-16 21:26:34 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:34 [0;34m[INFO][0m   File:[/github/workspace/src/test/resources/sql/create-perfumes-before.sql][0m
[0m2025-06-16 21:26:34 [0;34m[INFO][0m    - File:[0;37m[create-perfumes-before.sql][0;34m was linted with [0;37m[sql-lint][0;34m successfully[0m
[0m2025-06-16 21:26:34 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

------[0m
[0m2025-06-16 21:26:34 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/resources/sql/create-user-after.sql[0m
[0m2025-06-16 21:26:34 [0;34m[DEBUG][0m   FILE_STATUS (create-user-after.sql) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:34 [0;34m[DEBUG][0m   File: /github/workspace/src/test/resources/sql/create-user-after.sql, FILE_NAME: create-user-after.sql, DIR_NAME:/github/workspace/src/test/resources/sql, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: sql, TEST_CASE_DIRECTORY: .automation/test/sql[0m
[0m2025-06-16 21:26:34 [0;34m[DEBUG][0m   SQL expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/sql/[0m
[0m2025-06-16 21:26:34 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:34 [0;34m[INFO][0m   File:[/github/workspace/src/test/resources/sql/create-user-after.sql][0m
[0m2025-06-16 21:26:34 [0;34m[DEBUG][0m   Found errors. Error code: 1, File type: SQL, Error on missing exec bit: false[0m
[0m2025-06-16 21:26:34 [0;31m[ERROR][0m   Found errors in [sql-lint] linter![0m
[0m2025-06-16 21:26:34 [0;31m[ERROR][0m   Error code: 1. Command output:[0m
------
/github/workspace/src/test/resources/sql/create-user-after.sql:1 [sql-lint: missing-where] DELETE statement missing WHERE clause.
/github/workspace/src/test/resources/sql/create-user-after.sql:2 [sql-lint: missing-where] DELETE statement missing WHERE clause.
------[0m
[0m2025-06-16 21:26:34 [0;34m[DEBUG][0m   Error code: 1. Command output:[0m
------
/github/workspace/src/test/resources/sql/create-user-after.sql:1 [sql-lint: missing-where] DELETE statement missing WHERE clause.
/github/workspace/src/test/resources/sql/create-user-after.sql:2 [sql-lint: missing-where] DELETE statement missing WHERE clause.
------[0m
[0m2025-06-16 21:26:34 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/resources/sql/create-user-before.sql[0m
[0m2025-06-16 21:26:34 [0;34m[DEBUG][0m   FILE_STATUS (create-user-before.sql) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:34 [0;34m[DEBUG][0m   File: /github/workspace/src/test/resources/sql/create-user-before.sql, FILE_NAME: create-user-before.sql, DIR_NAME:/github/workspace/src/test/resources/sql, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: sql, TEST_CASE_DIRECTORY: .automation/test/sql[0m
[0m2025-06-16 21:26:34 [0;34m[DEBUG][0m   SQL expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/sql/[0m
[0m2025-06-16 21:26:34 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:34 [0;34m[INFO][0m   File:[/github/workspace/src/test/resources/sql/create-user-before.sql][0m
[0m2025-06-16 21:26:34 [0;34m[INFO][0m    - File:[0;37m[create-user-before.sql][0;34m was linted with [0;37m[sql-lint][0;34m successfully[0m
[0m2025-06-16 21:26:34 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------

------[0m
[0m2025-06-16 21:26:34 [0;34m[DEBUG][0m   Running linter for the SQLFLUFF language...[0m
[0m2025-06-16 21:26:34 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_SQLFLUFF...[0m
[0m2025-06-16 21:26:34 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:26:34 [0;34m[DEBUG][0m   Setting LINTER_NAME to sqlfluff...[0m
[0m2025-06-16 21:26:34 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to sqlfluff lint --config /action/lib/.automation//.sqlfluff...[0m
[0m2025-06-16 21:26:34 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_SQLFLUFF...[0m
[0m2025-06-16 21:26:34 [0;34m[DEBUG][0m   FILE_ARRAY_SQLFLUFF file array contents: /github/workspace/init.sql /github/workspace/src/main/resources/db/migration/V1__Init_BD.sql /github/workspace/src/main/resources/db/migration/V2__Add_users.sql /github/workspace/src/main/resources/db/migration/V3__Add_products.sql /github/workspace/src/main/resources/db/migration/V4__Add_orders.sql /github/workspace/src/test/resources/sql/create-orders-after.sql /github/workspace/src/test/resources/sql/create-orders-before.sql /github/workspace/src/test/resources/sql/create-perfumes-after.sql /github/workspace/src/test/resources/sql/create-perfumes-before.sql /github/workspace/src/test/resources/sql/create-user-after.sql /github/workspace/src/test/resources/sql/create-user-before.sql[0m
[0m2025-06-16 21:26:34 [0;34m[DEBUG][0m   Invoking sqlfluff linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:26:34 [0;34m[DEBUG][0m   SKIP_FLAG: 0, list of files to lint: /github/workspace/init.sql /github/workspace/src/main/resources/db/migration/V1__Init_BD.sql /github/workspace/src/main/resources/db/migration/V2__Add_users.sql /github/workspace/src/main/resources/db/migration/V3__Add_products.sql /github/workspace/src/main/resources/db/migration/V4__Add_orders.sql /github/workspace/src/test/resources/sql/create-orders-after.sql /github/workspace/src/test/resources/sql/create-orders-before.sql /github/workspace/src/test/resources/sql/create-perfumes-after.sql /github/workspace/src/test/resources/sql/create-perfumes-before.sql /github/workspace/src/test/resources/sql/create-user-after.sql /github/workspace/src/test/resources/sql/create-user-before.sql[0m
[0m2025-06-16 21:26:34 [0;34m[DEBUG][0m   Workspace path: /github/workspace[0m
[0m2025-06-16 21:26:34 [0;34m[INFO][0m   [0m
[0m2025-06-16 21:26:34 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:26:34 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:26:34 [0;34m[DEBUG][0m   Running LintCodebase. FILE_TYPE: SQLFLUFF. Linter name: sqlfluff, linter command: sqlfluff lint --config /action/lib/.automation//.sqlfluff, TEST_CASE_RUN: false, FILTER_REGEX_INCLUDE: , FILTER_REGEX_EXCLUDE: .*/securityReports/.* files to lint: /github/workspace/init.sql /github/workspace/src/main/resources/db/migration/V1__Init_BD.sql /github/workspace/src/main/resources/db/migration/V2__Add_users.sql /github/workspace/src/main/resources/db/migration/V3__Add_products.sql /github/workspace/src/main/resources/db/migration/V4__Add_orders.sql /github/workspace/src/test/resources/sql/create-orders-after.sql /github/workspace/src/test/resources/sql/create-orders-before.sql /github/workspace/src/test/resources/sql/create-perfumes-after.sql /github/workspace/src/test/resources/sql/create-perfumes-before.sql /github/workspace/src/test/resources/sql/create-user-after.sql /github/workspace/src/test/resources/sql/create-user-before.sql[0m
[0m2025-06-16 21:26:34 [0;34m[INFO][0m   Linting [SQLFLUFF] files...[0m
[0m2025-06-16 21:26:34 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:26:34 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:26:34 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/init.sql[0m
[0m2025-06-16 21:26:34 [0;34m[DEBUG][0m   FILE_STATUS (init.sql) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:34 [0;34m[DEBUG][0m   File: /github/workspace/init.sql, FILE_NAME: init.sql, DIR_NAME:/github/workspace, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: sqlfluff, TEST_CASE_DIRECTORY: .automation/test/sqlfluff[0m
[0m2025-06-16 21:26:34 [0;34m[DEBUG][0m   SQLFLUFF expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/sqlfluff/[0m
[0m2025-06-16 21:26:34 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:34 [0;34m[INFO][0m   File:[/github/workspace/init.sql][0m
[0m2025-06-16 21:26:35 [0;34m[DEBUG][0m   Found errors. Error code: 2, File type: SQLFLUFF, Error on missing exec bit: false[0m
[0m2025-06-16 21:26:35 [0;31m[ERROR][0m   Found errors in [sqlfluff] linter![0m
[0m2025-06-16 21:26:35 [0;31m[ERROR][0m   Error code: 2. Command output:[0m
------

User Error: No dialect was specified. You must configure a dialect or specify one on the command line using --dialect after the command. Available dialects:
ansi, athena, bigquery, clickhouse, databricks, db2, exasol, hive, materialize, mysql, oracle, postgres, redshift, snowflake, soql, sparksql, sqlite, teradata, tsql
------[0m
[0m2025-06-16 21:26:35 [0;34m[DEBUG][0m   Error code: 2. Command output:[0m
------

User Error: No dialect was specified. You must configure a dialect or specify one on the command line using --dialect after the command. Available dialects:
ansi, athena, bigquery, clickhouse, databricks, db2, exasol, hive, materialize, mysql, oracle, postgres, redshift, snowflake, soql, sparksql, sqlite, teradata, tsql
------[0m
[0m2025-06-16 21:26:35 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/resources/db/migration/V1__Init_BD.sql[0m
[0m2025-06-16 21:26:35 [0;34m[DEBUG][0m   FILE_STATUS () is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:35 [0;34m[DEBUG][0m   File: /github/workspace/src/main/resources/db/migration/V1__Init_BD.sql, FILE_NAME: V1__Init_BD.sql, DIR_NAME:/github/workspace/src/main/resources/db/migration, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: sqlfluff, TEST_CASE_DIRECTORY: .automation/test/sqlfluff[0m
[0m2025-06-16 21:26:35 [0;34m[DEBUG][0m   SQLFLUFF expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/sqlfluff/[0m
[0m2025-06-16 21:26:35 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:35 [0;34m[INFO][0m   File:[/github/workspace/src/main/resources/db/migration/V1__Init_BD.sql][0m
[0m2025-06-16 21:26:35 [0;34m[DEBUG][0m   Found errors. Error code: 2, File type: SQLFLUFF, Error on missing exec bit: false[0m
[0m2025-06-16 21:26:35 [0;31m[ERROR][0m   Found errors in [sqlfluff] linter![0m
[0m2025-06-16 21:26:35 [0;31m[ERROR][0m   Error code: 2. Command output:[0m
------

User Error: No dialect was specified. You must configure a dialect or specify one on the command line using --dialect after the command. Available dialects:
ansi, athena, bigquery, clickhouse, databricks, db2, exasol, hive, materialize, mysql, oracle, postgres, redshift, snowflake, soql, sparksql, sqlite, teradata, tsql
------[0m
[0m2025-06-16 21:26:35 [0;34m[DEBUG][0m   Error code: 2. Command output:[0m
------

User Error: No dialect was specified. You must configure a dialect or specify one on the command line using --dialect after the command. Available dialects:
ansi, athena, bigquery, clickhouse, databricks, db2, exasol, hive, materialize, mysql, oracle, postgres, redshift, snowflake, soql, sparksql, sqlite, teradata, tsql
------[0m
[0m2025-06-16 21:26:35 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/resources/db/migration/V2__Add_users.sql[0m
[0m2025-06-16 21:26:35 [0;34m[DEBUG][0m   FILE_STATUS () is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:35 [0;34m[DEBUG][0m   File: /github/workspace/src/main/resources/db/migration/V2__Add_users.sql, FILE_NAME: V2__Add_users.sql, DIR_NAME:/github/workspace/src/main/resources/db/migration, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: sqlfluff, TEST_CASE_DIRECTORY: .automation/test/sqlfluff[0m
[0m2025-06-16 21:26:35 [0;34m[DEBUG][0m   SQLFLUFF expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/sqlfluff/[0m
[0m2025-06-16 21:26:35 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:35 [0;34m[INFO][0m   File:[/github/workspace/src/main/resources/db/migration/V2__Add_users.sql][0m
[0m2025-06-16 21:26:36 [0;34m[DEBUG][0m   Found errors. Error code: 2, File type: SQLFLUFF, Error on missing exec bit: false[0m
[0m2025-06-16 21:26:36 [0;31m[ERROR][0m   Found errors in [sqlfluff] linter![0m
[0m2025-06-16 21:26:36 [0;31m[ERROR][0m   Error code: 2. Command output:[0m
------

User Error: No dialect was specified. You must configure a dialect or specify one on the command line using --dialect after the command. Available dialects:
ansi, athena, bigquery, clickhouse, databricks, db2, exasol, hive, materialize, mysql, oracle, postgres, redshift, snowflake, soql, sparksql, sqlite, teradata, tsql
------[0m
[0m2025-06-16 21:26:36 [0;34m[DEBUG][0m   Error code: 2. Command output:[0m
------

User Error: No dialect was specified. You must configure a dialect or specify one on the command line using --dialect after the command. Available dialects:
ansi, athena, bigquery, clickhouse, databricks, db2, exasol, hive, materialize, mysql, oracle, postgres, redshift, snowflake, soql, sparksql, sqlite, teradata, tsql
------[0m
[0m2025-06-16 21:26:36 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/resources/db/migration/V3__Add_products.sql[0m
[0m2025-06-16 21:26:36 [0;34m[DEBUG][0m   FILE_STATUS () is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:36 [0;34m[DEBUG][0m   File: /github/workspace/src/main/resources/db/migration/V3__Add_products.sql, FILE_NAME: V3__Add_products.sql, DIR_NAME:/github/workspace/src/main/resources/db/migration, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: sqlfluff, TEST_CASE_DIRECTORY: .automation/test/sqlfluff[0m
[0m2025-06-16 21:26:36 [0;34m[DEBUG][0m   SQLFLUFF expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/sqlfluff/[0m
[0m2025-06-16 21:26:36 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:36 [0;34m[INFO][0m   File:[/github/workspace/src/main/resources/db/migration/V3__Add_products.sql][0m
[0m2025-06-16 21:26:36 [0;34m[DEBUG][0m   Found errors. Error code: 2, File type: SQLFLUFF, Error on missing exec bit: false[0m
[0m2025-06-16 21:26:36 [0;31m[ERROR][0m   Found errors in [sqlfluff] linter![0m
[0m2025-06-16 21:26:36 [0;31m[ERROR][0m   Error code: 2. Command output:[0m
------

User Error: No dialect was specified. You must configure a dialect or specify one on the command line using --dialect after the command. Available dialects:
ansi, athena, bigquery, clickhouse, databricks, db2, exasol, hive, materialize, mysql, oracle, postgres, redshift, snowflake, soql, sparksql, sqlite, teradata, tsql
------[0m
[0m2025-06-16 21:26:36 [0;34m[DEBUG][0m   Error code: 2. Command output:[0m
------

User Error: No dialect was specified. You must configure a dialect or specify one on the command line using --dialect after the command. Available dialects:
ansi, athena, bigquery, clickhouse, databricks, db2, exasol, hive, materialize, mysql, oracle, postgres, redshift, snowflake, soql, sparksql, sqlite, teradata, tsql
------[0m
[0m2025-06-16 21:26:36 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/resources/db/migration/V4__Add_orders.sql[0m
[0m2025-06-16 21:26:36 [0;34m[DEBUG][0m   FILE_STATUS () is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:36 [0;34m[DEBUG][0m   File: /github/workspace/src/main/resources/db/migration/V4__Add_orders.sql, FILE_NAME: V4__Add_orders.sql, DIR_NAME:/github/workspace/src/main/resources/db/migration, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: sqlfluff, TEST_CASE_DIRECTORY: .automation/test/sqlfluff[0m
[0m2025-06-16 21:26:36 [0;34m[DEBUG][0m   SQLFLUFF expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/sqlfluff/[0m
[0m2025-06-16 21:26:36 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:36 [0;34m[INFO][0m   File:[/github/workspace/src/main/resources/db/migration/V4__Add_orders.sql][0m
[0m2025-06-16 21:26:37 [0;34m[DEBUG][0m   Found errors. Error code: 2, File type: SQLFLUFF, Error on missing exec bit: false[0m
[0m2025-06-16 21:26:37 [0;31m[ERROR][0m   Found errors in [sqlfluff] linter![0m
[0m2025-06-16 21:26:37 [0;31m[ERROR][0m   Error code: 2. Command output:[0m
------

User Error: No dialect was specified. You must configure a dialect or specify one on the command line using --dialect after the command. Available dialects:
ansi, athena, bigquery, clickhouse, databricks, db2, exasol, hive, materialize, mysql, oracle, postgres, redshift, snowflake, soql, sparksql, sqlite, teradata, tsql
------[0m
[0m2025-06-16 21:26:37 [0;34m[DEBUG][0m   Error code: 2. Command output:[0m
------

User Error: No dialect was specified. You must configure a dialect or specify one on the command line using --dialect after the command. Available dialects:
ansi, athena, bigquery, clickhouse, databricks, db2, exasol, hive, materialize, mysql, oracle, postgres, redshift, snowflake, soql, sparksql, sqlite, teradata, tsql
------[0m
[0m2025-06-16 21:26:37 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/resources/sql/create-orders-after.sql[0m
[0m2025-06-16 21:26:37 [0;34m[DEBUG][0m   FILE_STATUS (create-orders-after.sql) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:37 [0;34m[DEBUG][0m   File: /github/workspace/src/test/resources/sql/create-orders-after.sql, FILE_NAME: create-orders-after.sql, DIR_NAME:/github/workspace/src/test/resources/sql, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: sqlfluff, TEST_CASE_DIRECTORY: .automation/test/sqlfluff[0m
[0m2025-06-16 21:26:37 [0;34m[DEBUG][0m   SQLFLUFF expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/sqlfluff/[0m
[0m2025-06-16 21:26:37 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:37 [0;34m[INFO][0m   File:[/github/workspace/src/test/resources/sql/create-orders-after.sql][0m
[0m2025-06-16 21:26:37 [0;34m[DEBUG][0m   Found errors. Error code: 2, File type: SQLFLUFF, Error on missing exec bit: false[0m
[0m2025-06-16 21:26:37 [0;31m[ERROR][0m   Found errors in [sqlfluff] linter![0m
[0m2025-06-16 21:26:37 [0;31m[ERROR][0m   Error code: 2. Command output:[0m
------

User Error: No dialect was specified. You must configure a dialect or specify one on the command line using --dialect after the command. Available dialects:
ansi, athena, bigquery, clickhouse, databricks, db2, exasol, hive, materialize, mysql, oracle, postgres, redshift, snowflake, soql, sparksql, sqlite, teradata, tsql
------[0m
[0m2025-06-16 21:26:37 [0;34m[DEBUG][0m   Error code: 2. Command output:[0m
------

User Error: No dialect was specified. You must configure a dialect or specify one on the command line using --dialect after the command. Available dialects:
ansi, athena, bigquery, clickhouse, databricks, db2, exasol, hive, materialize, mysql, oracle, postgres, redshift, snowflake, soql, sparksql, sqlite, teradata, tsql
------[0m
[0m2025-06-16 21:26:37 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/resources/sql/create-orders-before.sql[0m
[0m2025-06-16 21:26:37 [0;34m[DEBUG][0m   FILE_STATUS (create-orders-before.sql) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:37 [0;34m[DEBUG][0m   File: /github/workspace/src/test/resources/sql/create-orders-before.sql, FILE_NAME: create-orders-before.sql, DIR_NAME:/github/workspace/src/test/resources/sql, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: sqlfluff, TEST_CASE_DIRECTORY: .automation/test/sqlfluff[0m
[0m2025-06-16 21:26:37 [0;34m[DEBUG][0m   SQLFLUFF expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/sqlfluff/[0m
[0m2025-06-16 21:26:37 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:37 [0;34m[INFO][0m   File:[/github/workspace/src/test/resources/sql/create-orders-before.sql][0m
[0m2025-06-16 21:26:38 [0;34m[DEBUG][0m   Found errors. Error code: 2, File type: SQLFLUFF, Error on missing exec bit: false[0m
[0m2025-06-16 21:26:38 [0;31m[ERROR][0m   Found errors in [sqlfluff] linter![0m
[0m2025-06-16 21:26:38 [0;31m[ERROR][0m   Error code: 2. Command output:[0m
------

User Error: No dialect was specified. You must configure a dialect or specify one on the command line using --dialect after the command. Available dialects:
ansi, athena, bigquery, clickhouse, databricks, db2, exasol, hive, materialize, mysql, oracle, postgres, redshift, snowflake, soql, sparksql, sqlite, teradata, tsql
------[0m
[0m2025-06-16 21:26:38 [0;34m[DEBUG][0m   Error code: 2. Command output:[0m
------

User Error: No dialect was specified. You must configure a dialect or specify one on the command line using --dialect after the command. Available dialects:
ansi, athena, bigquery, clickhouse, databricks, db2, exasol, hive, materialize, mysql, oracle, postgres, redshift, snowflake, soql, sparksql, sqlite, teradata, tsql
------[0m
[0m2025-06-16 21:26:38 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/resources/sql/create-perfumes-after.sql[0m
[0m2025-06-16 21:26:38 [0;34m[DEBUG][0m   FILE_STATUS (create-perfumes-after.sql) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:38 [0;34m[DEBUG][0m   File: /github/workspace/src/test/resources/sql/create-perfumes-after.sql, FILE_NAME: create-perfumes-after.sql, DIR_NAME:/github/workspace/src/test/resources/sql, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: sqlfluff, TEST_CASE_DIRECTORY: .automation/test/sqlfluff[0m
[0m2025-06-16 21:26:38 [0;34m[DEBUG][0m   SQLFLUFF expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/sqlfluff/[0m
[0m2025-06-16 21:26:38 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:38 [0;34m[INFO][0m   File:[/github/workspace/src/test/resources/sql/create-perfumes-after.sql][0m
[0m2025-06-16 21:26:38 [0;34m[DEBUG][0m   Found errors. Error code: 2, File type: SQLFLUFF, Error on missing exec bit: false[0m
[0m2025-06-16 21:26:38 [0;31m[ERROR][0m   Found errors in [sqlfluff] linter![0m
[0m2025-06-16 21:26:38 [0;31m[ERROR][0m   Error code: 2. Command output:[0m
------

User Error: No dialect was specified. You must configure a dialect or specify one on the command line using --dialect after the command. Available dialects:
ansi, athena, bigquery, clickhouse, databricks, db2, exasol, hive, materialize, mysql, oracle, postgres, redshift, snowflake, soql, sparksql, sqlite, teradata, tsql
------[0m
[0m2025-06-16 21:26:38 [0;34m[DEBUG][0m   Error code: 2. Command output:[0m
------

User Error: No dialect was specified. You must configure a dialect or specify one on the command line using --dialect after the command. Available dialects:
ansi, athena, bigquery, clickhouse, databricks, db2, exasol, hive, materialize, mysql, oracle, postgres, redshift, snowflake, soql, sparksql, sqlite, teradata, tsql
------[0m
[0m2025-06-16 21:26:38 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/resources/sql/create-perfumes-before.sql[0m
[0m2025-06-16 21:26:38 [0;34m[DEBUG][0m   FILE_STATUS (create-perfumes-before.sql) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:38 [0;34m[DEBUG][0m   File: /github/workspace/src/test/resources/sql/create-perfumes-before.sql, FILE_NAME: create-perfumes-before.sql, DIR_NAME:/github/workspace/src/test/resources/sql, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: sqlfluff, TEST_CASE_DIRECTORY: .automation/test/sqlfluff[0m
[0m2025-06-16 21:26:38 [0;34m[DEBUG][0m   SQLFLUFF expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/sqlfluff/[0m
[0m2025-06-16 21:26:38 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:38 [0;34m[INFO][0m   File:[/github/workspace/src/test/resources/sql/create-perfumes-before.sql][0m
[0m2025-06-16 21:26:39 [0;34m[DEBUG][0m   Found errors. Error code: 2, File type: SQLFLUFF, Error on missing exec bit: false[0m
[0m2025-06-16 21:26:39 [0;31m[ERROR][0m   Found errors in [sqlfluff] linter![0m
[0m2025-06-16 21:26:39 [0;31m[ERROR][0m   Error code: 2. Command output:[0m
------

User Error: No dialect was specified. You must configure a dialect or specify one on the command line using --dialect after the command. Available dialects:
ansi, athena, bigquery, clickhouse, databricks, db2, exasol, hive, materialize, mysql, oracle, postgres, redshift, snowflake, soql, sparksql, sqlite, teradata, tsql
------[0m
[0m2025-06-16 21:26:39 [0;34m[DEBUG][0m   Error code: 2. Command output:[0m
------

User Error: No dialect was specified. You must configure a dialect or specify one on the command line using --dialect after the command. Available dialects:
ansi, athena, bigquery, clickhouse, databricks, db2, exasol, hive, materialize, mysql, oracle, postgres, redshift, snowflake, soql, sparksql, sqlite, teradata, tsql
------[0m
[0m2025-06-16 21:26:39 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/resources/sql/create-user-after.sql[0m
[0m2025-06-16 21:26:39 [0;34m[DEBUG][0m   FILE_STATUS (create-user-after.sql) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:39 [0;34m[DEBUG][0m   File: /github/workspace/src/test/resources/sql/create-user-after.sql, FILE_NAME: create-user-after.sql, DIR_NAME:/github/workspace/src/test/resources/sql, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: sqlfluff, TEST_CASE_DIRECTORY: .automation/test/sqlfluff[0m
[0m2025-06-16 21:26:39 [0;34m[DEBUG][0m   SQLFLUFF expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/sqlfluff/[0m
[0m2025-06-16 21:26:39 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:39 [0;34m[INFO][0m   File:[/github/workspace/src/test/resources/sql/create-user-after.sql][0m
[0m2025-06-16 21:26:39 [0;34m[DEBUG][0m   Found errors. Error code: 2, File type: SQLFLUFF, Error on missing exec bit: false[0m
[0m2025-06-16 21:26:39 [0;31m[ERROR][0m   Found errors in [sqlfluff] linter![0m
[0m2025-06-16 21:26:39 [0;31m[ERROR][0m   Error code: 2. Command output:[0m
------

User Error: No dialect was specified. You must configure a dialect or specify one on the command line using --dialect after the command. Available dialects:
ansi, athena, bigquery, clickhouse, databricks, db2, exasol, hive, materialize, mysql, oracle, postgres, redshift, snowflake, soql, sparksql, sqlite, teradata, tsql
------[0m
[0m2025-06-16 21:26:39 [0;34m[DEBUG][0m   Error code: 2. Command output:[0m
------

User Error: No dialect was specified. You must configure a dialect or specify one on the command line using --dialect after the command. Available dialects:
ansi, athena, bigquery, clickhouse, databricks, db2, exasol, hive, materialize, mysql, oracle, postgres, redshift, snowflake, soql, sparksql, sqlite, teradata, tsql
------[0m
[0m2025-06-16 21:26:39 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/test/resources/sql/create-user-before.sql[0m
[0m2025-06-16 21:26:39 [0;34m[DEBUG][0m   FILE_STATUS (create-user-before.sql) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:39 [0;34m[DEBUG][0m   File: /github/workspace/src/test/resources/sql/create-user-before.sql, FILE_NAME: create-user-before.sql, DIR_NAME:/github/workspace/src/test/resources/sql, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: sqlfluff, TEST_CASE_DIRECTORY: .automation/test/sqlfluff[0m
[0m2025-06-16 21:26:39 [0;34m[DEBUG][0m   SQLFLUFF expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/sqlfluff/[0m
[0m2025-06-16 21:26:39 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:39 [0;34m[INFO][0m   File:[/github/workspace/src/test/resources/sql/create-user-before.sql][0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Found errors. Error code: 2, File type: SQLFLUFF, Error on missing exec bit: false[0m
[0m2025-06-16 21:26:40 [0;31m[ERROR][0m   Found errors in [sqlfluff] linter![0m
[0m2025-06-16 21:26:40 [0;31m[ERROR][0m   Error code: 2. Command output:[0m
------

User Error: No dialect was specified. You must configure a dialect or specify one on the command line using --dialect after the command. Available dialects:
ansi, athena, bigquery, clickhouse, databricks, db2, exasol, hive, materialize, mysql, oracle, postgres, redshift, snowflake, soql, sparksql, sqlite, teradata, tsql
------[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Error code: 2. Command output:[0m
------

User Error: No dialect was specified. You must configure a dialect or specify one on the command line using --dialect after the command. Available dialects:
ansi, athena, bigquery, clickhouse, databricks, db2, exasol, hive, materialize, mysql, oracle, postgres, redshift, snowflake, soql, sparksql, sqlite, teradata, tsql
------[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Running linter for the TEKTON language...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_TEKTON...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Setting LINTER_NAME to tekton-lint...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to tekton-lint...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_TEKTON...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   FILE_ARRAY_TEKTON file array contents: [0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Invoking tekton-lint linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[TEKTON][0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Running linter for the TERRAFORM_TFLINT language...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_TERRAFORM_TFLINT...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Setting LINTER_NAME to tflint...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to tflint -c /action/lib/.automation/.tflint.hcl...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_TERRAFORM_TFLINT...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   FILE_ARRAY_TERRAFORM_TFLINT file array contents: [0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Invoking tflint linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[TERRAFORM_TFLINT][0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Running linter for the TERRAFORM_TERRASCAN language...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_TERRAFORM_TERRASCAN...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Setting LINTER_NAME to terrascan...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to terrascan scan -i terraform -t all -c /action/lib/.automation/terrascan.toml -f...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_TERRAFORM_TERRASCAN...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   FILE_ARRAY_TERRAFORM_TERRASCAN file array contents: [0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Invoking terrascan linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[TERRAFORM_TERRASCAN][0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Running linter for the TERRAGRUNT language...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_TERRAGRUNT...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Setting LINTER_NAME to terragrunt...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to terragrunt hclfmt --terragrunt-check --terragrunt-log-level error --terragrunt-hclfmt-file...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_TERRAGRUNT...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   FILE_ARRAY_TERRAGRUNT file array contents: [0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Invoking terragrunt linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[TERRAGRUNT][0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Running linter for the TSX language...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_TSX...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Setting LINTER_NAME to eslint...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to eslint --no-eslintrc -c /action/lib/.automation/.eslintrc.yml...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_TSX...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   FILE_ARRAY_TSX file array contents: [0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Invoking eslint linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[TSX][0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Running linter for the TYPESCRIPT_ES language...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_TYPESCRIPT_ES...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Setting LINTER_NAME to eslint...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to eslint --no-eslintrc -c /action/lib/.automation/.eslintrc.yml...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_TYPESCRIPT_ES...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   FILE_ARRAY_TYPESCRIPT_ES file array contents: [0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Invoking eslint linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[TYPESCRIPT_ES][0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Running linter for the TYPESCRIPT_STANDARD language...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_TYPESCRIPT_STANDARD...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Setting LINTER_NAME to ts-standard...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to ts-standard --parser @typescript-eslint/parser --plugin @typescript-eslint/eslint-plugin --project /action/lib/.automation/tsconfig.json --env browser --env es6 --env jest...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_TYPESCRIPT_STANDARD...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   FILE_ARRAY_TYPESCRIPT_STANDARD file array contents: [0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Invoking ts-standard linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m    - No files found in changeset to lint for language:[TYPESCRIPT_STANDARD][0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   SKIP_FLAG: 1, list of files to lint: [0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Running linter for the XML language...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_XML...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Setting LINTER_NAME to xmllint...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to xmllint...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_XML...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   FILE_ARRAY_XML file array contents: /github/workspace/pom.xml[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Invoking xmllint linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   SKIP_FLAG: 0, list of files to lint: /github/workspace/pom.xml[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Workspace path: /github/workspace[0m
[0m2025-06-16 21:26:40 [0;34m[INFO][0m   [0m
[0m2025-06-16 21:26:40 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:26:40 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Running LintCodebase. FILE_TYPE: XML. Linter name: xmllint, linter command: xmllint, TEST_CASE_RUN: false, FILTER_REGEX_INCLUDE: , FILTER_REGEX_EXCLUDE: .*/securityReports/.* files to lint: /github/workspace/pom.xml[0m
[0m2025-06-16 21:26:40 [0;34m[INFO][0m   Linting [XML] files...[0m
[0m2025-06-16 21:26:40 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:26:40 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/pom.xml[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   FILE_STATUS (pom.xml) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   File: /github/workspace/pom.xml, FILE_NAME: pom.xml, DIR_NAME:/github/workspace, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: xml, TEST_CASE_DIRECTORY: .automation/test/xml[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   XML expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/xml/[0m
[0m2025-06-16 21:26:40 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:40 [0;34m[INFO][0m   File:[/github/workspace/pom.xml][0m
[0m2025-06-16 21:26:40 [0;34m[INFO][0m    - File:[0;37m[pom.xml][0;34m was linted with [0;37m[xmllint][0;34m successfully[0m
[0m2025-06-16 21:26:40 [0;34m[INFO][0m      - Command output:[0m
------
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.5.0</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.gmail.merikbest2015</groupId>
    <artifactId>ecommerce</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>ecommerce</name>
    <description>Ecommerce</description>

    <properties>
        <java.version>17</java.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>bom</artifactId>
                <version>2.26.11</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Web -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>


        <!-- Devtools -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>

        <!-- PostgreSQL -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.7.7</version>
            <scope>runtime</scope>
        </dependency>

        <!-- JPA -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <!-- Security -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>

        <!-- OAuth2 -->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-oauth2-client</artifactId>
            <version>6.5.0</version>
        </dependency>

        <!-- Mail -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>

        <!-- Lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.30</version>
            <scope>provided</scope>
        </dependency>

        <!-- Flyway -->
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
            <version>11.9.1</version>
        </dependency>
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-database-postgresql</artifactId>
        </dependency>

        <!-- JWT -->
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-api</artifactId>
            <version>0.12.0</version>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-impl</artifactId>
            <version>0.12.0</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-jackson</artifactId>
            <version>0.12.0</version>
            <scope>runtime</scope>
        </dependency>

        <!-- AWS S3 SDK v2 -->
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>s3</artifactId>
        </dependency>

        <!-- Model Mapper -->
        <dependency>
            <groupId>org.modelmapper</groupId>
            <artifactId>modelmapper</artifactId>
            <version>2.3.9</version>
        </dependency>

        <!-- Bean Validation -->
        <dependency>
            <groupId>jakarta.validation</groupId>
            <artifactId>jakarta.validation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>

        <!-- GraphQL Spring Boot 3+ via Netflix DGS ou Spring GraphQL -->
        <dependency>
            <groupId>org.springframework.graphql</groupId>
            <artifactId>spring-graphql</artifactId>
        </dependency>

        <!-- AOP -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>

        <!-- SpringDoc OpenAPI -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>2.2.0</version>
        </dependency>

        <!-- WebSocket -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-websocket</artifactId>
        </dependency>

        <!-- Thymeleaf -->
        <dependency>
            <groupId>org.thymeleaf</groupId>
            <artifactId>thymeleaf</artifactId>
            <version>3.1.3.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>org.thymeleaf</groupId>
            <artifactId>thymeleaf-spring6</artifactId>
            <version>3.1.3.RELEASE</version>
        </dependency>

        <!-- Utilitários -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>33.3.1-jre</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.17.0</version>
        </dependency>

        <!-- Testes -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Actuator -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!-- Logging -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>
    </dependencies>


    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M5</version>
                <configuration>
                    <skipTests>${skip.unit.tests}</skipTests>
                    <includes>
                        <include>**/domain/*Test.java</include>
                    </includes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>3.0.0-M5</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <skipITs>${skip.integration.tests}</skipITs>
                    <includes>
                        <include>**/controller/*Test.java</include>
                        <include>**/service/Impl/*Test.java</include>
                        <include>**/mapper/*Test.java</include>
                    </includes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.10</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>unitTest</id>
            <activation>
                <activeByDefault>true</activeByDefault> <!-- optional, default profile -->
            </activation>
            <properties>
                <skip.unit.tests>false</skip.unit.tests>
                <skip.integration.tests>true</skip.integration.tests>
            </properties>
        </profile>

        <profile>
            <id>integrationTest</id>
            <properties>
                <skip.unit.tests>true</skip.unit.tests>
                <skip.integration.tests>false</skip.integration.tests>
            </properties>
        </profile>
    </profiles>
</project>
------[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.5.0</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.gmail.merikbest2015</groupId>
    <artifactId>ecommerce</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>ecommerce</name>
    <description>Ecommerce</description>

    <properties>
        <java.version>17</java.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>bom</artifactId>
                <version>2.26.11</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Web -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>


        <!-- Devtools -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>

        <!-- PostgreSQL -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.7.7</version>
            <scope>runtime</scope>
        </dependency>

        <!-- JPA -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <!-- Security -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>

        <!-- OAuth2 -->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-oauth2-client</artifactId>
            <version>6.5.0</version>
        </dependency>

        <!-- Mail -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>

        <!-- Lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.30</version>
            <scope>provided</scope>
        </dependency>

        <!-- Flyway -->
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
            <version>11.9.1</version>
        </dependency>
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-database-postgresql</artifactId>
        </dependency>

        <!-- JWT -->
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-api</artifactId>
            <version>0.12.0</version>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-impl</artifactId>
            <version>0.12.0</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-jackson</artifactId>
            <version>0.12.0</version>
            <scope>runtime</scope>
        </dependency>

        <!-- AWS S3 SDK v2 -->
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>s3</artifactId>
        </dependency>

        <!-- Model Mapper -->
        <dependency>
            <groupId>org.modelmapper</groupId>
            <artifactId>modelmapper</artifactId>
            <version>2.3.9</version>
        </dependency>

        <!-- Bean Validation -->
        <dependency>
            <groupId>jakarta.validation</groupId>
            <artifactId>jakarta.validation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>

        <!-- GraphQL Spring Boot 3+ via Netflix DGS ou Spring GraphQL -->
        <dependency>
            <groupId>org.springframework.graphql</groupId>
            <artifactId>spring-graphql</artifactId>
        </dependency>

        <!-- AOP -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>

        <!-- SpringDoc OpenAPI -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>2.2.0</version>
        </dependency>

        <!-- WebSocket -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-websocket</artifactId>
        </dependency>

        <!-- Thymeleaf -->
        <dependency>
            <groupId>org.thymeleaf</groupId>
            <artifactId>thymeleaf</artifactId>
            <version>3.1.3.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>org.thymeleaf</groupId>
            <artifactId>thymeleaf-spring6</artifactId>
            <version>3.1.3.RELEASE</version>
        </dependency>

        <!-- Utilitários -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>33.3.1-jre</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.17.0</version>
        </dependency>

        <!-- Testes -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Actuator -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!-- Logging -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>
    </dependencies>


    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M5</version>
                <configuration>
                    <skipTests>${skip.unit.tests}</skipTests>
                    <includes>
                        <include>**/domain/*Test.java</include>
                    </includes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>3.0.0-M5</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <skipITs>${skip.integration.tests}</skipITs>
                    <includes>
                        <include>**/controller/*Test.java</include>
                        <include>**/service/Impl/*Test.java</include>
                        <include>**/mapper/*Test.java</include>
                    </includes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.10</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>unitTest</id>
            <activation>
                <activeByDefault>true</activeByDefault> <!-- optional, default profile -->
            </activation>
            <properties>
                <skip.unit.tests>false</skip.unit.tests>
                <skip.integration.tests>true</skip.integration.tests>
            </properties>
        </profile>

        <profile>
            <id>integrationTest</id>
            <properties>
                <skip.unit.tests>true</skip.unit.tests>
                <skip.integration.tests>false</skip.integration.tests>
            </properties>
        </profile>
    </profiles>
</project>
------[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Running linter for the YAML language...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_NAME to VALIDATE_YAML...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Setting VALIDATE_LANGUAGE_VARIABLE_VALUE to true...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Setting LINTER_NAME to yamllint...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Setting LINTER_COMMAND to yamllint -c /action/lib/.automation/.yaml-lint.yml -f parsable...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Setting FILE_ARRAY_VARIABLE_NAME to FILE_ARRAY_YAML...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   FILE_ARRAY_YAML file array contents: /github/workspace/.github/ISSUE_TEMPLATE/issue_template.yml /github/workspace/.github/workflows/cicd.yml /github/workspace/.github/workflows/detect-new-secrets.yml /github/workspace/.github/workflows/gitleaks.yml /github/workspace/.github/workflows/snyk-security.yml /github/workspace/.github/workflows/superlinter.yml /github/workspace/.github/workflows/superpipeline.yml /github/workspace/docker-compose.yml /github/workspace/src/main/resources/static/swagger-api/swagger.yaml[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Invoking yamllint linter. TEST_CASE_RUN: false[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   SKIP_FLAG: 0, list of files to lint: /github/workspace/.github/ISSUE_TEMPLATE/issue_template.yml /github/workspace/.github/workflows/cicd.yml /github/workspace/.github/workflows/detect-new-secrets.yml /github/workspace/.github/workflows/gitleaks.yml /github/workspace/.github/workflows/snyk-security.yml /github/workspace/.github/workflows/superlinter.yml /github/workspace/.github/workflows/superpipeline.yml /github/workspace/docker-compose.yml /github/workspace/src/main/resources/static/swagger-api/swagger.yaml[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Workspace path: /github/workspace[0m
[0m2025-06-16 21:26:40 [0;34m[INFO][0m   [0m
[0m2025-06-16 21:26:40 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:26:40 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Running LintCodebase. FILE_TYPE: YAML. Linter name: yamllint, linter command: yamllint -c /action/lib/.automation/.yaml-lint.yml -f parsable, TEST_CASE_RUN: false, FILTER_REGEX_INCLUDE: , FILTER_REGEX_EXCLUDE: .*/securityReports/.* files to lint: /github/workspace/.github/ISSUE_TEMPLATE/issue_template.yml /github/workspace/.github/workflows/cicd.yml /github/workspace/.github/workflows/detect-new-secrets.yml /github/workspace/.github/workflows/gitleaks.yml /github/workspace/.github/workflows/snyk-security.yml /github/workspace/.github/workflows/superlinter.yml /github/workspace/.github/workflows/superpipeline.yml /github/workspace/docker-compose.yml /github/workspace/src/main/resources/static/swagger-api/swagger.yaml[0m
[0m2025-06-16 21:26:40 [0;34m[INFO][0m   Linting [YAML] files...[0m
[0m2025-06-16 21:26:40 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:26:40 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/.github/ISSUE_TEMPLATE/issue_template.yml[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   FILE_STATUS (template.yml) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   File: /github/workspace/.github/ISSUE_TEMPLATE/issue_template.yml, FILE_NAME: issue_template.yml, DIR_NAME:/github/workspace/.github/ISSUE_TEMPLATE, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: yaml, TEST_CASE_DIRECTORY: .automation/test/yaml[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   YAML expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/yaml/[0m
[0m2025-06-16 21:26:40 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:40 [0;34m[INFO][0m   File:[/github/workspace/.github/ISSUE_TEMPLATE/issue_template.yml][0m
[0m2025-06-16 21:26:40 [0;34m[INFO][0m    - File:[0;37m[issue_template.yml][0;34m was linted with [0;37m[yamllint][0;34m successfully[0m
[0m2025-06-16 21:26:40 [0;34m[INFO][0m      - Command output:[0m
------
/github/workspace/.github/ISSUE_TEMPLATE/issue_template.yml:1:1: [warning] missing document start "---" (document-start)
/github/workspace/.github/ISSUE_TEMPLATE/issue_template.yml:4:10: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/.github/ISSUE_TEMPLATE/issue_template.yml:5:13: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/.github/ISSUE_TEMPLATE/issue_template.yml:12:81: [warning] line too long (88 > 80 characters) (line-length)
/github/workspace/.github/ISSUE_TEMPLATE/issue_template.yml:14:81: [warning] line too long (86 > 80 characters) (line-length)
/github/workspace/.github/ISSUE_TEMPLATE/issue_template.yml:17:81: [warning] line too long (145 > 80 characters) (line-length)
/github/workspace/.github/ISSUE_TEMPLATE/issue_template.yml:18:81: [warning] line too long (85 > 80 characters) (line-length)
/github/workspace/.github/ISSUE_TEMPLATE/issue_template.yml:43:81: [warning] line too long (103 > 80 characters) (line-length)
------[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
/github/workspace/.github/ISSUE_TEMPLATE/issue_template.yml:1:1: [warning] missing document start "---" (document-start)
/github/workspace/.github/ISSUE_TEMPLATE/issue_template.yml:4:10: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/.github/ISSUE_TEMPLATE/issue_template.yml:5:13: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/.github/ISSUE_TEMPLATE/issue_template.yml:12:81: [warning] line too long (88 > 80 characters) (line-length)
/github/workspace/.github/ISSUE_TEMPLATE/issue_template.yml:14:81: [warning] line too long (86 > 80 characters) (line-length)
/github/workspace/.github/ISSUE_TEMPLATE/issue_template.yml:17:81: [warning] line too long (145 > 80 characters) (line-length)
/github/workspace/.github/ISSUE_TEMPLATE/issue_template.yml:18:81: [warning] line too long (85 > 80 characters) (line-length)
/github/workspace/.github/ISSUE_TEMPLATE/issue_template.yml:43:81: [warning] line too long (103 > 80 characters) (line-length)
------[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/.github/workflows/cicd.yml[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   FILE_STATUS (cicd.yml) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   File: /github/workspace/.github/workflows/cicd.yml, FILE_NAME: cicd.yml, DIR_NAME:/github/workspace/.github/workflows, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: yaml, TEST_CASE_DIRECTORY: .automation/test/yaml[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   YAML expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/yaml/[0m
[0m2025-06-16 21:26:40 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:40 [0;34m[INFO][0m   File:[/github/workspace/.github/workflows/cicd.yml][0m
[0m2025-06-16 21:26:40 [0;34m[INFO][0m    - File:[0;37m[cicd.yml][0;34m was linted with [0;37m[yamllint][0;34m successfully[0m
[0m2025-06-16 21:26:40 [0;34m[INFO][0m      - Command output:[0m
------
/github/workspace/.github/workflows/cicd.yml:1:1: [warning] missing document start "---" (document-start)
/github/workspace/.github/workflows/cicd.yml:23:81: [warning] line too long (99 > 80 characters) (line-length)
/github/workspace/.github/workflows/cicd.yml:50:81: [warning] line too long (82 > 80 characters) (line-length)
/github/workspace/.github/workflows/cicd.yml:99:81: [warning] line too long (98 > 80 characters) (line-length)
/github/workspace/.github/workflows/cicd.yml:108:81: [warning] line too long (91 > 80 characters) (line-length)
/github/workspace/.github/workflows/cicd.yml:138:81: [warning] line too long (114 > 80 characters) (line-length)
/github/workspace/.github/workflows/cicd.yml:221:81: [warning] line too long (98 > 80 characters) (line-length)
/github/workspace/.github/workflows/cicd.yml:225:81: [warning] line too long (127 > 80 characters) (line-length)
/github/workspace/.github/workflows/cicd.yml:226:81: [warning] line too long (153 > 80 characters) (line-length)
/github/workspace/.github/workflows/cicd.yml:230:81: [warning] line too long (97 > 80 characters) (line-length)
/github/workspace/.github/workflows/cicd.yml:240:1: [warning] too many blank lines (2 > 0) (empty-lines)
------[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
/github/workspace/.github/workflows/cicd.yml:1:1: [warning] missing document start "---" (document-start)
/github/workspace/.github/workflows/cicd.yml:23:81: [warning] line too long (99 > 80 characters) (line-length)
/github/workspace/.github/workflows/cicd.yml:50:81: [warning] line too long (82 > 80 characters) (line-length)
/github/workspace/.github/workflows/cicd.yml:99:81: [warning] line too long (98 > 80 characters) (line-length)
/github/workspace/.github/workflows/cicd.yml:108:81: [warning] line too long (91 > 80 characters) (line-length)
/github/workspace/.github/workflows/cicd.yml:138:81: [warning] line too long (114 > 80 characters) (line-length)
/github/workspace/.github/workflows/cicd.yml:221:81: [warning] line too long (98 > 80 characters) (line-length)
/github/workspace/.github/workflows/cicd.yml:225:81: [warning] line too long (127 > 80 characters) (line-length)
/github/workspace/.github/workflows/cicd.yml:226:81: [warning] line too long (153 > 80 characters) (line-length)
/github/workspace/.github/workflows/cicd.yml:230:81: [warning] line too long (97 > 80 characters) (line-length)
/github/workspace/.github/workflows/cicd.yml:240:1: [warning] too many blank lines (2 > 0) (empty-lines)
------[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/.github/workflows/detect-new-secrets.yml[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   FILE_STATUS (detect-new-secrets.yml) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   File: /github/workspace/.github/workflows/detect-new-secrets.yml, FILE_NAME: detect-new-secrets.yml, DIR_NAME:/github/workspace/.github/workflows, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: yaml, TEST_CASE_DIRECTORY: .automation/test/yaml[0m
[0m2025-06-16 21:26:40 [0;34m[DEBUG][0m   YAML expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/yaml/[0m
[0m2025-06-16 21:26:40 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:40 [0;34m[INFO][0m   File:[/github/workspace/.github/workflows/detect-new-secrets.yml][0m
[0m2025-06-16 21:26:41 [0;34m[INFO][0m    - File:[0;37m[detect-new-secrets.yml][0;34m was linted with [0;37m[yamllint][0;34m successfully[0m
[0m2025-06-16 21:26:41 [0;34m[INFO][0m      - Command output:[0m
------
/github/workspace/.github/workflows/detect-new-secrets.yml:1:1: [warning] missing document start "---" (document-start)
------[0m
[0m2025-06-16 21:26:41 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
/github/workspace/.github/workflows/detect-new-secrets.yml:1:1: [warning] missing document start "---" (document-start)
------[0m
[0m2025-06-16 21:26:41 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/.github/workflows/gitleaks.yml[0m
[0m2025-06-16 21:26:41 [0;34m[DEBUG][0m   FILE_STATUS (gitleaks.yml) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:41 [0;34m[DEBUG][0m   File: /github/workspace/.github/workflows/gitleaks.yml, FILE_NAME: gitleaks.yml, DIR_NAME:/github/workspace/.github/workflows, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: yaml, TEST_CASE_DIRECTORY: .automation/test/yaml[0m
[0m2025-06-16 21:26:41 [0;34m[DEBUG][0m   YAML expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/yaml/[0m
[0m2025-06-16 21:26:41 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:41 [0;34m[INFO][0m   File:[/github/workspace/.github/workflows/gitleaks.yml][0m
[0m2025-06-16 21:26:41 [0;34m[INFO][0m    - File:[0;37m[gitleaks.yml][0;34m was linted with [0;37m[yamllint][0;34m successfully[0m
[0m2025-06-16 21:26:41 [0;34m[INFO][0m      - Command output:[0m
------
/github/workspace/.github/workflows/gitleaks.yml:1:1: [warning] missing document start "---" (document-start)
/github/workspace/.github/workflows/gitleaks.yml:20:81: [warning] line too long (82 > 80 characters) (line-length)
------[0m
[0m2025-06-16 21:26:41 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
/github/workspace/.github/workflows/gitleaks.yml:1:1: [warning] missing document start "---" (document-start)
/github/workspace/.github/workflows/gitleaks.yml:20:81: [warning] line too long (82 > 80 characters) (line-length)
------[0m
[0m2025-06-16 21:26:41 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/.github/workflows/snyk-security.yml[0m
[0m2025-06-16 21:26:41 [0;34m[DEBUG][0m   FILE_STATUS (snyk-security.yml) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:41 [0;34m[DEBUG][0m   File: /github/workspace/.github/workflows/snyk-security.yml, FILE_NAME: snyk-security.yml, DIR_NAME:/github/workspace/.github/workflows, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: yaml, TEST_CASE_DIRECTORY: .automation/test/yaml[0m
[0m2025-06-16 21:26:41 [0;34m[DEBUG][0m   YAML expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/yaml/[0m
[0m2025-06-16 21:26:41 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:41 [0;34m[INFO][0m   File:[/github/workspace/.github/workflows/snyk-security.yml][0m
[0m2025-06-16 21:26:41 [0;34m[INFO][0m    - File:[0;37m[snyk-security.yml][0;34m was linted with [0;37m[yamllint][0;34m successfully[0m
[0m2025-06-16 21:26:41 [0;34m[INFO][0m      - Command output:[0m
------
/github/workspace/.github/workflows/snyk-security.yml:1:1: [warning] missing document start "---" (document-start)
/github/workspace/.github/workflows/snyk-security.yml:37:81: [warning] line too long (105 > 80 characters) (line-length)
/github/workspace/.github/workflows/snyk-security.yml:53:1: [warning] too many blank lines (3 > 2) (empty-lines)
/github/workspace/.github/workflows/snyk-security.yml:81:81: [warning] line too long (97 > 80 characters) (line-length)
/github/workspace/.github/workflows/snyk-security.yml:97:13: [warning] too many spaces inside brackets (brackets)
/github/workspace/.github/workflows/snyk-security.yml:97:23: [warning] too many spaces inside brackets (brackets)
/github/workspace/.github/workflows/snyk-security.yml:134:81: [warning] line too long (87 > 80 characters) (line-length)
/github/workspace/.github/workflows/snyk-security.yml:135:81: [warning] line too long (141 > 80 characters) (line-length)
/github/workspace/.github/workflows/snyk-security.yml:136:81: [warning] line too long (97 > 80 characters) (line-length)
------[0m
[0m2025-06-16 21:26:41 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
/github/workspace/.github/workflows/snyk-security.yml:1:1: [warning] missing document start "---" (document-start)
/github/workspace/.github/workflows/snyk-security.yml:37:81: [warning] line too long (105 > 80 characters) (line-length)
/github/workspace/.github/workflows/snyk-security.yml:53:1: [warning] too many blank lines (3 > 2) (empty-lines)
/github/workspace/.github/workflows/snyk-security.yml:81:81: [warning] line too long (97 > 80 characters) (line-length)
/github/workspace/.github/workflows/snyk-security.yml:97:13: [warning] too many spaces inside brackets (brackets)
/github/workspace/.github/workflows/snyk-security.yml:97:23: [warning] too many spaces inside brackets (brackets)
/github/workspace/.github/workflows/snyk-security.yml:134:81: [warning] line too long (87 > 80 characters) (line-length)
/github/workspace/.github/workflows/snyk-security.yml:135:81: [warning] line too long (141 > 80 characters) (line-length)
/github/workspace/.github/workflows/snyk-security.yml:136:81: [warning] line too long (97 > 80 characters) (line-length)
------[0m
[0m2025-06-16 21:26:41 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/.github/workflows/superlinter.yml[0m
[0m2025-06-16 21:26:41 [0;34m[DEBUG][0m   FILE_STATUS (superlinter.yml) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:41 [0;34m[DEBUG][0m   File: /github/workspace/.github/workflows/superlinter.yml, FILE_NAME: superlinter.yml, DIR_NAME:/github/workspace/.github/workflows, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: yaml, TEST_CASE_DIRECTORY: .automation/test/yaml[0m
[0m2025-06-16 21:26:41 [0;34m[DEBUG][0m   YAML expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/yaml/[0m
[0m2025-06-16 21:26:41 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:41 [0;34m[INFO][0m   File:[/github/workspace/.github/workflows/superlinter.yml][0m
[0m2025-06-16 21:26:41 [0;34m[INFO][0m    - File:[0;37m[superlinter.yml][0;34m was linted with [0;37m[yamllint][0;34m successfully[0m
[0m2025-06-16 21:26:41 [0;34m[INFO][0m      - Command output:[0m
------
/github/workspace/.github/workflows/superlinter.yml:1:1: [warning] missing document start "---" (document-start)
------[0m
[0m2025-06-16 21:26:41 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
/github/workspace/.github/workflows/superlinter.yml:1:1: [warning] missing document start "---" (document-start)
------[0m
[0m2025-06-16 21:26:41 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/.github/workflows/superpipeline.yml[0m
[0m2025-06-16 21:26:41 [0;34m[DEBUG][0m   FILE_STATUS (superpipeline.yml) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:41 [0;34m[DEBUG][0m   File: /github/workspace/.github/workflows/superpipeline.yml, FILE_NAME: superpipeline.yml, DIR_NAME:/github/workspace/.github/workflows, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: yaml, TEST_CASE_DIRECTORY: .automation/test/yaml[0m
[0m2025-06-16 21:26:41 [0;34m[DEBUG][0m   YAML expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/yaml/[0m
[0m2025-06-16 21:26:41 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:41 [0;34m[INFO][0m   File:[/github/workspace/.github/workflows/superpipeline.yml][0m
[0m2025-06-16 21:26:41 [0;34m[INFO][0m    - File:[0;37m[superpipeline.yml][0;34m was linted with [0;37m[yamllint][0;34m successfully[0m
[0m2025-06-16 21:26:41 [0;34m[INFO][0m      - Command output:[0m
------
/github/workspace/.github/workflows/superpipeline.yml:1:1: [warning] missing document start "---" (document-start)
/github/workspace/.github/workflows/superpipeline.yml:37:81: [warning] line too long (92 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:48:81: [warning] line too long (126 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:51:81: [warning] line too long (117 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:70:1: [warning] too many blank lines (3 > 2) (empty-lines)
/github/workspace/.github/workflows/superpipeline.yml:91:81: [warning] line too long (116 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:213:81: [warning] line too long (98 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:222:81: [warning] line too long (91 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:253:81: [warning] line too long (102 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:289:81: [warning] line too long (93 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:300:81: [warning] line too long (109 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:312:81: [warning] line too long (94 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:325:81: [warning] line too long (114 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:354:81: [warning] line too long (108 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:367:81: [warning] line too long (109 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:387:81: [warning] line too long (81 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:401:81: [warning] line too long (103 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:477:81: [warning] line too long (84 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:485:81: [warning] line too long (88 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:493:81: [warning] line too long (96 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:496:81: [warning] line too long (95 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:515:81: [warning] line too long (85 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:516:81: [warning] line too long (106 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:521:81: [warning] line too long (85 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:522:81: [warning] line too long (106 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:533:81: [warning] line too long (110 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:534:81: [warning] line too long (87 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:545:81: [warning] line too long (117 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:546:81: [warning] line too long (101 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:549:81: [warning] line too long (89 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:561:81: [warning] line too long (87 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:574:7: [warning] wrong indentation: expected 4 but found 6 (indentation)
/github/workspace/.github/workflows/superpipeline.yml:601:81: [warning] line too long (100 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:605:81: [warning] line too long (129 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:606:81: [warning] line too long (155 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:610:81: [warning] line too long (99 > 80 characters) (line-length)
------[0m
[0m2025-06-16 21:26:41 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
/github/workspace/.github/workflows/superpipeline.yml:1:1: [warning] missing document start "---" (document-start)
/github/workspace/.github/workflows/superpipeline.yml:37:81: [warning] line too long (92 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:48:81: [warning] line too long (126 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:51:81: [warning] line too long (117 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:70:1: [warning] too many blank lines (3 > 2) (empty-lines)
/github/workspace/.github/workflows/superpipeline.yml:91:81: [warning] line too long (116 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:213:81: [warning] line too long (98 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:222:81: [warning] line too long (91 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:253:81: [warning] line too long (102 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:289:81: [warning] line too long (93 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:300:81: [warning] line too long (109 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:312:81: [warning] line too long (94 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:325:81: [warning] line too long (114 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:354:81: [warning] line too long (108 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:367:81: [warning] line too long (109 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:387:81: [warning] line too long (81 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:401:81: [warning] line too long (103 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:477:81: [warning] line too long (84 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:485:81: [warning] line too long (88 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:493:81: [warning] line too long (96 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:496:81: [warning] line too long (95 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:515:81: [warning] line too long (85 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:516:81: [warning] line too long (106 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:521:81: [warning] line too long (85 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:522:81: [warning] line too long (106 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:533:81: [warning] line too long (110 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:534:81: [warning] line too long (87 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:545:81: [warning] line too long (117 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:546:81: [warning] line too long (101 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:549:81: [warning] line too long (89 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:561:81: [warning] line too long (87 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:574:7: [warning] wrong indentation: expected 4 but found 6 (indentation)
/github/workspace/.github/workflows/superpipeline.yml:601:81: [warning] line too long (100 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:605:81: [warning] line too long (129 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:606:81: [warning] line too long (155 > 80 characters) (line-length)
/github/workspace/.github/workflows/superpipeline.yml:610:81: [warning] line too long (99 > 80 characters) (line-length)
------[0m
[0m2025-06-16 21:26:41 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/docker-compose.yml[0m
[0m2025-06-16 21:26:41 [0;34m[DEBUG][0m   FILE_STATUS (docker-compose.yml) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:41 [0;34m[DEBUG][0m   File: /github/workspace/docker-compose.yml, FILE_NAME: docker-compose.yml, DIR_NAME:/github/workspace, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: yaml, TEST_CASE_DIRECTORY: .automation/test/yaml[0m
[0m2025-06-16 21:26:41 [0;34m[DEBUG][0m   YAML expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/yaml/[0m
[0m2025-06-16 21:26:41 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:41 [0;34m[INFO][0m   File:[/github/workspace/docker-compose.yml][0m
[0m2025-06-16 21:26:41 [0;34m[INFO][0m    - File:[0;37m[docker-compose.yml][0;34m was linted with [0;37m[yamllint][0;34m successfully[0m
[0m2025-06-16 21:26:41 [0;34m[INFO][0m      - Command output:[0m
------
/github/workspace/docker-compose.yml:1:1: [warning] missing document start "---" (document-start)
------[0m
[0m2025-06-16 21:26:41 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
/github/workspace/docker-compose.yml:1:1: [warning] missing document start "---" (document-start)
------[0m
[0m2025-06-16 21:26:41 [0;34m[DEBUG][0m   Linting FILE: /github/workspace/src/main/resources/static/swagger-api/swagger.yaml[0m
[0m2025-06-16 21:26:41 [0;34m[DEBUG][0m   FILE_STATUS (swagger.yaml) is empty, or not set to 'good' or 'bad'. Assuming it should be linted correctly. Setting FILE_STATUS to 'good'...[0m
[0m2025-06-16 21:26:41 [0;34m[DEBUG][0m   File: /github/workspace/src/main/resources/static/swagger-api/swagger.yaml, FILE_NAME: swagger.yaml, DIR_NAME:/github/workspace/src/main/resources/static/swagger-api, FILE_STATUS: good, INDIVIDUAL_TEST_FOLDER: yaml, TEST_CASE_DIRECTORY: .automation/test/yaml[0m
[0m2025-06-16 21:26:41 [0;34m[DEBUG][0m   YAML expects to lint individual files. Updated TEST_CASE_DIRECTORY to: .automation/test/yaml/[0m
[0m2025-06-16 21:26:41 [0;34m[INFO][0m   ---------------------------[0m
[0m2025-06-16 21:26:41 [0;34m[INFO][0m   File:[/github/workspace/src/main/resources/static/swagger-api/swagger.yaml][0m
[0m2025-06-16 21:26:42 [0;34m[INFO][0m    - File:[0;37m[swagger.yaml][0;34m was linted with [0;37m[yamllint][0;34m successfully[0m
[0m2025-06-16 21:26:42 [0;34m[INFO][0m      - Command output:[0m
------
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:1:1: [warning] missing document start "---" (document-start)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:91:19: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:167:19: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:204:19: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:212:20: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:223:19: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:247:19: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:284:19: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:317:19: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:325:20: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:336:19: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:353:81: [warning] line too long (111 > 80 characters) (line-length)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:389:19: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:406:81: [warning] line too long (105 > 80 characters) (line-length)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:444:19: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:461:81: [warning] line too long (208 > 80 characters) (line-length)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:472:19: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:489:81: [warning] line too long (240 > 80 characters) (line-length)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:500:19: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:708:81: [warning] line too long (90 > 80 characters) (line-length)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:709:81: [warning] line too long (104 > 80 characters) (line-length)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:715:19: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:723:20: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:923:81: [warning] line too long (103 > 80 characters) (line-length)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:969:81: [warning] line too long (83 > 80 characters) (line-length)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:1015:81: [warning] line too long (90 > 80 characters) (line-length)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:1110:81: [warning] line too long (90 > 80 characters) (line-length)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:1111:81: [warning] line too long (104 > 80 characters) (line-length)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:1154:20: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:1173:19: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:1190:81: [warning] line too long (175 > 80 characters) (line-length)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:1226:19: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:1282:19: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:1340:19: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:1383:20: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:1394:19: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:1411:81: [warning] line too long (240 > 80 characters) (line-length)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:1422:19: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:1830:13: [warning] wrong indentation: expected 10 but found 12 (indentation)
------[0m
[0m2025-06-16 21:26:42 [0;34m[DEBUG][0m   Error code: 0. Command output:[0m
------
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:1:1: [warning] missing document start "---" (document-start)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:91:19: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:167:19: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:204:19: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:212:20: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:223:19: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:247:19: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:284:19: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:317:19: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:325:20: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:336:19: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:353:81: [warning] line too long (111 > 80 characters) (line-length)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:389:19: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:406:81: [warning] line too long (105 > 80 characters) (line-length)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:444:19: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:461:81: [warning] line too long (208 > 80 characters) (line-length)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:472:19: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:489:81: [warning] line too long (240 > 80 characters) (line-length)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:500:19: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:708:81: [warning] line too long (90 > 80 characters) (line-length)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:709:81: [warning] line too long (104 > 80 characters) (line-length)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:715:19: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:723:20: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:923:81: [warning] line too long (103 > 80 characters) (line-length)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:969:81: [warning] line too long (83 > 80 characters) (line-length)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:1015:81: [warning] line too long (90 > 80 characters) (line-length)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:1110:81: [warning] line too long (90 > 80 characters) (line-length)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:1111:81: [warning] line too long (104 > 80 characters) (line-length)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:1154:20: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:1173:19: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:1190:81: [warning] line too long (175 > 80 characters) (line-length)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:1226:19: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:1282:19: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:1340:19: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:1383:20: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:1394:19: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:1411:81: [warning] line too long (240 > 80 characters) (line-length)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:1422:19: [warning] too few spaces inside empty brackets (brackets)
/github/workspace/src/main/resources/static/swagger-api/swagger.yaml:1830:13: [warning] wrong indentation: expected 10 but found 12 (indentation)
------[0m
[0m2025-06-16 21:26:42 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:26:42 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:26:42 [0;34m[INFO][0m   The script has completed[0m
[0m2025-06-16 21:26:42 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:26:42 [0;34m[INFO][0m   ----------------------------------------------[0m
[0m2025-06-16 21:26:42 [0;31m[ERROR][0m   ERRORS FOUND[0m in BASH:[1][0m
[0m2025-06-16 21:26:42 [0;34m[DEBUG][0m   Calling Multi-Status API for BASH with status error[0m
[0m2025-06-16 21:26:42 [0;34m[DEBUG][0m   URL: https://api.github.com/repos/desofs2025wednap1/desofs2025_wed_nap_1/statuses/cd856b7b457334f8121f9dbf3ac2fa199dfe4eaa[0m
[0m2025-06-16 21:26:42 [0;34m[DEBUG][0m   Send status comd output: [curl: (22) The requested URL returned error: 403][0m
[0m2025-06-16 21:26:42 [0;34m[INFO][0m   ERROR! Failed to call GitHub Status API![0m
[0m2025-06-16 21:26:42 [0;34m[INFO][0m   ERROR:[curl: (22) The requested URL returned error: 403][0m
[0m2025-06-16 21:26:42 [0;34m[DEBUG][0m   Calling Multi-Status API for BASH_EXEC with status success[0m
[0m2025-06-16 21:26:42 [0;34m[DEBUG][0m   URL: https://api.github.com/repos/desofs2025wednap1/desofs2025_wed_nap_1/statuses/cd856b7b457334f8121f9dbf3ac2fa199dfe4eaa[0m
[0m2025-06-16 21:26:42 [0;34m[DEBUG][0m   Send status comd output: [curl: (22) The requested URL returned error: 403][0m
[0m2025-06-16 21:26:42 [0;34m[INFO][0m   ERROR! Failed to call GitHub Status API![0m
[0m2025-06-16 21:26:42 [0;34m[INFO][0m   ERROR:[curl: (22) The requested URL returned error: 403][0m
[0m2025-06-16 21:26:42 [0;31m[ERROR][0m   ERRORS FOUND[0m in DOCKERFILE_HADOLINT:[1][0m
[0m2025-06-16 21:26:42 [0;34m[DEBUG][0m   Calling Multi-Status API for DOCKERFILE_HADOLINT with status error[0m
[0m2025-06-16 21:26:42 [0;34m[DEBUG][0m   URL: https://api.github.com/repos/desofs2025wednap1/desofs2025_wed_nap_1/statuses/cd856b7b457334f8121f9dbf3ac2fa199dfe4eaa[0m
[0m2025-06-16 21:26:43 [0;34m[DEBUG][0m   Send status comd output: [curl: (22) The requested URL returned error: 403][0m
[0m2025-06-16 21:26:43 [0;34m[INFO][0m   ERROR! Failed to call GitHub Status API![0m
[0m2025-06-16 21:26:43 [0;34m[INFO][0m   ERROR:[curl: (22) The requested URL returned error: 403][0m
[0m2025-06-16 21:26:43 [0;31m[ERROR][0m   ERRORS FOUND[0m in GITHUB_ACTIONS:[2][0m
[0m2025-06-16 21:26:43 [0;34m[DEBUG][0m   Calling Multi-Status API for GITHUB_ACTIONS with status error[0m
[0m2025-06-16 21:26:43 [0;34m[DEBUG][0m   URL: https://api.github.com/repos/desofs2025wednap1/desofs2025_wed_nap_1/statuses/cd856b7b457334f8121f9dbf3ac2fa199dfe4eaa[0m
[0m2025-06-16 21:26:43 [0;34m[DEBUG][0m   Send status comd output: [curl: (22) The requested URL returned error: 403][0m
[0m2025-06-16 21:26:43 [0;34m[INFO][0m   ERROR! Failed to call GitHub Status API![0m
[0m2025-06-16 21:26:43 [0;34m[INFO][0m   ERROR:[curl: (22) The requested URL returned error: 403][0m
[0m2025-06-16 21:26:43 [0;31m[ERROR][0m   ERRORS FOUND[0m in GITLEAKS:[4][0m
[0m2025-06-16 21:26:43 [0;34m[DEBUG][0m   Calling Multi-Status API for GITLEAKS with status error[0m
[0m2025-06-16 21:26:43 [0;34m[DEBUG][0m   URL: https://api.github.com/repos/desofs2025wednap1/desofs2025_wed_nap_1/statuses/cd856b7b457334f8121f9dbf3ac2fa199dfe4eaa[0m
[0m2025-06-16 21:26:43 [0;34m[DEBUG][0m   Send status comd output: [curl: (22) The requested URL returned error: 403][0m
[0m2025-06-16 21:26:43 [0;34m[INFO][0m   ERROR! Failed to call GitHub Status API![0m
[0m2025-06-16 21:26:43 [0;34m[INFO][0m   ERROR:[curl: (22) The requested URL returned error: 403][0m
[0m2025-06-16 21:26:43 [0;34m[DEBUG][0m   Calling Multi-Status API for GOOGLE_JAVA_FORMAT with status success[0m
[0m2025-06-16 21:26:43 [0;34m[DEBUG][0m   URL: https://api.github.com/repos/desofs2025wednap1/desofs2025_wed_nap_1/statuses/cd856b7b457334f8121f9dbf3ac2fa199dfe4eaa[0m
[0m2025-06-16 21:26:44 [0;34m[DEBUG][0m   Send status comd output: [curl: (22) The requested URL returned error: 403][0m
[0m2025-06-16 21:26:44 [0;34m[INFO][0m   ERROR! Failed to call GitHub Status API![0m
[0m2025-06-16 21:26:44 [0;34m[INFO][0m   ERROR:[curl: (22) The requested URL returned error: 403][0m
[0m2025-06-16 21:26:44 [0;31m[ERROR][0m   ERRORS FOUND[0m in HTML:[3][0m
[0m2025-06-16 21:26:44 [0;34m[DEBUG][0m   Calling Multi-Status API for HTML with status error[0m
[0m2025-06-16 21:26:44 [0;34m[DEBUG][0m   URL: https://api.github.com/repos/desofs2025wednap1/desofs2025_wed_nap_1/statuses/cd856b7b457334f8121f9dbf3ac2fa199dfe4eaa[0m
[0m2025-06-16 21:26:44 [0;34m[DEBUG][0m   Send status comd output: [curl: (22) The requested URL returned error: 403][0m
[0m2025-06-16 21:26:44 [0;34m[INFO][0m   ERROR! Failed to call GitHub Status API![0m
[0m2025-06-16 21:26:44 [0;34m[INFO][0m   ERROR:[curl: (22) The requested URL returned error: 403][0m
[0m2025-06-16 21:26:44 [0;31m[ERROR][0m   ERRORS FOUND[0m in JAVA:[112][0m
[0m2025-06-16 21:26:44 [0;34m[DEBUG][0m   Calling Multi-Status API for JAVA with status error[0m
[0m2025-06-16 21:26:44 [0;34m[DEBUG][0m   URL: https://api.github.com/repos/desofs2025wednap1/desofs2025_wed_nap_1/statuses/cd856b7b457334f8121f9dbf3ac2fa199dfe4eaa[0m
[0m2025-06-16 21:26:44 [0;34m[DEBUG][0m   Send status comd output: [curl: (22) The requested URL returned error: 403][0m
[0m2025-06-16 21:26:44 [0;34m[INFO][0m   ERROR! Failed to call GitHub Status API![0m
[0m2025-06-16 21:26:44 [0;34m[INFO][0m   ERROR:[curl: (22) The requested URL returned error: 403][0m
[0m2025-06-16 21:26:44 [0;31m[ERROR][0m   ERRORS FOUND[0m in JSCPD:[8][0m
[0m2025-06-16 21:26:44 [0;34m[DEBUG][0m   Calling Multi-Status API for JSCPD with status error[0m
[0m2025-06-16 21:26:45 [0;34m[DEBUG][0m   URL: https://api.github.com/repos/desofs2025wednap1/desofs2025_wed_nap_1/statuses/cd856b7b457334f8121f9dbf3ac2fa199dfe4eaa[0m
[0m2025-06-16 21:26:45 [0;34m[DEBUG][0m   Send status comd output: [curl: (22) The requested URL returned error: 403][0m
[0m2025-06-16 21:26:45 [0;34m[INFO][0m   ERROR! Failed to call GitHub Status API![0m
[0m2025-06-16 21:26:45 [0;34m[INFO][0m   ERROR:[curl: (22) The requested URL returned error: 403][0m
[0m2025-06-16 21:26:45 [0;31m[ERROR][0m   ERRORS FOUND[0m in MARKDOWN:[2][0m
[0m2025-06-16 21:26:45 [0;34m[DEBUG][0m   Calling Multi-Status API for MARKDOWN with status error[0m
[0m2025-06-16 21:26:45 [0;34m[DEBUG][0m   URL: https://api.github.com/repos/desofs2025wednap1/desofs2025_wed_nap_1/statuses/cd856b7b457334f8121f9dbf3ac2fa199dfe4eaa[0m
[0m2025-06-16 21:26:45 [0;34m[DEBUG][0m   Send status comd output: [curl: (22) The requested URL returned error: 403][0m
[0m2025-06-16 21:26:45 [0;34m[INFO][0m   ERROR! Failed to call GitHub Status API![0m
[0m2025-06-16 21:26:45 [0;34m[INFO][0m   ERROR:[curl: (22) The requested URL returned error: 403][0m
[0m2025-06-16 21:26:45 [0;31m[ERROR][0m   ERRORS FOUND[0m in NATURAL_LANGUAGE:[1][0m
[0m2025-06-16 21:26:45 [0;34m[DEBUG][0m   Calling Multi-Status API for NATURAL_LANGUAGE with status error[0m
[0m2025-06-16 21:26:45 [0;34m[DEBUG][0m   URL: https://api.github.com/repos/desofs2025wednap1/desofs2025_wed_nap_1/statuses/cd856b7b457334f8121f9dbf3ac2fa199dfe4eaa[0m
[0m2025-06-16 21:26:46 [0;34m[DEBUG][0m   Send status comd output: [curl: (22) The requested URL returned error: 403][0m
[0m2025-06-16 21:26:46 [0;34m[INFO][0m   ERROR! Failed to call GitHub Status API![0m
[0m2025-06-16 21:26:46 [0;34m[INFO][0m   ERROR:[curl: (22) The requested URL returned error: 403][0m
[0m2025-06-16 21:26:46 [0;31m[ERROR][0m   ERRORS FOUND[0m in OPENAPI:[1][0m
[0m2025-06-16 21:26:46 [0;34m[DEBUG][0m   Calling Multi-Status API for OPENAPI with status error[0m
[0m2025-06-16 21:26:46 [0;34m[DEBUG][0m   URL: https://api.github.com/repos/desofs2025wednap1/desofs2025_wed_nap_1/statuses/cd856b7b457334f8121f9dbf3ac2fa199dfe4eaa[0m
[0m2025-06-16 21:26:46 [0;34m[DEBUG][0m   Send status comd output: [curl: (22) The requested URL returned error: 403][0m
[0m2025-06-16 21:26:46 [0;34m[INFO][0m   ERROR! Failed to call GitHub Status API![0m
[0m2025-06-16 21:26:46 [0;34m[INFO][0m   ERROR:[curl: (22) The requested URL returned error: 403][0m
[0m2025-06-16 21:26:46 [0;31m[ERROR][0m   ERRORS FOUND[0m in SQL:[4][0m
[0m2025-06-16 21:26:46 [0;34m[DEBUG][0m   Calling Multi-Status API for SQL with status error[0m
[0m2025-06-16 21:26:46 [0;34m[DEBUG][0m   URL: https://api.github.com/repos/desofs2025wednap1/desofs2025_wed_nap_1/statuses/cd856b7b457334f8121f9dbf3ac2fa199dfe4eaa[0m
[0m2025-06-16 21:26:46 [0;34m[DEBUG][0m   Send status comd output: [curl: (22) The requested URL returned error: 403][0m
[0m2025-06-16 21:26:46 [0;34m[INFO][0m   ERROR! Failed to call GitHub Status API![0m
[0m2025-06-16 21:26:46 [0;34m[INFO][0m   ERROR:[curl: (22) The requested URL returned error: 403][0m
[0m2025-06-16 21:26:46 [0;31m[ERROR][0m   ERRORS FOUND[0m in SQLFLUFF:[11][0m
[0m2025-06-16 21:26:46 [0;34m[DEBUG][0m   Calling Multi-Status API for SQLFLUFF with status error[0m
[0m2025-06-16 21:26:46 [0;34m[DEBUG][0m   URL: https://api.github.com/repos/desofs2025wednap1/desofs2025_wed_nap_1/statuses/cd856b7b457334f8121f9dbf3ac2fa199dfe4eaa[0m
[0m2025-06-16 21:26:47 [0;34m[DEBUG][0m   Send status comd output: [curl: (22) The requested URL returned error: 403][0m
[0m2025-06-16 21:26:47 [0;34m[INFO][0m   ERROR! Failed to call GitHub Status API![0m
[0m2025-06-16 21:26:47 [0;34m[INFO][0m   ERROR:[curl: (22) The requested URL returned error: 403][0m
[0m2025-06-16 21:26:47 [0;34m[DEBUG][0m   Calling Multi-Status API for XML with status success[0m
[0m2025-06-16 21:26:47 [0;34m[DEBUG][0m   URL: https://api.github.com/repos/desofs2025wednap1/desofs2025_wed_nap_1/statuses/cd856b7b457334f8121f9dbf3ac2fa199dfe4eaa[0m
[0m2025-06-16 21:26:47 [0;34m[DEBUG][0m   Send status comd output: [curl: (22) The requested URL returned error: 403][0m
[0m2025-06-16 21:26:47 [0;34m[INFO][0m   ERROR! Failed to call GitHub Status API![0m
[0m2025-06-16 21:26:47 [0;34m[INFO][0m   ERROR:[curl: (22) The requested URL returned error: 403][0m
[0m2025-06-16 21:26:47 [0;34m[DEBUG][0m   Calling Multi-Status API for YAML with status success[0m
[0m2025-06-16 21:26:47 [0;34m[DEBUG][0m   URL: https://api.github.com/repos/desofs2025wednap1/desofs2025_wed_nap_1/statuses/cd856b7b457334f8121f9dbf3ac2fa199dfe4eaa[0m
[0m2025-06-16 21:26:47 [0;34m[DEBUG][0m   Send status comd output: [curl: (22) The requested URL returned error: 403][0m
[0m2025-06-16 21:26:47 [0;34m[INFO][0m   ERROR! Failed to call GitHub Status API![0m
[0m2025-06-16 21:26:47 [0;34m[INFO][0m   ERROR:[curl: (22) The requested URL returned error: 403][0m
[0m2025-06-16 21:26:47 [0;33m[WARN][0m   Exiting with exit code:[0] as:[DISABLE_ERRORS] was set to:[true][0m
