{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "SnykCode",
          "semanticVersion": "1.0.0",
          "version": "1.0.0",
          "rules": [
            {
              "id": "java/HardcodedPassword",
              "name": "HardcodedPassword",
              "shortDescription": {
                "text": "Use of Hardcoded Passwords"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nDevelopers may use hardcoded passwords during development to streamline setup or simplify authentication while testing. Although these passwords are intended to be removed before deployment, they are sometimes inadvertently left in the code. This introduces serious security risks, especially if the password grants elevated privileges or is reused across multiple systems.\n\nAn attacker who discovers a hardcoded password can potentially gain unauthorized access, escalate privileges, exfiltrate sensitive data, or disrupt service availability. If the password is reused across different environments or applications, the compromise can spread quickly and broadly.\n\n## Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java",
                  "HardcodedPassword",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/clowee/OpenSZZ-Cloud-Native/commit/ee429faf9d384074cf33515eda2a52e4e85ef061?diff=split#diff-a125fdf9d37b8daa4d9f0a7a46aedd416a80a49936bdee4bae40db3f3eef22deL-1",
                    "lines": [
                      {
                        "line": "final String username = \"noreply.openszz@gmail.com\";\n",
                        "lineNumber": 19,
                        "lineChange": "removed"
                      },
                      {
                        "line": "final String password = \"Aa30011992\";\n",
                        "lineNumber": 20,
                        "lineChange": "removed"
                      },
                      {
                        "line": "final String username = System.getenv(\"EMAIL\");\n",
                        "lineNumber": 19,
                        "lineChange": "added"
                      },
                      {
                        "line": "final String password = System.getenv(\"PWD\");\n",
                        "lineNumber": 20,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/winstonli/writelatex-git-bridge/commit/1117c70f31cee7d9a84c565c143f353d8bbab19e?diff=split#diff-16d090e60dcd386546c2164ae454bd356cbf326d715a66796582e8c003d8af10L-1",
                    "lines": [
                      {
                        "line": "    public static void setBasicAuth(String username, String password) {\n",
                        "lineNumber": 27,
                        "lineChange": "added"
                      },
                      {
                        "line": "        USERNAME = username;\n",
                        "lineNumber": 28,
                        "lineChange": "added"
                      },
                      {
                        "line": "        PASSWORD = password;\n",
                        "lineNumber": 29,
                        "lineChange": "added"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 30,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 31,
                        "lineChange": "added"
                      },
                      {
                        "line": "    public static void setBaseURL(String baseURL) {\n",
                        "lineNumber": 32,
                        "lineChange": "added"
                      },
                      {
                        "line": "        BASE_URL = baseURL;\n",
                        "lineNumber": 33,
                        "lineChange": "added"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 34,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 35,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/CheckChe0803/flink-recommandSystem-demo/commit/bbe348d12bc76858d8c0878f2a89ccc0f1e7b05b?diff=split#diff-7cac3b1a67764486d11265840a420739f0339a6cc8ff947d192de102366f8acaL-1",
                    "lines": [
                      {
                        "line": "private static String URL = \"jdbc:mysql://localhost/con?serverTimezone=GMT%2B8\";\n",
                        "lineNumber": 6,
                        "lineChange": "removed"
                      },
                      {
                        "line": "private static String NAME = \"root\";\n",
                        "lineNumber": 7,
                        "lineChange": "removed"
                      },
                      {
                        "line": "private static String PASS = \"root\";\n",
                        "lineNumber": 8,
                        "lineChange": "removed"
                      },
                      {
                        "line": "private static String URL = Property.getStrValue(\"mysql.url\");\n",
                        "lineNumber": 8,
                        "lineChange": "added"
                      },
                      {
                        "line": "private static String NAME = Property.getStrValue(\"mysql.name\");\n",
                        "lineNumber": 9,
                        "lineChange": "added"
                      },
                      {
                        "line": "private static String PASS = Property.getStrValue(\"mysql.pass\");\n",
                        "lineNumber": 10,
                        "lineChange": "added"
                      },
                      {
                        "line": "private static Statement stmt;\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "static {\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "    try {\n",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "        Class.forName(\"com.mysql.cj.jdbc.Driver\");\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "        Connection conn = DriverManager.getConnection(URL, NAME, PASS);\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 74,
                "cwe": [
                  "CWE-798",
                  "CWE-259"
                ]
              }
            },
            {
              "id": "java/PT",
              "name": "PT",
              "shortDescription": {
                "text": "Path Traversal"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java",
                  "PT",
                  "Security",
                  "SourceNonServer",
                  "SourceLocalEnv",
                  "SourceCLI",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/igniterealtime/Spark/commit/1a41205f5bc095c1e1cb2bd3a06d930ebdbfe376?diff=split#diff-e6cdbf4191c877a05be8c6795c7581a31c24ac5b979438da1d9414e9f812db6cL-1",
                    "lines": [
                      {
                        "line": "if (!entryFile.toPath().normalize().startsWith(dir.toPath().normalize())) {\n",
                        "lineNumber": 541,
                        "lineChange": "added"
                      },
                      {
                        "line": "    throw new RuntimeException(\"Bad zip entry\");\n",
                        "lineNumber": 542,
                        "lineChange": "added"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 543,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\t\t// Ignore any manifest.mf entries.\n",
                        "lineNumber": 544,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\tif (entry.getName().toLowerCase().endsWith(\"manifest.mf\")) {\n",
                        "lineNumber": 545,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\t\tcontinue;\n",
                        "lineNumber": 546,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\t}\n",
                        "lineNumber": 547,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 548,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\tif (entry.isDirectory() && rootDirectory == null) {\n",
                        "lineNumber": 549,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\t\trootDirectory = entryFile;\n",
                        "lineNumber": 550,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\t}\n",
                        "lineNumber": 551,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 552,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\tif (!entry.isDirectory()) {\n",
                        "lineNumber": 553,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\t\t\t\tentryFile.getParentFile().mkdirs();\n",
                        "lineNumber": 554,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/eugenp/tutorials/commit/917c64307ac18bd638ff65e500e7398efb2fdf36?diff=split#diff-3bfb9fca9702c728deff6acb4b6d954f30a7bf0f31fd8f5a3085210b0957af8cL-1",
                    "lines": [
                      {
                        "line": "    final String fileZip = \"src/main/resources/compressed.zip\";\n",
                        "lineNumber": 11,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    final String fileZip = \"src/main/resources/unzipTest/compressed.zip\";\n",
                        "lineNumber": 11,
                        "lineChange": "added"
                      },
                      {
                        "line": "    final File destDir = new File(\"src/main/resources/unzipTest\");\n",
                        "lineNumber": 12,
                        "lineChange": "added"
                      },
                      {
                        "line": "    final byte[] buffer = new byte[1024];\n",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "    final ZipInputStream zis = new ZipInputStream(new FileInputStream(fileZip));\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "    ZipEntry zipEntry = zis.getNextEntry();\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "    while (zipEntry != null) {\n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "        final String fileName = zipEntry.getName();\n",
                        "lineNumber": 16,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        final File newFile = new File(\"src/main/resources/unzipTest/\" + fileName);\n",
                        "lineNumber": 17,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        final File newFile = newFile(destDir, zipEntry);\n",
                        "lineNumber": 17,
                        "lineChange": "added"
                      },
                      {
                        "line": "        final FileOutputStream fos = new FileOutputStream(newFile);\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "        int len;\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "        while ((len = zis.read(buffer)) > 0) {\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "            fos.write(buffer, 0, len);\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "        }\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "        fos.close();\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "        zipEntry = zis.getNextEntry();\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "    zis.closeEntry();\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "    zis.close();\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 29,
                        "lineChange": "added"
                      },
                      {
                        "line": "/**\n",
                        "lineNumber": 30,
                        "lineChange": "added"
                      },
                      {
                        "line": " * @see https://snyk.io/research/zip-slip-vulnerability\n",
                        "lineNumber": 31,
                        "lineChange": "added"
                      },
                      {
                        "line": " */\n",
                        "lineNumber": 32,
                        "lineChange": "added"
                      },
                      {
                        "line": "public static File newFile(File destinationDir, ZipEntry zipEntry) throws IOException {\n",
                        "lineNumber": 33,
                        "lineChange": "added"
                      },
                      {
                        "line": "    File destFile = new File(destinationDir, zipEntry.getName());\n",
                        "lineNumber": 34,
                        "lineChange": "added"
                      },
                      {
                        "line": "    \n",
                        "lineNumber": 35,
                        "lineChange": "added"
                      },
                      {
                        "line": "    String destDirPath = destinationDir.getCanonicalPath();\n",
                        "lineNumber": 36,
                        "lineChange": "added"
                      },
                      {
                        "line": "    String destFilePath = destFile.getCanonicalPath();\n",
                        "lineNumber": 37,
                        "lineChange": "added"
                      },
                      {
                        "line": "    \n",
                        "lineNumber": 38,
                        "lineChange": "added"
                      },
                      {
                        "line": "    if (!destFilePath.startsWith(destDirPath + File.separator)) {\n",
                        "lineNumber": 39,
                        "lineChange": "added"
                      },
                      {
                        "line": "        throw new IOException(\"Entry is outside of the target dir: \" + zipEntry.getName());\n",
                        "lineNumber": 40,
                        "lineChange": "added"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 41,
                        "lineChange": "added"
                      },
                      {
                        "line": "    \n",
                        "lineNumber": 42,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return destFile;\n",
                        "lineNumber": 43,
                        "lineChange": "added"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 44,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/kythe/kythe/commit/bc872ff20b1ab7f6cf8d6387599d1b3c359586eb?diff=split#diff-7b25efcb95c3cf280fd491c017ceefc58b99309118991921b23c7b50d7e0a75fL-1",
                    "lines": [
                      {
                        "line": "// Zip Slip fix courtesy of snyk.io/research/zip-slip-vulnerability.\n",
                        "lineNumber": 165,
                        "lineChange": "added"
                      },
                      {
                        "line": "String canonicalDirPath = targetDirectory.getCanonicalPath() + File.separator;\n",
                        "lineNumber": 166,
                        "lineChange": "added"
                      },
                      {
                        "line": "while (entries.hasMoreElements()) {\n",
                        "lineNumber": 167,
                        "lineChange": "none"
                      },
                      {
                        "line": "  final ZipEntry entry = entries.nextElement();\n",
                        "lineNumber": 168,
                        "lineChange": "none"
                      },
                      {
                        "line": "  File targetFile = new File(targetDirectory, entry.getName());\n",
                        "lineNumber": 169,
                        "lineChange": "none"
                      },
                      {
                        "line": "  String canonicalFilePath = targetFile.getCanonicalPath();\n",
                        "lineNumber": 170,
                        "lineChange": "added"
                      },
                      {
                        "line": "  if (!canonicalFilePath.startsWith(canonicalDirPath)) {\n",
                        "lineNumber": 171,
                        "lineChange": "added"
                      },
                      {
                        "line": "    throw new IllegalArgumentException(\n",
                        "lineNumber": 172,
                        "lineChange": "added"
                      },
                      {
                        "line": "        \"Zip archive trying to write file outside of target dir: \" + canonicalFilePath);\n",
                        "lineNumber": 173,
                        "lineChange": "added"
                      },
                      {
                        "line": "  }\n",
                        "lineNumber": 174,
                        "lineChange": "added"
                      },
                      {
                        "line": "  if (entry.isDirectory()) {\n",
                        "lineNumber": 175,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (!targetFile.isDirectory() && !targetFile.mkdirs()) {\n",
                        "lineNumber": 176,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 51,
                "cwe": [
                  "CWE-23"
                ]
              }
            },
            {
              "id": "java/TooPermissiveCors",
              "name": "TooPermissiveCors",
              "shortDescription": {
                "text": "Origin Validation Error"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nAs a legacy of early web design and site limitations, most web applications default, for security reasons, to a \"same origin policy\". This means that browsers can only retrieve data from another site if the two sites share the same domain. In today's complex online environment, however, sites and applications often need to retrieve data from other domains. This is done under fairly limited conditions through an exception to the same origin policy known as \"cross-origin resource sharing\".\n\nDevelopers may create definitions of trusted domains that are broader than absolutely necessary, inadvertently opening up wider access than intended. This weakness could result in data exposure or loss, or even allow an attacker to take over the site or application.\n\n## Best practices for prevention\n* Avoid using wildcards for cross-origin resource sharing. Instead, define intended domains explicitly.\n* Ensure that your site or app is well defended against cross-site scripting attacks (XSS), which could lead to takeover via an overly permissive cross-domain policy.\n* Do not mix secure and insecure protocols when defining cross-domain policies.\n* Consider defining a clear approved list to specify which domains will be given resource-level access; use this approved list to validate all domain access requests.\n* Clearly define which methods (view, read, and update) are permitted for each resource and domain to avoid abuse.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "java",
                  "TooPermissiveCors",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/naturalprogrammer/spring-lemon/commit/3b10ed0a90fe5f571a58630d5c71e86fc575fa66?diff=split#diff-e577e0df5533d30fa96b18e22501efb2f558b726e8b3143db0e29bcf6a338b99L-1",
                    "lines": [
                      {
                        "line": "import org.springframework.beans.factory.annotation.Value;\n",
                        "lineNumber": 12,
                        "lineChange": "added"
                      },
                      {
                        "line": "import org.springframework.stereotype.Component;\n",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "/**\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": " * https://spring.io/guides/gs/rest-service-cors/\n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": " * \n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": " * @author skpat_000\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": " *\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": " */\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "@Component\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "public class SimpleCorsFilter implements Filter {\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t@Value(\"${clientUrl: http://localhost:9000}\")\n",
                        "lineNumber": 24,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tprivate String clientUrl;\t\n",
                        "lineNumber": 25,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\n",
                        "lineNumber": 26,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tpublic void doFilter(ServletRequest req, ServletResponse res, FilterChain chain) throws IOException, ServletException {\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tHttpServletResponse response = (HttpServletResponse) res;\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\tresponse.setHeader(\"Access-Control-Allow-Origin\", \"*\");\n",
                        "lineNumber": 25,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\tresponse.setHeader(\"Access-Control-Allow-Origin\", clientUrl); // \"*\" does not work when $httpProvider.defaults.withCredentials = true;\n",
                        "lineNumber": 29,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/callicoder/spring-security-react-ant-design-polls-app/commit/362fad90cab17e76453b3b9e273c594de6ee3d7f?diff=split#diff-be784962773a20911685bf4157f53ceea11ad2700b746cc986c2fdb8595b73ffL-1",
                    "lines": [
                      {
                        "line": "import org.springframework.beans.factory.annotation.Value;\n",
                        "lineNumber": 2,
                        "lineChange": "added"
                      },
                      {
                        "line": "import org.springframework.context.annotation.Configuration;\n",
                        "lineNumber": 3,
                        "lineChange": "none"
                      },
                      {
                        "line": "import org.springframework.web.servlet.config.annotation.CorsRegistry;\n",
                        "lineNumber": 4,
                        "lineChange": "none"
                      },
                      {
                        "line": "import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\n",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "@Configuration\n",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "public class WebMvcConfig implements WebMvcConfigurer {\n",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "    private final long MAX_AGE_SECS = 3600;\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "    @Value(\"${app.cors.allowedOrigins}\")\n",
                        "lineNumber": 12,
                        "lineChange": "added"
                      },
                      {
                        "line": "    private String[] allowedOrigins;\n",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 14,
                        "lineChange": "added"
                      },
                      {
                        "line": "    @Override\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "    public void addCorsMappings(CorsRegistry registry) {\n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "        registry.addMapping(\"/**\")\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "                .allowedOrigins(\"*\")\n",
                        "lineNumber": 14,
                        "lineChange": "removed"
                      },
                      {
                        "line": "                .allowedOrigins(allowedOrigins)\n",
                        "lineNumber": 18,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/MeloFocus/FocusCloudWork/commit/7f8fc1bf0a006ce5de6724ee186680ad72f7fb34?diff=split#diff-6e68ed8bc136fefa3e60fa5b492fce66748a4d63b0289cbe6e8a6e0c804c8eb5L-1",
                    "lines": [
                      {
                        "line": "registry.addMapping(\"/**\")\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "        .allowedOrigins(\"*\")\n",
                        "lineNumber": 12,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        .allowedOrigins(\"http://localhost:8080\",\"http://localhost:18600\",\n",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": "                \"http://47.98.153.30:18600\",\"113.134.36.204:18600\")\n",
                        "lineNumber": 14,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 42,
                "cwe": [
                  "CWE-942",
                  "CWE-346"
                ]
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "java/HardcodedPassword",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 7,
                  "endLine": 7,
                  "startColumn": 57,
                  "endColumn": 82
                }
              }
            }
          ],
          "fingerprints": {
            "0": "96b9f478bf228f0254b207edad05b232cccc05fccd6da9d682de366cede02983",
            "1": "4ace0c6c.dd05ec30.398c612e.de031890.8b2d3351.ce109560.a76b0d8b.87dfd8cc.4ace0c6c.dd05ec30.398c612e.de031890.bb61bed7.ce109560.7115c551.87dfd8cc"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 7,
                            "endLine": 7,
                            "startColumn": 57,
                            "endColumn": 82
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 578,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 17,
                  "endLine": 17,
                  "startColumn": 60,
                  "endColumn": 115
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f7b8c990362f7ad6cc3f2a715612e6a73b967ffdb13fff64b0a3209a8312de08",
            "1": "416089e6.dd05ec30.3c7d90aa.de031890.8b2d3351.ce109560.cea08b12.87dfd8cc.7656a3d1.dd05ec30.3c7d90aa.de031890.bb61bed7.ce109560.7115c551.87dfd8cc"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 60,
                            "endColumn": 115
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 578,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/HardcodedPassword",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in here.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[here](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 18,
                  "endLine": 18,
                  "startColumn": 61,
                  "endColumn": 129
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4c8b489dcab0a0bc43a998bacde78443bc11f686c168405548094e34a82c2b75",
            "1": "bb75191f.dd05ec30.3c7d90aa.de031890.f23bd41e.ce109560.1cb750ba.87dfd8cc.bb75191f.dd05ec30.3c7d90aa.de031890.f23bd41e.ce109560.7115c551.87dfd8cc"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/constants/ErrorMessage.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 61,
                            "endColumn": 129
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 578,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into exists, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to bypass the logic of the application in the conditional expression.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to bypass the logic of the application in the {3}.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7)",
              "[exists](8)",
              "[conditional expression](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 58,
                  "endLine": 58,
                  "startColumn": 13,
                  "endColumn": 44
                }
              }
            }
          ],
          "fingerprints": {
            "0": "21d2697b9b89ae399b8d0449b7e2331431bfcc69ad793ba257453e5fc33e41c3",
            "1": "19689298.c8c8034f.92e25e19.75b80ff2.bf3f7b9f.24dcd476.be04624c.54d46e25.8df8fa68.f15a4282.92e25e19.de031890.d31a8364.ce109560.377b98a3.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 39,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 39,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 34,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 14,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 50,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 45,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 14,
                            "endColumn": 95
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 13,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 13,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 76,
                            "startColumn": 9,
                            "endColumn": 10
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 614,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into exists, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to bypass the logic of the application in the conditional expression.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to bypass the logic of the application in the {3}.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9)",
              "[exists](10)",
              "[conditional expression](11)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 80,
                  "endLine": 80,
                  "startColumn": 14,
                  "endColumn": 47
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7c9953e3db2e96a0adcef35bdc60fa96c951531a6a4d040b711609d9dd5e8047",
            "1": "19689298.3ddf9eb6.e9f7f631.9998adc9.dd06b926.d7c8947b.a204df5d.a1df1a3b.19689298.3ddf9eb6.92e25e19.9998adc9.dd06b926.b18885da.377b98a3.10c5900f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 39,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 39,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 34,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 14,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 79,
                            "endLine": 79,
                            "startColumn": 36,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 79,
                            "endLine": 79,
                            "startColumn": 36,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 79,
                            "endLine": 79,
                            "startColumn": 31,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 79,
                            "endLine": 79,
                            "startColumn": 14,
                            "endColumn": 92
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 14,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 14,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 14,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 85,
                            "startColumn": 9,
                            "endColumn": 10
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 614,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into java.io.FileInputStream, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7)",
              "[java.io.FileInputStream](8)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 61,
                  "endLine": 61,
                  "startColumn": 59,
                  "endColumn": 74
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8aaa934c60cda1c3dd9e24aaa5aa7cd7a55613e9ce75528d5602259fd964e836",
            "1": "19689298.c8c8034f.92e25e19.75b80ff2.bf3f7b9f.7fda7c5e.55c6f621.6f114b23.19689298.c8c8034f.92e25e19.75b80ff2.a7b964d9.7fda7c5e.ac365b7c.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 39,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 39,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 34,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 14,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 50,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 45,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 14,
                            "endColumn": 95
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 75,
                            "endColumn": 99
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 59,
                            "endColumn": 74
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 614,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into mkdirs, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to manipulate arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to manipulate arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9)",
              "[mkdirs](10)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 81,
                  "endLine": 81,
                  "startColumn": 18,
                  "endColumn": 51
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0647b0b408736e30f40dc53afd76f1fc18ba0d6634ba87fd0f4e49aff96c7f4f",
            "1": "daf8aa0f.3ddf9eb6.8828b72d.9998adc9.dd06b926.d7c8947b.a204df5d.f82433aa.19689298.3ddf9eb6.8828b72d.9998adc9.dd06b926.d7c8947b.a204df5d.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 39,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 39,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 34,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 14,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 79,
                            "endLine": 79,
                            "startColumn": 36,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 79,
                            "endLine": 79,
                            "startColumn": 36,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 79,
                            "endLine": 79,
                            "startColumn": 31,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 79,
                            "endLine": 79,
                            "startColumn": 14,
                            "endColumn": 92
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 18,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 18,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 18,
                            "endColumn": 51
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 614,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a command line argument flows into java.io.FileOutputStream, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "arguments": [
              "[a command line argument](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10)",
              "[java.io.FileOutputStream](11)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 112,
                  "endLine": 112,
                  "startColumn": 36,
                  "endColumn": 52
                }
              }
            }
          ],
          "fingerprints": {
            "0": "acce2724a76f6b479b8e580160074af5b2293379a3da65114ae3cf7118c94aa0",
            "1": "81925955.3ddf9eb6.a224ef38.f129036c.89542039.0d476878.335dc229.65e99aa4.6d351a63.3ddf9eb6.1a98fad1.9998adc9.7d73cd7b.0d476878.335dc229.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 39,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 39,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 34,
                            "endColumn": 38
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 14,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 79,
                            "endLine": 79,
                            "startColumn": 36,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 79,
                            "endLine": 79,
                            "startColumn": 36,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 79,
                            "endLine": 79,
                            "startColumn": 31,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 79,
                            "endLine": 79,
                            "startColumn": 14,
                            "endColumn": 92
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 38,
                            "endColumn": 48
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 98,
                            "endLine": 98,
                            "startColumn": 63,
                            "endColumn": 79
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 112,
                            "endLine": 112,
                            "startColumn": 53,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": ".mvn/wrapper/MavenWrapperDownloader.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 112,
                            "endLine": 112,
                            "startColumn": 36,
                            "endColumn": 52
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 614,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the HTTP request body flows into exists, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to bypass the logic of the application in the conditional expression.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to bypass the logic of the application in the {3}.",
            "arguments": [
              "[the HTTP request body](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18)",
              "[exists](19)",
              "[conditional expression](20)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 48,
                  "endLine": 48,
                  "startColumn": 34,
                  "endColumn": 59
                }
              }
            }
          ],
          "fingerprints": {
            "0": "57d7d28d9f74db6d9212a5a36c328536bac20989ac8068ce684c121ae9c30056",
            "1": "be719357.ca952c94.a224ef38.06245546.fe5d5fc2.789cbeb9.d1171e40.96f2b075.be719357.4bb3fd0b.a224ef38.de031890.fe5d5fc2.ce109560.d1171e40.96f2b075"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 44,
                            "endLine": 44,
                            "startColumn": 59,
                            "endColumn": 123
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 44,
                            "endLine": 44,
                            "startColumn": 59,
                            "endColumn": 123
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 69,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 75,
                            "endColumn": 93
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 65,
                            "endLine": 65,
                            "startColumn": 83,
                            "endColumn": 87
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 111,
                            "endLine": 111,
                            "startColumn": 49,
                            "endColumn": 76
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 122,
                            "endLine": 122,
                            "startColumn": 39,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 122,
                            "endLine": 122,
                            "startColumn": 39,
                            "endColumn": 72
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 122,
                            "endLine": 122,
                            "startColumn": 20,
                            "endColumn": 74
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 95,
                            "endColumn": 111
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 90,
                            "endColumn": 94
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 86,
                            "endColumn": 112
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 86,
                            "endColumn": 120
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 20,
                            "endColumn": 122
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 127,
                            "endLine": 127,
                            "startColumn": 65,
                            "endColumn": 82
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 127,
                            "endLine": 127,
                            "startColumn": 59,
                            "endColumn": 82
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 127,
                            "endLine": 127,
                            "startColumn": 28,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 127,
                            "endLine": 127,
                            "startColumn": 17,
                            "endColumn": 83
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 41,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 41,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 21,
                            "endColumn": 58
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 864,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/PT",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the HTTP request body flows into exists, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to bypass the logic of the application in the conditional expression.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to bypass the logic of the application in the {3}.",
            "arguments": [
              "[the HTTP request body](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18)",
              "[exists](19)",
              "[conditional expression](20)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 56,
                  "endLine": 56,
                  "startColumn": 34,
                  "endColumn": 59
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2b8f14949109ec2ee176128390b767d89097bfedb4f52dff4a9d9bed0648f884",
            "1": "be719357.ca952c94.a224ef38.06245546.fe5d5fc2.789cbeb9.d1171e40.96f2b075.be719357.4bb3fd0b.a224ef38.de031890.fe5d5fc2.ce109560.d1171e40.96f2b075"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 62,
                            "endColumn": 126
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 62,
                            "endColumn": 126
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/controller/AdminController.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 69,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 75,
                            "endColumn": 93
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/mapper/PerfumeMapper.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 65,
                            "endLine": 65,
                            "startColumn": 83,
                            "endColumn": 87
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 111,
                            "endLine": 111,
                            "startColumn": 49,
                            "endColumn": 76
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 122,
                            "endLine": 122,
                            "startColumn": 39,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 122,
                            "endLine": 122,
                            "startColumn": 39,
                            "endColumn": 72
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 122,
                            "endLine": 122,
                            "startColumn": 20,
                            "endColumn": 74
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 95,
                            "endColumn": 111
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 90,
                            "endColumn": 94
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 86,
                            "endColumn": 112
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 86,
                            "endColumn": 120
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 123,
                            "endLine": 123,
                            "startColumn": 20,
                            "endColumn": 122
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 127,
                            "endLine": 127,
                            "startColumn": 65,
                            "endColumn": 82
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 127,
                            "endLine": 127,
                            "startColumn": 59,
                            "endColumn": 82
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 127,
                            "endLine": 127,
                            "startColumn": 28,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 127,
                            "endLine": 127,
                            "startColumn": 17,
                            "endColumn": 83
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 41,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 41,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/service/Impl/PerfumeServiceImpl.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 21,
                            "endColumn": 58
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 864,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          }
        },
        {
          "ruleId": "java/TooPermissiveCors",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "CORS policy \"*\" might be too permissive. This allows malicious code on other domains to communicate with the application, which is a security risk",
            "markdown": "{0} {1} might be too permissive. This allows malicious code on other domains to communicate with the application, which is a security risk",
            "arguments": [
              "[CORS policy](0)",
              "[\"*\"](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSocketConfiguration.java",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 21,
                  "endLine": 21,
                  "startColumn": 9,
                  "endColumn": 61
                }
              }
            }
          ],
          "fingerprints": {
            "0": "aec2b16a2127c2d1a5399b820735ba7a4559e1f190a84be9692c604dada99687",
            "1": "9a99886a.b1738d1b.9a23c4be.e22980a8.9f4dceef.b0ca612d.151cc078.54d46e25.9a99886a.b1738d1b.9a23c4be.e22980a8.9f4dceef.b0ca612d.151cc078.54d46e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSocketConfiguration.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 9,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "src/main/java/com/gmail/merikbest2015/ecommerce/configuration/WebSocketConfiguration.java",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 62,
                            "endColumn": 65
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 510,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          }
        }
      ],
      "properties": {
        "coverage": [
          {
            "isSupported": true,
            "lang": "HTML",
            "files": 4,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "Java",
            "files": 112,
            "type": "SUPPORTED"
          },
          {
            "isSupported": true,
            "lang": "XML",
            "files": 21,
            "type": "SUPPORTED"
          },
          {
            "isSupported": false,
            "lang": ".config",
            "files": 1,
            "type": "FAILED_PARSING"
          }
        ]
      }
    }
  ]
}
